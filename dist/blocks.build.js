/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 148);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),
/* 1 */
/*!**************************************************!*\
  !*** ./dist/blocks/uagb-controls/block-icons.js ***!
  \**************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Block Icons
 */

var el = wp.element.createElement;

var UAGB_Block_Icons = {
	"section": el("svg", { width: 20, height: 20 }, el("path", { d: "M20 18.008h-20v-16.016h20v16.016zM1.172 16.836h17.656v-13.672h-17.656v13.672z" }), el("path", { d: "M7.617 4.604h4.766v1.172h-4.766v-1.172z" }), el("path", { d: "M8.998 14.385h-6.237v-6.238h6.238v6.238zM3.932 13.213h3.894v-3.894h-3.894v3.894z" }), el("path", { d: "M17.24 11.852h-6.237v-3.705h6.238v3.705zM12.174 10.68h3.894v-1.361h-3.894v1.361z" }), el("path", { d: "M11.588 13.024h5.066v1.172h-5.066v-1.172z" })),
	"buttons": el("svg", { width: 20, height: 20 }, el("path", { d: "M20 18.008h-20v-16.016h20v16.016zM1.172 16.836h17.656v-13.672h-17.656v13.672z" }), el("path", { d: "M10.758 6.289h-7.421v7.421l12.987 0.001v-7.422h-5.566zM5.192 11.855v-3.711h3.711v3.711h-3.711zM14.469 11.855h-3.711v-3.711h3.711v3.711z" })),
	"advanced_heading": el("svg", { width: 20, height: 20 }, el("path", { d: "M0 18h20v2h-20v-2z" }), el("path", { d: "M11 0h-2l-7.25 16h2.25l2.21-5h7.59l2.2 5h2.25l-7.25-16zM7.090 9l2.91-6.59 2.91 6.59h-5.82z" })),
	"google_map": el("svg", { width: 20, height: 20 }, el("path", { d: "M10 0c-4.112 0-7.458 3.347-7.458 7.461 0 6.13 6.716 12.115 7.002 12.367 0.131 0.115 0.293 0.172 0.456 0.172s0.326-0.058 0.456-0.172c0.286-0.252 7.002-6.237 7.002-12.367 0-4.114-3.345-7.461-7.458-7.461v0zM10 18.363c-1.485-1.439-6.077-6.265-6.077-10.902 0-3.353 2.726-6.080 6.077-6.080s6.077 2.728 6.077 6.080c0 4.637-4.592 9.463-6.077 10.902v0z" }), el("path", { d: "M10 3.986c-1.904 0-3.453 1.559-3.453 3.475s1.549 3.476 3.453 3.476c1.904 0 3.453-1.559 3.453-3.476s-1.549-3.475-3.453-3.475v0zM10 9.555c-1.142 0-2.071-0.939-2.071-2.094s0.929-2.095 2.071-2.095 2.072 0.94 2.072 2.095c0 1.155-0.93 2.094-2.072 2.094v0z" })),
	"info_box": el("svg", { width: 20, height: 20 }, el("path", { d: "M0 1.992v16.016h20v-16.016h-20zM11.406 16.836h-10.234v-10.898h10.234v10.898zM18.828 16.836h-6.25v-2.852h6.25v2.852zM18.828 12.813h-6.25v-6.875h6.25v6.875zM1.172 4.766v-1.602h17.656v1.602h-17.656z" }), el("path", { d: "M2.652 15.325h7.274v-7.877h-7.274v7.877zM3.824 8.62h4.931v5.534h-4.931v-5.534z" }), el("path", { d: "M13.486 10.13h4.434v1.172h-4.434v-1.172z" }), el("path", { d: "M13.486 7.448h4.434v1.172h-4.434v-1.172z" })),
	"post_carousel": el("svg", { width: 20, height: 20 }, el("path", { d: "M7.554 12.936h4.893v-5.871h-4.893v5.871zM8.888 8.399h2.224v3.202h-2.224v-3.202z" }), el("path", { d: "M13.913 8.868l1.132 1.132-1.132 1.132 0.944 0.944 2.076-2.076-2.076-2.076-0.943 0.943z" }), el("path", { d: "M5.144 7.924l-2.076 2.076 2.076 2.076 0.943-0.944-1.132-1.132 1.132-1.132-0.944-0.943z" }), el("path", { d: "M19.31 0h-18.619c-0.381 0-0.691 0.309-0.691 0.691v18.619c0 0.382 0.309 0.691 0.691 0.691h18.619c0.382 0 0.691-0.309 0.691-0.691v-18.619c0-0.381-0.309-0.691-0.69-0.691v0zM1.32 18.62v-17.301h17.3v17.3h-17.3z" })),
	"post_masonry": el("svg", { width: 20, height: 20 }, el("path", { d: "M19.31 0h-18.619c-0.381 0-0.691 0.309-0.691 0.691v18.619c0 0.382 0.309 0.691 0.691 0.691h18.619c0.382 0 0.691-0.309 0.691-0.691v-18.619c0-0.381-0.309-0.691-0.69-0.691v0zM18.62 6.206h-4.825v-4.825h4.825v4.825zM18.62 12.413h-4.825v-4.825h4.825v4.825zM7.588 5.788h4.825v8.825h-4.825v-8.825zM12.413 1.381v3.025h-4.825v-3.025h4.825zM6.206 1.381v11.025h-4.825v-11.025h4.825zM1.381 13.794h4.825v4.826h-4.825v-4.826zM7.588 18.62v-2.826h4.825v2.826h-4.825zM13.794 18.62v-4.826h4.825v4.826h-4.825z" })),
	"post_grid": el("svg", { width: 20, height: 20 }, el("path", { d: "M19.31 0h-18.619c-0.381 0-0.691 0.309-0.691 0.691v18.619c0 0.382 0.309 0.691 0.691 0.691h18.619c0.382 0 0.691-0.309 0.691-0.691v-18.619c0-0.381-0.309-0.691-0.69-0.691v0zM18.62 6.206h-4.825v-4.825h4.825v4.825zM18.62 12.413h-4.825v-4.825h4.825v4.825zM1.381 7.588h4.825v4.825h-4.825v-4.825zM7.588 7.588h4.825v4.825h-4.825v-4.825zM12.413 1.381v4.825h-4.825v-4.825h4.825zM6.206 1.381v4.825h-4.825v-4.825h4.825zM1.381 13.794h4.825v4.826h-4.825v-4.826zM7.588 18.62v-4.826h4.825v4.826h-4.825zM13.794 18.62v-4.826h4.825v4.826h-4.825z" })),
	"testimonial": el("svg", { width: 20, height: 20 }, el("path", { d: "M9.996 0c-5.516 0-9.996 4.479-9.996 9.997 0 5.523 4.48 10.003 9.996 10.003 5.524 0 10.004-4.48 10.004-10.003 0-5.518-4.48-9.997-10.004-9.997v0zM9.996 18.749c-4.821 0-8.745-3.926-8.745-8.752 0-4.822 3.923-8.746 8.745-8.746 4.829 0 8.753 3.924 8.753 8.746 0 4.826-3.924 8.752-8.753 8.752v0z" }), el("path", { d: "M8.007 6.732l-0.292-0.201-0.006-0.012-0.019-0.006-0.214-0.098 0.006 0.012c-0.201-0.079-0.416-0.14-0.641-0.14-1.018 0-1.843 0.854-1.843 1.91s0.825 1.917 1.843 1.917c0.323 0 0.622-0.098 0.891-0.25-0.091 1.019-0.605 2.514-2.491 4.034-0.267 0.212-0.317 0.604-0.109 0.879 0.121 0.159 0.3 0.243 0.476 0.243 0.134 0 0.263-0.041 0.372-0.134 2.319-1.866 2.894-3.784 2.971-5.070 0.134-1.636-0.365-2.502-0.817-2.948l-0.128-0.134z" }), el("path", { d: "M14.068 6.732l-0.293-0.201-0.008-0.012-0.017-0.006-0.214-0.098 0.006 0.012c-0.202-0.079-0.415-0.14-0.641-0.14-1.019 0-1.843 0.854-1.843 1.91s0.824 1.917 1.843 1.917c0.324 0 0.623-0.098 0.891-0.25-0.092 1.019-0.604 2.514-2.496 4.034-0.262 0.212-0.311 0.604-0.104 0.879 0.116 0.159 0.299 0.243 0.476 0.243 0.134 0 0.263-0.041 0.372-0.134 2.319-1.866 2.893-3.784 2.972-5.070 0.134-1.636-0.366-2.502-0.818-2.948l-0.128-0.134z" })),
	"cf7_styler": el("svg", { width: 20, height: 20 }, el("path", { d: "M0 2.969v14.063h20v-14.063h-20zM18.828 15.859h-17.656v-11.719h17.656v11.719z" }), el("path", { d: "M11.758 13.516h5.898v1.172h-5.898v-1.172z" }), el("path", { d: "M11.758 11.172h5.898v1.172h-5.898v-1.172z" }), el("path", { d: "M11.758 8.828h5.898v1.172h-5.898v-1.172z" }), el("path", { d: "M11.758 6.484h3.555v1.172h-3.555v-1.172z" }), el("path", { d: "M16.484 6.484h1.172v1.172h-1.172v-1.172z" }), el("path", { d: "M8.386 10.468c0.629-0.538 1.028-1.336 1.028-2.226 0-1.615-1.314-2.93-2.93-2.93s-2.93 1.314-2.93 2.93c0 0.89 0.4 1.688 1.028 2.226-1.307 0.687-2.2 2.057-2.2 3.633v0.586h8.203v-0.586c0-1.576-0.893-2.947-2.2-3.633zM6.484 6.484c0.969 0 1.758 0.789 1.758 1.758s-0.789 1.758-1.758 1.758-1.758-0.789-1.758-1.758 0.789-1.758 1.758-1.758zM3.614 13.516c0.272-1.336 1.456-2.344 2.871-2.344s2.599 1.008 2.871 2.344h-5.742z" })),
	"content_timeline": el("svg", { width: 20, height: 20 }, el("path", { d: "M9.375 0h1.25v20h-1.25v-20z" }), el("path", { d: "M1.875 3.125h5v2.5h-5v-2.5zM0.625 6.875h7.5v-5h-7.5v5z" }), el("path", { d: "M1.875 14.592h5v2.5h-5v-2.5zM0.625 18.342h7.5v-5h-7.5v5z" }), el("path", { d: "M18.125 11.25h-5v-2.5h5v2.5zM11.875 7.5v5h7.5v-5h-7.5z" })),
	"call_to_action": el("svg", { width: 20, height: 20 }, el("path", { d: "M19.304 16.848l-2.352-2.352 1.192-1.192c0.154-0.154 0.224-0.373 0.187-0.588s-0.177-0.398-0.374-0.491l-9.486-4.494c-0.256-0.122-0.561-0.068-0.761 0.132s-0.253 0.505-0.132 0.761l4.494 9.485c0.093 0.197 0.277 0.336 0.492 0.373s0.434-0.033 0.588-0.187l1.192-1.192 2.353 2.352c0.131 0.131 0.303 0.196 0.474 0.196s0.343-0.065 0.474-0.196l1.659-1.659c0.262-0.262 0.262-0.686 0-0.948v0zM17.17 18.033l-2.353-2.352c-0.131-0.131-0.303-0.196-0.474-0.196s-0.343 0.065-0.474 0.196l-0.993 0.993-3.283-6.929 6.929 3.282-0.993 0.994c-0.262 0.262-0.262 0.686 0 0.948l2.352 2.352-0.711 0.711z" }), el("path", { d: "M7.645 10.992h-5.804v-9.303h9.303v6.647c0 0.37 0.3 0.671 0.671 0.671s0.671-0.3 0.671-0.671v-7.317c0-0.37-0.3-0.671-0.671-0.671h-10.644c-0.37 0-0.671 0.3-0.671 0.671v10.644c0 0.371 0.3 0.671 0.671 0.671h6.474c0.37 0 0.671-0.3 0.671-0.671s-0.3-0.671-0.671-0.671v0z" })),
	"post_timeline": el("svg", { width: 20, height: 20 }, el("path", { d: "M7.048 8.364c-0.001 0.019-0.001 0.037 0 0.056 0.016 0.286 0.26 0.505 0.545 0.489h9.134c0.019 0.001 0.037 0.001 0.056 0 0.286-0.015 0.505-0.26 0.489-0.545v-5.453c0.001-0.019 0.001-0.037 0-0.056-0.016-0.286-0.26-0.505-0.545-0.489h-9.134c-0.019-0.001-0.037-0.001-0.056 0-0.286 0.015-0.505 0.26-0.489 0.545v5.453zM8.138 3.456h8.044v4.363h-8.044v-4.363z" }), el("path", { d: "M19.999 17.089v-5.453c0.001-0.019 0.001-0.037 0-0.056-0.015-0.286-0.26-0.505-0.545-0.489h-11.861c-0.019-0.001-0.037-0.001-0.056 0-0.286 0.015-0.505 0.26-0.489 0.545v5.453c-0.001 0.019-0.001 0.037 0 0.056 0.016 0.286 0.26 0.505 0.545 0.489h11.861c0.019 0.001 0.037 0.001 0.056 0 0.286-0.016 0.505-0.26 0.489-0.546zM18.909 16.544h-10.77v-4.363h10.77v4.363z" }), el("path", { d: "M4.754 4.795c-0.286-1.279-1.554-2.083-2.833-1.797-1.083 0.242-1.853 1.203-1.854 2.312-0.028 1.102 0.725 2.071 1.8 2.318v4.417c-1.28 0.279-2.091 1.543-1.812 2.823 0.198 0.906 0.906 1.614 1.812 1.812h1.091c1.080-0.245 1.841-1.211 1.827-2.318 0.014-1.107-0.747-2.073-1.827-2.318v-4.417c1.279-0.286 2.083-1.555 1.797-2.833zM3.722 14.362c0 0.708-0.573 1.282-1.281 1.282-0 0-0.001 0-0.002 0-0.697-0.015-1.254-0.584-1.254-1.281s0.557-1.267 1.254-1.282c0.708-0.001 1.282 0.573 1.282 1.281zM2.44 6.592c-0.697-0.015-1.254-0.584-1.254-1.281s0.557-1.267 1.254-1.281c0.712-0 1.294 0.569 1.309 1.281-0.015 0.712-0.597 1.282-1.309 1.281z" }), el("path", { d: "M9.229 5.365h3.136c0.301 0 0.545-0.244 0.545-0.545s-0.244-0.545-0.545-0.545h-3.136c-0.301 0-0.545 0.244-0.545 0.545s0.244 0.545 0.545 0.545z" }), el("path", { d: "M15.091 5.91h-5.862c-0.301 0-0.545 0.244-0.545 0.545s0.244 0.546 0.545 0.546h5.863c0.301 0 0.545-0.244 0.545-0.546s-0.245-0.545-0.546-0.545z" }), el("path", { d: "M9.229 14.090h3.136c0.301 0 0.545-0.244 0.545-0.545s-0.244-0.545-0.545-0.545h-3.136c-0.301 0-0.545 0.244-0.545 0.545s0.244 0.545 0.545 0.545z" }), el("path", { d: "M9.229 15.726h5.863c0.301 0 0.545-0.244 0.545-0.545s-0.244-0.545-0.545-0.545h-5.863c-0.301 0-0.545 0.244-0.545 0.545s0.244 0.545 0.545 0.545z" })),
	"icon_list": el("svg", { width: 20, height: 20 }, el("path", { d: "M1.44 15.48c-0.76 0-1.44 0.64-1.44 1.4s0.68 1.44 1.44 1.44 1.4-0.68 1.4-1.44c0-0.76-0.64-1.4-1.4-1.4v0z" }), el("path", { d: "M1.44 8.6c-0.76 0-1.44 0.64-1.44 1.4s0.68 1.4 1.44 1.4 1.4-0.64 1.4-1.4c0-0.76-0.64-1.4-1.4-1.4v0z" }), el("path", { d: "M6.56 4.4h12.12c0.72 0 1.32-0.56 1.32-1.28s-0.6-1.32-1.32-1.32h-12.12c-0.72 0-1.32 0.6-1.32 1.32s0.6 1.28 1.32 1.28v0z" }), el("path", { d: "M1.44 1.68c-0.76 0-1.44 0.68-1.44 1.44s0.68 1.4 1.44 1.4 1.4-0.64 1.4-1.4-0.64-1.44-1.4-1.44v0z" }), el("path", { d: "M18.68 8.68h-12.12c-0.72 0-1.32 0.6-1.32 1.32s0.6 1.32 1.32 1.32h12.12c0.72 0 1.32-0.6 1.32-1.32s-0.6-1.32-1.32-1.32v0z" }), el("path", { d: "M18.68 15.56h-12.12c-0.72 0-1.32 0.6-1.32 1.32s0.6 1.32 1.32 1.32h12.12c0.72 0 1.32-0.6 1.32-1.32s-0.6-1.32-1.32-1.32v0z" })),
	"team": el("svg", { width: 20, height: 20 }, el("path", { d: "M20 14.124c0-1.17-0.35-2.3-1.013-3.268-0.477-0.696-1.091-1.274-1.803-1.703 0.838-0.794 1.362-1.915 1.362-3.158 0-2.399-1.952-4.351-4.351-4.351-1.423 0-2.755 0.704-3.565 1.859-0.206-0.030-0.416-0.046-0.63-0.046s-0.424 0.016-0.63 0.046c-0.81-1.155-2.142-1.859-3.565-1.859-2.399 0-4.351 1.952-4.351 4.351 0 1.242 0.524 2.364 1.362 3.158-0.712 0.429-1.326 1.008-1.803 1.703-0.663 0.968-1.014 2.098-1.014 3.268v2.42h4.195v1.813h11.611v-1.813h4.194v-2.42h-0zM14.195 2.717c1.807 0 3.277 1.47 3.277 3.278s-1.47 3.277-3.277 3.277c-0.032 0-0.065-0-0.097-0.001 0.002-0.007 0.005-0.014 0.007-0.021 0.056-0.159 0.102-0.322 0.14-0.488 0.003-0.012 0.006-0.024 0.008-0.035 0.010-0.045 0.018-0.090 0.027-0.136 0.004-0.021 0.008-0.043 0.012-0.064 0.007-0.041 0.013-0.081 0.018-0.122 0.004-0.029 0.008-0.057 0.011-0.085 0.004-0.036 0.009-0.072 0.012-0.109s0.006-0.074 0.008-0.111c0.002-0.029 0.004-0.059 0.006-0.088 0.003-0.063 0.004-0.127 0.005-0.19 0-0.004 0-0.009 0-0.014 0-0.002-0-0.005-0-0.007 0-0.065-0.002-0.129-0.005-0.193-0.001-0.019-0.002-0.037-0.003-0.056-0.003-0.054-0.007-0.109-0.012-0.163-0.001-0.012-0.002-0.024-0.004-0.037-0.162-1.568-1.153-2.911-2.582-3.531 0.616-0.692 1.507-1.103 2.45-1.103v0zM8.866 4.732c0.010-0.004 0.021-0.008 0.031-0.011 0.033-0.012 0.066-0.023 0.099-0.033 0.025-0.008 0.050-0.016 0.075-0.023 0.018-0.005 0.037-0.011 0.055-0.016 0.033-0.009 0.066-0.018 0.1-0.026 0.248-0.060 0.507-0.093 0.773-0.093s0.525 0.033 0.773 0.094c0.033 0.008 0.066 0.017 0.099 0.026 0.019 0.005 0.038 0.010 0.056 0.016 0.025 0.007 0.050 0.015 0.075 0.023 0.033 0.011 0.066 0.022 0.1 0.034 0.010 0.004 0.020 0.007 0.030 0.011 1.096 0.405 1.918 1.381 2.104 2.565 0.002 0.009 0.003 0.019 0.004 0.028 0.006 0.040 0.011 0.080 0.015 0.121 0.002 0.015 0.003 0.030 0.005 0.045 0.004 0.037 0.006 0.074 0.009 0.112 0.001 0.016 0.002 0.032 0.003 0.048 0.002 0.048 0.003 0.096 0.004 0.144 0 0.004 0 0.008 0 0.012 0 0.002-0 0.004-0 0.006 0 0.047-0.002 0.093-0.003 0.139-0.001 0.015-0.001 0.029-0.002 0.044-0.002 0.045-0.006 0.089-0.010 0.133-0.002 0.017-0.004 0.034-0.006 0.051-0.003 0.029-0.007 0.057-0.011 0.085-0.003 0.022-0.006 0.044-0.010 0.066-0.005 0.033-0.011 0.066-0.018 0.1-0.006 0.029-0.012 0.059-0.019 0.088-0.004 0.018-0.008 0.035-0.012 0.053-0.010 0.044-0.022 0.087-0.034 0.13-0.005 0.017-0.010 0.034-0.014 0.051-0.008 0.025-0.016 0.049-0.024 0.074-0.006 0.020-0.013 0.039-0.020 0.058-0.007 0.022-0.015 0.044-0.023 0.066-0.014 0.037-0.029 0.074-0.044 0.111-0.007 0.016-0.014 0.032-0.021 0.049-0.013 0.031-0.027 0.061-0.041 0.091l-0.005 0.011c-0.005 0.011-0.010 0.021-0.015 0.032-0.016 0.032-0.032 0.064-0.049 0.096-0.007 0.012-0.013 0.025-0.020 0.037-0 0.001-0.001 0.002-0.001 0.002-0.019 0.034-0.038 0.067-0.058 0.1-0.008 0.013-0.016 0.026-0.024 0.039-0.021 0.035-0.044 0.070-0.066 0.103-0.014 0.021-0.029 0.042-0.043 0.063-0.013 0.018-0.025 0.035-0.038 0.052-0.017 0.023-0.033 0.045-0.050 0.067-0.012 0.015-0.023 0.030-0.035 0.045-0.018 0.022-0.036 0.045-0.055 0.067-0.012 0.014-0.023 0.027-0.035 0.041-0.020 0.022-0.039 0.044-0.059 0.066-0.012 0.013-0.024 0.025-0.036 0.038-0.032 0.034-0.065 0.067-0.099 0.1-0.020 0.019-0.040 0.039-0.061 0.058-0.014 0.013-0.029 0.026-0.043 0.038-0.024 0.021-0.047 0.041-0.071 0.062-0.012 0.011-0.025 0.021-0.037 0.031-0.029 0.024-0.059 0.047-0.089 0.070-0.008 0.006-0.016 0.012-0.025 0.019-0.545 0.405-1.221 0.646-1.951 0.646s-1.406-0.24-1.951-0.646c-0.008-0.006-0.016-0.012-0.024-0.018-0.030-0.023-0.060-0.046-0.089-0.070-0.012-0.010-0.025-0.020-0.037-0.030-0.024-0.021-0.048-0.041-0.072-0.062-0.014-0.013-0.029-0.025-0.043-0.038-0.021-0.019-0.041-0.038-0.061-0.058-0.034-0.033-0.067-0.066-0.1-0.101-0.012-0.012-0.024-0.025-0.036-0.037-0.020-0.022-0.039-0.044-0.058-0.066-0.012-0.013-0.024-0.027-0.035-0.040-0.019-0.022-0.037-0.045-0.055-0.067-0.012-0.015-0.024-0.030-0.035-0.045-0.017-0.022-0.034-0.044-0.050-0.067-0.013-0.017-0.025-0.035-0.037-0.053-0.015-0.021-0.029-0.041-0.044-0.062-0.023-0.034-0.045-0.069-0.066-0.104-0.008-0.013-0.016-0.026-0.023-0.039-0.020-0.034-0.040-0.067-0.058-0.102-0.007-0.013-0.013-0.025-0.020-0.038-0.017-0.032-0.034-0.064-0.050-0.096-0.006-0.012-0.011-0.023-0.017-0.035-0.001-0.002-0.002-0.003-0.003-0.005-0.015-0.031-0.029-0.063-0.043-0.095-0.007-0.015-0.013-0.030-0.020-0.046-0.015-0.038-0.030-0.075-0.045-0.113-0.008-0.021-0.015-0.041-0.022-0.062s-0.015-0.043-0.022-0.064c-0.008-0.023-0.015-0.046-0.022-0.069-0.010-0.035-0.020-0.070-0.030-0.105-0.007-0.025-0.013-0.049-0.019-0.074-0.005-0.020-0.009-0.039-0.014-0.059-0.005-0.024-0.011-0.048-0.016-0.073-0.007-0.038-0.014-0.076-0.020-0.114-0.003-0.020-0.006-0.041-0.009-0.062-0.004-0.030-0.008-0.061-0.012-0.092-0.002-0.015-0.004-0.030-0.005-0.046-0.004-0.046-0.008-0.091-0.010-0.137-0.001-0.013-0.001-0.026-0.002-0.039-0.002-0.049-0.004-0.098-0.004-0.148 0-0.053 0.002-0.105 0.004-0.158 0-0.014 0.002-0.028 0.003-0.042 0.002-0.039 0.005-0.079 0.009-0.118 0.001-0.014 0.003-0.027 0.004-0.041 0.005-0.042 0.010-0.084 0.016-0.126 0.001-0.008 0.002-0.016 0.004-0.024 0.186-1.185 1.008-2.161 2.105-2.566v0zM2.528 5.995c0-1.807 1.47-3.278 3.277-3.278 0.943 0 1.834 0.411 2.45 1.103-1.43 0.621-2.421 1.964-2.582 3.533-0.001 0.011-0.002 0.021-0.003 0.032-0.005 0.056-0.009 0.112-0.013 0.168-0.001 0.017-0.002 0.034-0.003 0.052-0.003 0.067-0.005 0.135-0.005 0.202s0.002 0.137 0.005 0.205c0.001 0.027 0.003 0.055 0.005 0.082 0.003 0.039 0.005 0.079 0.009 0.118 0.003 0.035 0.007 0.070 0.011 0.104 0.004 0.030 0.007 0.060 0.012 0.090 0.005 0.040 0.011 0.079 0.018 0.118 0.004 0.023 0.008 0.046 0.013 0.070 0.008 0.044 0.016 0.088 0.025 0.131 0.003 0.014 0.007 0.028 0.010 0.043 0.036 0.161 0.082 0.319 0.136 0.473 0.003 0.010 0.007 0.020 0.010 0.030-0.032 0.001-0.065 0.001-0.097 0.001-1.807-0-3.277-1.47-3.277-3.277v0zM5.095 12.841c-0.012 0.019-0.023 0.038-0.035 0.056-0.025 0.040-0.049 0.079-0.072 0.12-0.013 0.022-0.026 0.045-0.039 0.067-0.021 0.037-0.042 0.075-0.062 0.112-0.013 0.024-0.025 0.047-0.038 0.071-0.019 0.037-0.039 0.075-0.057 0.113-0.012 0.024-0.024 0.048-0.035 0.071-0.019 0.040-0.037 0.080-0.055 0.12-0.010 0.022-0.020 0.044-0.030 0.065-0.021 0.048-0.041 0.097-0.060 0.145-0.006 0.014-0.012 0.028-0.018 0.043-0.025 0.063-0.048 0.127-0.071 0.191-0.005 0.015-0.010 0.029-0.015 0.044-0.017 0.049-0.034 0.098-0.049 0.148-0.007 0.023-0.014 0.046-0.021 0.069-0.013 0.042-0.025 0.084-0.037 0.127-0.007 0.025-0.014 0.051-0.020 0.076-0.010 0.041-0.021 0.082-0.030 0.122-0.006 0.026-0.012 0.052-0.018 0.078-0.009 0.041-0.018 0.083-0.026 0.125-0.005 0.025-0.010 0.050-0.015 0.075-0.008 0.046-0.016 0.091-0.023 0.137-0.003 0.021-0.007 0.043-0.011 0.064-0.010 0.067-0.019 0.134-0.027 0.202 0 0.001-0 0.002-0 0.002-0.007 0.062-0.013 0.123-0.018 0.185h-3.139v-1.346c0-1.839 1.057-3.491 2.714-4.276 0.604 0.317 1.29 0.498 2.017 0.498 0.211 0 0.422-0.015 0.631-0.046 0.033 0.047 0.066 0.093 0.1 0.138 0.012 0.015 0.024 0.030 0.036 0.045 0.034 0.043 0.068 0.086 0.104 0.128 0.014 0.017 0.029 0.034 0.044 0.051 0.033 0.038 0.067 0.076 0.102 0.113 0.018 0.020 0.036 0.039 0.055 0.058 0.031 0.032 0.064 0.065 0.096 0.096 0.012 0.012 0.024 0.024 0.036 0.036-0.047 0.028-0.093 0.057-0.139 0.087-0.008 0.005-0.015 0.010-0.022 0.015-0.046 0.030-0.091 0.060-0.136 0.091-0.016 0.011-0.031 0.021-0.046 0.032-0.040 0.028-0.079 0.057-0.119 0.086-0.012 0.009-0.025 0.018-0.037 0.028-0.050 0.038-0.099 0.076-0.148 0.116-0.011 0.008-0.021 0.017-0.032 0.026-0.039 0.032-0.077 0.064-0.115 0.097-0.015 0.013-0.029 0.025-0.044 0.038-0.038 0.034-0.075 0.067-0.113 0.102-0.010 0.009-0.020 0.018-0.029 0.027-0.046 0.043-0.091 0.087-0.135 0.131-0.012 0.012-0.023 0.023-0.034 0.035-0.034 0.035-0.067 0.070-0.1 0.105-0.013 0.014-0.026 0.028-0.039 0.043-0.037 0.041-0.074 0.081-0.11 0.123-0.006 0.006-0.012 0.013-0.017 0.019-0.041 0.048-0.081 0.097-0.121 0.146-0.011 0.014-0.022 0.028-0.033 0.042-0.029 0.038-0.059 0.076-0.088 0.115-0.011 0.015-0.023 0.030-0.034 0.045-0.038 0.052-0.075 0.104-0.111 0.157-0.039 0.057-0.076 0.114-0.113 0.172v0zM5.268 17.283v-1.346c0-0.060 0.001-0.119 0.003-0.178 0.001-0.020 0.002-0.039 0.003-0.058 0.002-0.039 0.004-0.079 0.007-0.118 0.002-0.024 0.004-0.048 0.007-0.071 0.003-0.035 0.006-0.070 0.010-0.104 0.003-0.025 0.007-0.050 0.010-0.076 0.004-0.033 0.008-0.065 0.013-0.098 0.004-0.026 0.009-0.052 0.013-0.078 0.005-0.031 0.010-0.063 0.016-0.094 0.005-0.027 0.011-0.053 0.016-0.079 0.006-0.030 0.012-0.061 0.019-0.091 0.006-0.027 0.013-0.053 0.019-0.079 0.007-0.030 0.014-0.059 0.022-0.089 0.007-0.027 0.015-0.053 0.023-0.080 0.008-0.029 0.016-0.058 0.025-0.086 0.008-0.027 0.017-0.053 0.026-0.079 0.009-0.028 0.018-0.056 0.028-0.084 0.009-0.026 0.019-0.053 0.029-0.079 0.010-0.028 0.020-0.055 0.030-0.082s0.021-0.052 0.031-0.078c0.011-0.027 0.022-0.054 0.033-0.081s0.023-0.051 0.034-0.077c0.012-0.026 0.024-0.053 0.036-0.079s0.025-0.051 0.037-0.076c0.013-0.026 0.025-0.051 0.039-0.077s0.026-0.050 0.040-0.075c0.014-0.025 0.027-0.050 0.041-0.075s0.028-0.049 0.043-0.073c0.014-0.025 0.029-0.049 0.044-0.074s0.030-0.048 0.046-0.072c0.015-0.024 0.031-0.048 0.046-0.072s0.032-0.047 0.048-0.071c0.016-0.024 0.032-0.047 0.049-0.070s0.034-0.046 0.051-0.069c0.017-0.023 0.034-0.046 0.051-0.068s0.036-0.045 0.054-0.067c0.018-0.022 0.036-0.044 0.054-0.066s0.037-0.044 0.056-0.065 0.038-0.043 0.056-0.064 0.039-0.042 0.058-0.063c0.019-0.021 0.039-0.042 0.058-0.062s0.040-0.041 0.061-0.061c0.020-0.020 0.041-0.040 0.061-0.060s0.041-0.039 0.063-0.059c0.021-0.020 0.042-0.039 0.063-0.058s0.043-0.038 0.065-0.057c0.022-0.019 0.044-0.038 0.066-0.056s0.045-0.036 0.067-0.054c0.023-0.018 0.045-0.036 0.068-0.054s0.046-0.035 0.069-0.052c0.023-0.017 0.047-0.035 0.071-0.052s0.047-0.033 0.071-0.050c0.024-0.016 0.049-0.033 0.073-0.049s0.048-0.031 0.072-0.047c0.025-0.016 0.050-0.032 0.075-0.047s0.049-0.029 0.074-0.044c0.026-0.015 0.052-0.030 0.078-0.045 0.025-0.014 0.050-0.028 0.075-0.041 0.027-0.014 0.054-0.028 0.080-0.042 0.025-0.013 0.051-0.026 0.077-0.039 0.020-0.010 0.041-0.020 0.061-0.029 0.603 0.317 1.289 0.498 2.017 0.498s1.414-0.18 2.017-0.498c0.021 0.010 0.041 0.019 0.061 0.029 0.026 0.013 0.052 0.026 0.078 0.039s0.053 0.028 0.079 0.042c0.026 0.014 0.051 0.028 0.077 0.042s0.052 0.029 0.077 0.044c0.025 0.015 0.050 0.030 0.075 0.045s0.050 0.031 0.075 0.047c0.025 0.015 0.049 0.031 0.073 0.047s0.048 0.032 0.072 0.049c0.024 0.017 0.048 0.033 0.071 0.050s0.047 0.034 0.070 0.051c0.023 0.017 0.047 0.035 0.069 0.053s0.046 0.035 0.068 0.053c0.022 0.018 0.045 0.036 0.067 0.055s0.044 0.037 0.066 0.055c0.022 0.019 0.043 0.038 0.065 0.057s0.042 0.039 0.063 0.058c0.021 0.020 0.042 0.039 0.063 0.059s0.041 0.040 0.061 0.060c0.020 0.021 0.041 0.041 0.061 0.062s0.039 0.041 0.058 0.062c0.020 0.021 0.039 0.043 0.058 0.064s0.038 0.043 0.056 0.064c0.019 0.022 0.038 0.043 0.056 0.066s0.036 0.043 0.054 0.065c0.018 0.022 0.036 0.045 0.054 0.068s0.034 0.045 0.051 0.067c0.017 0.023 0.034 0.046 0.051 0.070s0.032 0.046 0.049 0.070c0.016 0.023 0.033 0.047 0.048 0.071s0.031 0.047 0.046 0.071c0.015 0.024 0.031 0.048 0.046 0.072s0.029 0.049 0.044 0.073c0.014 0.024 0.029 0.049 0.043 0.074s0.027 0.050 0.041 0.075c0.013 0.025 0.027 0.050 0.040 0.075s0.026 0.051 0.038 0.077c0.013 0.025 0.025 0.050 0.037 0.076s0.024 0.052 0.036 0.079c0.012 0.026 0.023 0.051 0.034 0.077s0.022 0.054 0.033 0.080c0.011 0.026 0.021 0.052 0.032 0.079s0.020 0.055 0.030 0.082c0.010 0.026 0.020 0.052 0.029 0.079 0.010 0.028 0.019 0.056 0.028 0.084 0.009 0.027 0.017 0.053 0.026 0.079 0.009 0.029 0.017 0.058 0.025 0.087 0.008 0.026 0.015 0.053 0.022 0.079 0.008 0.029 0.015 0.059 0.022 0.089 0.006 0.027 0.013 0.053 0.019 0.079 0.007 0.030 0.013 0.061 0.019 0.091 0.005 0.026 0.011 0.053 0.016 0.079 0.006 0.031 0.011 0.062 0.016 0.094 0.004 0.026 0.009 0.052 0.013 0.079 0.005 0.032 0.009 0.065 0.013 0.097 0.003 0.025 0.007 0.051 0.010 0.076 0.004 0.034 0.007 0.069 0.010 0.104 0.002 0.024 0.005 0.047 0.007 0.071 0.003 0.040 0.005 0.079 0.006 0.119 0.001 0.019 0.003 0.039 0.003 0.058 0.002 0.059 0.003 0.119 0.003 0.178v1.346h-9.463zM15.787 15.47c-0.010-0.13-0.026-0.261-0.045-0.39-0.003-0.021-0.007-0.041-0.010-0.061-0.008-0.047-0.015-0.094-0.024-0.14-0.005-0.024-0.010-0.049-0.014-0.074-0.008-0.042-0.017-0.085-0.027-0.127-0.006-0.025-0.012-0.051-0.018-0.076-0.010-0.041-0.020-0.083-0.031-0.124-0.007-0.025-0.013-0.050-0.020-0.075-0.012-0.043-0.024-0.086-0.037-0.128-0.007-0.023-0.013-0.045-0.020-0.067-0.016-0.050-0.033-0.101-0.050-0.151-0.005-0.014-0.009-0.028-0.014-0.042-0.023-0.064-0.047-0.128-0.072-0.191-0.005-0.013-0.011-0.027-0.017-0.041-0.020-0.049-0.040-0.098-0.061-0.147-0.009-0.021-0.019-0.043-0.029-0.064-0.018-0.041-0.037-0.081-0.056-0.121-0.011-0.024-0.023-0.047-0.034-0.070-0.019-0.038-0.038-0.076-0.058-0.114-0.012-0.023-0.025-0.047-0.038-0.071-0.021-0.038-0.041-0.075-0.063-0.113-0.013-0.022-0.025-0.045-0.038-0.067-0.023-0.040-0.048-0.080-0.073-0.12-0.012-0.019-0.022-0.038-0.034-0.056-0.037-0.058-0.074-0.115-0.113-0.172-0.037-0.053-0.074-0.105-0.111-0.157-0.011-0.015-0.022-0.029-0.033-0.045-0.029-0.039-0.058-0.077-0.088-0.115-0.011-0.014-0.021-0.028-0.032-0.041-0.040-0.049-0.080-0.098-0.121-0.146-0.005-0.006-0.011-0.012-0.016-0.018-0.036-0.042-0.073-0.084-0.111-0.125-0.013-0.014-0.026-0.028-0.039-0.042-0.033-0.036-0.067-0.071-0.101-0.105-0.011-0.012-0.022-0.023-0.034-0.034-0.044-0.044-0.089-0.088-0.135-0.131-0.010-0.009-0.019-0.018-0.029-0.027-0.037-0.035-0.075-0.069-0.113-0.102-0.015-0.013-0.029-0.025-0.044-0.038-0.038-0.033-0.076-0.065-0.115-0.097-0.011-0.009-0.021-0.018-0.032-0.026-0.048-0.039-0.098-0.078-0.148-0.116-0.012-0.009-0.025-0.018-0.037-0.028-0.039-0.029-0.079-0.057-0.119-0.085-0.015-0.011-0.031-0.022-0.047-0.033-0.044-0.031-0.089-0.061-0.134-0.090-0.008-0.005-0.016-0.011-0.024-0.016-0.046-0.029-0.092-0.058-0.138-0.086 0.012-0.012 0.023-0.024 0.035-0.035 0.033-0.032 0.066-0.065 0.098-0.098 0.018-0.019 0.036-0.037 0.054-0.056 0.035-0.038 0.070-0.076 0.103-0.115 0.014-0.017 0.029-0.033 0.043-0.050 0.036-0.043 0.071-0.086 0.105-0.13 0.011-0.014 0.023-0.029 0.034-0.043 0.034-0.046 0.068-0.092 0.101-0.138 0.21 0.031 0.421 0.046 0.631 0.046 0.728 0 1.414-0.18 2.017-0.498 1.657 0.785 2.714 2.436 2.714 4.276v1.346h-3.139z" })),
	"social_share": el("svg", { width: 20, height: 20 }, el("path", { d: "M13.751 4.999l1.25 1.25-8.753 8.753-1.25-1.25 8.753-8.753z" }), el("path", { d: "M13.749 12.502l-1.874-1.874 1.255-1.256 0.619 0.628 3.749-3.749-3.749-3.749-3.749 3.749 0.628 0.619-1.256 1.255-1.874-1.874 6.251-6.251 6.251 6.251-6.251 6.251z" }), el("path", { d: "M6.251 20l-6.251-6.251 6.251-6.251 1.874 1.874-1.255 1.256-0.619-0.628-3.749 3.749 3.749 3.749 3.749-3.749-0.628-0.619 1.256-1.256 1.874 1.874-6.251 6.251z" })),
	"restaurant_menu": el("svg", { width: 20, height: 20 }, el("path", { d: "M0 2.136v15.729h20v-15.729h-20zM18.828 7.038h-8.242v-3.73h8.242v3.73zM1.172 3.307h8.242v13.385h-8.242v-13.385zM10.586 16.693v-8.483h8.242v8.483h-8.242z" }), el("path", { d: "M2.742 4.661v4.492c0 1.188 0.826 2.185 1.934 2.45v2.563h-0.898v1.172h2.969v-1.172h-0.898v-2.563c1.108-0.265 1.934-1.263 1.934-2.45v-4.492h-5.039zM6.61 9.154c0 0.743-0.605 1.348-1.348 1.348s-1.348-0.604-1.348-1.348v-3.32h2.695v3.32z" }), el("path", { d: "M13.050 4.661h3.275v1.172h-3.275v-1.172z" }), el("path", { d: "M12.109 9.414h5.156v1.172h-5.156v-1.172z" }), el("path", { d: "M12.109 11.79h5.156v1.172h-5.156v-1.172z" }), el("path", { d: "M12.109 14.167h5.156v1.172h-5.156v-1.172z" })),
	"blockquote": el("svg", { width: 20, height: 20 }, el("path", { d: "M13.856 10.75c0.473 0.137 0.945 0.205 1.405 0.205 0.71 0 1.303-0.162 1.763-0.361-0.443 1.623-1.508 4.42-3.627 4.734-0.196 0.029-0.357 0.172-0.411 0.363l-0.463 1.656c-0.039 0.141-0.017 0.291 0.063 0.412s0.209 0.203 0.353 0.223c0.156 0.021 0.316 0.033 0.474 0.033 2.545 0 5.064-2.656 6.128-6.459 0.624-2.231 0.808-5.585-0.73-7.696-0.86-1.181-2.115-1.812-3.73-1.875-0.007 0-0.013 0-0.020 0-1.993 0-3.761 1.342-4.298 3.264-0.321 1.148-0.176 2.353 0.409 3.393 0.578 1.027 1.532 1.776 2.684 2.108z" }), el("path", { d: "M0.576 8.641c0.579 1.028 1.532 1.777 2.685 2.109 0.473 0.137 0.945 0.205 1.405 0.205 0.71 0 1.303-0.162 1.763-0.361-0.443 1.623-1.508 4.42-3.627 4.734-0.197 0.029-0.357 0.172-0.411 0.363l-0.464 1.656c-0.038 0.141-0.016 0.291 0.064 0.412s0.208 0.203 0.353 0.223c0.156 0.021 0.315 0.033 0.474 0.033 2.545 0 5.064-2.656 6.128-6.459 0.624-2.231 0.807-5.585-0.73-7.697-0.86-1.181-2.115-1.812-3.73-1.875-0.007 0-0.014 0-0.021 0-1.992 0-3.76 1.342-4.297 3.264-0.323 1.149-0.177 2.354 0.408 3.393z" })),
	"quote_1": el("svg", { width: 20, height: 20 }, el("path", { d: "M15.581 10.226h-15.162c-0.233 0-0.419 0.37-0.419 0.826 0 0.458 0.186 0.828 0.419 0.828h15.161c0.233 0 0.419-0.37 0.419-0.828 0.001-0.455-0.186-0.826-0.418-0.826v0z" }), el("path", { d: "M15.581 14.285h-15.162c-0.233 0-0.419 0.373-0.419 0.827 0 0.458 0.186 0.826 0.419 0.826h15.161c0.233 0 0.419-0.369 0.419-0.826 0.001-0.454-0.186-0.827-0.418-0.827v0z" }), el("path", { d: "M15.581 18.346h-15.162c-0.233 0-0.419 0.37-0.419 0.826 0 0.459 0.186 0.828 0.419 0.828h15.161c0.233 0 0.419-0.369 0.419-0.828 0.001-0.455-0.186-0.826-0.418-0.826v0z" }), el("path", { d: "M9.126 0.595c-0.46 0.465-0.974 1.35-0.835 3.042 0.081 1.319 0.666 3.29 3.048 5.216 0.112 0.090 0.241 0.136 0.38 0.136 0.183 0 0.362-0.086 0.487-0.251 0.214-0.283 0.164-0.683-0.113-0.902-1.935-1.566-2.458-3.105-2.551-4.154 0.274 0.156 0.582 0.258 0.913 0.258 1.045 0 1.89-0.886 1.89-1.972 0-1.088-0.846-1.966-1.89-1.966-0.233 0-0.451 0.062-0.657 0.143l0.004-0.011-0.218 0.101-0.018 0.011-0.007 0.006-0.299 0.214-0.134 0.131z" }), el("path", { d: "M4.517 0.595c-0.465 0.465-0.974 1.35-0.841 3.042 0.085 1.319 0.671 3.29 3.049 5.216 0.116 0.090 0.245 0.136 0.383 0.136 0.178 0 0.366-0.086 0.487-0.251 0.214-0.283 0.165-0.683-0.108-0.902-1.939-1.566-2.467-3.105-2.56-4.154 0.278 0.156 0.584 0.258 0.92 0.258 1.046 0 1.885-0.886 1.885-1.972 0-1.088-0.845-1.966-1.885-1.966-0.236 0-0.447 0.062-0.657 0.143l0.010-0.011-0.218 0.101-0.022 0.011-0.009 0.006-0.305 0.214-0.129 0.13z" })),
	"quote_2": el("svg", { width: 20, height: 20 }, el("path", { d: "M4.599 6.686c-0.39 0.397-0.822 1.149-0.705 2.586 0.068 1.123 0.561 2.799 2.561 4.434 0.096 0.080 0.205 0.115 0.321 0.115 0.153 0 0.306-0.071 0.409-0.214 0.181-0.239 0.135-0.58-0.095-0.766-1.626-1.332-2.066-2.639-2.144-3.531 0.231 0.132 0.488 0.218 0.769 0.218 0.874 0 1.587-0.753 1.587-1.677s-0.711-1.672-1.587-1.672c-0.196 0-0.38 0.054-0.552 0.121l0.003-0.010-0.184 0.085-0.016 0.010-0.006 0.006-0.252 0.181-0.109 0.114z" }), el("path", { d: "M0.725 6.686c-0.389 0.397-0.821 1.149-0.706 2.586 0.068 1.123 0.562 2.799 2.56 4.434 0.094 0.077 0.204 0.114 0.322 0.114 0.151 0 0.31-0.073 0.409-0.213 0.177-0.239 0.136-0.582-0.090-0.767-1.63-1.332-2.072-2.639-2.149-3.531 0.23 0.132 0.486 0.218 0.772 0.218 0.879 0 1.583-0.753 1.583-1.677s-0.71-1.672-1.583-1.672c-0.199 0-0.378 0.054-0.554 0.121l0.008-0.010-0.184 0.085-0.018 0.010-0.009 0.006-0.253 0.182-0.108 0.114z" }), el("path", { d: "M19.25 6.929h-10.041c-0.414 0-0.75-0.336-0.75-0.75s0.336-0.75 0.75-0.75h10.041c0.414 0 0.75 0.336 0.75 0.75s-0.336 0.75-0.75 0.75z" }), el("path", { d: "M19.25 10.75h-10.041c-0.414 0-0.75-0.336-0.75-0.75s0.336-0.75 0.75-0.75h10.041c0.414 0 0.75 0.336 0.75 0.75s-0.336 0.75-0.75 0.75z" }), el("path", { d: "M19.25 14.571h-10.041c-0.414 0-0.75-0.336-0.75-0.75s0.336-0.75 0.75-0.75h10.041c0.414 0 0.75 0.336 0.75 0.75s-0.336 0.75-0.75 0.75z" })),
	"columns": el("svg", { width: 20, height: 20 }, el("path", { d: "M1.2 1.2v17.6h17.6v-17.6h-17.6zM17.793 17.794h-15.586v-15.587h15.586v15.587z" }), el("path", { d: "M3.464 3.464h3.519v13.072h-3.519v-13.072z" }), el("path", { d: "M8.24 3.464h3.521v13.072h-3.521v-13.072z" }), el("path", { d: "M13.018 3.464h3.518v13.072h-3.518v-13.072z" })),
	"top_align": el("svg", { width: 20, height: 20 }, el("path", { d: "M1.5 0.438v2.125h17v-2.125h-17zM5.75 8.938h3.188v10.625h2.125v-10.625h3.187l-4.25-4.25-4.25 4.25z" })),
	"middle_align": el("svg", { width: 20, height: 20 }, el("path", { d: "M18.5 11.063v-2.125h-17v2.125h17z" }), el("path", { d: "M12.707 3.519l-2.707-2.707-2.707 2.707h2.030v4.368h1.354v-4.368h2.030z" }), el("path", { d: "M7.293 16.48l2.707 2.707 2.707-2.707h-2.030v-4.368h-1.354v4.368h-2.030z" })),
	"bottom_align": el("svg", { width: 20, height: 20 }, el("path", { d: "M18.5 20v-2.125h-17v2.125h17zM14.25 11.5h-3.187v-10.625h-2.125v10.625h-3.188l4.25 4.25 4.25-4.25z" }))
};

/* harmony default export */ __webpack_exports__["a"] = (UAGB_Block_Icons);

/***/ }),
/* 2 */
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 3 */
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (process.env.NODE_ENV === 'production') {
  module.exports = __webpack_require__(/*! ./cjs/react.production.min.js */ 294);
} else {
  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ 295);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../process/browser.js */ 2)))

/***/ }),
/* 4 */
/*!**************************************!*\
  !*** ./node_modules/lodash/_root.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ 77);

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),
/* 5 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/isObject.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),
/* 6 */
/*!****************************************!*\
  !*** ./node_modules/lodash/isArray.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),
/* 7 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/isObjectLike.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),
/* 8 */
/*!**************************************!*\
  !*** ./node_modules/lodash/times.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(/*! ./_baseTimes */ 86),
    castFunction = __webpack_require__(/*! ./_castFunction */ 331),
    toInteger = __webpack_require__(/*! ./toInteger */ 100);

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Invokes the iteratee `n` times, returning an array of the results of
 * each invocation. The iteratee is invoked with one argument; (index).
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 * @example
 *
 * _.times(3, String);
 * // => ['0', '1', '2']
 *
 *  _.times(4, _.constant(0));
 * // => [0, 0, 0, 0]
 */
function times(n, iteratee) {
  n = toInteger(n);
  if (n < 1 || n > MAX_SAFE_INTEGER) {
    return [];
  }
  var index = MAX_ARRAY_LENGTH,
      length = nativeMin(n, MAX_ARRAY_LENGTH);

  iteratee = castFunction(iteratee);
  n -= MAX_ARRAY_LENGTH;

  var result = baseTimes(length, iteratee);
  while (++index < n) {
    iteratee(index);
  }
  return result;
}

module.exports = times;


/***/ }),
/* 9 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getNative.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__(/*! ./_baseIsNative */ 167),
    getValue = __webpack_require__(/*! ./_getValue */ 172);

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),
/* 10 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseGetTag.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ 14),
    getRawTag = __webpack_require__(/*! ./_getRawTag */ 168),
    objectToString = __webpack_require__(/*! ./_objectToString */ 169);

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),
/* 11 */
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ 292)(isValidElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(/*! ./factoryWithThrowingShims */ 293)();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../process/browser.js */ 2)))

/***/ }),
/* 12 */
/*!***********************************************!*\
  !*** ./dist/blocks/uagb-controls/UAGBIcon.js ***!
  \***********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * font_icon.
 */
var UAGBIcon = ["fab fa-buromobelexperte", "fas fa-burn", "fas fa-bullseye", "fas fa-bullhorn", "fas fa-building", "far fa-building", "fas fa-bug", "fab fa-btc", "fas fa-briefcase-medical", "fas fa-briefcase", "fas fa-braille", "fas fa-boxes", "fas fa-box-open", "fas fa-box", "fas fa-bowling-ball", "fas fa-bookmark", "far fa-bookmark", "fas fa-book", "fas fa-bomb", "fas fa-bolt", "fas fa-bold", "fab fa-bluetooth-b", "fab fa-bluetooth", "fab fa-blogger-b", "fab fa-blogger", "fas fa-blind", "fab fa-blackberry", "fab fa-black-tie", "fab fa-bity", "fab fa-bitcoin", "fab fa-bitbucket", "fas fa-birthday-cake", "fas fa-binoculars", "fab fa-bimobject", "fas fa-bicycle", "fas fa-bell-slash", "far fa-bell-slash", "fas fa-bell", "far fa-bell", "fab fa-behance-square", "fab fa-behance", "fas fa-beer", "fas fa-bed", "fas fa-battery-three-quarters", "fas fa-battery-quarter", "fas fa-battery-half", "fas fa-battery-full", "fas fa-battery-empty", "fas fa-bath", "fas fa-basketball-ball", "fas fa-baseball-ball", "fas fa-bars", "fas fa-barcode", "fab fa-bandcamp", "fas fa-band-aid", "fas fa-ban", "fas fa-balance-scale", "fas fa-backward", "fab fa-aws", "fab fa-aviato", "fab fa-avianex", "fab fa-autoprefixer", "fas fa-audio-description", "fab fa-audible", "fas fa-at", "fab fa-asymmetrik", "fas fa-asterisk", "fas fa-assistive-listening-systems", "fas fa-arrows-alt-v", "fas fa-arrows-alt-h", "fas fa-arrows-alt", "fas fa-arrow-up", "fas fa-arrow-right", "fas fa-arrow-left", "fas fa-arrow-down", "fas fa-arrow-circle-up", "fas fa-arrow-circle-right", "fas fa-arrow-circle-left", "fas fa-arrow-circle-down", "fas fa-arrow-alt-circle-up", "far fa-arrow-alt-circle-up", "fas fa-arrow-alt-circle-right", "far fa-arrow-alt-circle-right", "fas fa-arrow-alt-circle-left", "far fa-arrow-alt-circle-left", "fas fa-arrow-alt-circle-down", "far fa-arrow-alt-circle-down", "fas fa-archive", "fab fa-apple-pay", "fab fa-apple", "fab fa-apper", "fab fa-app-store-ios", "fab fa-app-store", "fab fa-angular", "fab fa-angrycreative", "fas fa-angle-up", "fas fa-angle-right", "fas fa-angle-left", "fas fa-angle-down", "fas fa-angle-double-up", "fas fa-angle-double-right", "fas fa-angle-double-left", "fas fa-angle-double-down", "fab fa-angellist", "fab fa-android", "fas fa-anchor", "fab fa-amilia", "fas fa-american-sign-language-interpreting", "fas fa-ambulance", "fab fa-amazon-pay", "fab fa-amazon", "fas fa-allergies", "fas fa-align-right", "fas fa-align-left", "fas fa-align-justify", "fas fa-align-center", "fab fa-algolia", "fab fa-affiliatetheme", "fab fa-adversal", "fab fa-adn", "fas fa-adjust", "fas fa-address-card", "far fa-address-card", "fas fa-address-book", "far fa-address-book", "fab fa-accusoft", "fab fa-accessible-icon", "fab fa-500px", "fab fa-youtube-square", "fab fa-youtube", "fab fa-yoast", "fas fa-yen-sign", "fab fa-yelp", "fab fa-yandex-international", "fab fa-yandex", "fab fa-yahoo", "fab fa-y-combinator", "fab fa-xing-square", "fab fa-xing", "fab fa-xbox", "fas fa-x-ray", "fas fa-wrench", "fab fa-wpforms", "fab fa-wpexplorer", "fab fa-wpbeginner", "fab fa-wordpress-simple", "fab fa-wordpress", "fas fa-won-sign", "fab fa-wolf-pack-battalion", "fas fa-wine-glass", "fab fa-windows", "fas fa-window-restore", "far fa-window-restore", "fas fa-window-minimize", "far fa-window-minimize", "fas fa-window-maximize", "far fa-window-maximize", "fas fa-window-close", "far fa-window-close", "fab fa-wikipedia-w", "fas fa-wifi", "fab fa-whmcs", "fas fa-wheelchair", "fab fa-whatsapp-square", "fab fa-whatsapp", "fab fa-weixin", "fas fa-weight", "fab fa-weibo", "fas fa-warehouse", "fab fa-vuejs", "fas fa-volume-up", "fas fa-volume-off", "fas fa-volume-down", "fas fa-volleyball-ball", "fab fa-vnv", "fab fa-vk", "fab fa-vine", "fab fa-vimeo-v", "fab fa-vimeo-square", "fab fa-vimeo", "fas fa-video-slash", "fas fa-video", "fab fa-viber", "fas fa-vials", "fas fa-vial", "fab fa-viadeo-square", "fab fa-viadeo", "fab fa-viacoin", "fas fa-venus-mars", "fas fa-venus-double", "fas fa-venus", "fab fa-vaadin", "fas fa-utensils", "fas fa-utensil-spoon", "fab fa-ussunnah", "fas fa-users-cog", "fas fa-users", "fas fa-user-times", "fas fa-user-tie", "fas fa-user-tag", "fas fa-user-slash", "fas fa-user-shield", "fas fa-user-secret", "fas fa-user-plus", "fas fa-user-ninja", "fas fa-user-minus", "fas fa-user-md", "fas fa-user-lock", "fas fa-user-graduate", "fas fa-user-friends", "fas fa-user-edit", "fas fa-user-cog", "fas fa-user-clock", "fas fa-user-circle", "far fa-user-circle", "fas fa-user-check", "fas fa-user-astronaut", "fas fa-user-alt-slash", "fas fa-user-alt", "fas fa-user", "far fa-user", "fab fa-usb", "fas fa-upload", "fab fa-untappd", "fas fa-unlock-alt", "fas fa-unlock", "fas fa-unlink", "fas fa-university", "fas fa-universal-access", "fab fa-uniregistry", "fas fa-undo-alt", "fas fa-undo", "fas fa-underline", "fas fa-umbrella", "fab fa-uikit", "fab fa-uber", "fab fa-typo3", "fab fa-twitter-square", "fab fa-twitter", "fab fa-twitch", "fas fa-tv", "fab fa-tumblr-square", "fab fa-tumblr", "fas fa-tty", "fas fa-truck-moving", "fas fa-truck-loading", "fas fa-truck", "fas fa-trophy", "fab fa-tripadvisor", "fab fa-trello", "fas fa-tree", "fas fa-trash-alt", "far fa-trash-alt", "fas fa-trash", "fas fa-transgender-alt", "fas fa-transgender", "fas fa-train", "fas fa-trademark", "fab fa-trade-federation", "fas fa-toggle-on", "fas fa-toggle-off", "fas fa-tint", "fas fa-times-circle", "far fa-times-circle", "fas fa-times", "fas fa-ticket-alt", "fas fa-thumbtack", "fas fa-thumbs-up", "far fa-thumbs-up", "fas fa-thumbs-down", "far fa-thumbs-down", "fas fa-thermometer-three-quarters", "fas fa-thermometer-quarter", "fas fa-thermometer-half", "fas fa-thermometer-full", "fas fa-thermometer-empty", "fas fa-thermometer", "fab fa-themeisle", "fas fa-th-list", "fas fa-th-large", "fas fa-th", "fas fa-text-width", "fas fa-text-height", "fas fa-terminal", "fab fa-tencent-weibo", "fab fa-telegram-plane", "fab fa-telegram", "fab fa-teamspeak", "fas fa-taxi", "fas fa-tasks", "fas fa-tape", "fas fa-tags", "fas fa-tag", "fas fa-tachometer-alt", "fas fa-tablets", "fas fa-tablet-alt", "fas fa-tablet", "fas fa-table-tennis", "fas fa-table", "fas fa-syringe", "fas fa-sync-alt", "fas fa-sync", "fab fa-supple", "fas fa-superscript", "fab fa-superpowers", "fas fa-sun", "far fa-sun", "fas fa-suitcase", "fas fa-subway", "fas fa-subscript", "fab fa-stumbleupon-circle", "fab fa-stumbleupon", "fab fa-studiovinari", "fab fa-stripe-s", "fab fa-stripe", "fas fa-strikethrough", "fas fa-street-view", "fab fa-strava", "fas fa-stopwatch", "fas fa-stop-circle", "far fa-stop-circle", "fas fa-stop", "fas fa-sticky-note", "far fa-sticky-note", "fab fa-sticker-mule", "fas fa-stethoscope", "fas fa-step-forward", "fas fa-step-backward", "fab fa-steam-symbol", "fab fa-steam-square", "fab fa-steam", "fab fa-staylinked", "fas fa-star-half", "far fa-star-half", "fa fa-star", "fas fa-star", "far fa-star", "fab fa-stack-overflow", "fab fa-stack-exchange", "fas fa-square-full", "fas fa-square", "far fa-square", "fab fa-spotify", "fas fa-spinner", "fab fa-speakap", "fas fa-space-shuttle", "fab fa-soundcloud", "fas fa-sort-up", "fas fa-sort-numeric-up", "fas fa-sort-numeric-down", "fas fa-sort-down", "fas fa-sort-amount-up", "fas fa-sort-amount-down", "fas fa-sort-alpha-up", "fas fa-sort-alpha-down", "fas fa-sort", "fas fa-snowflake", "far fa-snowflake", "fab fa-snapchat-square", "fab fa-snapchat-ghost", "fab fa-snapchat", "fas fa-smoking", "fas fa-smile", "far fa-smile", "fab fa-slideshare", "fas fa-sliders-h", "fab fa-slack-hash", "fab fa-slack", "fab fa-skype", "fab fa-skyatlas", "fab fa-sith", "fas fa-sitemap", "fab fa-sistrix", "fab fa-simplybuilt", "fas fa-signal", "fas fa-sign-out-alt", "fas fa-sign-language", "fas fa-sign-in-alt", "fas fa-sign", "fas fa-shower", "fas fa-shopping-cart", "fas fa-shopping-basket", "fas fa-shopping-bag", "fab fa-shirtsinbulk", "fas fa-shipping-fast", "fas fa-ship", "fas fa-shield-alt", "fas fa-shekel-sign", "fas fa-share-square", "far fa-share-square", "fas fa-share-alt-square", "fas fa-share-alt", "fas fa-share", "fab fa-servicestack", "fas fa-server", "fab fa-sellsy", "fab fa-sellcast", "fas fa-seedling", "fab fa-searchengin", "fas fa-search-plus", "fas fa-search-minus", "fas fa-search", "fab fa-scribd", "fab fa-schlix", "fas fa-save", "far fa-save", "fab fa-sass", "fab fa-safari", "fas fa-rupee-sign", "fas fa-ruble-sign", "fas fa-rss-square", "fas fa-rss", "fab fa-rockrms", "fab fa-rocketchat", "fas fa-rocket", "fas fa-road", "fas fa-ribbon", "fas fa-retweet", "fab fa-resolving", "fab fa-researchgate", "fab fa-replyd", "fas fa-reply-all", "fas fa-reply", "fab fa-renren", "fas fa-registered", "far fa-registered", "fas fa-redo-alt", "fas fa-redo", "fab fa-reddit-square", "fab fa-reddit-alien", "fab fa-reddit", "fab fa-red-river", "fas fa-recycle", "fab fa-rebel", "fab fa-readme", "fab fa-react", "fab fa-ravelry", "fas fa-random", "fab fa-r-project", "fas fa-quote-right", "fas fa-quote-left", "fab fa-quora", "fab fa-quinscape", "fas fa-quidditch", "fas fa-question-circle", "far fa-question-circle", "fas fa-question", "fas fa-qrcode", "fab fa-qq", "fab fa-python", "fas fa-puzzle-piece", "fab fa-pushed", "fab fa-product-hunt", "fas fa-procedures", "fas fa-print", "fas fa-prescription-bottle-alt", "fas fa-prescription-bottle", "fas fa-power-off", "fas fa-pound-sign", "fas fa-portrait", "fas fa-poo", "fas fa-podcast", "fas fa-plus-square", "far fa-plus-square", "fas fa-plus-circle", "fas fa-plus", "fas fa-plug", "fab fa-playstation", "fas fa-play-circle", "far fa-play-circle", "fas fa-play", "fas fa-plane", "fab fa-pinterest-square", "fab fa-pinterest-p", "fab fa-pinterest", "fas fa-pills", "fas fa-piggy-bank", "fab fa-pied-piper-pp", "fab fa-pied-piper-hat", "fab fa-pied-piper-alt", "fab fa-pied-piper", "fab fa-php", "fas fa-phone-volume", "fas fa-phone-square", "fas fa-phone-slash", "fas fa-phone", "fab fa-phoenix-squadron", "fab fa-phoenix-framework", "fab fa-phabricator", "fab fa-periscope", "fas fa-percent", "fas fa-people-carry", "fas fa-pencil-alt", "fas fa-pen-square", "fab fa-paypal", "fas fa-paw", "fas fa-pause-circle", "far fa-pause-circle", "fas fa-pause", "fab fa-patreon", "fas fa-paste", "fas fa-paragraph", "fas fa-parachute-box", "fas fa-paperclip", "fas fa-paper-plane", "far fa-paper-plane", "fas fa-pallet", "fab fa-palfed", "fas fa-paint-brush", "fab fa-pagelines", "fab fa-page4", "fas fa-outdent", "fab fa-osi", "fab fa-optin-monster", "fab fa-opera", "fab fa-openid", "fab fa-opencart", "fab fa-old-republic", "fab fa-odnoklassniki-square", "fab fa-odnoklassniki", "fas fa-object-ungroup", "far fa-object-ungroup", "fas fa-object-group", "far fa-object-group", "fab fa-nutritionix", "fab fa-ns8", "fab fa-npm", "fas fa-notes-medical", "fab fa-node-js", "fab fa-node", "fab fa-nintendo-switch", "fas fa-newspaper", "far fa-newspaper", "fas fa-neuter", "fab fa-napster", "fas fa-music", "fas fa-mouse-pointer", "fas fa-motorcycle", "fas fa-moon", "far fa-moon", "fas fa-money-bill-alt", "far fa-money-bill-alt", "fab fa-monero", "fab fa-modx", "fas fa-mobile-alt", "fas fa-mobile", "fab fa-mizuni", "fab fa-mixcloud", "fab fa-mix", "fas fa-minus-square", "far fa-minus-square", "fas fa-minus-circle", "fas fa-minus", "fab fa-microsoft", "fas fa-microphone-slash", "fas fa-microphone", "fas fa-microchip", "fas fa-mercury", "fas fa-meh", "far fa-meh", "fab fa-meetup", "fab fa-medrt", "fas fa-medkit", "fab fa-medium-m", "fab fa-medium", "fab fa-medapps", "fab fa-maxcdn", "fab fa-mastodon", "fas fa-mars-stroke-v", "fas fa-mars-stroke-h", "fas fa-mars-stroke", "fas fa-mars-double", "fas fa-mars", "fas fa-map-signs", "fas fa-map-pin", "fas fa-map-marker-alt", "fas fa-map-marker", "fas fa-map", "far fa-map", "fab fa-mandalorian", "fas fa-male", "fas fa-magnet", "fas fa-magic", "fab fa-magento", "fab fa-lyft", "fas fa-low-vision", "fas fa-long-arrow-alt-up", "fas fa-long-arrow-alt-right", "fas fa-long-arrow-alt-left", "fas fa-long-arrow-alt-down", "fas fa-lock-open", "fas fa-lock", "fas fa-location-arrow", "fas fa-list-ul", "fas fa-list-ol", "fas fa-list-alt", "far fa-list-alt", "fas fa-list", "fas fa-lira-sign", "fab fa-linux", "fab fa-linode", "fab fa-linkedin-in", "fab fa-linkedin", "fas fa-link", "fab fa-line", "fas fa-lightbulb", "far fa-lightbulb", "fas fa-life-ring", "far fa-life-ring", "fas fa-level-up-alt", "fas fa-level-down-alt", "fab fa-less", "fas fa-lemon", "far fa-lemon", "fab fa-leanpub", "fas fa-leaf", "fab fa-lastfm-square", "fab fa-lastfm", "fab fa-laravel", "fas fa-laptop", "fas fa-language", "fab fa-korvue", "fab fa-kickstarter-k", "fab fa-kickstarter", "fab fa-keycdn", "fas fa-keyboard", "far fa-keyboard", "fab fa-keybase", "fas fa-key", "fab fa-jsfiddle", "fab fa-js-square", "fab fa-js", "fab fa-joomla", "fab fa-joget", "fab fa-jenkins", "fab fa-jedi-order", "fab fa-java", "fab fa-itunes-note", "fab fa-itunes", "fas fa-italic", "fab fa-ioxhost", "fab fa-internet-explorer", "fab fa-instagram", "fas fa-info-circle", "fas fa-info", "fas fa-industry", "fas fa-indent", "fas fa-inbox", "fab fa-imdb", "fas fa-images", "far fa-images", "fas fa-image", "far fa-image", "fas fa-id-card-alt", "fas fa-id-card", "far fa-id-card", "fas fa-id-badge", "far fa-id-badge", "fas fa-i-cursor", "fab fa-hubspot", "fab fa-html5", "fab fa-houzz", "fas fa-hourglass-start", "fas fa-hourglass-half", "fas fa-hourglass-end", "fas fa-hourglass", "far fa-hourglass", "fab fa-hotjar", "fas fa-hospital-symbol", "fas fa-hospital-alt", "fas fa-hospital", "far fa-hospital", "fab fa-hooli", "fas fa-home", "fas fa-hockey-puck", "fas fa-history", "fab fa-hire-a-helper", "fab fa-hips", "fas fa-heartbeat", "fas fa-heart", "far fa-heart", "fas fa-headphones", "fas fa-heading", "fas fa-hdd", "far fa-hdd", "fas fa-hashtag", "fas fa-handshake", "far fa-handshake", "fas fa-hands-helping", "fas fa-hands", "fas fa-hand-spock", "far fa-hand-spock", "fas fa-hand-scissors", "far fa-hand-scissors", "fas fa-hand-rock", "far fa-hand-rock", "fas fa-hand-pointer", "far fa-hand-pointer", "fas fa-hand-point-up", "far fa-hand-point-up", "fas fa-hand-point-right", "far fa-hand-point-right", "fas fa-hand-point-left", "far fa-hand-point-left", "fas fa-hand-point-down", "far fa-hand-point-down", "fas fa-hand-peace", "far fa-hand-peace", "fas fa-hand-paper", "far fa-hand-paper", "fas fa-hand-lizard", "far fa-hand-lizard", "fas fa-hand-holding-usd", "fas fa-hand-holding-heart", "fas fa-hand-holding", "fab fa-hacker-news-square", "fab fa-hacker-news", "fas fa-h-square", "fab fa-gulp", "fab fa-grunt", "fab fa-gripfire", "fab fa-grav", "fab fa-gratipay", "fas fa-graduation-cap", "fab fa-google-wallet", "fab fa-google-plus-square", "fab fa-google-plus-g", "fab fa-google-plus", "fab fa-google-play", "fab fa-google-drive", "fab fa-google", "fab fa-goodreads-g", "fab fa-goodreads", "fas fa-golf-ball", "fab fa-gofore", "fas fa-globe", "fab fa-glide-g", "fab fa-glide", "fas fa-glass-martini", "fab fa-gitter", "fab fa-gitlab", "fab fa-gitkraken", "fab fa-github-square", "fab fa-github-alt", "fab fa-github", "fab fa-git-square", "fab fa-git", "fas fa-gift", "fab fa-gg-circle", "fab fa-gg", "fab fa-get-pocket", "fas fa-genderless", "fas fa-gem", "far fa-gem", "fas fa-gavel", "fas fa-gamepad", "fab fa-galactic-senate", "fab fa-galactic-republic", "fas fa-futbol", "far fa-futbol", "fab fa-fulcrum", "fas fa-frown", "far fa-frown", "fab fa-freebsd", "fab fa-free-code-camp", "fab fa-foursquare", "fas fa-forward", "fab fa-forumbee", "fab fa-fort-awesome-alt", "fab fa-fort-awesome", "fas fa-football-ball", "fab fa-fonticons-fi", "fab fa-fonticons", "far fa-font-awesome-logo-full", "fas fa-font-awesome-logo-full", "fab fa-font-awesome-logo-full", "fab fa-font-awesome-flag", "fab fa-font-awesome-alt", "fab fa-font-awesome", "fas fa-font", "fas fa-folder-open", "far fa-folder-open", "fas fa-folder", "far fa-folder", "fab fa-fly", "fab fa-flipboard", "fab fa-flickr", "fas fa-flask", "fas fa-flag-checkered", "fas fa-flag", "far fa-flag", "fab fa-firstdraft", "fab fa-first-order-alt", "fab fa-first-order", "fas fa-first-aid", "fab fa-firefox", "fas fa-fire-extinguisher", "fas fa-fire", "fas fa-filter", "fas fa-film", "fas fa-file-word", "far fa-file-word", "fas fa-file-video", "far fa-file-video", "fas fa-file-powerpoint", "far fa-file-powerpoint", "fas fa-file-pdf", "far fa-file-pdf", "fas fa-file-medical-alt", "fas fa-file-medical", "fas fa-file-image", "far fa-file-image", "fas fa-file-excel", "far fa-file-excel", "fas fa-file-code", "far fa-file-code", "fas fa-file-audio", "far fa-file-audio", "fas fa-file-archive", "far fa-file-archive", "fas fa-file-alt", "far fa-file-alt", "fas fa-file", "far fa-file", "fas fa-fighter-jet", "fas fa-female", "fas fa-fax", "fas fa-fast-forward", "fas fa-fast-backward", "fab fa-facebook-square", "fab fa-facebook-messenger", "fab fa-facebook-f", "fab fa-facebook", "fas fa-eye-slash", "far fa-eye-slash", "fas fa-eye-dropper", "fas fa-eye", "far fa-eye", "fas fa-external-link-square-alt", "fas fa-external-link-alt", "fab fa-expeditedssl", "fas fa-expand-arrows-alt", "fas fa-expand", "fas fa-exclamation-triangle", "fas fa-exclamation-circle", "fas fa-exclamation", "fas fa-exchange-alt", "fas fa-euro-sign", "fab fa-etsy", "fab fa-ethereum", "fab fa-erlang", "fas fa-eraser", "fab fa-envira", "fas fa-envelope-square", "fas fa-envelope-open", "far fa-envelope-open", "fas fa-envelope", "far fa-envelope", "fab fa-empire", "fab fa-ember", "fas fa-ellipsis-v", "fas fa-ellipsis-h", "fab fa-elementor", "fas fa-eject", "fas fa-edit", "far fa-edit", "fab fa-edge", "fab fa-ebay", "fab fa-earlybirds", "fab fa-dyalog", "fab fa-drupal", "fab fa-dropbox", "fab fa-dribbble-square", "fab fa-dribbble", "fab fa-draft2digital", "fas fa-download", "fas fa-dove", "fas fa-dot-circle", "far fa-dot-circle", "fas fa-donate", "fas fa-dolly-flatbed", "fas fa-dolly", "fas fa-dollar-sign", "fab fa-docker", "fab fa-dochub", "fas fa-dna", "fab fa-discourse", "fab fa-discord", "fab fa-digital-ocean", "fab fa-digg", "fas fa-diagnoses", "fab fa-deviantart", "fas fa-desktop", "fab fa-deskpro", "fab fa-deploydog", "fab fa-delicious", "fas fa-deaf", "fas fa-database", "fab fa-dashcube", "fab fa-d-and-d", "fab fa-cuttlefish", "fas fa-cut", "fas fa-cubes", "fas fa-cube", "fab fa-css3-alt", "fab fa-css3", "fas fa-crosshairs", "fas fa-crop", "fas fa-credit-card", "far fa-credit-card", "fab fa-creative-commons-share", "fab fa-creative-commons-sampling-plus", "fab fa-creative-commons-sampling", "fab fa-creative-commons-sa", "fab fa-creative-commons-remix", "fab fa-creative-commons-pd-alt", "fab fa-creative-commons-pd", "fab fa-creative-commons-nd", "fab fa-creative-commons-nc-jp", "fab fa-creative-commons-nc-eu", "fab fa-creative-commons-nc", "fab fa-creative-commons-by", "fab fa-creative-commons", "fab fa-cpanel", "fas fa-couch", "fas fa-copyright", "far fa-copyright", "fas fa-copy", "far fa-copy", "fab fa-contao", "fab fa-connectdevelop", "fas fa-compress", "fas fa-compass", "far fa-compass", "fas fa-comments", "far fa-comments", "fas fa-comment-slash", "fas fa-comment-dots", "far fa-comment-dots", "fas fa-comment-alt", "far fa-comment-alt", "fas fa-comment", "far fa-comment", "fas fa-columns", "fas fa-cogs", "fas fa-cog", "fas fa-coffee", "fab fa-codiepie", "fab fa-codepen", "fas fa-code-branch", "fas fa-code", "fab fa-cloudversify", "fab fa-cloudsmith", "fab fa-cloudscale", "fas fa-cloud-upload-alt", "fas fa-cloud-download-alt", "fas fa-cloud", "fas fa-closed-captioning", "far fa-closed-captioning", "fas fa-clone", "far fa-clone", "fas fa-clock", "far fa-clock", "fas fa-clipboard-list", "fas fa-clipboard-check", "fas fa-clipboard", "far fa-clipboard", "fas fa-circle-notch", "fas fa-circle", "far fa-circle", "fab fa-chrome", "fas fa-child", "fas fa-chevron-up", "fas fa-chevron-right", "fas fa-chevron-left", "fas fa-chevron-down", "fas fa-chevron-circle-up", "fas fa-chevron-circle-right", "fas fa-chevron-circle-left", "fas fa-chevron-circle-down", "fas fa-chess-rook", "fas fa-chess-queen", "fas fa-chess-pawn", "fas fa-chess-knight", "fas fa-chess-king", "fas fa-chess-board", "fas fa-chess-bishop", "fas fa-chess", "fas fa-check-square", "far fa-check-square", "fas fa-check-circle", "far fa-check-circle", "fas fa-check", "fas fa-chart-pie", "fas fa-chart-line", "fas fa-chart-bar", "far fa-chart-bar", "fas fa-chart-area", "fas fa-certificate", "fab fa-centercode", "fab fa-cc-visa", "fab fa-cc-stripe", "fab fa-cc-paypal", "fab fa-cc-mastercard", "fab fa-cc-jcb", "fab fa-cc-discover", "fab fa-cc-diners-club", "fab fa-cc-apple-pay", "fab fa-cc-amex", "fab fa-cc-amazon-pay", "fas fa-cart-plus", "fas fa-cart-arrow-down", "fas fa-caret-up", "fas fa-caret-square-up", "far fa-caret-square-up", "fas fa-caret-square-right", "far fa-caret-square-right", "fas fa-caret-square-left", "far fa-caret-square-left", "fas fa-caret-square-down", "far fa-caret-square-down", "fas fa-caret-right", "fas fa-caret-left", "fas fa-caret-down", "fas fa-car", "fas fa-capsules", "fas fa-camera-retro", "fas fa-camera", "fas fa-calendar-times", "far fa-calendar-times", "fas fa-calendar-plus", "far fa-calendar-plus", "fas fa-calendar-minus", "far fa-calendar-minus", "fas fa-calendar-check", "far fa-calendar-check", "fas fa-calendar-alt", "far fa-calendar-alt", "fas fa-calendar", "far fa-calendar", "fas fa-calculator", "fab fa-buysellads", "fas fa-bus", "far fa-angry", "far fa-dizzy", "far fa-flushed", "far fa-frown-open", "far fa-grimace", "far fa-grin-alt", "far fa-grin-beam-sweat", "far fa-grin-beam", "far fa-grin-hearts", "far fa-grin-squint-tears", "far fa-grin-squint", "far fa-grin-stars", "far fa-grin-tears", "far fa-grin-tongue-squint", "far fa-grin-tongue-wink", "far fa-grin-tongue", "far fa-grin-wink", "far fa-grin", "far fa-kiss-beam", "far fa-kiss-wink-heart", "far fa-kiss", "far fa-laugh-beam", "far fa-laugh-squint", "far fa-laugh-wink", "far fa-laugh", "far fa-meh-blank", "far fa-meh-rolling-eyes", "far fa-sad-cry", "far fa-sad-tear", "far fa-smile-beam", "far fa-smile-wink", "far fa-surprise", "far fa-tired", "fab fa-acquisitions-incorporated", "fab fa-alipay", "fab fa-creative-commons-zero", "fab fa-critical-role", "fab fa-d-and-d-beyond", "fab fa-dev", "fab fa-ello", "fab fa-fantasy-flight-games", "fab fa-hackerrank", "fab fa-hornbill", "fab fa-kaggle", "fab fa-mailchimp", "fab fa-markdown", "fab fa-megaport", "fab fa-neos", "fab fa-nimblr", "fab fa-penny-arcade", "fab fa-rev", "fab fa-shopware", "fab fa-squarespace", "fab fa-the-red-yeti", "fab fa-themeco", "fab fa-think-peaks", "fab fa-weebly", "fab fa-wix", "fab fa-wizards-of-the-coast", "fab fa-wpressr", "fab fa-zhihu", "fas fa-ad", "fas fa-air-freshener", "fas fa-angry", "fas fa-ankh", "fas fa-apple-alt", "fas fa-archway", "fas fa-atlas", "fas fa-atom", "fas fa-award", "fas fa-backspace", "fas fa-bezier-curve", "fas fa-bible", "fas fa-blender-phone", "fas fa-blender", "fas fa-bone", "fas fa-bong", "fas fa-book-dead", "fas fa-book-open", "fas fa-book-reader", "fas fa-brain", "fas fa-broadcast-tower", "fas fa-broom", "fas fa-brush", "fas fa-bus-alt", "fas fa-business-time", "fas fa-campground", "fas fa-cannabis", "fas fa-car-alt", "fas fa-car-battery", "fas fa-car-crash", "fas fa-car-side", "fas fa-cat", "fas fa-chair", "fas fa-chalkboard-teacher", "fas fa-chalkboard", "fas fa-charging-station", "fas fa-check-double", "fas fa-church", "fas fa-city", "fas fa-cloud-moon", "fas fa-cloud-sun", "fas fa-cocktail", "fas fa-coins", "fas fa-comment-dollar", "fas fa-comments-dollar", "fas fa-compact-disc", "fas fa-concierge-bell", "fas fa-cookie-bite", "fas fa-cookie", "fas fa-crop-alt", "fas fa-cross", "fas fa-crow", "fas fa-crown", "fas fa-dharmachakra", "fas fa-dice-d20", "fas fa-dice-d6", "fas fa-dice-five", "fas fa-dice-four", "fas fa-dice-one", "fas fa-dice-six", "fas fa-dice-three", "fas fa-dice-two", "fas fa-dice", "fas fa-digital-tachograph", "fas fa-directions", "fas fa-divide", "fas fa-dizzy", "fas fa-dog", "fas fa-door-closed", "fas fa-door-open", "fas fa-drafting-compass", "fas fa-dragon", "fas fa-draw-polygon", "fas fa-drum-steelpan", "fas fa-drum", "fas fa-drumstick-bite", "fas fa-dumbbell", "fas fa-dungeon", "fas fa-envelope-open-text", "fas fa-equals", "fas fa-feather-alt", "fas fa-feather", "fas fa-file-contract", "fas fa-file-csv", "fas fa-file-download", "fas fa-file-export", "fas fa-file-import", "fas fa-file-invoice-dollar", "fas fa-file-invoice", "fas fa-file-prescription", "fas fa-file-signature", "fas fa-file-upload", "fas fa-fill-drip", "fas fa-fill", "fas fa-fingerprint", "fas fa-fish", "fas fa-fist-raised", "fas fa-flushed", "fas fa-folder-minus", "fas fa-folder-plus", "fas fa-frog", "fas fa-frown-open", "fas fa-funnel-dollar", "fas fa-gas-pump", "fas fa-ghost", "fas fa-glass-martini-alt", "fas fa-glasses", "fas fa-globe-africa", "fas fa-globe-americas", "fas fa-globe-asia", "fas fa-gopuram", "fas fa-greater-than-equal", "fas fa-greater-than", "fas fa-grimace", "fas fa-grin-alt", "fas fa-grin-beam-sweat", "fas fa-grin-beam", "fas fa-grin-hearts", "fas fa-grin-squint-tears", "fas fa-grin-squint", "fas fa-grin-stars", "fas fa-grin-tears", "fas fa-grin-tongue-squint", "fas fa-grin-tongue-wink", "fas fa-grin-tongue", "fas fa-grin-wink", "fas fa-grin", "fas fa-grip-horizontal", "fas fa-grip-vertical", "fas fa-hammer", "fas fa-hamsa", "fas fa-hanukiah", "fas fa-hat-wizard", "fas fa-haykal", "fas fa-headphones-alt", "fas fa-headset", "fas fa-helicopter", "fas fa-highlighter", "fas fa-hiking", "fas fa-hippo", "fas fa-horse", "fas fa-hot-tub", "fas fa-hotel", "fas fa-house-damage", "fas fa-hryvnia", "fas fa-infinity", "fas fa-jedi", "fas fa-joint", "fas fa-journal-whills", "fas fa-kaaba", "fas fa-khanda", "fas fa-kiss-beam", "fas fa-kiss-wink-heart", "fas fa-kiss", "fas fa-kiwi-bird", "fas fa-landmark", "fas fa-laptop-code", "fas fa-laugh-beam", "fas fa-laugh-squint", "fas fa-laugh-wink", "fas fa-laugh", "fas fa-layer-group", "fas fa-less-than-equal", "fas fa-less-than", "fas fa-luggage-cart", "fas fa-mail-bulk", "fas fa-map-marked-alt", "fas fa-map-marked", "fas fa-marker", "fas fa-mask", "fas fa-medal", "fas fa-meh-blank", "fas fa-meh-rolling-eyes", "fas fa-memory", "fas fa-menorah", "fas fa-microphone-alt-slash", "fas fa-microphone-alt", "fas fa-microscope", "fas fa-money-bill-wave-alt", "fas fa-money-bill-wave", "fas fa-money-bill", "fas fa-money-check-alt", "fas fa-money-check", "fas fa-monument", "fas fa-mortar-pestle", "fas fa-mosque", "fas fa-mountain", "fas fa-network-wired", "fas fa-not-equal", "fas fa-oil-can", "fas fa-om", "fas fa-otter", "fas fa-paint-roller", "fas fa-palette", "fas fa-parking", "fas fa-passport", "fas fa-pastafarianism", "fas fa-peace", "fas fa-pen-alt", "fas fa-pen-fancy", "fas fa-pen-nib", "fas fa-pen", "fas fa-pencil-ruler", "fas fa-percentage", "fas fa-place-of-worship", "fas fa-plane-arrival", "fas fa-plane-departure", "fas fa-poll-h", "fas fa-poll", "fas fa-poop", "fas fa-pray", "fas fa-praying-hands", "fas fa-prescription", "fas fa-project-diagram", "fas fa-quran", "fas fa-receipt", "fas fa-ring", "fas fa-robot", "fas fa-route", "fas fa-ruler-combined", "fas fa-ruler-horizontal", "fas fa-ruler-vertical", "fas fa-ruler", "fas fa-running", "fas fa-sad-cry", "fas fa-sad-tear", "fas fa-school", "fas fa-screwdriver", "fas fa-scroll", "fas fa-search-dollar", "fas fa-search-location", "fas fa-shapes", "fas fa-shoe-prints", "fas fa-shuttle-van", "fas fa-signature", "fas fa-skull-crossbones", "fas fa-skull", "fas fa-slash", "fas fa-smile-beam", "fas fa-smile-wink", "fas fa-smoking-ban", "fas fa-socks", "fas fa-solar-panel", "fas fa-spa", "fas fa-spider", "fas fa-splotch", "fas fa-spray-can", "fas fa-square-root-alt", "fas fa-stamp", "fas fa-star-and-crescent", "fas fa-star-half-alt", "fas fa-star-of-david", "fas fa-star-of-life", "fas fa-store-alt", "fas fa-store", "fas fa-stream", "fas fa-stroopwafel", "fas fa-suitcase-rolling", "fas fa-surprise", "fas fa-swatchbook", "fas fa-swimmer", "fas fa-swimming-pool", "fas fa-synagogue", "fas fa-teeth-open", "fas fa-teeth", "fas fa-theater-masks", "fas fa-tint-slash", "fas fa-tired", "fas fa-toilet-paper", "fas fa-toolbox", "fas fa-tooth", "fas fa-torah", "fas fa-torii-gate", "fas fa-tractor", "fas fa-traffic-light", "fas fa-truck-monster", "fas fa-truck-pickup", "fas fa-tshirt", "fas fa-umbrella-beach", "fas fa-user-injured", "fas fa-vector-square", "fas fa-vihara", "fas fa-volume-mute", "fas fa-vr-cardboard", "fas fa-walking", "fas fa-wallet", "fas fa-weight-hanging", "fas fa-wind", "fas fa-wine-bottle", "fas fa-wine-glass-alt", "fas fa-yin-yang"];

/* harmony default export */ __webpack_exports__["a"] = (UAGBIcon);

/***/ }),
/* 13 */
/*!****************************************************************************************!*\
  !*** ./node_modules/@fonticonpicker/react-fonticonpicker/dist/fonticonpicker.react.js ***!
  \****************************************************************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

/*!
 * 
 * React FontIconPicker
 * 
 * React Component to show a picker element to pick font-icons & svg
 * 
 * @author Swashata Ghosh <swashata@wpquark.com>
 * @version 1.1.0
 * @link https://github.com/fontIconPicker/react-fonticonpicker
 * @license MIT
 * 
 * Copyright (c) 2018 Swashata Ghosh <swashata@wpquark.com>
 * 
 * This software is released under the MIT License.
 * https://opensource.org/licenses/MIT
 * 
 */
!function(e,t){ true?module.exports=t(__webpack_require__(/*! prop-types */ 11),__webpack_require__(/*! react */ 3),__webpack_require__(/*! classnames */ 0),__webpack_require__(/*! react-dom */ 24),__webpack_require__(/*! react-transition-group */ 339)):"function"==typeof define&&define.amd?define(["prop-types","react","classnames","react-dom","react-transition-group"],t):"object"==typeof exports?exports.FontIconPicker=t(require("prop-types"),require("react"),require("classnames"),require("react-dom"),require("react-transition-group")):e.FontIconPicker=t(e.PropTypes,e.React,e.classNames,e.ReactDOM,e.ReactTransitionGroup)}(window,function(e,t,r,n,a){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=15)}([function(t,r){t.exports=e},function(e,r){e.exports=t},function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}Object.defineProperty(t,"__esModule",{value:!0}),t.flattenPossiblyCategorizedSource=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(Array.isArray(e))return o(e);if(null!==t)return void 0!==e[t]?o(e[t]):[];var r=[],n=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){a(e,t,r[t])})}return e}({},e);return Object.keys(n).forEach(function(e){r=o(r).concat(o(n[e]))}),r},t.getPossibleCategories=function(e){return Array.isArray(e)?null:Object.keys(e)},t.convertToHex=function(e){return String.fromCodePoint(parseInt(e,10))},t.isArrayEqual=function(e,t){if(!Array.isArray(e)||!Array.isArray(t))return!1;var r=o(e);r.sort();var n=o(t);return n.sort(),JSON.stringify(r)===JSON.stringify(n)},t.getOffset=function(e){var t=e.getBoundingClientRect(),r=window.pageXOffset||document.documentElement.scrollLeft,n=window.pageYOffset||document.documentElement.scrollTop;return{top:t.top+n,left:t.left+r}},t.getSourceType=function(e){return null===e?"null":"object"!==n(e)||Array.isArray(e)?Array.isArray(e)?"array":n(e):"object"},t.InvalidSourceException=function(e,t){this.givenType=e,this.requiredType=t,this.message="Expected of type: ".concat(this.requiredType,", found: ").concat(this.givenType),this.toString=function(){return"Invalid Source Exception: ".concat(this.message)}},t.fuzzySearch=function(e,t){e=e.toLowerCase();var r=(t=t.toLowerCase()).length,n=e.length;if(n>r)return!1;if(n===r)return e===t;e:for(var a=0,o=0;a<n;a++){for(var l=e.codePointAt(a);o<r;)if(t.codePointAt(o++)===l)continue e;return!1}return!0},t.debounce=void 0,t.debounce=function(e,t){var r;return function(){var n=this,a=arguments;clearTimeout(r),r=setTimeout(function(){return e.apply(n,a)},t)}}},function(e,t){e.exports=r},,,function(e,t){e.exports=n},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=u(r(1)),a=r(6),o=u(r(0)),l=u(r(3)),i=r(2);function u(e){return e&&e.__esModule?e:{default:e}}function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function f(e,t,r){return t&&s(e.prototype,t),r&&s(e,r),e}function d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var p=function(e){function t(e){var r,n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this,n=(t.__proto__||Object.getPrototypeOf(t)).call(this,e),r=!n||"object"!==c(n)&&"function"!=typeof n?d(this):n,Object.defineProperty(d(r),"syncPortalPosition",{configurable:!0,enumerable:!0,writable:!0,value:function(){r.resetPortalPosition(),r.fixWindowOverflow()}}),Object.defineProperty(d(r),"fixWindowOverflow",{configurable:!0,enumerable:!0,writable:!0,value:function(){var e=r.props.domRef.current.offsetWidth,t=r.props.domRef.current.offsetHeight,n=window,a=n.innerWidth,o=n.pageYOffset,l=document.documentElement.clientHeight,u=(0,i.getOffset)(r.props.domRef.current),c=u.left,s=u.top,f="self"===r.state.appendRoot?r.props.domRef.current:r.state.appendRoot,d=(0,i.getOffset)(f),p=r.props.btnRef.current,h=r.props.domRef.current,y=(0,i.getOffset)(p),b=getComputedStyle(p),g=(parseInt(b.borderTop,10)||0)+(parseInt(b.borderBottom,10)||0);if(c+e>a-20){var m=y.left+r.props.btnRef.current.offsetWidth-(e+d.left);m+d.left<0&&(m=10-d.left),h.style.left="".concat(m,"px")}t+s-o>l&&y.top-t>0&&("self"===r.state.appendRoot?h.style.top="-".concat(t-g,"px"):h.style.top="".concat(y.top+g-t,"px"))}}),r.state={},r.debouncedSyncPortalPosition=(0,i.debounce)(r.syncPortalPosition,250),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,n.default.PureComponent),f(t,null,[{key:"getDerivedStateFromProps",value:function(e){var r=t.calculateAppendAndClass(e.appendRoot);return{appendRoot:r.appendRoot,portalClasses:r.portalClasses}}},{key:"calculateAppendAndClass",value:function(e){var t="self",r=(0,l.default)({"rfipdropdown--portal":!1!==e});return!1!==e&&(t=document.querySelector(e)),{portalClasses:r,appendRoot:t}}}]),f(t,[{key:"componentDidMount",value:function(){window.addEventListener("resize",this.debouncedSyncPortalPosition),window.addEventListener("scroll",this.debouncedSyncPortalPosition),this.syncPortalPosition()}},{key:"componentDidUpdate",value:function(){this.syncPortalPosition()}},{key:"componentWillUnmount",value:function(){window.removeEventListener("resize",this.debouncedSyncPortalPosition),window.removeEventListener("scroll",this.debouncedSyncPortalPosition)}},{key:"positionPortal",value:function(){var e=this.props.domRef.current.style.display;this.props.domRef.current.style.display="none";var t=this.props.btnRef.current,r=(0,i.getOffset)(t),n=(0,i.getOffset)(this.state.appendRoot),a=t.offsetHeight;this.props.domRef.current.style.left="".concat(r.left-n.left,"px"),this.props.domRef.current.style.top="".concat(r.top+a,"px"),this.props.domRef.current.style.display=e}},{key:"resetPortalPosition",value:function(){var e=this.props.domRef.current;"self"===this.state.appendRoot?e.style.top="":this.positionPortal()}},{key:"render",value:function(){var e=(0,l.default)(this.props.className,this.state.portalClasses),t=n.default.createElement("div",{className:e,ref:this.props.domRef},this.props.children);return"self"===this.state.appendRoot?t:(0,a.createPortal)(t,this.state.appendRoot)}}]),t}();Object.defineProperty(p,"propTypes",{configurable:!0,enumerable:!0,writable:!0,value:{appendRoot:o.default.oneOfType([o.default.bool,o.default.string]),children:o.default.node.isRequired,domRef:o.default.object.isRequired,btnRef:o.default.object.isRequired,className:o.default.string.isRequired}}),Object.defineProperty(p,"defaultProps",{configurable:!0,enumerable:!0,writable:!0,value:{appendRoot:!1}});var h=p;t.default=h},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=i(r(1)),a=i(r(0)),o=i(r(3)),l=r(2);function i(e){return e&&e.__esModule?e:{default:e}}function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function f(e,t,r){return t&&s(e.prototype,t),r&&s(e,r),e}function d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var p=function(e){function t(e){var r,n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this,n=(t.__proto__||Object.getPrototypeOf(t)).call(this,e),r=!n||"object"!==u(n)&&"function"!=typeof n?d(this):n,Object.defineProperty(d(r),"handleChangePage",{configurable:!0,enumerable:!0,writable:!0,value:function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=r.props.currentPage,o=r.state.totalPage;null!==n?"next"===n?a+=1:a-=1:a=parseInt(e.target.value,10)-1,a<0&&(a=0),a>o-1&&(a=o-1),t=a+1,null===n&&Number.isNaN(a)&&(a=0,t=""),r.setState({viewPage:t}),r.props.handleChangePage(a)}}),Object.defineProperty(d(r),"handlePageKeyBoard",{configurable:!0,enumerable:!0,writable:!0,value:function(e,t){13!==e.keyCode&&32!==e.keyCode||r.handleChangePage({},t)}}),Object.defineProperty(d(r),"handleChangeValue",{configurable:!0,enumerable:!0,writable:!0,value:function(e){r.props.handleChangeValue(e)}}),Object.defineProperty(d(r),"handleValueKeyboard",{configurable:!0,enumerable:!0,writable:!0,value:function(e,t){13!==e.keyCode&&32!==e.keyCode||r.handleChangeValue(t)}}),r.state={viewPage:r.props.currentPage+1},r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,n.default.PureComponent),f(t,null,[{key:"getDerivedStateFromProps",value:function(e,r){var n=t.getCategoryFilteredState(e.currentCategory,e.categories,e.icons),a=t.getCategoryFilteredState(e.currentCategory,e.categories,null===e.search?e.icons:e.search),o=t.getActiveIcons(n,a,e.currentSearch),l=o.activeIcons,i=o.activeTitles,u=e.currentPage,c=e.iconsPerPage,s={iconView:t.getCurrentViewIcons(l,c,u),titleView:t.getCurrentViewIcons(i,c,u),totalPage:Math.ceil(l.length/c)};return""!==r.viewPage&&(s.viewPage=e.currentPage+1),s}},{key:"getActiveIcons",value:function(e,t,r){var n=c(e),a=c(t);if(""===r||null===r)return{activeIcons:n,activeTitles:a};var o=[],i=[];return n.forEach(function(e,n){(0,l.fuzzySearch)(r,t[n])&&(o.push(e),i.push(t[n]))}),{activeIcons:o,activeTitles:i}}},{key:"getCategoryFilteredState",value:function(e,t,r){var n=null,a=(0,l.getSourceType)(r);if(Array.isArray(t)){if("object"!==a)throw new l.InvalidSourceException(a,"object")}else if("array"!==a)throw new l.InvalidSourceException(a,"array");return 0!==e&&Array.isArray(t)&&(n=t[e]||null),(0,l.flattenPossiblyCategorizedSource)(r,n)}},{key:"getCurrentViewIcons",value:function(e,t,r){var n=r*t,a=(r+1)*t;return e.slice(n,a)}}]),f(t,[{key:"renderPager",value:function(){var e=this;if(this.state.totalPage<1)return null;var t=this.props.currentPage>0?n.default.createElement("span",{className:"rfipicons__left",role:"button",tabIndex:0,onKeyDown:function(t){return e.handlePageKeyBoard(t,"prev")},onClick:function(t){return e.handleChangePage(t,"prev")}},n.default.createElement("span",{role:"presentation",className:"rfipicons__label","aria-label":"Left"},n.default.createElement("i",{className:"fipicon-angle-left"}))):null,r=this.props.currentPage<this.state.totalPage-1?n.default.createElement("span",{className:"rfipicons__right",role:"button",tabIndex:0,onKeyDown:function(t){return e.handlePageKeyBoard(t,"next")},onClick:function(t){return e.handleChangePage(t,"next")}},n.default.createElement("span",{role:"presentation",className:"rfipicons__label","aria-label":"Right"},n.default.createElement("i",{className:"fipicon-angle-right"}))):null;return n.default.createElement("div",{className:"rfipicons__pager"},n.default.createElement("div",{className:"rfipicons__num"},n.default.createElement("input",{value:this.state.viewPage,onChange:this.handleChangePage,className:"rfipicons__cp",type:"tel",min:1}),n.default.createElement("span",{className:"rfipicons__sp"},"/"),n.default.createElement("span",{className:"rfipicons__tp"},this.state.totalPage)),n.default.createElement("div",{className:"rfipicons__arrow"},t,r))}},{key:"renderIconView",value:function(){var e=this;return this.state.totalPage>0?this.state.iconView.map(function(t,r){var a=(0,o.default)("rfipicons__icon",{"rfipicons__icon--selected":e.props.value===t||Array.isArray(e.props.value)&&e.props.value.includes(t)});return n.default.createElement("span",{className:a,key:t,title:e.state.titleView[r]},n.default.createElement("span",{className:"rfipicons__ibox",tabIndex:0,role:"button",onClick:function(){return e.handleChangeValue(t)},onKeyDown:function(r){return e.handleValueKeyboard(r,t)}},e.props.renderIcon(t)))}):n.default.createElement("span",{className:"rfipicons__icon--error"},n.default.createElement("span",{className:"rfipicons__ibox--error"},this.props.noIconPlaceholder))}},{key:"render",value:function(){return n.default.createElement("div",{className:"rfipicons"},this.renderPager(),n.default.createElement("div",{className:"rfipicons__selector"},this.renderIconView()))}}]),t}();Object.defineProperty(p,"propTypes",{configurable:!0,enumerable:!0,writable:!0,value:{categories:a.default.arrayOf(a.default.string),currentCategory:a.default.number,isMulti:a.default.bool.isRequired,icons:a.default.oneOfType([a.default.arrayOf(a.default.string),a.default.arrayOf(a.default.number),a.default.objectOf(a.default.oneOfType([a.default.arrayOf(a.default.number),a.default.arrayOf(a.default.string)]))]).isRequired,search:a.default.oneOfType([a.default.objectOf(a.default.arrayOf(a.default.string)),a.default.arrayOf(a.default.string)]),value:a.default.oneOfType([a.default.number,a.default.string,a.default.arrayOf(a.default.oneOfType([a.default.number,a.default.string]))]).isRequired,currentSearch:a.default.string.isRequired,handleChangeValue:a.default.func.isRequired,currentPage:a.default.number.isRequired,iconsPerPage:a.default.number.isRequired,handleChangePage:a.default.func.isRequired,renderIcon:a.default.func.isRequired,noIconPlaceholder:a.default.string.isRequired}}),Object.defineProperty(p,"defaultProps",{configurable:!0,enumerable:!0,writable:!0,value:{categories:null,currentCategory:null,search:null}});var h=p;t.default=h},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=o(r(1)),a=o(r(0));function o(e){return e&&e.__esModule?e:{default:e}}var l=function(e){return n.default.createElement("div",{className:"rfipsearch"},n.default.createElement("input",{type:"text",className:"rfipsearch__input",value:e.value,onChange:e.handleSearch,placeholder:e.placeholder}))};l.propTypes={handleSearch:a.default.func.isRequired,value:a.default.string.isRequired,placeholder:a.default.string.isRequired};var i=l;t.default=i},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=o(r(1)),a=o(r(0));function o(e){return e&&e.__esModule?e:{default:e}}function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var u=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){return!t||"object"!==l(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}var r,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,n.default.PureComponent),r=t,(a=[{key:"render",value:function(){return n.default.createElement("div",{className:"rfipcategory"},n.default.createElement("select",{className:"rfipcategory__select",onChange:this.props.handleCategory,value:this.props.value},this.props.categories.map(function(e,t){return n.default.createElement("option",{className:"rfipcategory__select__option",key:e,value:t},e)})),n.default.createElement("i",{className:"fipicon-angle-down",role:"presentation","aria-label":"Open"}))}}])&&i(r.prototype,a),t}();Object.defineProperty(u,"propTypes",{configurable:!0,enumerable:!0,writable:!0,value:{handleCategory:a.default.func.isRequired,value:a.default.number.isRequired,categories:a.default.arrayOf(a.default.string).isRequired}});var c=u;t.default=c},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=c(r(1)),a=c(r(0)),o=c(r(10)),l=c(r(9)),i=c(r(8)),u=r(2);function c(e){return e&&e.__esModule?e:{default:e}}function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function d(e,t,r){return t&&f(e.prototype,t),r&&f(e,r),e}function p(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var h=function(e){function t(e){var r,n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this,n=(t.__proto__||Object.getPrototypeOf(t)).call(this,e),r=!n||"object"!==s(n)&&"function"!=typeof n?p(this):n,Object.defineProperty(p(r),"handleCategory",{configurable:!0,enumerable:!0,writable:!0,value:function(e){var t=parseInt(e.target.value,10);Number.isNaN(t)&&(t=0),r.props.handleChangeCategory(t),r.props.handleChangePage(0)}}),Object.defineProperty(p(r),"handleSearch",{configurable:!0,enumerable:!0,writable:!0,value:function(e){var t=e.target.value;r.props.handleChangeSearch(t)}}),r.state={},r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,n.default.PureComponent),d(t,null,[{key:"getDerivedStateFromProps",value:function(e){var t=(0,u.getPossibleCategories)(e.icons);return null!==t&&(t=[e.allCatPlaceholder].concat(function(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}(t))),{categories:t,searchString:e.currentSearch}}}]),d(t,[{key:"render",value:function(){return n.default.createElement("div",{className:"rfipdropdown__selector"},this.props.showSearch?n.default.createElement(l.default,{handleSearch:this.handleSearch,value:this.state.searchString,placeholder:this.props.searchPlaceholder}):null,this.props.showCategory&&this.state.categories&&this.state.categories.length?n.default.createElement(o.default,{handleCategory:this.handleCategory,value:this.props.currentCategory,categories:this.state.categories}):null,n.default.createElement(i.default,{categories:this.state.categories,currentCategory:this.props.currentCategory,isMulti:this.props.isMulti,icons:this.props.icons,search:this.props.search,value:this.props.value,currentSearch:this.props.currentSearch,handleChangeValue:this.props.handleChangeValue,currentPage:this.props.currentPage,iconsPerPage:this.props.iconsPerPage,handleChangePage:this.props.handleChangePage,renderIcon:this.props.renderIcon,noIconPlaceholder:this.props.noIconPlaceholder}))}}]),t}();Object.defineProperty(h,"propTypes",{configurable:!0,enumerable:!0,writable:!0,value:{isMulti:a.default.bool.isRequired,value:a.default.oneOfType([a.default.number,a.default.string,a.default.arrayOf(a.default.any)]).isRequired,currentCategory:a.default.number.isRequired,currentPage:a.default.number.isRequired,currentSearch:a.default.string.isRequired,icons:a.default.oneOfType([a.default.arrayOf(a.default.number),a.default.arrayOf(a.default.string),a.default.objectOf(a.default.oneOfType([a.default.arrayOf(a.default.number),a.default.arrayOf(a.default.string)]))]).isRequired,search:a.default.oneOfType([a.default.object,a.default.arrayOf(a.default.string)]),showCategory:a.default.bool.isRequired,showSearch:a.default.bool.isRequired,iconsPerPage:a.default.number.isRequired,allCatPlaceholder:a.default.string.isRequired,searchPlaceholder:a.default.string.isRequired,noIconPlaceholder:a.default.string.isRequired,renderIcon:a.default.func.isRequired,handleChangeValue:a.default.func.isRequired,handleChangeCategory:a.default.func.isRequired,handleChangePage:a.default.func.isRequired,handleChangeSearch:a.default.func.isRequired}}),Object.defineProperty(h,"defaultProps",{configurable:!0,enumerable:!0,writable:!0,value:{search:null}});var y=h;t.default=y},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=l(r(1)),a=l(r(0)),o=l(r(3));function l(e){return e&&e.__esModule?e:{default:e}}function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function c(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function s(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?f(e):t}function f(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var d=function(e){function t(){var e,r,a;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,l=new Array(o),i=0;i<o;i++)l[i]=arguments[i];return s(a,(r=a=s(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(l))),Object.defineProperty(f(a),"handleClick",{configurable:!0,enumerable:!0,writable:!0,value:function(){a.props.onClick()}}),Object.defineProperty(f(a),"handleKeyDown",{configurable:!0,enumerable:!0,writable:!0,value:function(e){32!==e.keyCode&&13!==e.keyCode||a.props.onClick()}}),Object.defineProperty(f(a),"handleDelete",{configurable:!0,enumerable:!0,writable:!0,value:function(e,t){e.stopPropagation(),a.props.handleDeleteValue(t)}}),Object.defineProperty(f(a),"handleDeleteKeyboard",{configurable:!0,enumerable:!0,writable:!0,value:function(e,t){32!==e.keyCode&&13!==e.keyCode||a.props.handleDeleteValue(t)}}),Object.defineProperty(f(a),"renderEmptyIcon",{configurable:!0,enumerable:!0,writable:!0,value:function(){return n.default.createElement("span",{className:"rfipbtn__icon--empty"},a.props.noSelectedPlaceholder)}}),r))}var r,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,n.default.PureComponent),r=t,(a=[{key:"renderIcon",value:function(e){var t=this;return""===e||null===e||void 0===e?this.renderEmptyIcon():n.default.createElement("span",{className:"rfipbtn__icon",key:e},n.default.createElement("span",{className:"rfipbtn__elm"},this.props.renderIcon(e)),n.default.createElement("span",{className:"rfipbtn__del",onClick:function(r){return t.handleDelete(r,e)},onKeyDown:function(r){return t.handleDeleteKeyboard(r,e)},tabIndex:0,role:"button"},"×"))}},{key:"renderCurrentIcons",value:function(){var e=this;return this.props.isMulti?this.props.value.length?this.props.value.map(function(t){return e.renderIcon(t)}):this.renderEmptyIcon():this.renderIcon(this.props.value)}},{key:"render",value:function(){var e={onClick:this.handleClick,onKeyDown:this.handleKeyDown,onFocus:this.handleFocus,onBlur:this.handleBlur,tabIndex:0},t=(0,o.default)("rfipbtn__button","rfipbtn__button--".concat(this.props.isOpen?"open":"close")),r=(0,o.default)(this.props.className);return n.default.createElement("div",u({className:r,ref:this.props.domRef},e),n.default.createElement("div",{className:"rfipbtn__current"},this.renderCurrentIcons()),n.default.createElement("div",{className:t},n.default.createElement("i",{className:"fipicon-angle-down",role:"presentation","aria-label":"Open"})))}}])&&c(r.prototype,a),t}();Object.defineProperty(d,"propTypes",{configurable:!0,enumerable:!0,writable:!0,value:{className:a.default.string.isRequired,isOpen:a.default.bool.isRequired,onClick:a.default.func.isRequired,domRef:a.default.object.isRequired,isMulti:a.default.bool.isRequired,value:a.default.oneOfType([a.default.number,a.default.string,a.default.arrayOf(a.default.oneOfType([a.default.number,a.default.string]))]).isRequired,renderIcon:a.default.func.isRequired,handleDeleteValue:a.default.func.isRequired,noSelectedPlaceholder:a.default.string.isRequired}});var p=d;t.default=p},function(e,t){e.exports=a},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=f(r(1)),a=f(r(0)),o=f(r(3)),l=r(13),i=f(r(12)),u=f(r(11)),c=f(r(7)),s=r(2);function f(e){return e&&e.__esModule?e:{default:e}}function d(e){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function h(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function y(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function b(e,t,r){return t&&y(e.prototype,t),r&&y(e,r),e}function g(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var m=[],v="",P=function(e){function t(e){var r,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this,a=(t.__proto__||Object.getPrototypeOf(t)).call(this,e),r=!a||"object"!==d(a)&&"function"!=typeof a?g(this):a,Object.defineProperty(g(r),"handleOuterClick",{configurable:!0,enumerable:!0,writable:!0,value:function(e){var t=e.target;r.isClickWithin(t)||r.closeDropdown()}}),Object.defineProperty(g(r),"handleEscapeKeyboard",{configurable:!0,enumerable:!0,writable:!0,value:function(e){27===e.keyCode&&r.closeDropdown()}}),Object.defineProperty(g(r),"isClickWithin",{configurable:!0,enumerable:!0,writable:!0,value:function(e){return r.fipButtonRef.current.contains(e)||r.fipDropDownRef.current&&r.fipDropDownRef.current.contains(e)}}),Object.defineProperty(g(r),"handleToggle",{configurable:!0,enumerable:!0,writable:!0,value:function(){r.setState(function(e){return r.handleDropDown(!e.isOpen,!1)})}}),Object.defineProperty(g(r),"closeDropdown",{configurable:!0,enumerable:!0,writable:!0,value:function(){r.handleDropDown(!1)}}),Object.defineProperty(g(r),"handleDropDown",{configurable:!0,enumerable:!0,writable:!0,value:function(e){var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],a={isOpen:e};return a.elemClass=t.getDerivedClassName("rfip",r.props.theme,r.props.isMulti,e),a.btnClass=t.getDerivedClassName("rfipbtn",r.props.theme,r.props.isMulti,e),a.ddClass=t.getDerivedClassName("rfipdropdown",r.props.theme,r.props.isMulti,e),n&&r.setState(a),a}}),Object.defineProperty(g(r),"handleChangeValue",{configurable:!0,enumerable:!0,writable:!0,value:function(e){var t;r.props.isMulti?(t=p(r.state.value)).includes(e)?(t=t.filter(function(t){return t!==e})).length||(t=m):t.push(e):t=e===r.state.value?v:e,r.setState({value:t}),r.props.onChange(t)}}),Object.defineProperty(g(r),"handleDeleteValue",{configurable:!0,enumerable:!0,writable:!0,value:function(e){var n;n=r.props.isMulti?r.state.value.filter(function(t){return t!==e}):t.getDerivedValue(n,r.props.isMulti),r.setState({value:n}),r.props.onChange(n)}}),Object.defineProperty(g(r),"handleChangePage",{configurable:!0,enumerable:!0,writable:!0,value:function(e){r.setState({currentPage:e})}}),Object.defineProperty(g(r),"handleChangeCategory",{configurable:!0,enumerable:!0,writable:!0,value:function(e){r.setState({currentCategory:e,currentPage:0})}}),Object.defineProperty(g(r),"handleChangeSearch",{configurable:!0,enumerable:!0,writable:!0,value:function(e){r.setState({currentSearch:e,currentPage:0})}}),Object.defineProperty(g(r),"resetPortalStyle",{configurable:!0,enumerable:!0,writable:!0,value:function(e){["maxHeight","paddingTop","paddingBottom"].forEach(function(t){e.style[t]=null})}}),Object.defineProperty(g(r),"handlePortalEnter",{configurable:!0,enumerable:!0,writable:!0,value:function(e){var t=e.childNodes[0];r.resetPortalStyle(t);var n=getComputedStyle(t);r.fipPortalComputedStyle={height:n.height,paddingTop:n.paddingTop,paddingBottom:n.paddingBottom},["maxHeight","paddingTop","paddingBottom"].forEach(function(e){t.style[e]="0px"})}}),Object.defineProperty(g(r),"handlePortalEntering",{configurable:!0,enumerable:!0,writable:!0,value:function(e){var t=e.childNodes[0];t.style.maxHeight=r.fipPortalComputedStyle.height,t.style.paddingTop=r.fipPortalComputedStyle.paddingTop,t.style.paddingBottom=r.fipPortalComputedStyle.paddingBottom}}),Object.defineProperty(g(r),"handlePortalEntered",{configurable:!0,enumerable:!0,writable:!0,value:function(e){var t=e.childNodes[0];r.resetPortalStyle(t),r.props.showSearch&&void 0===window.orientation&&-1===navigator.userAgent.indexOf("IEMobile")&&t.querySelector(".rfipsearch__input").focus()}}),Object.defineProperty(g(r),"handlePortalExit",{configurable:!0,enumerable:!0,writable:!0,value:function(e){var t=e.childNodes[0];r.resetPortalStyle(t);var n=getComputedStyle(t).height;t.style.maxHeight=n}}),Object.defineProperty(g(r),"handlePortalExiting",{configurable:!0,enumerable:!0,writable:!0,value:function(e){var t=e.childNodes[0];t.style.maxHeight="0px",t.style.paddingTop="0px",t.style.paddingBottom="0px"}}),Object.defineProperty(g(r),"renderIcon",{configurable:!0,enumerable:!0,writable:!0,value:function(e){if("function"==typeof r.props.renderFunc)return r.props.renderFunc(e);if("class"===r.props.renderUsing)return n.default.createElement("i",{className:e});var t=h({},r.props.renderUsing,r.props.convertHex?(0,s.convertToHex)(e):e);return n.default.createElement("i",t)}}),r.fipButtonRef=n.default.createRef(),r.fipDropDownRef=n.default.createRef(),r.state={currentCategory:0,currentPage:0,isOpen:!1,currentSearch:""},r.fipPortalComputedStyle=null,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,n.default.PureComponent),b(t,null,[{key:"getDerivedStateFromProps",value:function(e,r){var n={};return n.elemClass=t.getDerivedClassName("rfip",e.theme,e.isMulti,r.isOpen),n.btnClass=t.getDerivedClassName("rfipbtn",e.theme,e.isMulti,r.isOpen),n.ddClass=t.getDerivedClassName("rfipdropdown",e.theme,e.isMulti,r.isOpen),n.value=t.getDerivedValue(e.value,e.isMulti),e.showCategory||(n.currentCategory=0,n.currentPage=0),e.showSearch||(n.currentSearch="",n.currentPage=0),n}},{key:"getDerivedClassName",value:function(e,t,r,n){return(0,o.default)(e,"".concat(e,"--").concat(t),h({},"".concat(e,"--multi"),r),"".concat(e,"--").concat(n?"open":"close"))}},{key:"getDerivedValue",value:function(e,t){var r=e;return t?r=Array.isArray(e)?p(e):m:"number"!=typeof e&&"string"!=typeof e&&(r=v),r}}]),b(t,[{key:"componentDidMount",value:function(){var e=this;["click"].forEach(function(t){document.addEventListener(t,e.handleOuterClick,!1)}),document.addEventListener("keydown",this.handleEscapeKeyboard,!1),this.props.onChange(this.state.value)}},{key:"componentWillUnmount",value:function(){var e=this;["click"].forEach(function(t){document.removeEventListener(t,e.handleOuterClick,!1)}),document.removeEventListener("keydown",this.handleEscapeKeyboard,!1)}},{key:"render",value:function(){var e={currentCategory:this.state.currentCategory,currentPage:this.state.currentPage,currentSearch:this.state.currentSearch,value:this.state.value,isMulti:this.props.isMulti,icons:this.props.icons,search:this.props.search,showCategory:this.props.showCategory,showSearch:this.props.showSearch,iconsPerPage:this.props.iconsPerPage,allCatPlaceholder:this.props.allCatPlaceholder,searchPlaceholder:this.props.searchPlaceholder,noIconPlaceholder:this.props.noIconPlaceholder,renderIcon:this.renderIcon,handleChangeValue:this.handleChangeValue,handleChangeCategory:this.handleChangeCategory,handleChangePage:this.handleChangePage,handleChangeSearch:this.handleChangeSearch};return n.default.createElement("div",{className:this.state.elemClass,ref:this.fipRef},n.default.createElement(i.default,{className:this.state.btnClass,isOpen:this.state.isOpen,onClick:this.handleToggle,domRef:this.fipButtonRef,isMulti:this.props.isMulti,value:this.state.value,renderIcon:this.renderIcon,handleDeleteValue:this.handleDeleteValue,noSelectedPlaceholder:this.props.noSelectedPlaceholder}),n.default.createElement(l.CSSTransition,{classNames:"fipappear",timeout:300,in:this.state.isOpen,unmountOnExit:!0,onEnter:this.handlePortalEnter,onEntering:this.handlePortalEntering,onEntered:this.handlePortalEntered,onExit:this.handlePortalExit,onExiting:this.handlePortalExiting},n.default.createElement(c.default,{appendRoot:this.props.appendTo,domRef:this.fipDropDownRef,btnRef:this.fipButtonRef,className:this.state.ddClass},n.default.createElement(u.default,e))))}}]),t}();Object.defineProperty(P,"propTypes",{configurable:!0,enumerable:!0,writable:!0,value:{icons:a.default.oneOfType([a.default.arrayOf(a.default.string),a.default.arrayOf(a.default.number),a.default.objectOf(a.default.oneOfType([a.default.arrayOf(a.default.number),a.default.arrayOf(a.default.string)]))]).isRequired,search:a.default.oneOfType([a.default.objectOf(a.default.arrayOf(a.default.string)),a.default.arrayOf(a.default.string)]),iconsPerPage:a.default.number,theme:a.default.string,onChange:a.default.func.isRequired,showCategory:a.default.bool,showSearch:a.default.bool,value:a.default.oneOfType([a.default.arrayOf(a.default.string),a.default.arrayOf(a.default.number),a.default.number,a.default.string]),isMulti:a.default.bool,renderUsing:a.default.string,convertHex:a.default.bool,renderFunc:a.default.func,appendTo:a.default.oneOfType([a.default.bool,a.default.string]),allCatPlaceholder:a.default.string,searchPlaceholder:a.default.string,noIconPlaceholder:a.default.string,noSelectedPlaceholder:a.default.string}}),Object.defineProperty(P,"defaultProps",{configurable:!0,enumerable:!0,writable:!0,value:{search:null,iconsPerPage:20,theme:"default",showCategory:!0,showSearch:!0,value:null,isMulti:!1,renderUsing:"class",convertHex:!0,renderFunc:null,appendTo:!1,allCatPlaceholder:"Show from all",searchPlaceholder:"Search Icons",noIconPlaceholder:"No icons found",noSelectedPlaceholder:"Select icon"}}),Object.defineProperty(P,"displayName",{configurable:!0,enumerable:!0,writable:!0,value:"FontIconPicker"});var O=P;t.default=O},function(e,t,r){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=((n=r(14))&&n.__esModule?n:{default:n}).default;t.default=a}]).default});
//# sourceMappingURL=fonticonpicker.react.js.map

/***/ }),
/* 14 */
/*!****************************************!*\
  !*** ./node_modules/lodash/_Symbol.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ 4);

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),
/* 15 */
/*!*************************************!*\
  !*** ./node_modules/lodash/keys.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ 85),
    baseKeys = __webpack_require__(/*! ./_baseKeys */ 199),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ 16);

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;


/***/ }),
/* 16 */
/*!********************************************!*\
  !*** ./node_modules/lodash/isArrayLike.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ 76),
    isLength = __webpack_require__(/*! ./isLength */ 52);

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),
/* 17 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_castPath.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(/*! ./isArray */ 6),
    isKey = __webpack_require__(/*! ./_isKey */ 53),
    stringToPath = __webpack_require__(/*! ./_stringToPath */ 207),
    toString = __webpack_require__(/*! ./toString */ 92);

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;


/***/ }),
/* 18 */
/*!***************************************!*\
  !*** ./node_modules/lodash/_toKey.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(/*! ./isSymbol */ 39);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;


/***/ }),
/* 19 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_copyObject.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(/*! ./_assignValue */ 41),
    baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ 95);

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;


/***/ }),
/* 20 */
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 21 */
/*!********************************************!*\
  !*** ./node_modules/fbjs/lib/invariant.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 2)))

/***/ }),
/* 22 */
/*!**********************************************!*\
  !*** ./node_modules/fbjs/lib/emptyObject.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 2)))

/***/ }),
/* 23 */
/*!************************************************!*\
  !*** ./node_modules/fbjs/lib/emptyFunction.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),
/* 24 */
/*!*****************************************!*\
  !*** ./node_modules/react-dom/index.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (process.env.NODE_ENV !== 'production') {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (process.env.NODE_ENV === 'production') {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(/*! ./cjs/react-dom.production.min.js */ 303);
} else {
  module.exports = __webpack_require__(/*! ./cjs/react-dom.development.js */ 306);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../process/browser.js */ 2)))

/***/ }),
/* 25 */
/*!********************************************!*\
  !*** ./node_modules/lodash/isUndefined.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports) {

/**
 * Checks if `value` is `undefined`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
 * @example
 *
 * _.isUndefined(void 0);
 * // => true
 *
 * _.isUndefined(null);
 * // => false
 */
function isUndefined(value) {
  return value === undefined;
}

module.exports = isUndefined;


/***/ }),
/* 26 */
/*!***************************************!*\
  !*** ./node_modules/lodash/pickBy.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(/*! ./_arrayMap */ 27),
    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ 75),
    basePickBy = __webpack_require__(/*! ./_basePickBy */ 215),
    getAllKeysIn = __webpack_require__(/*! ./_getAllKeysIn */ 54);

/**
 * Creates an object composed of the `object` properties `predicate` returns
 * truthy for. The predicate is invoked with two arguments: (value, key).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The source object.
 * @param {Function} [predicate=_.identity] The function invoked per property.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pickBy(object, _.isNumber);
 * // => { 'a': 1, 'c': 3 }
 */
function pickBy(object, predicate) {
  if (object == null) {
    return {};
  }
  var props = arrayMap(getAllKeysIn(object), function(prop) {
    return [prop];
  });
  predicate = baseIteratee(predicate);
  return basePickBy(object, props, function(value, path) {
    return predicate(value, path[0]);
  });
}

module.exports = pickBy;


/***/ }),
/* 27 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_arrayMap.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;


/***/ }),
/* 28 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_ListCache.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(/*! ./_listCacheClear */ 157),
    listCacheDelete = __webpack_require__(/*! ./_listCacheDelete */ 158),
    listCacheGet = __webpack_require__(/*! ./_listCacheGet */ 159),
    listCacheHas = __webpack_require__(/*! ./_listCacheHas */ 160),
    listCacheSet = __webpack_require__(/*! ./_listCacheSet */ 161);

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),
/* 29 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_assocIndexOf.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(/*! ./eq */ 30);

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),
/* 30 */
/*!***********************************!*\
  !*** ./node_modules/lodash/eq.js ***!
  \***********************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),
/* 31 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_nativeCreate.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ 9);

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;


/***/ }),
/* 32 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_getMapData.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__(/*! ./_isKeyable */ 181);

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;


/***/ }),
/* 33 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/_isIndex.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),
/* 34 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseUnary.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),
/* 35 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_nodeUtil.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ 77);

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/module.js */ 51)(module)))

/***/ }),
/* 36 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_isPrototype.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),
/* 37 */
/*!****************************************!*\
  !*** ./node_modules/lodash/_getTag.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__(/*! ./_DataView */ 201),
    Map = __webpack_require__(/*! ./_Map */ 44),
    Promise = __webpack_require__(/*! ./_Promise */ 202),
    Set = __webpack_require__(/*! ./_Set */ 203),
    WeakMap = __webpack_require__(/*! ./_WeakMap */ 204),
    baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 10),
    toSource = __webpack_require__(/*! ./_toSource */ 78);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;


/***/ }),
/* 38 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseGet.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ 17),
    toKey = __webpack_require__(/*! ./_toKey */ 18);

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;


/***/ }),
/* 39 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/isSymbol.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 10),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 7);

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ }),
/* 40 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/identity.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),
/* 41 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_assignValue.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ 95),
    eq = __webpack_require__(/*! ./eq */ 30);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;


/***/ }),
/* 42 */
/*!****************************************************************!*\
  !*** ./node_modules/react-slick/lib/utils/innerSliderUtils.js ***!
  \****************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.canUseDOM = exports.slidesOnLeft = exports.slidesOnRight = exports.siblingDirection = exports.getTotalSlides = exports.getPostClones = exports.getPreClones = exports.getTrackLeft = exports.getTrackAnimateCSS = exports.getTrackCSS = exports.checkSpecKeys = exports.getSlideCount = exports.checkNavigable = exports.getNavigableIndexes = exports.swipeEnd = exports.swipeMove = exports.swipeStart = exports.keyHandler = exports.changeSlide = exports.slideHandler = exports.initializedState = exports.extractObject = exports.canGoNext = exports.getSwipeDirection = exports.getHeight = exports.getWidth = exports.lazySlidesOnRight = exports.lazySlidesOnLeft = exports.lazyEndIndex = exports.lazyStartIndex = exports.getRequiredLazySlides = exports.getOnDemandLazySlides = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(/*! react */ 3);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(/*! react-dom */ 24);

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getOnDemandLazySlides = exports.getOnDemandLazySlides = function getOnDemandLazySlides(spec) {
  var onDemandSlides = [];
  var startIndex = lazyStartIndex(spec);
  var endIndex = lazyEndIndex(spec);
  for (var slideIndex = startIndex; slideIndex < endIndex; slideIndex++) {
    if (spec.lazyLoadedList.indexOf(slideIndex) < 0) {
      onDemandSlides.push(slideIndex);
    }
  }
  return onDemandSlides;
};

// return list of slides that need to be present
var getRequiredLazySlides = exports.getRequiredLazySlides = function getRequiredLazySlides(spec) {
  var requiredSlides = [];
  var startIndex = lazyStartIndex(spec);
  var endIndex = lazyEndIndex(spec);
  for (var slideIndex = startIndex; slideIndex < endIndex; slideIndex++) {
    requiredSlides.push(slideIndex);
  }
  return requiredSlides;
};

// startIndex that needs to be present
var lazyStartIndex = exports.lazyStartIndex = function lazyStartIndex(spec) {
  return spec.currentSlide - lazySlidesOnLeft(spec);
};
var lazyEndIndex = exports.lazyEndIndex = function lazyEndIndex(spec) {
  return spec.currentSlide + lazySlidesOnRight(spec);
};
var lazySlidesOnLeft = exports.lazySlidesOnLeft = function lazySlidesOnLeft(spec) {
  return spec.centerMode ? Math.floor(spec.slidesToShow / 2) + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : 0;
};
var lazySlidesOnRight = exports.lazySlidesOnRight = function lazySlidesOnRight(spec) {
  return spec.centerMode ? Math.floor((spec.slidesToShow - 1) / 2) + 1 + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : spec.slidesToShow;
};

// get width of an element
var getWidth = exports.getWidth = function getWidth(elem) {
  return elem && elem.offsetWidth || 0;
};
var getHeight = exports.getHeight = function getHeight(elem) {
  return elem && elem.offsetHeight || 0;
};
var getSwipeDirection = exports.getSwipeDirection = function getSwipeDirection(touchObject) {
  var verticalSwiping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var xDist, yDist, r, swipeAngle;
  xDist = touchObject.startX - touchObject.curX;
  yDist = touchObject.startY - touchObject.curY;
  r = Math.atan2(yDist, xDist);
  swipeAngle = Math.round(r * 180 / Math.PI);
  if (swipeAngle < 0) {
    swipeAngle = 360 - Math.abs(swipeAngle);
  }
  if (swipeAngle <= 45 && swipeAngle >= 0 || swipeAngle <= 360 && swipeAngle >= 315) {
    return "left";
  }
  if (swipeAngle >= 135 && swipeAngle <= 225) {
    return "right";
  }
  if (verticalSwiping === true) {
    if (swipeAngle >= 35 && swipeAngle <= 135) {
      return "up";
    } else {
      return "down";
    }
  }

  return "vertical";
};

// whether or not we can go next
var canGoNext = exports.canGoNext = function canGoNext(spec) {
  var canGo = true;
  if (!spec.infinite) {
    if (spec.centerMode && spec.currentSlide >= spec.slideCount - 1) {
      canGo = false;
    } else if (spec.slideCount <= spec.slidesToShow || spec.currentSlide >= spec.slideCount - spec.slidesToShow) {
      canGo = false;
    }
  }
  return canGo;
};

// given an object and a list of keys, return new object with given keys
var extractObject = exports.extractObject = function extractObject(spec, keys) {
  var newObject = {};
  keys.forEach(function (key) {
    return newObject[key] = spec[key];
  });
  return newObject;
};

// get initialized state
var initializedState = exports.initializedState = function initializedState(spec) {
  // spec also contains listRef, trackRef
  var slideCount = _react2.default.Children.count(spec.children);
  var listWidth = Math.ceil(getWidth(_reactDom2.default.findDOMNode(spec.listRef)));
  var trackWidth = Math.ceil(getWidth(_reactDom2.default.findDOMNode(spec.trackRef)));
  var slideWidth = void 0;
  if (!spec.vertical) {
    var centerPaddingAdj = spec.centerMode && parseInt(spec.centerPadding) * 2;
    if (typeof spec.centerPadding === "string" && spec.centerPadding.slice(-1) === "%") {
      centerPaddingAdj *= listWidth / 100;
    }
    slideWidth = Math.ceil((listWidth - centerPaddingAdj) / spec.slidesToShow);
  } else {
    slideWidth = listWidth;
  }
  var slideHeight = _reactDom2.default.findDOMNode(spec.listRef) && getHeight(_reactDom2.default.findDOMNode(spec.listRef).querySelector('[data-index="0"]'));
  var listHeight = slideHeight * spec.slidesToShow;
  var currentSlide = spec.currentSlide === undefined ? spec.initialSlide : spec.currentSlide;
  if (spec.rtl && spec.currentSlide === undefined) {
    currentSlide = slideCount - 1 - spec.initialSlide;
  }
  var lazyLoadedList = spec.lazyLoadedList || [];
  var slidesToLoad = getOnDemandLazySlides({ currentSlide: currentSlide, lazyLoadedList: lazyLoadedList }, spec);
  lazyLoadedList.concat(slidesToLoad);

  var state = {
    slideCount: slideCount,
    slideWidth: slideWidth,
    listWidth: listWidth,
    trackWidth: trackWidth,
    currentSlide: currentSlide,
    slideHeight: slideHeight,
    listHeight: listHeight,
    lazyLoadedList: lazyLoadedList
  };

  if (spec.autoplaying === null && spec.autoplay) {
    state["autoplaying"] = "playing";
  }

  return state;
};

var slideHandler = exports.slideHandler = function slideHandler(spec) {
  var waitForAnimate = spec.waitForAnimate,
      animating = spec.animating,
      fade = spec.fade,
      infinite = spec.infinite,
      index = spec.index,
      slideCount = spec.slideCount,
      lazyLoadedList = spec.lazyLoadedList,
      lazyLoad = spec.lazyLoad,
      currentSlide = spec.currentSlide,
      centerMode = spec.centerMode,
      slidesToScroll = spec.slidesToScroll,
      slidesToShow = spec.slidesToShow,
      useCSS = spec.useCSS;

  if (waitForAnimate && animating) return {};
  var animationSlide = index,
      finalSlide = void 0,
      animationLeft = void 0,
      finalLeft = void 0;
  var state = {},
      nextState = {};
  if (fade) {
    if (!infinite && (index < 0 || index >= slideCount)) return {};
    if (index < 0) {
      animationSlide = index + slideCount;
    } else if (index >= slideCount) {
      animationSlide = index - slideCount;
    }
    if (lazyLoad && lazyLoadedList.indexOf(animationSlide) < 0) {
      lazyLoadedList.push(animationSlide);
    }
    state = {
      animating: true,
      currentSlide: animationSlide,
      lazyLoadedList: lazyLoadedList
    };
    nextState = { animating: false };
  } else {
    finalSlide = animationSlide;
    if (animationSlide < 0) {
      finalSlide = animationSlide + slideCount;
      if (!infinite) finalSlide = 0;else if (slideCount % slidesToScroll !== 0) finalSlide = slideCount - slideCount % slidesToScroll;
    } else if (!canGoNext(spec) && animationSlide > currentSlide) {
      animationSlide = finalSlide = currentSlide;
    } else if (centerMode && animationSlide >= slideCount) {
      animationSlide = infinite ? slideCount : slideCount - 1;
      finalSlide = infinite ? 0 : slideCount - 1;
    } else if (animationSlide >= slideCount) {
      finalSlide = animationSlide - slideCount;
      if (!infinite) finalSlide = slideCount - slidesToShow;else if (slideCount % slidesToScroll !== 0) finalSlide = 0;
    }
    animationLeft = getTrackLeft(_extends({}, spec, { slideIndex: animationSlide }));
    finalLeft = getTrackLeft(_extends({}, spec, { slideIndex: finalSlide }));
    if (!infinite) {
      if (animationLeft === finalLeft) animationSlide = finalSlide;
      animationLeft = finalLeft;
    }
    lazyLoad && lazyLoadedList.concat(getOnDemandLazySlides(_extends({}, spec, { currentSlide: animationSlide })));
    if (!useCSS) {
      state = {
        currentSlide: finalSlide,
        trackStyle: getTrackCSS(_extends({}, spec, { left: finalLeft })),
        lazyLoadedList: lazyLoadedList
      };
    } else {
      state = {
        animating: true,
        currentSlide: finalSlide,
        trackStyle: getTrackAnimateCSS(_extends({}, spec, { left: animationLeft })),
        lazyLoadedList: lazyLoadedList
      };
      nextState = {
        animating: false,
        currentSlide: finalSlide,
        trackStyle: getTrackCSS(_extends({}, spec, { left: finalLeft })),
        swipeLeft: null
      };
    }
  }
  return { state: state, nextState: nextState };
};

var changeSlide = exports.changeSlide = function changeSlide(spec, options) {
  var indexOffset, previousInt, slideOffset, unevenOffset, targetSlide;
  var slidesToScroll = spec.slidesToScroll,
      slidesToShow = spec.slidesToShow,
      slideCount = spec.slideCount,
      currentSlide = spec.currentSlide,
      lazyLoad = spec.lazyLoad,
      infinite = spec.infinite;

  unevenOffset = slideCount % slidesToScroll !== 0;
  indexOffset = unevenOffset ? 0 : (slideCount - currentSlide) % slidesToScroll;

  if (options.message === "previous") {
    slideOffset = indexOffset === 0 ? slidesToScroll : slidesToShow - indexOffset;
    targetSlide = currentSlide - slideOffset;
    if (lazyLoad && !infinite) {
      previousInt = currentSlide - slideOffset;
      targetSlide = previousInt === -1 ? slideCount - 1 : previousInt;
    }
  } else if (options.message === "next") {
    slideOffset = indexOffset === 0 ? slidesToScroll : indexOffset;
    targetSlide = currentSlide + slideOffset;
    if (lazyLoad && !infinite) {
      targetSlide = (currentSlide + slidesToScroll) % slideCount + indexOffset;
    }
  } else if (options.message === "dots") {
    // Click on dots
    targetSlide = options.index * options.slidesToScroll;
    if (targetSlide === options.currentSlide) {
      return null;
    }
  } else if (options.message === "children") {
    // Click on the slides
    targetSlide = options.index;
    if (targetSlide === options.currentSlide) {
      return null;
    }
    if (infinite) {
      var direction = siblingDirection(_extends({}, spec, { targetSlide: targetSlide }));
      if (targetSlide > options.currentSlide && direction === "left") {
        targetSlide = targetSlide - slideCount;
      } else if (targetSlide < options.currentSlide && direction === "right") {
        targetSlide = targetSlide + slideCount;
      }
    }
  } else if (options.message === "index") {
    targetSlide = Number(options.index);
    if (targetSlide === options.currentSlide) {
      return null;
    }
  }
  return targetSlide;
};
var keyHandler = exports.keyHandler = function keyHandler(e, accessibility, rtl) {
  if (e.target.tagName.match("TEXTAREA|INPUT|SELECT") || !accessibility) return "";
  if (e.keyCode === 37) return rtl ? "next" : "previous";
  if (e.keyCode === 39) return rtl ? "previous" : "next";
  return "";
};

var swipeStart = exports.swipeStart = function swipeStart(e, swipe, draggable) {
  e.target.tagName === "IMG" && e.preventDefault();
  if (!swipe || !draggable && e.type.indexOf("mouse") !== -1) return "";
  return {
    dragging: true,
    touchObject: {
      startX: e.touches ? e.touches[0].pageX : e.clientX,
      startY: e.touches ? e.touches[0].pageY : e.clientY,
      curX: e.touches ? e.touches[0].pageX : e.clientX,
      curY: e.touches ? e.touches[0].pageY : e.clientY
    }
  };
};
var swipeMove = exports.swipeMove = function swipeMove(e, spec) {
  // spec also contains, trackRef and slideIndex
  var scrolling = spec.scrolling,
      animating = spec.animating,
      vertical = spec.vertical,
      swipeToSlide = spec.swipeToSlide,
      verticalSwiping = spec.verticalSwiping,
      rtl = spec.rtl,
      currentSlide = spec.currentSlide,
      edgeFriction = spec.edgeFriction,
      edgeDragged = spec.edgeDragged,
      onEdge = spec.onEdge,
      swiped = spec.swiped,
      swiping = spec.swiping,
      slideCount = spec.slideCount,
      slidesToScroll = spec.slidesToScroll,
      infinite = spec.infinite,
      touchObject = spec.touchObject,
      swipeEvent = spec.swipeEvent,
      listHeight = spec.listHeight,
      listWidth = spec.listWidth;

  if (scrolling) return;
  if (animating) return e.preventDefault();
  if (vertical && swipeToSlide && verticalSwiping) e.preventDefault();
  var swipeLeft = void 0,
      state = {};
  var curLeft = getTrackLeft(spec);
  touchObject.curX = e.touches ? e.touches[0].pageX : e.clientX;
  touchObject.curY = e.touches ? e.touches[0].pageY : e.clientY;
  touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));
  var verticalSwipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curY - touchObject.startY, 2)));
  if (!verticalSwiping && !swiping && verticalSwipeLength > 10) {
    return { scrolling: true };
  }
  if (verticalSwiping) touchObject.swipeLength = verticalSwipeLength;
  var positionOffset = (!rtl ? 1 : -1) * (touchObject.curX > touchObject.startX ? 1 : -1);
  if (verticalSwiping) positionOffset = touchObject.curY > touchObject.startY ? 1 : -1;

  var dotCount = Math.ceil(slideCount / slidesToScroll);
  var swipeDirection = getSwipeDirection(spec.touchObject, verticalSwiping);
  var touchSwipeLength = touchObject.swipeLength;
  if (!infinite) {
    if (currentSlide === 0 && swipeDirection === "right" || currentSlide + 1 >= dotCount && swipeDirection === "left" || !canGoNext(spec) && swipeDirection === "left") {
      touchSwipeLength = touchObject.swipeLength * edgeFriction;
      if (edgeDragged === false && onEdge) {
        onEdge(swipeDirection);
        state["edgeDragged"] = true;
      }
    }
  }
  if (!swiped && swipeEvent) {
    swipeEvent(swipeDirection);
    state["swiped"] = true;
  }
  if (!vertical) {
    if (!rtl) {
      swipeLeft = curLeft + touchSwipeLength * positionOffset;
    } else {
      swipeLeft = curLeft - touchSwipeLength * positionOffset;
    }
  } else {
    swipeLeft = curLeft + touchSwipeLength * (listHeight / listWidth) * positionOffset;
  }
  if (verticalSwiping) {
    swipeLeft = curLeft + touchSwipeLength * positionOffset;
  }
  state = _extends({}, state, {
    touchObject: touchObject,
    swipeLeft: swipeLeft,
    trackStyle: getTrackCSS(_extends({}, spec, { left: swipeLeft }))
  });
  if (Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8) {
    return state;
  }
  if (touchObject.swipeLength > 10) {
    state["swiping"] = true;
    e.preventDefault();
  }
  return state;
};
var swipeEnd = exports.swipeEnd = function swipeEnd(e, spec) {
  var dragging = spec.dragging,
      swipe = spec.swipe,
      touchObject = spec.touchObject,
      listWidth = spec.listWidth,
      touchThreshold = spec.touchThreshold,
      verticalSwiping = spec.verticalSwiping,
      listHeight = spec.listHeight,
      currentSlide = spec.currentSlide,
      swipeToSlide = spec.swipeToSlide,
      scrolling = spec.scrolling,
      onSwipe = spec.onSwipe;

  if (!dragging) {
    if (swipe) e.preventDefault();
    return {};
  }
  var minSwipe = verticalSwiping ? listHeight / touchThreshold : listWidth / touchThreshold;
  var swipeDirection = getSwipeDirection(touchObject, verticalSwiping);
  // reset the state of touch related state variables.
  var state = {
    dragging: false,
    edgeDragged: false,
    scrolling: false,
    swiping: false,
    swiped: false,
    swipeLeft: null,
    touchObject: {}
  };
  if (scrolling) {
    return state;
  }
  if (!touchObject.swipeLength) {
    return state;
  }
  if (touchObject.swipeLength > minSwipe) {
    e.preventDefault();
    if (onSwipe) {
      onSwipe(swipeDirection);
    }
    var slideCount = void 0,
        newSlide = void 0;
    switch (swipeDirection) {
      case "left":
      case "up":
        newSlide = currentSlide + getSlideCount(spec);
        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;
        state["currentDirection"] = 0;
        break;
      case "right":
      case "down":
        newSlide = currentSlide - getSlideCount(spec);
        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;
        state["currentDirection"] = 1;
        break;
      default:
        slideCount = currentSlide;
    }
    state["triggerSlideHandler"] = slideCount;
  } else {
    // Adjust the track back to it's original position.
    var currentLeft = getTrackLeft(spec);
    state["trackStyle"] = getTrackAnimateCSS(_extends({}, spec, { left: currentLeft }));
  }
  return state;
};
var getNavigableIndexes = exports.getNavigableIndexes = function getNavigableIndexes(spec) {
  var max = spec.infinite ? spec.slideCount * 2 : spec.slideCount;
  var breakpoint = spec.infinite ? spec.slidesToShow * -1 : 0;
  var counter = spec.infinite ? spec.slidesToShow * -1 : 0;
  var indexes = [];
  while (breakpoint < max) {
    indexes.push(breakpoint);
    breakpoint = counter + spec.slidesToScroll;
    counter += Math.min(spec.slidesToScroll, spec.slidesToShow);
  }
  return indexes;
};
var checkNavigable = exports.checkNavigable = function checkNavigable(spec, index) {
  var navigables = getNavigableIndexes(spec);
  var prevNavigable = 0;
  if (index > navigables[navigables.length - 1]) {
    index = navigables[navigables.length - 1];
  } else {
    for (var n in navigables) {
      if (index < navigables[n]) {
        index = prevNavigable;
        break;
      }
      prevNavigable = navigables[n];
    }
  }
  return index;
};
var getSlideCount = exports.getSlideCount = function getSlideCount(spec) {
  var centerOffset = spec.centerMode ? spec.slideWidth * Math.floor(spec.slidesToShow / 2) : 0;
  if (spec.swipeToSlide) {
    var swipedSlide = void 0;
    var slickList = _reactDom2.default.findDOMNode(spec.listRef);
    var slides = slickList.querySelectorAll(".slick-slide");
    Array.from(slides).every(function (slide) {
      if (!spec.vertical) {
        if (slide.offsetLeft - centerOffset + getWidth(slide) / 2 > spec.swipeLeft * -1) {
          swipedSlide = slide;
          return false;
        }
      } else {
        if (slide.offsetTop + getHeight(slide) / 2 > spec.swipeLeft * -1) {
          swipedSlide = slide;
          return false;
        }
      }

      return true;
    });

    if (!swipedSlide) {
      return 0;
    }
    var currentIndex = spec.rtl === true ? spec.slideCount - spec.currentSlide : spec.currentSlide;
    var slidesTraversed = Math.abs(swipedSlide.dataset.index - currentIndex) || 1;
    return slidesTraversed;
  } else {
    return spec.slidesToScroll;
  }
};

var checkSpecKeys = exports.checkSpecKeys = function checkSpecKeys(spec, keysArray) {
  return keysArray.reduce(function (value, key) {
    return value && spec.hasOwnProperty(key);
  }, true) ? null : console.error("Keys Missing:", spec);
};

var getTrackCSS = exports.getTrackCSS = function getTrackCSS(spec) {
  checkSpecKeys(spec, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth"]);
  var trackWidth = void 0,
      trackHeight = void 0;
  var trackChildren = spec.slideCount + 2 * spec.slidesToShow;
  if (!spec.vertical) {
    trackWidth = getTotalSlides(spec) * spec.slideWidth;
  } else {
    trackHeight = trackChildren * spec.slideHeight;
  }
  var style = {
    opacity: 1,
    transition: "",
    WebkitTransition: ""
  };
  if (spec.useTransform) {
    var WebkitTransform = !spec.vertical ? "translate3d(" + spec.left + "px, 0px, 0px)" : "translate3d(0px, " + spec.left + "px, 0px)";
    var transform = !spec.vertical ? "translate3d(" + spec.left + "px, 0px, 0px)" : "translate3d(0px, " + spec.left + "px, 0px)";
    var msTransform = !spec.vertical ? "translateX(" + spec.left + "px)" : "translateY(" + spec.left + "px)";
    style = _extends({}, style, {
      WebkitTransform: WebkitTransform,
      transform: transform,
      msTransform: msTransform
    });
  } else {
    if (spec.vertical) {
      style["top"] = spec.left;
    } else {
      style["left"] = spec.left;
    }
  }
  if (spec.fade) style = { opacity: 1 };
  if (trackWidth) style.width = trackWidth;
  if (trackHeight) style.height = trackHeight;

  // Fallback for IE8
  if (window && !window.addEventListener && window.attachEvent) {
    if (!spec.vertical) {
      style.marginLeft = spec.left + "px";
    } else {
      style.marginTop = spec.left + "px";
    }
  }

  return style;
};
var getTrackAnimateCSS = exports.getTrackAnimateCSS = function getTrackAnimateCSS(spec) {
  checkSpecKeys(spec, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth", "speed", "cssEase"]);
  var style = getTrackCSS(spec);
  // useCSS is true by default so it can be undefined
  if (spec.useTransform) {
    style.WebkitTransition = "-webkit-transform " + spec.speed + "ms " + spec.cssEase;
    style.transition = "transform " + spec.speed + "ms " + spec.cssEase;
  } else {
    if (spec.vertical) {
      style.transition = "top " + spec.speed + "ms " + spec.cssEase;
    } else {
      style.transition = "left " + spec.speed + "ms " + spec.cssEase;
    }
  }
  return style;
};
var getTrackLeft = exports.getTrackLeft = function getTrackLeft(spec) {
  if (spec.unslick) {
    return 0;
  }

  checkSpecKeys(spec, ["slideIndex", "trackRef", "infinite", "centerMode", "slideCount", "slidesToShow", "slidesToScroll", "slideWidth", "listWidth", "variableWidth", "slideHeight"]);

  var slideIndex = spec.slideIndex,
      trackRef = spec.trackRef,
      infinite = spec.infinite,
      centerMode = spec.centerMode,
      slideCount = spec.slideCount,
      slidesToShow = spec.slidesToShow,
      slidesToScroll = spec.slidesToScroll,
      slideWidth = spec.slideWidth,
      listWidth = spec.listWidth,
      variableWidth = spec.variableWidth,
      slideHeight = spec.slideHeight,
      fade = spec.fade,
      vertical = spec.vertical;


  var slideOffset = 0;
  var targetLeft;
  var targetSlide;
  var verticalOffset = 0;

  if (fade || spec.slideCount === 1) {
    return 0;
  }

  var slidesToOffset = 0;
  if (infinite) {
    slidesToOffset = -getPreClones(spec); // bring active slide to the beginning of visual area
    // if next scroll doesn't have enough children, just reach till the end of original slides instead of shifting slidesToScroll children
    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {
      slidesToOffset = -(slideIndex > slideCount ? slidesToShow - (slideIndex - slideCount) : slideCount % slidesToScroll);
    }
    // shift current slide to center of the frame
    if (centerMode) {
      slidesToOffset += parseInt(slidesToShow / 2);
    }
  } else {
    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {
      slidesToOffset = slidesToShow - slideCount % slidesToScroll;
    }
    if (centerMode) {
      slidesToOffset = parseInt(slidesToShow / 2);
    }
  }
  slideOffset = slidesToOffset * slideWidth;
  verticalOffset = slidesToOffset * slideHeight;

  if (!vertical) {
    targetLeft = slideIndex * slideWidth * -1 + slideOffset;
  } else {
    targetLeft = slideIndex * slideHeight * -1 + verticalOffset;
  }

  if (variableWidth === true) {
    var targetSlideIndex;
    var trackElem = _reactDom2.default.findDOMNode(trackRef);
    targetSlideIndex = slideIndex + getPreClones(spec);
    targetSlide = trackElem && trackElem.childNodes[targetSlideIndex];
    targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0;
    if (centerMode === true) {
      targetSlideIndex = infinite ? slideIndex + getPreClones(spec) : slideIndex;
      targetSlide = trackElem && trackElem.children[targetSlideIndex];
      targetLeft = 0;
      for (var slide = 0; slide < targetSlideIndex; slide++) {
        targetLeft -= trackElem && trackElem.children[slide] && trackElem.children[slide].offsetWidth;
      }
      targetLeft -= parseInt(spec.centerPadding);
      targetLeft += targetSlide && (listWidth - targetSlide.offsetWidth) / 2;
    }
  }

  return targetLeft;
};

var getPreClones = exports.getPreClones = function getPreClones(spec) {
  if (spec.unslick || !spec.infinite) {
    return 0;
  }
  if (spec.variableWidth) {
    return spec.slideCount;
  }
  return spec.slidesToShow + (spec.centerMode ? 1 : 0);
};

var getPostClones = exports.getPostClones = function getPostClones(spec) {
  if (spec.unslick || !spec.infinite) {
    return 0;
  }
  return spec.slideCount;
};

var getTotalSlides = exports.getTotalSlides = function getTotalSlides(spec) {
  return spec.slideCount === 1 ? 1 : getPreClones(spec) + spec.slideCount + getPostClones(spec);
};
var siblingDirection = exports.siblingDirection = function siblingDirection(spec) {
  if (spec.targetSlide > spec.currentSlide) {
    if (spec.targetSlide > spec.currentSlide + slidesOnRight(spec)) {
      return "left";
    }
    return "right";
  } else {
    if (spec.targetSlide < spec.currentSlide - slidesOnLeft(spec)) {
      return "right";
    }
    return "left";
  }
};

var slidesOnRight = exports.slidesOnRight = function slidesOnRight(_ref) {
  var slidesToShow = _ref.slidesToShow,
      centerMode = _ref.centerMode,
      rtl = _ref.rtl,
      centerPadding = _ref.centerPadding;

  // returns no of slides on the right of active slide
  if (centerMode) {
    var right = (slidesToShow - 1) / 2 + 1;
    if (parseInt(centerPadding) > 0) right += 1;
    if (rtl && slidesToShow % 2 === 0) right += 1;
    return right;
  }
  if (rtl) {
    return 0;
  }
  return slidesToShow - 1;
};

var slidesOnLeft = exports.slidesOnLeft = function slidesOnLeft(_ref2) {
  var slidesToShow = _ref2.slidesToShow,
      centerMode = _ref2.centerMode,
      rtl = _ref2.rtl,
      centerPadding = _ref2.centerPadding;

  // returns no of slides on the left of active slide
  if (centerMode) {
    var left = (slidesToShow - 1) / 2 + 1;
    if (parseInt(centerPadding) > 0) left += 1;
    if (!rtl && slidesToShow % 2 === 0) left += 1;
    return left;
  }
  if (rtl) {
    return slidesToShow - 1;
  }
  return 0;
};

var canUseDOM = exports.canUseDOM = function canUseDOM() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
};

/***/ }),
/* 43 */
/*!***************************************!*\
  !*** ./node_modules/lodash/_Stack.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ 28),
    stackClear = __webpack_require__(/*! ./_stackClear */ 162),
    stackDelete = __webpack_require__(/*! ./_stackDelete */ 163),
    stackGet = __webpack_require__(/*! ./_stackGet */ 164),
    stackHas = __webpack_require__(/*! ./_stackHas */ 165),
    stackSet = __webpack_require__(/*! ./_stackSet */ 166);

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;


/***/ }),
/* 44 */
/*!*************************************!*\
  !*** ./node_modules/lodash/_Map.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ 9),
    root = __webpack_require__(/*! ./_root */ 4);

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),
/* 45 */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 46 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_MapCache.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__(/*! ./_mapCacheClear */ 173),
    mapCacheDelete = __webpack_require__(/*! ./_mapCacheDelete */ 180),
    mapCacheGet = __webpack_require__(/*! ./_mapCacheGet */ 182),
    mapCacheHas = __webpack_require__(/*! ./_mapCacheHas */ 183),
    mapCacheSet = __webpack_require__(/*! ./_mapCacheSet */ 184);

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;


/***/ }),
/* 47 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arrayPush.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;


/***/ }),
/* 48 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_getSymbols.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(/*! ./_arrayFilter */ 195),
    stubArray = __webpack_require__(/*! ./stubArray */ 84);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;


/***/ }),
/* 49 */
/*!********************************************!*\
  !*** ./node_modules/lodash/isArguments.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(/*! ./_baseIsArguments */ 196),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 7);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),
/* 50 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/isBuffer.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(/*! ./_root */ 4),
    stubFalse = __webpack_require__(/*! ./stubFalse */ 197);

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/module.js */ 51)(module)))

/***/ }),
/* 51 */
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 52 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/isLength.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),
/* 53 */
/*!***************************************!*\
  !*** ./node_modules/lodash/_isKey.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(/*! ./isArray */ 6),
    isSymbol = __webpack_require__(/*! ./isSymbol */ 39);

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;


/***/ }),
/* 54 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getAllKeysIn.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ 83),
    getSymbolsIn = __webpack_require__(/*! ./_getSymbolsIn */ 97),
    keysIn = __webpack_require__(/*! ./keysIn */ 98);

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;


/***/ }),
/* 55 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getPrototype.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(/*! ./_overArg */ 88);

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;


/***/ }),
/* 56 */
/*!*****************************************************!*\
  !*** ./src/blocks/post/components/FeaturedImage.js ***!
  \*****************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var decodeEntities = wp.htmlEntities.decodeEntities;

var FeaturedImage = function (_React$Component) {
	_inherits(FeaturedImage, _React$Component);

	function FeaturedImage() {
		_classCallCheck(this, FeaturedImage);

		return _possibleConstructorReturn(this, (FeaturedImage.__proto__ || Object.getPrototypeOf(FeaturedImage)).apply(this, arguments));
	}

	_createClass(FeaturedImage, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    post = _props.post,
			    attributes = _props.attributes;


			var target = attributes.newTab ? "_blank" : "_self";

			if (attributes.displayPostImage && undefined !== post.featured_image_src && attributes.imgSize && post.featured_image_src[attributes.imgSize]) {
				var src = post.featured_image_src[attributes.imgSize];

				return wp.element.createElement(
					"div",
					{ className: "uagb-post__image" },
					wp.element.createElement(
						"a",
						{ href: post.link, target: target, rel: "noopener noreferrer" },
						wp.element.createElement("img", {
							src: src[0],
							alt: decodeEntities(post.title.rendered.trim()) || __("(Untitled)")
						})
					)
				);
			} else {

				return null;
			}
		}
	}]);

	return FeaturedImage;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (FeaturedImage);

/***/ }),
/* 57 */
/*!*********************************************!*\
  !*** ./src/blocks/post/components/Title.js ***!
  \*********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var decodeEntities = wp.htmlEntities.decodeEntities;
var __ = wp.i18n.__;

var Title = function (_React$Component) {
		_inherits(Title, _React$Component);

		function Title() {
				_classCallCheck(this, Title);

				return _possibleConstructorReturn(this, (Title.__proto__ || Object.getPrototypeOf(Title)).apply(this, arguments));
		}

		_createClass(Title, [{
				key: "render",
				value: function render() {
						var _props = this.props,
						    post = _props.post,
						    attributes = _props.attributes;


						var Tag = attributes.titleTag;

						var target = attributes.newTab ? "_blank" : "_self";

						return wp.element.createElement(
								Tag,
								{ className: "uagb-post__title" },
								wp.element.createElement(
										"a",
										{ href: post.link, target: target, rel: "noopener noreferrer" },
										decodeEntities(post.title.rendered.trim()) || __("(Untitled)")
								)
						);
				}
		}]);

		return Title;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Title);

/***/ }),
/* 58 */
/*!********************************************!*\
  !*** ./src/blocks/post/components/Meta.js ***!
  \********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$date = wp.date,
    dateI18n = _wp$date.dateI18n,
    format = _wp$date.format,
    __experimentalGetSettings = _wp$date.__experimentalGetSettings;

var Meta = function (_React$Component) {
	_inherits(Meta, _React$Component);

	function Meta() {
		_classCallCheck(this, Meta);

		return _possibleConstructorReturn(this, (Meta.__proto__ || Object.getPrototypeOf(Meta)).apply(this, arguments));
	}

	_createClass(Meta, [{
		key: 'render',
		value: function render() {
			var _props = this.props,
			    post = _props.post,
			    attributes = _props.attributes;


			var dateFormat = __experimentalGetSettings().formats.date;

			return wp.element.createElement(
				'div',
				{ className: 'uagb-post-grid-byline' },
				attributes.displayPostAuthor && undefined !== post.author_info && wp.element.createElement(
					'span',
					{ className: 'uagb-post__author' },
					wp.element.createElement('span', { className: 'dashicons-admin-users dashicons' }),
					wp.element.createElement(
						'a',
						{ target: '_blank', href: post.author_info.author_link, rel: 'noopener noreferrer' },
						post.author_info.display_name
					)
				),
				attributes.displayPostDate && post.date_gmt && wp.element.createElement(
					'time',
					{ dateTime: format("c", post.date_gmt), className: 'uagb-post__date' },
					wp.element.createElement('span', { className: 'dashicons-calendar dashicons' }),
					dateI18n(dateFormat, post.date_gmt)
				),
				attributes.displayPostComment && undefined !== post.comment_info && wp.element.createElement(
					'span',
					{ className: 'uagb-post__comment' },
					wp.element.createElement('span', { className: 'dashicons-admin-comments dashicons' }),
					post.comment_info
				)
			);
		}
	}]);

	return Meta;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Meta);

/***/ }),
/* 59 */
/*!***********************************************!*\
  !*** ./src/blocks/post/components/Excerpt.js ***!
  \***********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_truncate__ = __webpack_require__(/*! lodash/truncate */ 220);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_truncate___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_truncate__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var Excerpt = function (_React$Component) {
	_inherits(Excerpt, _React$Component);

	function Excerpt() {
		_classCallCheck(this, Excerpt);

		return _possibleConstructorReturn(this, (Excerpt.__proto__ || Object.getPrototypeOf(Excerpt)).apply(this, arguments));
	}

	_createClass(Excerpt, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    post = _props.post,
			    attributes = _props.attributes;


			if (post.excerpt == undefined) {
				return null;
			}

			var words = post.excerpt.split(" ");

			var excerpt = post.excerpt;

			var exLen = attributes.excerptLength ? attributes.excerptLength : 25;

			if (exLen >= words.length) {
				excerpt = post.excerpt;
			} else {
				var truncated = words.slice(0, exLen);
				excerpt = truncated.join(" ");
				excerpt += " ...";
			}

			if (attributes.displayPostExcerpt) {

				return wp.element.createElement(
					"div",
					{ className: "uagb-post__excerpt" },
					wp.element.createElement("div", { dangerouslySetInnerHTML: { __html: excerpt } })
				);
			} else {
				return null;
			}
		}
	}]);

	return Excerpt;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Excerpt);

/***/ }),
/* 60 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_hasUnicode.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsZWJ = '\\u200d';

/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

/**
 * Checks if `string` contains Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
 */
function hasUnicode(string) {
  return reHasUnicode.test(string);
}

module.exports = hasUnicode;


/***/ }),
/* 61 */
/*!**********************************************!*\
  !*** ./src/blocks/post/components/Button.js ***!
  \**********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;

var Button = function (_React$Component) {
	_inherits(Button, _React$Component);

	function Button() {
		_classCallCheck(this, Button);

		return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
	}

	_createClass(Button, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    post = _props.post,
			    attributes = _props.attributes;


			var target = attributes.newTab ? "_blank" : "_self";

			if (attributes.displayPostLink) {

				var cta_text = attributes.ctaText ? attributes.ctaText : __("Read More");

				return wp.element.createElement(
					"div",
					{ className: "uagb-post__cta" },
					wp.element.createElement(
						"a",
						{ className: "uagb-post__link uagb-text-link", href: post.link, target: target, rel: "noopener noreferrer" },
						cta_text
					)
				);
			} else {
				return null;
			}
		}
	}]);

	return Button;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Button);

/***/ }),
/* 62 */
/*!************************************!*\
  !*** ./src/blocks/post/styling.js ***!
  \************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Set inline styles.
 * @param  {object} props - The block object.
 * @return {object} The inline background type CSS.
 */

function styling(props, id) {
	var _selectors;

	var _props$attributes = props.attributes,
	    newTab = _props$attributes.newTab,
	    align = _props$attributes.align,
	    rowGap = _props$attributes.rowGap,
	    columnGap = _props$attributes.columnGap,
	    bgColor = _props$attributes.bgColor,
	    contentPadding = _props$attributes.contentPadding,
	    contentPaddingMobile = _props$attributes.contentPaddingMobile,
	    titleColor = _props$attributes.titleColor,
	    titleTag = _props$attributes.titleTag,
	    titleFontSize = _props$attributes.titleFontSize,
	    metaFontSize = _props$attributes.metaFontSize,
	    excerptFontSize = _props$attributes.excerptFontSize,
	    ctaFontSize = _props$attributes.ctaFontSize,
	    metaColor = _props$attributes.metaColor,
	    excerptColor = _props$attributes.excerptColor,
	    ctaColor = _props$attributes.ctaColor,
	    ctaBgColor = _props$attributes.ctaBgColor,
	    ctaHColor = _props$attributes.ctaHColor,
	    ctaBgHColor = _props$attributes.ctaBgHColor,
	    titleBottomSpace = _props$attributes.titleBottomSpace,
	    metaBottomSpace = _props$attributes.metaBottomSpace,
	    excerptBottomSpace = _props$attributes.excerptBottomSpace,
	    equalHeight = _props$attributes.equalHeight,
	    excerptLength = _props$attributes.excerptLength,
	    overlayOpacity = _props$attributes.overlayOpacity,
	    bgOverlayColor = _props$attributes.bgOverlayColor,
	    borderWidth = _props$attributes.borderWidth,
	    borderStyle = _props$attributes.borderStyle,
	    borderColor = _props$attributes.borderColor,
	    borderHColor = _props$attributes.borderHColor,
	    borderRadius = _props$attributes.borderRadius,
	    btnVPadding = _props$attributes.btnVPadding,
	    btnHPadding = _props$attributes.btnHPadding,
	    linkBox = _props$attributes.linkBox;


	var mobile_selectors = {};

	var selectors = (_selectors = {
		" .uagb-post__items": {
			"margin-right": -rowGap / 2 + "px",
			"margin-left": -rowGap / 2 + "px"
		},
		" .uagb-post__items article": {
			"padding-right": rowGap / 2 + "px",
			"padding-left": rowGap / 2 + "px",
			"margin-bottom": columnGap + "px"
		},
		" .uagb-post__inner-wrap": {
			"background": bgColor
		},
		" .uagb-post__text": {
			"padding": contentPadding + "px",
			"text-align": align
		},
		" .uagb-post__text .uagb-post__title": {
			"color": titleColor,
			"font-size": titleFontSize + "px",
			"margin-bottom": titleBottomSpace + "px"
		},
		" .uagb-post__text .uagb-post__title a": {
			"color": titleColor,
			"font-size": titleFontSize + "px"
		},
		" .uagb-post__text .uagb-post-grid-byline": {
			"color": metaColor,
			"font-size": metaFontSize + "px",
			"margin-bottom": metaBottomSpace + "px"
		},
		" .uagb-post__text .uagb-post-grid-byline .uagb-post__author": {
			"color": metaColor,
			"font-size": metaFontSize + "px"
		},
		" .uagb-post__text .uagb-post-grid-byline .uagb-post__author a": {
			"color": metaColor,
			"font-size": metaFontSize + "px"
		},
		" .uagb-post__text .uagb-post__excerpt": {
			"color": excerptColor,
			"font-size": excerptFontSize + "px",
			"margin-bottom": excerptBottomSpace + "px"
		},
		" .uagb-post__text .uagb-post__cta": {
			"color": ctaColor,
			"font-size": ctaFontSize + "px",
			"background": ctaBgColor,
			"border-width": borderWidth + "px",
			"border-radius": borderRadius + "px",
			"border-color": borderColor,
			"border-style": borderStyle
		},
		" .uagb-post__text .uagb-post__cta:hover": {
			"border-color": borderHColor
		},
		" .uagb-post__text .uagb-post__cta a": {
			"color": ctaColor,
			"font-size": ctaFontSize + "px",
			"padding": btnVPadding + "px " + btnHPadding + "px"
		}
	}, _defineProperty(_selectors, " .uagb-post__text .uagb-post__cta:hover", {
		"color": ctaHColor,
		"background": ctaBgHColor
	}), _defineProperty(_selectors, " .uagb-post__text .uagb-post__cta:hover a", {
		"color": ctaHColor
	}), _defineProperty(_selectors, " .uagb-post__image:before", {
		"background-color": bgOverlayColor,
		"opacity": overlayOpacity / 100
	}), _selectors);

	if (linkBox) {
		selectors[" .uagb-post__inner-wrap"]["cursor"] = "pointer";
	}

	mobile_selectors = {
		" .uagb-post__text": {
			"padding": contentPaddingMobile + "px"
		}
	};

	var styling_css = "";

	for (var i in selectors) {

		styling_css += "#" + id + "-" + props.clientId;

		styling_css += i + " { ";

		var sel = selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	styling_css += "@media only screen and (max-width: 767px) {";

	for (var i in mobile_selectors) {

		styling_css += "#" + id + "-" + props.clientId;

		styling_css += i + " { ";

		var sel = mobile_selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	styling_css += " }";

	return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (styling);

/***/ }),
/* 63 */
/*!************************************!*\
  !*** ./src/blocks/post/style.scss ***!
  \************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 64 */
/*!*************************************!*\
  !*** ./src/blocks/post/editor.scss ***!
  \*************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 65 */
/*!***********************************************!*\
  !*** ./node_modules/ev-emitter/ev-emitter.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * EvEmitter v1.1.0
 * Lil' event emitter
 * MIT License
 */

/* jshint unused: true, undef: true, strict: true */

( function( global, factory ) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, window */
  if ( true ) {
    // AMD - RequireJS
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS - Browserify, Webpack
    module.exports = factory();
  } else {
    // Browser globals
    global.EvEmitter = factory();
  }

}( typeof window != 'undefined' ? window : this, function() {

"use strict";

function EvEmitter() {}

var proto = EvEmitter.prototype;

proto.on = function( eventName, listener ) {
  if ( !eventName || !listener ) {
    return;
  }
  // set events hash
  var events = this._events = this._events || {};
  // set listeners array
  var listeners = events[ eventName ] = events[ eventName ] || [];
  // only add once
  if ( listeners.indexOf( listener ) == -1 ) {
    listeners.push( listener );
  }

  return this;
};

proto.once = function( eventName, listener ) {
  if ( !eventName || !listener ) {
    return;
  }
  // add event
  this.on( eventName, listener );
  // set once flag
  // set onceEvents hash
  var onceEvents = this._onceEvents = this._onceEvents || {};
  // set onceListeners object
  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};
  // set flag
  onceListeners[ listener ] = true;

  return this;
};

proto.off = function( eventName, listener ) {
  var listeners = this._events && this._events[ eventName ];
  if ( !listeners || !listeners.length ) {
    return;
  }
  var index = listeners.indexOf( listener );
  if ( index != -1 ) {
    listeners.splice( index, 1 );
  }

  return this;
};

proto.emitEvent = function( eventName, args ) {
  var listeners = this._events && this._events[ eventName ];
  if ( !listeners || !listeners.length ) {
    return;
  }
  // copy over to avoid interference if .off() in listener
  listeners = listeners.slice(0);
  args = args || [];
  // once stuff
  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];

  for ( var i=0; i < listeners.length; i++ ) {
    var listener = listeners[i]
    var isOnce = onceListeners && onceListeners[ listener ];
    if ( isOnce ) {
      // remove listener
      // remove before trigger to prevent recursion
      this.off( eventName, listener );
      // unset once flag
      delete onceListeners[ listener ];
    }
    // trigger listener
    listener.apply( this, args );
  }

  return this;
};

proto.allOff = function() {
  delete this._events;
  delete this._onceEvents;
};

return EvEmitter;

}));


/***/ }),
/* 66 */
/*!*******************************************!*\
  !*** ./node_modules/get-size/get-size.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * getSize v2.0.3
 * measure size of elements
 * MIT license
 */

/* jshint browser: true, strict: true, undef: true, unused: true */
/* globals console: false */

( function( window, factory ) {
  /* jshint strict: false */ /* globals define, module */
  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory();
  } else {
    // browser global
    window.getSize = factory();
  }

})( window, function factory() {
'use strict';

// -------------------------- helpers -------------------------- //

// get a number from a string, not a percentage
function getStyleSize( value ) {
  var num = parseFloat( value );
  // not a percent like '100%', and a number
  var isValid = value.indexOf('%') == -1 && !isNaN( num );
  return isValid && num;
}

function noop() {}

var logError = typeof console == 'undefined' ? noop :
  function( message ) {
    console.error( message );
  };

// -------------------------- measurements -------------------------- //

var measurements = [
  'paddingLeft',
  'paddingRight',
  'paddingTop',
  'paddingBottom',
  'marginLeft',
  'marginRight',
  'marginTop',
  'marginBottom',
  'borderLeftWidth',
  'borderRightWidth',
  'borderTopWidth',
  'borderBottomWidth'
];

var measurementsLength = measurements.length;

function getZeroSize() {
  var size = {
    width: 0,
    height: 0,
    innerWidth: 0,
    innerHeight: 0,
    outerWidth: 0,
    outerHeight: 0
  };
  for ( var i=0; i < measurementsLength; i++ ) {
    var measurement = measurements[i];
    size[ measurement ] = 0;
  }
  return size;
}

// -------------------------- getStyle -------------------------- //

/**
 * getStyle, get style of element, check for Firefox bug
 * https://bugzilla.mozilla.org/show_bug.cgi?id=548397
 */
function getStyle( elem ) {
  var style = getComputedStyle( elem );
  if ( !style ) {
    logError( 'Style returned ' + style +
      '. Are you running this code in a hidden iframe on Firefox? ' +
      'See https://bit.ly/getsizebug1' );
  }
  return style;
}

// -------------------------- setup -------------------------- //

var isSetup = false;

var isBoxSizeOuter;

/**
 * setup
 * check isBoxSizerOuter
 * do on first getSize() rather than on page load for Firefox bug
 */
function setup() {
  // setup once
  if ( isSetup ) {
    return;
  }
  isSetup = true;

  // -------------------------- box sizing -------------------------- //

  /**
   * Chrome & Safari measure the outer-width on style.width on border-box elems
   * IE11 & Firefox<29 measures the inner-width
   */
  var div = document.createElement('div');
  div.style.width = '200px';
  div.style.padding = '1px 2px 3px 4px';
  div.style.borderStyle = 'solid';
  div.style.borderWidth = '1px 2px 3px 4px';
  div.style.boxSizing = 'border-box';

  var body = document.body || document.documentElement;
  body.appendChild( div );
  var style = getStyle( div );
  // round value for browser zoom. desandro/masonry#928
  isBoxSizeOuter = Math.round( getStyleSize( style.width ) ) == 200;
  getSize.isBoxSizeOuter = isBoxSizeOuter;

  body.removeChild( div );
}

// -------------------------- getSize -------------------------- //

function getSize( elem ) {
  setup();

  // use querySeletor if elem is string
  if ( typeof elem == 'string' ) {
    elem = document.querySelector( elem );
  }

  // do not proceed on non-objects
  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {
    return;
  }

  var style = getStyle( elem );

  // if hidden, everything is 0
  if ( style.display == 'none' ) {
    return getZeroSize();
  }

  var size = {};
  size.width = elem.offsetWidth;
  size.height = elem.offsetHeight;

  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';

  // get all measurements
  for ( var i=0; i < measurementsLength; i++ ) {
    var measurement = measurements[i];
    var value = style[ measurement ];
    var num = parseFloat( value );
    // any 'auto', 'medium' value will be 0
    size[ measurement ] = !isNaN( num ) ? num : 0;
  }

  var paddingWidth = size.paddingLeft + size.paddingRight;
  var paddingHeight = size.paddingTop + size.paddingBottom;
  var marginWidth = size.marginLeft + size.marginRight;
  var marginHeight = size.marginTop + size.marginBottom;
  var borderWidth = size.borderLeftWidth + size.borderRightWidth;
  var borderHeight = size.borderTopWidth + size.borderBottomWidth;

  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;

  // overwrite width and height if we can get it from style
  var styleWidth = getStyleSize( style.width );
  if ( styleWidth !== false ) {
    size.width = styleWidth +
      // add padding and border unless it's already including it
      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );
  }

  var styleHeight = getStyleSize( style.height );
  if ( styleHeight !== false ) {
    size.height = styleHeight +
      // add padding and border unless it's already including it
      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );
  }

  size.innerWidth = size.width - ( paddingWidth + borderWidth );
  size.innerHeight = size.height - ( paddingHeight + borderHeight );

  size.outerWidth = size.width + marginWidth;
  size.outerHeight = size.height + marginHeight;

  return size;
}

return getSize;

});


/***/ }),
/* 67 */
/*!**************************************************!*\
  !*** ./node_modules/lodash/_cloneArrayBuffer.js ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__(/*! ./_Uint8Array */ 81);

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;


/***/ }),
/* 68 */
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 69 */
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ 68);
  var loggedTypeFailures = {};

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          )

        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

module.exports = checkPropTypes;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../process/browser.js */ 2)))

/***/ }),
/* 70 */
/*!******************************************!*\
  !*** ./node_modules/fbjs/lib/warning.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var emptyFunction = __webpack_require__(/*! ./emptyFunction */ 23);

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 2)))

/***/ }),
/* 71 */
/*!**********************************************!*\
  !*** ./src/blocks/timeline/inline-styles.js ***!
  \**********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline styles.
 * @param  {object} props - The block object.
 * @return {object} The inline background type CSS.
 */
function contentTimelineStyle(props) {
	var _props$attributes = props.attributes,
	    dateBottomspace = _props$attributes.dateBottomspace,
	    backgroundColor = _props$attributes.backgroundColor,
	    separatorColor = _props$attributes.separatorColor,
	    separatorFillColor = _props$attributes.separatorFillColor,
	    separatorBg = _props$attributes.separatorBg,
	    separatorBorder = _props$attributes.separatorBorder,
	    borderFocus = _props$attributes.borderFocus,
	    verticalSpace = _props$attributes.verticalSpace,
	    horizontalSpace = _props$attributes.horizontalSpace,
	    separatorwidth = _props$attributes.separatorwidth,
	    borderwidth = _props$attributes.borderwidth,
	    connectorBgsize = _props$attributes.connectorBgsize,
	    borderRadius = _props$attributes.borderRadius,
	    bgPadding = _props$attributes.bgPadding,
	    width = _props$attributes.width,
	    readMoreText = _props$attributes.readMoreText,
	    icon = _props$attributes.icon,
	    iconColor = _props$attributes.iconColor,
	    dateFontsize = _props$attributes.dateFontsize,
	    dateColor = _props$attributes.dateColor,
	    iconSize = _props$attributes.iconSize,
	    iconFocus = _props$attributes.iconFocus,
	    iconBgFocus = _props$attributes.iconBgFocus,
	    block_id = _props$attributes.block_id,
	    headFontSize = _props$attributes.headFontSize,
	    align = _props$attributes.align,
	    headingColor = _props$attributes.headingColor,
	    headSpace = _props$attributes.headSpace,
	    subHeadFontSize = _props$attributes.subHeadFontSize,
	    subHeadingColor = _props$attributes.subHeadingColor;


	if (props.clientId) {
		var clientId = props.clientId;
	} else {
		var clientId = block_id;
	}

	var selectors = {};

	selectors[".uagb-timeline__heading"] = {
		"font-size": headFontSize + "px",
		"text-align": align,
		"color": headingColor
	};

	selectors[".uagb-timeline__heading a"] = {
		"font-size": headFontSize + "px",
		"text-align": align,
		"color": headingColor
	};

	selectors[".uagb-timeline__heading-text"] = {
		"margin-bottom": headSpace + "px"
	};

	selectors[".uagb-timeline-desc-content"] = {
		"font-size": subHeadFontSize + "px",
		"text-align": align,
		"color": subHeadingColor
	};
	selectors[".uagb-timeline__events-new"] = {
		"text-align": align
	};
	selectors[".uagb-timeline__date-inner"] = {
		"text-align": align
	};

	selectors[".uagb-timeline__center-block .uagb-timeline__day-right .uagb-timeline__arrow:after"] = {
		"border-left-color": backgroundColor
	};

	selectors[".uagb-timeline__right-block .uagb-timeline__day-right .uagb-timeline__arrow:after"] = {
		"border-left-color": backgroundColor
	};

	selectors[".uagb-timeline__center-block .uagb-timeline__day-left .uagb-timeline__arrow:after"] = {
		"border-right-color": backgroundColor
	};

	selectors[".uagb-timeline__left-block .uagb-timeline__day-left .uagb-timeline__arrow:after"] = {
		"border-right-color": backgroundColor
	};

	selectors[".uagb-timeline__line__inner"] = {
		"background-color": separatorFillColor
	};

	selectors[".uagb-timeline__line"] = {
		"background-color": separatorColor,
		"width": separatorwidth + "px"
	};

	selectors[".uagb-timeline__right-block .uagb-timeline__line"] = {
		"right": "calc( " + connectorBgsize + "px / 2 )"
	};

	selectors[".uagb-timeline__left-block .uagb-timeline__line"] = {
		"left": "calc( " + connectorBgsize + "px / 2 )"
	};

	selectors[".uagb-timeline__center-block .uagb-timeline__line"] = {
		"right": "calc( " + connectorBgsize + "px / 2 )"
	};

	selectors[".uagb-timeline__marker"] = {
		"background-color": separatorBg,
		"min-height": connectorBgsize + "px",
		"min-width": connectorBgsize + "px",
		"line-height": connectorBgsize + "px",
		"border": borderwidth + "px solid" + separatorBorder
	};

	selectors[".uagb-timeline__left-block .uagb-timeline__left .uagb-timeline__arrow"] = {
		"height": connectorBgsize + "px"
	};

	selectors[".uagb-timeline__right-block .uagb-timeline__right .uagb-timeline__arrow"] = {
		"height": connectorBgsize + "px"
	};

	selectors[".uagb-timeline__center-block .uagb-timeline__left .uagb-timeline__arrow"] = {
		"height": connectorBgsize + "px"
	};

	selectors[".uagb-timeline__center-block .uagb-timeline__right .uagb-timeline__arrow"] = {
		"height": connectorBgsize + "px"
	};

	selectors[".uagb-timeline__center-block .uagb-timeline__marker"] = {
		"margin-left": horizontalSpace + "px",
		"margin-right": horizontalSpace + "px"
	};

	selectors[".uagb-timeline__field:not(:last-child)"] = {
		"margin-bottom": verticalSpace + "px"
	};

	selectors[".uagb-timeline__date-hide.uagb-timeline__date-inner"] = {
		"margin-bottom": dateBottomspace + "px",
		"color": dateColor,
		"font-size": dateFontsize + "px",
		"text-align": align
	};

	selectors[".uagb-timeline__left-block .uagb-timeline__day-new.uagb-timeline__day-left"] = {
		"margin-left": horizontalSpace + "px"
	};

	selectors[".uagb-timeline__right-block .uagb-timeline__day-new.uagb-timeline__day-right"] = {
		"margin-right": horizontalSpace + "px"
	};

	selectors[".uagb-timeline__date-new"] = {
		"color": dateColor,
		"font-size": dateFontsize + "px"
	};

	selectors[".uagb-timeline__events-inner-new"] = {
		"background-color": backgroundColor,
		"border-radius": borderRadius + "px",
		"padding": bgPadding + "px"
	};

	selectors[".uagb-timeline__main .uagb-timeline__icon-new"] = {
		"color": iconColor,
		"font-size": iconSize + "px"
	};

	selectors[".uagb-timeline__main .uagb-timeline__marker.uagb-timeline__in-view-icon"] = {
		"background": iconBgFocus,
		"border-color": borderFocus
	};

	selectors[".uagb-timeline__main .uagb-timeline__marker.uagb-timeline__in-view-icon .uagb-timeline__icon-new"] = {
		"color": iconFocus

		/* Generate Responsive CSS for timeline */
	};var response_selector = {};
	response_selector[".uagb-timeline__center-block .uagb-timeline__marker"] = {
		"margin-left": "0px",
		"margin-right": "0px"
	};

	response_selector[".uagb-timeline__center-block .uagb-timeline__day-new.uagb-timeline__day-left"] = {
		"margin-left": horizontalSpace + "px"
	};
	response_selector[".uagb-timeline__center-block .uagb-timeline__day-new.uagb-timeline__day-right"] = {
		"margin-left": horizontalSpace + "px"
	};

	var styling_css = "";

	for (var i in selectors) {

		styling_css += ".block-editor-page #wpwrap #uagb-ctm-" + clientId + " " + i + " { ";

		var sel = selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	// Responsive css.
	styling_css += "@media(max-width:768px){";
	for (var i in response_selector) {

		styling_css += ".block-editor-page #wpwrap #uagb-ctm-" + clientId + " " + i + " { ";

		var sel = response_selector[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}
	styling_css += "}";

	return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (contentTimelineStyle);

/***/ }),
/* 72 */
/*!****************************************!*\
  !*** ./src/blocks/timeline/classes.js ***!
  \****************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline CSS class.
 * @param {object} props - The block object.
 * @return {array} The inline CSS class.
 */

function ContentTmClasses(attributes) {

	/* Arrow position */
	var arrow_align_class = "uagb-timeline__arrow-top" + " ";
	if (attributes.arrowlinAlignment == "center") {
		arrow_align_class = "uagb-timeline__arrow-center" + " ";
	} else if (attributes.arrowlinAlignment == "bottom") {
		arrow_align_class = "uagb-timeline__arrow-bottom" + " ";
	}

	/* Alignmnet */
	var align_class = "uagb-timeline__center-block " + " ";
	if (attributes.timelinAlignment == "left") {
		align_class = "uagb-timeline__left-block" + " ";
	} else if (attributes.timelinAlignment == "right") {
		align_class = "uagb-timeline__right-block" + " ";
	}
	align_class += arrow_align_class + "";
	align_class += "uagb-timeline__responsive-" + attributes.stack + " uagb-timeline";

	return [align_class];
}

/* harmony default export */ __webpack_exports__["a"] = (ContentTmClasses);

/***/ }),
/* 73 */
/*!**********************************************!*\
  !*** ./src/blocks/timeline/align-classes.js ***!
  \**********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Function name: AlignClass
 * @param array attributes settign array of attributes.
 * @param int index_val  index values.
 */
function AlignClass(attributes, index_val) {

	var align_class = "";
	if ("left" == attributes.timelinAlignment) {
		align_class = "uagb-timeline__widget uagb-timeline__left";
	} else if ("right" == attributes.timelinAlignment) {
		align_class = "uagb-timeline__widget uagb-timeline__right";
	} else if ("center" == attributes.timelinAlignment) {
		if (index_val % 2 == "0") {
			align_class = "uagb-timeline__widget uagb-timeline__right";
		} else {
			align_class = "uagb-timeline__widget uagb-timeline__left";
		}
	}

	return [align_class];
}

/* harmony default export */ __webpack_exports__["a"] = (AlignClass);

/***/ }),
/* 74 */
/*!**************************************************!*\
  !*** ./src/blocks/timeline/day-align-classes.js ***!
  \**************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Function name: DayAlignClass
 * @param array attributes settign array of attributes.
 * @param int index_val  index values.
 */
function DayAlignClass(attributes, index_val) {

	var day_align_class = "";

	if ("left" == attributes.timelinAlignment) {
		day_align_class = "uagb-timeline__day-new uagb-timeline__day-left";
	} else if ("right" == attributes.timelinAlignment) {
		day_align_class = "uagb-timeline__day-new uagb-timeline__day-right";
	} else if ("center" == attributes.timelinAlignment) {
		if (index_val % 2 == "0") {
			day_align_class = "uagb-timeline__day-new uagb-timeline__day-right";
		} else {
			day_align_class = "uagb-timeline__day-new uagb-timeline__day-left";
		}
	}

	return [day_align_class];
}

/* harmony default export */ __webpack_exports__["a"] = (DayAlignClass);

/***/ }),
/* 75 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIteratee.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseMatches = __webpack_require__(/*! ./_baseMatches */ 155),
    baseMatchesProperty = __webpack_require__(/*! ./_baseMatchesProperty */ 206),
    identity = __webpack_require__(/*! ./identity */ 40),
    isArray = __webpack_require__(/*! ./isArray */ 6),
    property = __webpack_require__(/*! ./property */ 213);

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;


/***/ }),
/* 76 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/isFunction.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 10),
    isObject = __webpack_require__(/*! ./isObject */ 5);

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),
/* 77 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_freeGlobal.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/global.js */ 45)))

/***/ }),
/* 78 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_toSource.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),
/* 79 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIsEqual.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqualDeep = __webpack_require__(/*! ./_baseIsEqualDeep */ 185),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 7);

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;


/***/ }),
/* 80 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_equalArrays.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(/*! ./_SetCache */ 186),
    arraySome = __webpack_require__(/*! ./_arraySome */ 189),
    cacheHas = __webpack_require__(/*! ./_cacheHas */ 190);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;


/***/ }),
/* 81 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_Uint8Array.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ 4);

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;


/***/ }),
/* 82 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_getAllKeys.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ 83),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ 48),
    keys = __webpack_require__(/*! ./keys */ 15);

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;


/***/ }),
/* 83 */
/*!************************************************!*\
  !*** ./node_modules/lodash/_baseGetAllKeys.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ 47),
    isArray = __webpack_require__(/*! ./isArray */ 6);

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;


/***/ }),
/* 84 */
/*!******************************************!*\
  !*** ./node_modules/lodash/stubArray.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;


/***/ }),
/* 85 */
/*!***********************************************!*\
  !*** ./node_modules/lodash/_arrayLikeKeys.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(/*! ./_baseTimes */ 86),
    isArguments = __webpack_require__(/*! ./isArguments */ 49),
    isArray = __webpack_require__(/*! ./isArray */ 6),
    isBuffer = __webpack_require__(/*! ./isBuffer */ 50),
    isIndex = __webpack_require__(/*! ./_isIndex */ 33),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ 87);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;


/***/ }),
/* 86 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseTimes.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;


/***/ }),
/* 87 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/isTypedArray.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(/*! ./_baseIsTypedArray */ 198),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ 34),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ 35);

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),
/* 88 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/_overArg.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),
/* 89 */
/*!****************************************************!*\
  !*** ./node_modules/lodash/_isStrictComparable.js ***!
  \****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ 5);

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;


/***/ }),
/* 90 */
/*!*********************************************************!*\
  !*** ./node_modules/lodash/_matchesStrictComparable.js ***!
  \*********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

module.exports = matchesStrictComparable;


/***/ }),
/* 91 */
/*!************************************!*\
  !*** ./node_modules/lodash/get.js ***!
  \************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ 38);

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;


/***/ }),
/* 92 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/toString.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(/*! ./_baseToString */ 93);

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;


/***/ }),
/* 93 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseToString.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ 14),
    arrayMap = __webpack_require__(/*! ./_arrayMap */ 27),
    isArray = __webpack_require__(/*! ./isArray */ 6),
    isSymbol = __webpack_require__(/*! ./isSymbol */ 39);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;


/***/ }),
/* 94 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseProperty.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;


/***/ }),
/* 95 */
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseAssignValue.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(/*! ./_defineProperty */ 96);

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;


/***/ }),
/* 96 */
/*!************************************************!*\
  !*** ./node_modules/lodash/_defineProperty.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ 9);

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;


/***/ }),
/* 97 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getSymbolsIn.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ 47),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ 55),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ 48),
    stubArray = __webpack_require__(/*! ./stubArray */ 84);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;


/***/ }),
/* 98 */
/*!***************************************!*\
  !*** ./node_modules/lodash/keysIn.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ 85),
    baseKeysIn = __webpack_require__(/*! ./_baseKeysIn */ 217),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ 16);

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;


/***/ }),
/* 99 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseSlice.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

module.exports = baseSlice;


/***/ }),
/* 100 */
/*!******************************************!*\
  !*** ./node_modules/lodash/toInteger.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var toFinite = __webpack_require__(/*! ./toFinite */ 230);

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = toFinite(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

module.exports = toInteger;


/***/ }),
/* 101 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/toNumber.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ 5),
    isSymbol = __webpack_require__(/*! ./isSymbol */ 39);

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;


/***/ }),
/* 102 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_overRest.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(/*! ./_apply */ 244);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;


/***/ }),
/* 103 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setToString.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseSetToString = __webpack_require__(/*! ./_baseSetToString */ 245),
    shortOut = __webpack_require__(/*! ./_shortOut */ 247);

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;


/***/ }),
/* 104 */
/*!**********************************************************************!*\
  !*** ./node_modules/element-resize-detector/src/collection-utils.js ***!
  \**********************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = module.exports = {};

/**
 * Loops through the collection and calls the callback for each element. if the callback returns truthy, the loop is broken and returns the same value.
 * @public
 * @param {*} collection The collection to loop through. Needs to have a length property set and have indices set from 0 to length - 1.
 * @param {function} callback The callback to be called for each element. The element will be given as a parameter to the callback. If this callback returns truthy, the loop is broken and the same value is returned.
 * @returns {*} The value that a callback has returned (if truthy). Otherwise nothing.
 */
utils.forEach = function(collection, callback) {
    for(var i = 0; i < collection.length; i++) {
        var result = callback(collection[i]);
        if(result) {
            return result;
        }
    }
};


/***/ }),
/* 105 */
/*!**********************************************************************!*\
  !*** ./node_modules/element-resize-detector/src/browser-detector.js ***!
  \**********************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var detector = module.exports = {};

detector.isIE = function(version) {
    function isAnyIeVersion() {
        var agent = navigator.userAgent.toLowerCase();
        return agent.indexOf("msie") !== -1 || agent.indexOf("trident") !== -1 || agent.indexOf(" edge/") !== -1;
    }

    if(!isAnyIeVersion()) {
        return false;
    }

    if(!version) {
        return true;
    }

    //Shamelessly stolen from https://gist.github.com/padolsey/527683
    var ieVersion = (function(){
        var undef,
            v = 3,
            div = document.createElement("div"),
            all = div.getElementsByTagName("i");

        do {
            div.innerHTML = "<!--[if gt IE " + (++v) + "]><i></i><![endif]-->";
        }
        while (all[0]);

        return v > 4 ? v : undef;
    }());

    return version === ieVersion;
};

detector.isLegacyOpera = function() {
    return !!window.opera;
};


/***/ }),
/* 106 */
/*!***********************************************!*\
  !*** ./node_modules/react-slick/lib/index.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _slider = __webpack_require__(/*! ./slider */ 301);

var _slider2 = _interopRequireDefault(_slider);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _slider2.default;

/***/ }),
/* 107 */
/*!*******************************************************!*\
  !*** ./node_modules/fbjs/lib/ExecutionEnvironment.js ***!
  \*******************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

/***/ }),
/* 108 */
/*!***************************************************!*\
  !*** ./node_modules/fbjs/lib/getActiveElement.js ***!
  \***************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 *
 * @param {?DOMDocument} doc Defaults to current document.
 * @return {?DOMElement}
 */
function getActiveElement(doc) /*?DOMElement*/{
  doc = doc || (typeof document !== 'undefined' ? document : undefined);
  if (typeof doc === 'undefined') {
    return null;
  }
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

module.exports = getActiveElement;

/***/ }),
/* 109 */
/*!***********************************************!*\
  !*** ./node_modules/fbjs/lib/shallowEqual.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */



var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;

/***/ }),
/* 110 */
/*!***********************************************!*\
  !*** ./node_modules/fbjs/lib/containsNode.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

var isTextNode = __webpack_require__(/*! ./isTextNode */ 304);

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

/***/ }),
/* 111 */
/*!*********************************************!*\
  !*** ./node_modules/enquire.js/src/Util.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Helper function for iterating over a collection
 *
 * @param collection
 * @param fn
 */
function each(collection, fn) {
    var i      = 0,
        length = collection.length,
        cont;

    for(i; i < length; i++) {
        cont = fn(collection[i], i);
        if(cont === false) {
            break; //allow early exit
        }
    }
}

/**
 * Helper function for determining whether target object is an array
 *
 * @param target the object under test
 * @return {Boolean} true if array, false otherwise
 */
function isArray(target) {
    return Object.prototype.toString.apply(target) === '[object Array]';
}

/**
 * Helper function for determining whether target object is a function
 *
 * @param target the object under test
 * @return {Boolean} true if function, false otherwise
 */
function isFunction(target) {
    return typeof target === 'function';
}

module.exports = {
    isFunction : isFunction,
    isArray : isArray,
    each : each
};


/***/ }),
/* 112 */
/*!*********************************************!*\
  !*** ./src/blocks/section/inline-styles.js ***!
  \*********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline styles.
 * @param  {object} props - The block object.
 * @return {object} The inline background type CSS.
 */
function inlineStyles(props, isEditor) {
	var _props$attributes = props.attributes,
	    align = _props$attributes.align,
	    contentWidth = _props$attributes.contentWidth,
	    leftPadding = _props$attributes.leftPadding,
	    rightPadding = _props$attributes.rightPadding,
	    topPadding = _props$attributes.topPadding,
	    bottomPadding = _props$attributes.bottomPadding,
	    leftMargin = _props$attributes.leftMargin,
	    rightMargin = _props$attributes.rightMargin,
	    topMargin = _props$attributes.topMargin,
	    bottomMargin = _props$attributes.bottomMargin,
	    width = _props$attributes.width,
	    backgroundPosition = _props$attributes.backgroundPosition,
	    backgroundSize = _props$attributes.backgroundSize,
	    backgroundAttachment = _props$attributes.backgroundAttachment,
	    backgroundImage = _props$attributes.backgroundImage,
	    backgroundColor = _props$attributes.backgroundColor,
	    backgroundOpacity = _props$attributes.backgroundOpacity,
	    backgroundRepeat = _props$attributes.backgroundRepeat,
	    backgroundType = _props$attributes.backgroundType,
	    gradientColor1 = _props$attributes.gradientColor1,
	    gradientColor2 = _props$attributes.gradientColor2,
	    gradientLocation1 = _props$attributes.gradientLocation1,
	    gradientLocation2 = _props$attributes.gradientLocation2,
	    gradientType = _props$attributes.gradientType,
	    gradientAngle = _props$attributes.gradientAngle,
	    borderStyle = _props$attributes.borderStyle,
	    borderWidth = _props$attributes.borderWidth,
	    borderRadius = _props$attributes.borderRadius,
	    borderColor = _props$attributes.borderColor;


	var style = {
		"padding-top": topPadding + "px",
		"padding-bottom": bottomPadding + "px",
		"padding-left": leftPadding + "px",
		"padding-right": rightPadding + "px",
		"border-radius": borderRadius + "px"
	};

	if ("right" == align) {
		style["margin-left"] = "auto";
		style["margin-top"] = topMargin + "px";
		style["margin-bottom"] = bottomMargin + "px";
		style["margin-right"] = rightMargin + "px";
	} else if ("left" == align) {
		style["margin-right"] = "auto";
		style["margin-top"] = topMargin + "px";
		style["margin-bottom"] = bottomMargin + "px";
		style["margin-left"] = leftMargin + "px";
	} else if ("center" == align) {
		style["margin-right"] = "auto";
		style["margin-left"] = "auto";
		style["margin-top"] = topMargin + "px";
		style["margin-bottom"] = bottomMargin + "px";
	} else {
		style["margin-top"] = topMargin + "px";
		style["margin-bottom"] = bottomMargin + "px";
	}

	if (borderStyle != "none") {
		style["border-style"] = borderStyle;
		style["border-width"] = borderWidth + "px";
		style["border-color"] = borderColor;
	}

	var position = backgroundPosition.replace("-", " ");

	var section_width = "100%";

	if ("boxed" == contentWidth) {
		if ("" != width) {
			section_width = width + "px";
		}
	}

	style["max-width"] = section_width;

	if ("image" === backgroundType) {

		style["background-image"] = backgroundImage ? "url(" + backgroundImage.url + ")" : null;
		style["background-position"] = position;
		style["background-attachment"] = backgroundAttachment;
		style["background-repeat"] = backgroundRepeat;
		style["background-size"] = backgroundSize;
	} else if ("gradient" === backgroundType) {
		style["background-color"] = "transparent";
		style["opacity"] = typeof backgroundOpacity != "undefined" ? backgroundOpacity / 100 : "";

		if ("linear" === gradientType) {

			style["background-image"] = "linear-gradient(" + gradientAngle + "deg, " + gradientColor1 + " " + gradientLocation1 + "%, " + gradientColor2 + " " + gradientLocation2 + "%)";
		} else {

			style["background-image"] = "radial-gradient( at center center, " + gradientColor1 + " " + gradientLocation1 + "%, " + gradientColor2 + " " + gradientLocation2 + "%)";
		}
	}

	return style;
}

/* harmony default export */ __webpack_exports__["a"] = (inlineStyles);

/***/ }),
/* 113 */
/*!**************************************************!*\
  !*** ./src/blocks/info-box/components/Prefix.js ***!
  \**************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var __ = wp.i18n.__;
var createBlock = wp.blocks.createBlock;

var Prefix = function (_React$Component) {
	_inherits(Prefix, _React$Component);

	function Prefix() {
		_classCallCheck(this, Prefix);

		return _possibleConstructorReturn(this, (Prefix.__proto__ || Object.getPrototypeOf(Prefix)).apply(this, arguments));
	}

	_createClass(Prefix, [{
		key: "render",
		value: function render() {

			//const { attributes, setAttributes } = this.props;

			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes,
			    props = _props.props;


			if (setAttributes !== "not_set") {
				return wp.element.createElement(RichText, {
					tagName: "div",
					value: attributes.prefixTitle,
					placeholder: __("Write a Prefix"),
					className: "uagb-ifb-title-prefix",
					multiline: false,
					onChange: function onChange(value) {
						setAttributes({ prefixTitle: value });
					},
					onMerge: props.mergeBlocks,
					unstableOnSplit: props.insertBlocksAfter ? function (before, after) {
						for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
							blocks[_key - 2] = arguments[_key];
						}

						setAttributes({ content: before });
						props.insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
					} : undefined,
					onRemove: function onRemove() {
						return props.onReplace([]);
					}
				});
			} else {
				return wp.element.createElement(RichText.Content, {
					tagName: "span",
					value: attributes.prefixTitle,
					className: "uagb-ifb-title-prefix"
				});
			}
		}
	}]);

	return Prefix;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Prefix);

/***/ }),
/* 114 */
/*!*************************************************!*\
  !*** ./src/blocks/info-box/components/Title.js ***!
  \*************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var createBlock = wp.blocks.createBlock;
var __ = wp.i18n.__;

var Title = function (_React$Component) {
	_inherits(Title, _React$Component);

	function Title() {
		_classCallCheck(this, Title);

		return _possibleConstructorReturn(this, (Title.__proto__ || Object.getPrototypeOf(Title)).apply(this, arguments));
	}

	_createClass(Title, [{
		key: "render",
		value: function render() {

			//const { attributes, setAttributes , props } = this.props;
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes,
			    props = _props.props;


			if (setAttributes !== "not_set") {
				return wp.element.createElement(RichText, {
					tagName: attributes.headingTag,
					placeholder: __("Write a Heading"),
					value: attributes.infoBoxTitle,
					className: "uagb-ifb-title",
					onChange: function onChange(value) {
						return setAttributes({ infoBoxTitle: value });
					},
					multiline: false,
					onMerge: props.mergeBlocks,
					unstableOnSplit: props.insertBlocksAfter ? function (before, after) {
						for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
							blocks[_key - 2] = arguments[_key];
						}

						setAttributes({ content: before });
						props.insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
					} : undefined,
					onRemove: function onRemove() {
						return props.onReplace([]);
					}
				});
			} else {
				return wp.element.createElement(RichText.Content, {
					tagName: attributes.headingTag,
					value: attributes.infoBoxTitle,
					className: "uagb-ifb-title"
				});
			}
		}
	}]);

	return Title;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Title);

/***/ }),
/* 115 */
/*!*******************************************************!*\
  !*** ./src/blocks/info-box/components/InfoBoxDesc.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var __ = wp.i18n.__;
var createBlock = wp.blocks.createBlock;

var InfoBoxDesc = function (_React$Component) {
	_inherits(InfoBoxDesc, _React$Component);

	function InfoBoxDesc() {
		_classCallCheck(this, InfoBoxDesc);

		return _possibleConstructorReturn(this, (InfoBoxDesc.__proto__ || Object.getPrototypeOf(InfoBoxDesc)).apply(this, arguments));
	}

	_createClass(InfoBoxDesc, [{
		key: "render",
		value: function render() {

			//const { attributes, setAttributes } = this.props;
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes,
			    props = _props.props;


			if (setAttributes !== "not_set") {
				return wp.element.createElement(RichText, {
					tagName: "p",
					value: attributes.headingDesc,
					placeholder: __("Write a Description"),
					className: "uagb-ifb-desc",
					onChange: function onChange(value) {
						return setAttributes({ headingDesc: value });
					},
					onMerge: props.mergeBlocks,
					unstableOnSplit: props.insertBlocksAfter ? function (before, after) {
						for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
							blocks[_key - 2] = arguments[_key];
						}

						setAttributes({ content: before });
						props.insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
					} : undefined,
					onRemove: function onRemove() {
						return props.onReplace([]);
					}
				});
			} else {
				return wp.element.createElement(RichText.Content, {
					tagName: "p",
					value: attributes.headingDesc,
					className: "uagb-ifb-desc"
				});
			}
		}
	}]);

	return InfoBoxDesc;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (InfoBoxDesc);

/***/ }),
/* 116 */
/*!*******************************************************!*\
  !*** ./src/blocks/info-box/components/InfoBoxIcon.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var __ = wp.i18n.__;

var InfoBoxIcon = function (_React$Component) {
	_inherits(InfoBoxIcon, _React$Component);

	function InfoBoxIcon() {
		_classCallCheck(this, InfoBoxIcon);

		return _possibleConstructorReturn(this, (InfoBoxIcon.__proto__ || Object.getPrototypeOf(InfoBoxIcon)).apply(this, arguments));
	}

	_createClass(InfoBoxIcon, [{
		key: "render",
		value: function render() {
			var attributes = this.props.attributes;


			return wp.element.createElement(
				"div",
				{ className: "uagb-ifb-image-icon-content uagb-ifb-imgicon-wrap" },
				wp.element.createElement(
					"div",
					{ className: "uagb-ifb-icon-wrap" },
					wp.element.createElement(
						"span",
						{ className: "uagb-ifb-icon" },
						wp.element.createElement("span", { className: attributes.icon })
					)
				)
			);
		}
	}]);

	return InfoBoxIcon;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (InfoBoxIcon);

/***/ }),
/* 117 */
/*!****************************************!*\
  !*** ./src/blocks/info-box/classes.js ***!
  \****************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline CSS class.
 * @param {object} props - The block object.
 * @return {array} The inline CSS class.
 */

function InfoBoxPositionClasses(attributes) {

	var sourceClass = "uagb-infobox-has-image";
	if (attributes.source_type == "icon") {
		sourceClass = "uagb-infobox-has-icon";
	}

	var iconimgStyle_class = "";

	iconimgStyle_class += "uagb-infobox" + " ";
	iconimgStyle_class += sourceClass + " ";
	iconimgStyle_class += "uagb-infobox-icon-" + attributes.iconimgPosition + " ";

	if (attributes.iconimgPosition === "left" || attributes.iconimgPosition === "left-title") {
		iconimgStyle_class += "uagb-infobox-left" + " ";
	}

	if (attributes.iconimgPosition === "right" || attributes.iconimgPosition === "right-title") {
		iconimgStyle_class += "uagb-infobox-right" + " ";
	}

	if ((attributes.iconimgPosition === "left" || attributes.iconimgPosition === "right") && attributes.stack !== "none") {
		iconimgStyle_class += "uagb-infobox-stacked-" + attributes.stack + " ";
		if (attributes.iconimgPosition === "right") {
			iconimgStyle_class += "uagb-infobox-reverse-order-" + attributes.stack + " ";
		}
	}

	if (attributes.iconimgPosition !== "above-title" || attributes.iconimgPosition !== "below-title") {
		iconimgStyle_class += "uagb-infobox-image-valign-" + attributes.sourceAlign + " ";
	}

	if (attributes.enableBorder) {
		iconimgStyle_class += "uagb-infobox-enable-border" + " ";
	}

	iconimgStyle_class += "uagb-infobox-enable-border-radius" + " ";

	return [iconimgStyle_class];
}

/* harmony default export */ __webpack_exports__["a"] = (InfoBoxPositionClasses);

/***/ }),
/* 118 */
/*!************************************************************!*\
  !*** ./src/blocks/info-box/components/InfoBoxSeperator.js ***!
  \************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InfoBoxSeperator = function (_React$Component) {
	_inherits(InfoBoxSeperator, _React$Component);

	function InfoBoxSeperator() {
		_classCallCheck(this, InfoBoxSeperator);

		return _possibleConstructorReturn(this, (InfoBoxSeperator.__proto__ || Object.getPrototypeOf(InfoBoxSeperator)).apply(this, arguments));
	}

	_createClass(InfoBoxSeperator, [{
		key: "render",
		value: function render() {
			var attributes = this.props.attributes;


			return wp.element.createElement(
				"div",
				{ className: "uagb-ifb-separator-parent" },
				wp.element.createElement("div", { className: "uagb-ifb-separator" })
			);
		}
	}]);

	return InfoBoxSeperator;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (InfoBoxSeperator);

/***/ }),
/* 119 */
/*!******************************************************!*\
  !*** ./src/blocks/info-box/components/InfoBoxCta.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var __ = wp.i18n.__;




var InfoBoxCta = function (_React$Component) {
	_inherits(InfoBoxCta, _React$Component);

	function InfoBoxCta() {
		_classCallCheck(this, InfoBoxCta);

		return _possibleConstructorReturn(this, (InfoBoxCta.__proto__ || Object.getPrototypeOf(InfoBoxCta)).apply(this, arguments));
	}

	_createClass(InfoBoxCta, [{
		key: "render",
		value: function render() {
			var attributes = this.props.attributes;


			var ctaBtnClass = "uagb-infobox-cta-link uagb-ifb-cta-button";

			var target = "_self";
			var rel = "noopener noreferrer";
			if (attributes.ctaTarget) {
				target = "_blank";
			}

			var cta_icon_output = "";
			if (attributes.ctaIcon !== "") {
				cta_icon_output = wp.element.createElement(
					"span",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-ifb-" + attributes.ctaType + "-icon", "uagb-ifb-align-icon-" + attributes.ctaIconPosition) },
					wp.element.createElement("i", { className: attributes.ctaIcon })
				);
			}
			return wp.element.createElement(
				"div",
				{ className: "uagb-ifb-cta uagb-infobox-cta-link-style" },
				attributes.ctaType === "text" && wp.element.createElement(
					"a",
					{ href: attributes.ctaLink, target: target, className: "uagb-infobox-cta-link", rel: rel },
					attributes.ctaIconPosition === "before" && cta_icon_output,
					wp.element.createElement(
						"span",
						{ className: "uagb-inline-editing" },
						attributes.ctaText
					),
					attributes.ctaIconPosition === "after" && cta_icon_output
				),
				attributes.ctaType === "button" && wp.element.createElement(
					"div",
					{ className: "uagb-ifb-button-wrapper" },
					wp.element.createElement(
						"a",
						{ href: attributes.ctaLink, className: ctaBtnClass, target: target, rel: rel },
						cta_icon_output,
						wp.element.createElement(
							"span",
							{ className: "uagb-ifb-cta-content-wrapper" },
							wp.element.createElement(
								"span",
								{ className: "uagb-inline-editing " },
								attributes.ctaText
							)
						)
					)
				)
			);
		}
	}]);

	return InfoBoxCta;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (InfoBoxCta);

/***/ }),
/* 120 */
/*!*******************************************!*\
  !*** ./src/blocks/info-box/inline-styles ***!
  \*******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline styles.
 * @param  {object} props - The block object.
 * @return {object} The inline background type CSS.
 */
function InfoBoxStyle( props ) {
	const {
		headingAlign,
		headingColor,
		subHeadingColor,
		prefixColor,
		prefixFontSize,
		headFontSize,
		subHeadFontSize,
		separatorWidth,
		separatorHeight,
		headSpace,
		separatorSpace,
		subHeadSpace,
		icon,
		iconColor,
		iconSize,
		iconimgPosition,
		block_id,
		iconHover,
		iconimgBorderRadius,
		seperatorStyle,
		seperatorWidth,
		seperatorColor,
		seperatorThickness,
		seperatorSpace,
		ctaLinkColor,
		ctaFontSize,
		ctaBtnSize,
		ctaBtnLinkColor,
		ctaBgColor,
		ctaBtnVertPadding,
		ctaBtnHrPadding,
		ctaBorderStyle,
		ctaBorderColor,
		ctaBorderWidth,
		ctaBorderRadius,
		prefixSpace,
		iconLeftMargin,
		iconRightMargin,
		iconTopMargin,
		iconBottomMargin,
		imageSize,
		imageWidth,
		ctaLinkHoverColor,
		ctaBgHoverColor,
		ctaBorderhoverColor,
		ctaIconSpace
	} = props.attributes

	if( props.clientId ){
		var clientId = "uagb-infobox-"+props.clientId
	}else{
		var clientId = "uagb-infobox-"+block_id
	}

	var selectors = {}

	// Icon css
	selectors[".uagb-ifb-icon"] = {
		"height" : iconSize+"px",
		"width" : iconSize+"px",
		"line-height" : iconSize+"px",
	}

	selectors[".uagb-ifb-icon > span"] = {
		"font-size" : iconSize+"px",
		"height": iconSize+"px",
		"color": iconColor,
		"width": iconSize+"px",
		"line-height": iconSize + "px",
	}

	selectors[".uagb-ifb-icon:hover > span"] = {
		"color" : iconHover,
	}

	selectors[".uagb-infobox__content-wrap .uagb-ifb-imgicon-wrap"] = {
		"margin-left" : iconLeftMargin+"px",
		"margin-right" : iconRightMargin+"px",
		"margin-top" : iconTopMargin+"px",
		"margin-bottom" : iconBottomMargin+"px",
	}

	// Image
	selectors[".uagb-ifb-image-content img"] = {
		"width": imageWidth+"px",
		"max-width": imageWidth+"px",
	}

	selectors[".uagb-infobox .uagb-ifb-image-content img"] = {
		"border-radius" : iconimgBorderRadius+"px",
	}


	if( iconimgPosition == "above-title" ||  iconimgPosition == "below-title" ){
		selectors[".uagb-infobox__content-wrap"] = {
			"text-align" : headingAlign,
		}
	}

	// CTA style
	selectors[".uagb-infobox-cta-link a"] = {
		"font-size" : ctaFontSize+"px",
		"color": ctaLinkColor,
	}

	selectors[".uagb-infobox-cta-link a:hover"] = {
		"color": ctaLinkHoverColor,
	}

	selectors[".uagb-infobox-cta-link span"] = {
		"font-size" : ctaFontSize+"px",
		"color": ctaLinkColor,
	}
	selectors[".uagb-infobox-cta-link:hover span"] = {
		"color": ctaLinkHoverColor,
	}

	selectors[".uagb-ifb-button-wrapper .uagb-infobox-cta-link span"] = {
		"font-size" : ctaFontSize+"px",
		"color": ctaBtnLinkColor,
	}
	selectors[".uagb-ifb-button-wrapper:hover .uagb-infobox-cta-link span"] = {
		"color": ctaLinkHoverColor,
	}

	selectors[".uagb-ifb-button-wrapper .uagb-infobox-cta-link"] = {
		"font-size" : ctaFontSize+"px",
		"color": ctaBtnLinkColor,
		"background-color": ctaBgColor,
		"border-style": ctaBorderStyle,
		"border-color": ctaBorderColor,
		"border-radius": ctaBorderRadius + "px",
		"border-width": ctaBorderWidth + "px",
		"padding-top": ctaBtnVertPadding + "px",
		"padding-bottom": ctaBtnVertPadding + "px",
		"padding-left": ctaBtnHrPadding + "px",
		"padding-right": ctaBtnHrPadding + "px",
	}

	selectors[".uagb-ifb-button-wrapper:hover .uagb-infobox-cta-link"] = {
		"color": ctaLinkHoverColor,
		"background-color": ctaBgHoverColor,
		"border-color": ctaBorderhoverColor,
	}

	// Prefix Style
	selectors[".editor-rich-text .uagb-ifb-title-prefix"] = {
		"font-size" : prefixFontSize+"px",
		"color": prefixColor,
		"margin-bottom": prefixSpace+"px",
	}

	// Title Style
	selectors[".editor-rich-text .uagb-ifb-title"] = {
		"font-size" : headFontSize+"px",
		"color": headingColor,
		"margin-bottom": headSpace+"px",
	}

	// Description Style
	selectors[".editor-rich-text .uagb-ifb-desc"] = {
		"font-size" : subHeadFontSize+"px",
		"color": subHeadingColor,
		"margin-bottom": subHeadSpace+"px",
	}

	// Seperator
	selectors[".uagb-ifb-separator"] = {
		"width" : seperatorWidth+"%",
		"border-top-width" : seperatorThickness+"px",
		"border-top-color": seperatorColor,
		"border-top-style": seperatorStyle,
	}
	selectors[".uagb-ifb-separator-parent"] = {
		"margin-bottom":seperatorSpace+"px"
	}

	selectors[".uagb-ifb-content"] = {
		"padding": ( typeof blockPadding != "undefined" ) ? blockPadding+"px": "inherit"
	}

	selectors[".uagb-ifb-align-icon-after"] = {
		"margin-left" : ctaIconSpace+"px",
	}

	selectors[".uagb-ifb-align-icon-before"] = {
		"margin-right" : ctaIconSpace+"px",
	}

	var styling_css = ""

	for( var i in selectors ) {

		styling_css += " .block-editor-page #wpwrap #"+clientId+" "+i + " { "


		var sel = selectors[i]
		var css = ""

		for( var j in sel ) {

			css += j + ": " + sel[j] + ";"
		}

		styling_css += css + " } "
	}

	return styling_css

}

/* harmony default export */ __webpack_exports__["a"] = (InfoBoxStyle);


/***/ }),
/* 121 */
/*!************************************************************!*\
  !*** ./src/blocks/info-box/components/InfoBoxIconImage.js ***!
  \************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var __ = wp.i18n.__;

var InfoBoxIconImage = function (_React$Component) {
	_inherits(InfoBoxIconImage, _React$Component);

	function InfoBoxIconImage() {
		_classCallCheck(this, InfoBoxIconImage);

		return _possibleConstructorReturn(this, (InfoBoxIconImage.__proto__ || Object.getPrototypeOf(InfoBoxIconImage)).apply(this, arguments));
	}

	_createClass(InfoBoxIconImage, [{
		key: "render",
		value: function render() {
			var attributes = this.props.attributes;


			var url_chk = "";
			if (typeof attributes.iconImage !== "undefined" && attributes.iconImage !== null && attributes.iconImage !== "") {
				url_chk = attributes.iconImage.url;
			}

			var url = "";
			if (url_chk !== "") {
				var size = attributes.iconImage.sizes;
				var imageSize = attributes.imageSize;

				if (typeof size !== "undefined" && typeof size[imageSize] !== "undefined") {
					url = size[imageSize].url;
				} else {
					url = url_chk;
				}

				return wp.element.createElement(
					"div",
					{ className: "uagb-ifb-image-icon-content uagb-ifb-imgicon-wrap" },
					wp.element.createElement(
						"div",
						{ className: "uagb-ifb-image" },
						wp.element.createElement(
							"div",
							{ className: "uagb-ifb-image-content" },
							wp.element.createElement("img", {
								className: "",
								src: url,
								alt: attributes.iconImage.alt
							})
						)
					)
				);
			} else {
				return null;
			}
		}
	}]);

	return InfoBoxIconImage;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (InfoBoxIconImage);

/***/ }),
/* 122 */
/*!***********************************************************!*\
  !*** ./node_modules/react-transition-group/Transition.js ***!
  \***********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

exports.__esModule = true;
exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;

var PropTypes = _interopRequireWildcard(__webpack_require__(/*! prop-types */ 11));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ 3));

var _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ 24));

var _reactLifecyclesCompat = __webpack_require__(/*! react-lifecycles-compat */ 123);

var _PropTypes = __webpack_require__(/*! ./utils/PropTypes */ 124);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var UNMOUNTED = 'unmounted';
exports.UNMOUNTED = UNMOUNTED;
var EXITED = 'exited';
exports.EXITED = EXITED;
var ENTERING = 'entering';
exports.ENTERING = ENTERING;
var ENTERED = 'entered';
exports.ENTERED = ENTERED;
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the components.
 * It's up to you to give meaning and effect to those states. For example we can
 * add styles to a component when it enters or exits:
 *
 * ```jsx
 * import Transition from 'react-transition-group/Transition';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 0 },
 *   entered:  { opacity: 1 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {(state) => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * As noted the `Transition` component doesn't _do_ anything by itself to its child component.
 * What it does do is track transition states over time so you can update the
 * component (such as by adding styles or classes) when it changes states.
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component begins the
 * "Enter" stage. During this stage, the component will shift from its current transition state,
 * to `'entering'` for the duration of the transition and then to the `'entered'` stage once
 * it's complete. Let's take the following example:
 *
 * ```jsx
 * state = { in: false };
 *
 * toggleEnterState = () => {
 *   this.setState({ in: true });
 * }
 *
 * render() {
 *   return (
 *     <div>
 *       <Transition in={this.state.in} timeout={500} />
 *       <button onClick={this.toggleEnterState}>Click to Enter</button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state and
 * stay there for 500ms (the value of `timeout`) before it finally switches to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.
 *
 * ## Timing
 *
 * Timing is often the trickiest part of animation, mistakes can result in slight delays
 * that are hard to pin down. A common example is when you want to add an exit transition,
 * you should set the desired final styles when the state is `'exiting'`. That's when the
 * transition to those styles will start and, if you matched the `timeout` prop with the
 * CSS Transition duration, it will end exactly when the state changes to `'exited'`.
 *
 * > **Note**: For simpler transitions the `Transition` component might be enough, but
 * > take into account that it's platform-agnostic, while the `CSSTransition` component
 * > [forces reflows](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * > in order to make more complex transitions more predictable. For example, even though
 * > classes `example-enter` and `example-enter-active` are applied immediately one after
 * > another, you can still transition from one to the other because of the forced reflow
 * > (read [this issue](https://github.com/reactjs/react-transition-group/issues/159#issuecomment-322761171)
 * > for more info). Take this into account when choosing between `Transition` and
 * > `CSSTransition`.
 */

exports.EXITING = EXITING;

var Transition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(Transition, _React$Component);

  function Transition(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }

  var _proto = Transition.prototype;

  _proto.getChildContext = function getChildContext() {
    return {
      transitionGroup: null // allows for nested Transitions

    };
  };

  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;

    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }

    return null;
  }; // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }


  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;

    if (prevProps !== this.props) {
      var status = this.state.status;

      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }

    this.updateStatus(false, nextStatus);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter;
      appear = timeout.appear;
    }

    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };

  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }

    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();

      var node = _reactDom.default.findDOMNode(this);

      if (nextStatus === ENTERING) {
        this.performEnter(node, mounting);
      } else {
        this.performExit(node);
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };

  _proto.performEnter = function performEnter(node, mounting) {
    var _this2 = this;

    var enter = this.props.enter;
    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;
    var timeouts = this.getTimeouts(); // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(node);
      });
      return;
    }

    this.props.onEnter(node, appearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(node, appearing); // FIXME: appear timeout?


      _this2.onTransitionEnd(node, timeouts.enter, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(node, appearing);
        });
      });
    });
  };

  _proto.performExit = function performExit(node) {
    var _this3 = this;

    var exit = this.props.exit;
    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED

    if (!exit) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(node);
      });
      return;
    }

    this.props.onExit(node);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(node);

      _this3.onTransitionEnd(node, timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(node);
        });
      });
    });
  };

  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };

  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
    this.setNextCallback(handler);

    if (node) {
      if (this.props.addEndListener) {
        this.props.addEndListener(node, this.nextCallback);
      }

      if (timeout != null) {
        setTimeout(this.nextCallback, timeout);
      }
    } else {
      setTimeout(this.nextCallback, 0);
    }
  };

  _proto.render = function render() {
    var status = this.state.status;

    if (status === UNMOUNTED) {
      return null;
    }

    var _this$props = this.props,
        children = _this$props.children,
        childProps = _objectWithoutPropertiesLoose(_this$props, ["children"]); // filter props for Transtition


    delete childProps.in;
    delete childProps.mountOnEnter;
    delete childProps.unmountOnExit;
    delete childProps.appear;
    delete childProps.enter;
    delete childProps.exit;
    delete childProps.timeout;
    delete childProps.addEndListener;
    delete childProps.onEnter;
    delete childProps.onEntering;
    delete childProps.onEntered;
    delete childProps.onExit;
    delete childProps.onExiting;
    delete childProps.onExited;

    if (typeof children === 'function') {
      return children(status, childProps);
    }

    var child = _react.default.Children.only(children);

    return _react.default.cloneElement(child, childProps);
  };

  return Transition;
}(_react.default.Component);

Transition.contextTypes = {
  transitionGroup: PropTypes.object
};
Transition.childContextTypes = {
  transitionGroup: function transitionGroup() {}
};
Transition.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A `function` child can be used instead of a React element.
   * This function is called with the current transition status
   * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can be used
   * to apply context specific props to a component.
   *
   * ```jsx
   * <Transition timeout={150}>
   *   {(status) => (
   *     <MyComponent className={`fade fade-${status}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,

  /**
   * Show the component; triggers the enter or exit states
   */
  in: PropTypes.bool,

  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: PropTypes.bool,

  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: PropTypes.bool,

  /**
   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
   * If you want to transition on the first mount set `appear` to `true`, and the
   * component will transition in as soon as the `<Transition>` mounts.
   *
   * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
   */
  appear: PropTypes.bool,

  /**
   * Enable or disable enter transitions.
   */
  enter: PropTypes.bool,

  /**
   * Enable or disable exit transitions.
   */
  exit: PropTypes.bool,

  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided
   *
   * You may specify a single timeout for all transitions like: `timeout={500}`,
   * or individually like:
   *
   * ```jsx
   * timeout={{
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * @type {number | { enter?: number, exit?: number }}
   */
  timeout: function timeout(props) {
    var pt = process.env.NODE_ENV !== "production" ? _PropTypes.timeoutsShape : {};;
    if (!props.addEndListener) pt = pt.isRequired;

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return pt.apply(void 0, [props].concat(args));
  },

  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. **Note:** Timeouts are still used as a fallback if provided.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: PropTypes.func,

  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: PropTypes.func,

  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes.func,

  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: PropTypes.func,

  /**
   * Callback fired before the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: PropTypes.func,

  /**
   * Callback fired after the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: PropTypes.func,

  /**
   * Callback fired after the "exited" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: PropTypes.func // Name the function so it is clearer in the documentation

} : {};

function noop() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = 0;
Transition.EXITED = 1;
Transition.ENTERING = 2;
Transition.ENTERED = 3;
Transition.EXITING = 4;

var _default = (0, _reactLifecyclesCompat.polyfill)(Transition);

exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../process/browser.js */ 2)))

/***/ }),
/* 123 */
/*!****************************************************************************!*\
  !*** ./node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js ***!
  \****************************************************************************/
/*! exports provided: polyfill */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyfill", function() { return polyfill; });
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

function componentWillMount() {
  // Call this.constructor.gDSFP to support sub-classes.
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== undefined) {
    this.setState(state);
  }
}

function componentWillReceiveProps(nextProps) {
  // Call this.constructor.gDSFP to support sub-classes.
  // Use the setState() updater to ensure state isn't stale in certain edge cases.
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== undefined ? state : null;
  }
  // Binding "this" is important for shallow renderer support.
  this.setState(updater.bind(this));
}

function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
      prevProps,
      prevState
    );
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}

// React may warn about cWM/cWRP/cWU methods being deprecated.
// Add a flag to suppress these warnings for this special case.
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;

function polyfill(Component) {
  var prototype = Component.prototype;

  if (!prototype || !prototype.isReactComponent) {
    throw new Error('Can only polyfill class components');
  }

  if (
    typeof Component.getDerivedStateFromProps !== 'function' &&
    typeof prototype.getSnapshotBeforeUpdate !== 'function'
  ) {
    return Component;
  }

  // If new component APIs are defined, "unsafe" lifecycles won't be called.
  // Error if any of these lifecycles are present,
  // Because they would work differently between older and newer (16.3+) versions of React.
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === 'function') {
    foundWillMountName = 'componentWillMount';
  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
    foundWillMountName = 'UNSAFE_componentWillMount';
  }
  if (typeof prototype.componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'componentWillReceiveProps';
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
  }
  if (typeof prototype.componentWillUpdate === 'function') {
    foundWillUpdateName = 'componentWillUpdate';
  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
  }
  if (
    foundWillMountName !== null ||
    foundWillReceivePropsName !== null ||
    foundWillUpdateName !== null
  ) {
    var componentName = Component.displayName || Component.name;
    var newApiName =
      typeof Component.getDerivedStateFromProps === 'function'
        ? 'getDerivedStateFromProps()'
        : 'getSnapshotBeforeUpdate()';

    throw Error(
      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
        componentName +
        ' uses ' +
        newApiName +
        ' but also contains the following legacy lifecycles:' +
        (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
        (foundWillReceivePropsName !== null
          ? '\n  ' + foundWillReceivePropsName
          : '') +
        (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
        '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
        'https://fb.me/react-async-component-lifecycle-hooks'
    );
  }

  // React <= 16.2 does not support static getDerivedStateFromProps.
  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
  // Newer versions of React will ignore these lifecycles if gDSFP exists.
  if (typeof Component.getDerivedStateFromProps === 'function') {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }

  // React <= 16.2 does not support getSnapshotBeforeUpdate.
  // As a workaround, use cWU to invoke the new lifecycle.
  // Newer versions of React will ignore that lifecycle if gSBU exists.
  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
    if (typeof prototype.componentDidUpdate !== 'function') {
      throw new Error(
        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
      );
    }

    prototype.componentWillUpdate = componentWillUpdate;

    var componentDidUpdate = prototype.componentDidUpdate;

    prototype.componentDidUpdate = function componentDidUpdatePolyfill(
      prevProps,
      prevState,
      maybeSnapshot
    ) {
      // 16.3+ will not execute our will-update method;
      // It will pass a snapshot value to did-update though.
      // Older versions will require our polyfilled will-update value.
      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
      // Because for <= 15.x versions this might be a "prevContext" object.
      // We also can't just check "__reactInternalSnapshot",
      // Because get-snapshot might return a falsy value.
      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
      var snapshot = this.__reactInternalSnapshotFlag
        ? this.__reactInternalSnapshot
        : maybeSnapshot;

      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }

  return Component;
}




/***/ }),
/* 124 */
/*!****************************************************************!*\
  !*** ./node_modules/react-transition-group/utils/PropTypes.js ***!
  \****************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.transitionTimeout = transitionTimeout;
exports.classNamesShape = exports.timeoutsShape = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ 11));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function transitionTimeout(transitionType) {
  var timeoutPropName = 'transition' + transitionType + 'Timeout';
  var enabledPropName = 'transition' + transitionType;
  return function (props) {
    // If the transition is enabled
    if (props[enabledPropName]) {
      // If no timeout duration is provided
      if (props[timeoutPropName] == null) {
        return new Error(timeoutPropName + ' wasn\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.'); // If the duration isn't a number
      } else if (typeof props[timeoutPropName] !== 'number') {
        return new Error(timeoutPropName + ' must be a number (in milliseconds)');
      }
    }

    return null;
  };
}

var timeoutsShape = _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
  enter: _propTypes.default.number,
  exit: _propTypes.default.number
}).isRequired]);

exports.timeoutsShape = timeoutsShape;

var classNamesShape = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
  enter: _propTypes.default.string,
  exit: _propTypes.default.string,
  active: _propTypes.default.string
}), _propTypes.default.shape({
  enter: _propTypes.default.string,
  enterDone: _propTypes.default.string,
  enterActive: _propTypes.default.string,
  exit: _propTypes.default.string,
  exitDone: _propTypes.default.string,
  exitActive: _propTypes.default.string
})]);

exports.classNamesShape = classNamesShape;

/***/ }),
/* 125 */
/*!****************************************************************!*\
  !*** ./node_modules/react-transition-group/TransitionGroup.js ***!
  \****************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ 11));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ 3));

var _reactLifecyclesCompat = __webpack_require__(/*! react-lifecycles-compat */ 123);

var _ChildMapping = __webpack_require__(/*! ./utils/ChildMapping */ 345);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};

var propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: _propTypes.default.any,

  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   */
  children: _propTypes.default.node,

  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: _propTypes.default.bool,

  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: _propTypes.default.bool,

  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: _propTypes.default.bool,

  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: _propTypes.default.func
} : {};;
var defaultProps = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
  /**
   * The `<TransitionGroup>` component manages a set of transition components
   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
   * components, `<TransitionGroup>` is a state machine for managing the mounting
   * and unmounting of components over time.
   *
   * Consider the example below. As items are removed or added to the TodoList the
   * `in` prop is toggled automatically by the `<TransitionGroup>`.
   *
   * Note that `<TransitionGroup>`  does not define any animation behavior!
   * Exactly _how_ a list item animates is up to the individual transition
   * component. This means you can mix and match animations across different list
   * items.
   */

};

var TransitionGroup =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;

    var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Initial children should all be entering, dependent on appear


    _this.state = {
      handleExited: handleExited,
      firstRender: true
    };
    return _this;
  }

  var _proto = TransitionGroup.prototype;

  _proto.getChildContext = function getChildContext() {
    return {
      transitionGroup: {
        isMounting: !this.appeared
      }
    };
  };

  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
  };

  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children,
        handleExited = _ref.handleExited,
        firstRender = _ref.firstRender;
    return {
      children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };

  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);
    if (child.key in currentChildMapping) return;

    if (child.props.onExited) {
      child.props.onExited(node);
    }

    this.setState(function (state) {
      var children = _extends({}, state.children);

      delete children[child.key];
      return {
        children: children
      };
    });
  };

  _proto.render = function render() {
    var _this$props = this.props,
        Component = _this$props.component,
        childFactory = _this$props.childFactory,
        props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);

    var children = values(this.state.children).map(childFactory);
    delete props.appear;
    delete props.enter;
    delete props.exit;

    if (Component === null) {
      return children;
    }

    return _react.default.createElement(Component, props, children);
  };

  return TransitionGroup;
}(_react.default.Component);

TransitionGroup.childContextTypes = {
  transitionGroup: _propTypes.default.object.isRequired
};
TransitionGroup.propTypes = process.env.NODE_ENV !== "production" ? propTypes : {};
TransitionGroup.defaultProps = defaultProps;

var _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);

exports.default = _default;
module.exports = exports["default"];
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../process/browser.js */ 2)))

/***/ }),
/* 126 */
/*!*********************************************************!*\
  !*** ./src/blocks/testimonial/components/AuthorName.js ***!
  \*********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var __ = wp.i18n.__;
var createBlock = wp.blocks.createBlock;

var AuthorName = function (_React$Component) {
	_inherits(AuthorName, _React$Component);

	function AuthorName() {
		_classCallCheck(this, AuthorName);

		return _possibleConstructorReturn(this, (AuthorName.__proto__ || Object.getPrototypeOf(AuthorName)).apply(this, arguments));
	}

	_createClass(AuthorName, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes,
			    props = _props.props,
			    index_value = _props.index_value;


			var test_arr = attributes.test_block[index_value];
			var author_name = "";
			if (test_arr && typeof test_arr !== "undefined") {
				author_name = test_arr["name"];
			}

			var data_copy = [].concat(_toConsumableArray(attributes.test_block));

			if (setAttributes !== "not_set") {
				return wp.element.createElement(RichText, {
					tagName: "div",
					value: author_name,
					placeholder: __("Author Name"),
					className: "uagb-tm__author-name",
					onChange: function onChange(value) {
						var new_content = { "description": data_copy[index_value]["description"], "name": value, "company": data_copy[index_value]["company"], "image": data_copy[index_value]["image"] };
						data_copy[index_value] = new_content;
						setAttributes({ "test_block": data_copy });
					},
					onMerge: props.mergeBlocks,
					unstableOnSplit: props.insertBlocksAfter ? function (before, after) {
						for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
							blocks[_key - 2] = arguments[_key];
						}

						setAttributes({ content: before });
						props.insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
					} : undefined,
					onRemove: function onRemove() {
						return props.onReplace([]);
					}
				});
			} else {
				return wp.element.createElement(RichText.Content, {
					tagName: "span",
					value: author_name,
					className: "uagb-tm__author-name"
				});
			}
		}
	}]);

	return AuthorName;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (AuthorName);

/***/ }),
/* 127 */
/*!******************************************************!*\
  !*** ./src/blocks/testimonial/components/Company.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var createBlock = wp.blocks.createBlock;
var __ = wp.i18n.__;

var Company = function (_React$Component) {
	_inherits(Company, _React$Component);

	function Company() {
		_classCallCheck(this, Company);

		return _possibleConstructorReturn(this, (Company.__proto__ || Object.getPrototypeOf(Company)).apply(this, arguments));
	}

	_createClass(Company, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes,
			    props = _props.props,
			    index_value = _props.index_value;


			var test_arr = attributes.test_block[index_value];
			var company = "";
			if (test_arr && typeof test_arr !== "undefined") {
				company = test_arr["company"];
			}

			var data_copy = [].concat(_toConsumableArray(attributes.test_block));

			if (setAttributes !== "not_set") {
				return wp.element.createElement(RichText, {
					tagName: "div",
					value: company,
					className: "uagb-tm__company",
					onChange: function onChange(value) {
						var new_content = { "description": data_copy[index_value]["description"], "name": data_copy[index_value]["name"], "company": value, "image": data_copy[index_value]["image"] };
						data_copy[index_value] = new_content;
						setAttributes({ "test_block": data_copy });
					},
					multiline: false,
					placeholder: __("Company Name"),
					onMerge: props.mergeBlocks,
					unstableOnSplit: props.insertBlocksAfter ? function (before, after) {
						for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
							blocks[_key - 2] = arguments[_key];
						}

						setAttributes({ content: before });
						props.insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
					} : undefined,
					onRemove: function onRemove() {
						return props.onReplace([]);
					}
				});
			} else {
				return wp.element.createElement(RichText.Content, {
					tagName: "span",
					value: company,
					className: "uagb-tm__company"
				});
			}
		}
	}]);

	return Company;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Company);

/***/ }),
/* 128 */
/*!**********************************************************!*\
  !*** ./src/blocks/testimonial/components/Description.js ***!
  \**********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var __ = wp.i18n.__;
var createBlock = wp.blocks.createBlock;

var Description = function (_React$Component) {
	_inherits(Description, _React$Component);

	function Description() {
		_classCallCheck(this, Description);

		return _possibleConstructorReturn(this, (Description.__proto__ || Object.getPrototypeOf(Description)).apply(this, arguments));
	}

	_createClass(Description, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes,
			    props = _props.props,
			    index_value = _props.index_value;


			var test_arr = attributes.test_block[index_value];
			var description = "";
			if (test_arr && typeof test_arr !== "undefined") {
				description = test_arr["description"];
			}

			var data_copy = [].concat(_toConsumableArray(attributes.test_block));

			if (setAttributes !== "not_set") {
				return wp.element.createElement(RichText, {
					tagName: "div",
					value: description,
					placeholder: __("Write Description"),
					className: "uagb-tm__desc",
					onChange: function onChange(value) {

						var new_content = { "description": value, "name": data_copy[index_value]["name"], "company": data_copy[index_value]["company"], "image": data_copy[index_value]["image"] };
						data_copy[index_value] = new_content;
						setAttributes({ "test_block": data_copy });
					},
					onMerge: props.mergeBlocks,
					unstableOnSplit: props.insertBlocksAfter ? function (before, after) {
						for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
							blocks[_key - 2] = arguments[_key];
						}

						setAttributes({ content: before });
						props.insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
					} : undefined,
					onRemove: function onRemove() {
						return props.onReplace([]);
					}
				});
			} else {
				return wp.element.createElement(RichText.Content, {
					tagName: "div",
					value: description,
					className: "uagb-tm__desc"
				});
			}
		}
	}]);

	return Description;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Description);

/***/ }),
/* 129 */
/*!*******************************************!*\
  !*** ./src/blocks/testimonial/classes.js ***!
  \*******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline CSS class.
 * @param {object} props - The block object.
 * @return {array} The inline CSS class.
 */

function PositionClasses(attributes) {

	var iconimgStyle_class = "";
	iconimgStyle_class += " uagb-tm__imgicon-style-" + attributes.iconimgStyle + " ";
	iconimgStyle_class += "uagb-tm__image-position-" + attributes.imagePosition + " ";

	if (attributes.imagePosition == "left" || attributes.imagePosition == "right") {
		iconimgStyle_class += "uagb-tm__image-aligned-" + attributes.imageAlignment + " ";
		if (attributes.stack !== "none") {
			iconimgStyle_class += "uagb-tm-stacked-" + attributes.stack + " ";
			if (attributes.imagePosition === "right") {
				iconimgStyle_class += "uagb-tm-reverse-order-" + attributes.stack + " ";
			}
		}
	}

	iconimgStyle_class += "uagb-tm__bg-type-" + attributes.backgroundType + " ";

	return [iconimgStyle_class];
}

/* harmony default export */ __webpack_exports__["a"] = (PositionClasses);

/***/ }),
/* 130 */
/*!***************************************************************!*\
  !*** ./src/blocks/testimonial/components/TestimonialImage.js ***!
  \***************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var __ = wp.i18n.__;

var TestimonialImage = function (_React$Component) {
	_inherits(TestimonialImage, _React$Component);

	function TestimonialImage() {
		_classCallCheck(this, TestimonialImage);

		return _possibleConstructorReturn(this, (TestimonialImage.__proto__ || Object.getPrototypeOf(TestimonialImage)).apply(this, arguments));
	}

	_createClass(TestimonialImage, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    index_value = _props.index_value;

			var url_check = "";

			var image_arr = attributes.test_block[index_value];

			if (image_arr && typeof image_arr !== "undefined") {
				var image = image_arr["image"];
				var url = "";

				if (typeof image !== "undefined" && image !== null && image !== "") {
					url_check = image.url;
				}

				if (url_check !== "") {
					var size = image.sizes;
					var imageSize = attributes.imageSize;
					if (typeof size !== "undefined" && typeof size[imageSize] !== "undefined") {
						url = size[imageSize].url;
					} else {
						url = url_check;
					}

					return wp.element.createElement(
						"div",
						{ className: "uagb-tm__image-content", key: "tm_img-wrap-" + index_value },
						wp.element.createElement(
							"div",
							{ className: "uagb-tm__image", key: "tm_img-" + index_value },
							wp.element.createElement("img", {
								className: "",
								src: url,
								alt: image.alt
							})
						)
					);
				} else {
					return null;
				}
			} else {
				return null;
			}
		}
	}]);

	return TestimonialImage;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (TestimonialImage);

/***/ }),
/* 131 */
/*!******************************************!*\
  !*** ./src/blocks/social-share/links.js ***!
  \******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var links = {
	facebook: "https://www.facebook.com/sharer.php?u=",
	twitter: "https://twitter.com/share?url=",
	google: "https://plus.google.com/share?url=",
	pinterest: "https://pinterest.com/pin/create/link/?url=",
	linkedin: "https://www.linkedin.com/shareArticle?url=",
	digg: "http://digg.com/submit?url=",
	blogger: "https://www.blogger.com/blog_this.pyra?t&amp;u=",
	reddit: "https://reddit.com/submit?url=",
	stumbleupon: "https://www.stumbleupon.com/submit?url=",
	tumblr: "https://www.tumblr.com/widgets/share/tool?canonicalUrl=",
	myspace: "https://myspace.com/post?u=",
	email: "mailto:?body="
};

/* harmony default export */ __webpack_exports__["a"] = (links);

/***/ }),
/* 132 */
/*!********************************************************!*\
  !*** ./src/blocks/restaurant-menu/components/Title.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var __ = wp.i18n.__;
var createBlock = wp.blocks.createBlock;

var Title = function (_React$Component) {
	_inherits(Title, _React$Component);

	function Title() {
		_classCallCheck(this, Title);

		return _possibleConstructorReturn(this, (Title.__proto__ || Object.getPrototypeOf(Title)).apply(this, arguments));
	}

	_createClass(Title, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes,
			    props = _props.props,
			    index_value = _props.index_value;


			var test_arr = attributes.rest_menu_item_arr[index_value];
			var author_title = "";
			if (test_arr && typeof test_arr !== "undefined") {
				author_title = test_arr["title"];
			}

			if (setAttributes !== "not_set") {
				var data_copy = [].concat(_toConsumableArray(attributes.rest_menu_item_arr));
				return wp.element.createElement(RichText, {
					tagName: attributes.headingTag,
					value: author_title,
					placeholder: __("Write a Title"),
					className: "uagb-rm__title",
					onChange: function onChange(value) {
						var new_content = { "description": data_copy[index_value]["description"], "title": value, "price": data_copy[index_value]["price"], "image": data_copy[index_value]["image"] };
						data_copy[index_value] = new_content;
						setAttributes({ "rest_menu_item_arr": data_copy });
					},
					onMerge: props.mergeBlocks,
					unstableOnSplit: props.insertBlocksAfter ? function (before, after) {
						for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
							blocks[_key - 2] = arguments[_key];
						}

						setAttributes({ content: before });
						props.insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
					} : undefined,
					onRemove: function onRemove() {
						return props.onReplace([]);
					}
				});
			} else {
				return wp.element.createElement(RichText.Content, {
					tagName: attributes.headingTag,
					value: author_title,
					className: "uagb-rm__title"
				});
			}
		}
	}]);

	return Title;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Title);

/***/ }),
/* 133 */
/*!********************************************************!*\
  !*** ./src/blocks/restaurant-menu/components/Price.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var __ = wp.i18n.__;
var createBlock = wp.blocks.createBlock;

var Price = function (_React$Component) {
	_inherits(Price, _React$Component);

	function Price() {
		_classCallCheck(this, Price);

		return _possibleConstructorReturn(this, (Price.__proto__ || Object.getPrototypeOf(Price)).apply(this, arguments));
	}

	_createClass(Price, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes,
			    props = _props.props,
			    index_value = _props.index_value;


			var rest_arr = attributes.rest_menu_item_arr[index_value];
			var price = "";
			if (rest_arr && typeof rest_arr !== "undefined") {
				price = rest_arr["price"];
			}

			var data_copy = [].concat(_toConsumableArray(attributes.rest_menu_item_arr));

			if (setAttributes !== "not_set") {
				return wp.element.createElement(RichText, {
					tagName: "div",
					value: price,
					className: "uagb-rm__price",
					placeholder: __("Price"),
					onChange: function onChange(value) {
						var new_content = { "description": data_copy[index_value]["description"], "title": data_copy[index_value]["title"], "price": value, "image": data_copy[index_value]["image"] };
						data_copy[index_value] = new_content;
						setAttributes({ "rest_menu_item_arr": data_copy });
					},
					multiline: false,
					onMerge: props.mergeBlocks,
					unstableOnSplit: props.insertBlocksAfter ? function (before, after) {
						for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
							blocks[_key - 2] = arguments[_key];
						}

						setAttributes({ content: before });
						props.insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
					} : undefined,
					onRemove: function onRemove() {
						return props.onReplace([]);
					}
				});
			} else {
				return wp.element.createElement(RichText.Content, {
					tagName: "span",
					value: price,
					className: "uagb-rm__price"
				});
			}
		}
	}]);

	return Price;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Price);

/***/ }),
/* 134 */
/*!**************************************************************!*\
  !*** ./src/blocks/restaurant-menu/components/Description.js ***!
  \**************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var __ = wp.i18n.__;
var createBlock = wp.blocks.createBlock;

var Description = function (_React$Component) {
	_inherits(Description, _React$Component);

	function Description() {
		_classCallCheck(this, Description);

		return _possibleConstructorReturn(this, (Description.__proto__ || Object.getPrototypeOf(Description)).apply(this, arguments));
	}

	_createClass(Description, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes,
			    props = _props.props,
			    index_value = _props.index_value;


			var rest_arr = attributes.rest_menu_item_arr[index_value];
			var description = "";
			if (rest_arr && typeof rest_arr !== "undefined") {
				description = rest_arr["description"];
			}
			var data_copy = [].concat(_toConsumableArray(attributes.rest_menu_item_arr));

			if (setAttributes !== "not_set") {
				return wp.element.createElement(RichText, {
					tagName: "div",
					value: description,
					placeholder: __("Write a Description"),
					className: "uagb-rm__desc",
					onChange: function onChange(value) {
						var new_content = { "description": value, "title": data_copy[index_value]["title"], "price": data_copy[index_value]["price"], "image": data_copy[index_value]["image"] };
						data_copy[index_value] = new_content;
						setAttributes({ "rest_menu_item_arr": data_copy });
					},
					onMerge: props.mergeBlocks,
					unstableOnSplit: props.insertBlocksAfter ? function (before, after) {
						for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
							blocks[_key - 2] = arguments[_key];
						}

						setAttributes({ content: before });
						props.insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
					} : undefined,
					onRemove: function onRemove() {
						return props.onReplace([]);
					}
				});
			} else {
				return wp.element.createElement(RichText.Content, {
					tagName: "div",
					value: description,
					className: "uagb-rm__desc"
				});
			}
		}
	}]);

	return Description;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Description);

/***/ }),
/* 135 */
/*!***********************************************!*\
  !*** ./src/blocks/restaurant-menu/classes.js ***!
  \***********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline CSS class.
 * @param {object} props - The block object.
 * @return {array} The inline CSS class.
 */

function PositionClasses(attributes) {

	var iconimgStyle_class = "";

	var imge_cnt = 0;
	attributes.rest_menu_item_arr.map(function (item, thisIndex) {
		var image_arr = attributes.rest_menu_item_arr[thisIndex];
		if (image_arr && typeof image_arr !== "undefined") {
			var image = image_arr["image"];
			if (typeof image !== "undefined" && image !== null && image !== "") {
				imge_cnt++;
			}
		}
	});

	if (imge_cnt > 0) {
		iconimgStyle_class += "uagb-rm__image-position-" + attributes.imagePosition + " ";
	}

	iconimgStyle_class += " uagb-rm__align-" + attributes.headingAlign + " ";

	if ("left" == attributes.imagePosition || "right" == attributes.imagePosition) {
		iconimgStyle_class += "uagb-rm__image-aligned-" + attributes.imageAlignment + " ";
		if (attributes.stack !== "none") {
			iconimgStyle_class += "uagb-rm-stacked-" + attributes.stack + " ";
			if (attributes.imagePosition === "right") {
				iconimgStyle_class += "uagb-rm-reverse-order-" + attributes.stack + " ";
			}
		}
	}

	iconimgStyle_class += "uagb-rm__desk-column-" + attributes.columns + " ";
	iconimgStyle_class += "uagb-rm__tablet-column-" + attributes.tcolumns + " ";
	iconimgStyle_class += "uagb-rm__mobile-column-" + attributes.mcolumns + " ";

	return [iconimgStyle_class];
}

/* harmony default export */ __webpack_exports__["a"] = (PositionClasses);

/***/ }),
/* 136 */
/*!****************************************************************!*\
  !*** ./src/blocks/restaurant-menu/components/RestMenuImage.js ***!
  \****************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var __ = wp.i18n.__;

var RestMenuImage = function (_React$Component) {
	_inherits(RestMenuImage, _React$Component);

	function RestMenuImage() {
		_classCallCheck(this, RestMenuImage);

		return _possibleConstructorReturn(this, (RestMenuImage.__proto__ || Object.getPrototypeOf(RestMenuImage)).apply(this, arguments));
	}

	_createClass(RestMenuImage, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    index_value = _props.index_value;

			var url_check = "";

			var image_arr = attributes.rest_menu_item_arr[index_value];

			if (image_arr && typeof image_arr !== "undefined") {
				var image = image_arr["image"];
				var url = "";

				if (typeof image !== "undefined" && image !== null && image !== "") {
					url_check = image.url;
				}

				if (url_check !== "") {
					var size = image.sizes;
					var imageSize = attributes.imageSize;
					if (typeof size !== "undefined" && typeof size[imageSize] !== "undefined") {
						url = size[imageSize].url;
					} else {
						url = url_check;
					}

					return wp.element.createElement(
						"div",
						{ className: "uagb-rm__image-content", key: "rm_img-wrap-" + index_value },
						wp.element.createElement(
							"div",
							{ className: "uagb-rm__image", key: "rm_img-" + index_value },
							wp.element.createElement("img", {
								className: "",
								src: url,
								alt: image.alt
							})
						)
					);
				} else {
					return null;
				}
			} else {
				return null;
			}
		}
	}]);

	return RestMenuImage;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (RestMenuImage);

/***/ }),
/* 137 */
/*!****************************************!*\
  !*** ./src/blocks/timeline/style.scss ***!
  \****************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 138 */
/*!*******************************************************!*\
  !*** ./src/blocks/call-to-action/components/Title.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var createBlock = wp.blocks.createBlock;
var __ = wp.i18n.__;

var Title = function (_React$Component) {
	_inherits(Title, _React$Component);

	function Title() {
		_classCallCheck(this, Title);

		return _possibleConstructorReturn(this, (Title.__proto__ || Object.getPrototypeOf(Title)).apply(this, arguments));
	}

	_createClass(Title, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes,
			    props = _props.props;


			if (setAttributes !== "not_set") {
				return wp.element.createElement(RichText, {
					tagName: attributes.titleTag,
					placeholder: __("Write a Heading"),
					value: attributes.ctaTitle,
					className: "uagb-cta__title",
					onChange: function onChange(value) {
						return setAttributes({ ctaTitle: value });
					},
					multiline: false,
					onMerge: props.mergeBlocks,
					unstableOnSplit: props.insertBlocksAfter ? function (before, after) {
						for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
							blocks[_key - 2] = arguments[_key];
						}

						setAttributes({ content: before });
						props.insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
					} : undefined,
					onRemove: function onRemove() {
						return props.onReplace([]);
					}
				});
			} else {
				return wp.element.createElement(RichText.Content, {
					tagName: attributes.titleTag,
					value: attributes.ctaTitle,
					className: "uagb-cta__title"
				});
			}
		}
	}]);

	return Title;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Title);

/***/ }),
/* 139 */
/*!*************************************************************!*\
  !*** ./src/blocks/call-to-action/components/Description.js ***!
  \*************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var __ = wp.i18n.__;
var createBlock = wp.blocks.createBlock;

var Description = function (_React$Component) {
	_inherits(Description, _React$Component);

	function Description() {
		_classCallCheck(this, Description);

		return _possibleConstructorReturn(this, (Description.__proto__ || Object.getPrototypeOf(Description)).apply(this, arguments));
	}

	_createClass(Description, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes,
			    props = _props.props;


			if (setAttributes !== "not_set") {
				return wp.element.createElement(RichText, {
					tagName: "p",
					value: attributes.description,
					placeholder: __("Write a Description"),
					className: "uagb-cta__desc",
					onChange: function onChange(value) {
						return setAttributes({ description: value });
					},
					onMerge: props.mergeBlocks,
					unstableOnSplit: props.insertBlocksAfter ? function (before, after) {
						for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
							blocks[_key - 2] = arguments[_key];
						}

						setAttributes({ content: before });
						props.insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
					} : undefined,
					onRemove: function onRemove() {
						return props.onReplace([]);
					}
				});
			} else {
				return wp.element.createElement(RichText.Content, {
					tagName: "p",
					value: attributes.description,
					className: "uagb-cta__desc"
				});
			}
		}
	}]);

	return Description;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Description);

/***/ }),
/* 140 */
/*!**********************************************!*\
  !*** ./src/blocks/call-to-action/classes.js ***!
  \**********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline CSS class.
 * @param {object} props - The block object.
 * @return {array} The inline CSS class.
 */

function CtaPositionClasses(attributes) {

	var iconimgStyle_class = "";

	iconimgStyle_class += "uagb-cta__block" + " ";
	iconimgStyle_class += "uagb-cta__icon-position-" + attributes.ctaPosition + " ";

	if (attributes.ctaPosition === "right") {
		iconimgStyle_class += "uagb-cta__content-right" + " ";
	}

	if (attributes.ctaPosition === "right" && attributes.stack !== "none") {
		iconimgStyle_class += "uagb-cta__content-stacked-" + attributes.stack + " ";
	}

	if (attributes.ctaPosition !== "below-title") {
		iconimgStyle_class += "uagb-cta__button-valign-" + attributes.buttonAlign + " ";
	}

	if (attributes.ctaType !== "text" && attributes.ctaType !== "button") {
		iconimgStyle_class += "uagb-cta__button-type-none" + " ";
	}

	return [iconimgStyle_class];
}

/* harmony default export */ __webpack_exports__["a"] = (CtaPositionClasses);

/***/ }),
/* 141 */
/*!**************************************************************!*\
  !*** ./src/blocks/call-to-action/components/CallToAction.js ***!
  \**************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;




var CallToAction = function (_React$Component) {
	_inherits(CallToAction, _React$Component);

	function CallToAction() {
		_classCallCheck(this, CallToAction);

		return _possibleConstructorReturn(this, (CallToAction.__proto__ || Object.getPrototypeOf(CallToAction)).apply(this, arguments));
	}

	_createClass(CallToAction, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes;


			var ctaBtnClass = "uagb-cta__block-link uagb-cta__button-link-wrapper uagb-cta-typeof-" + attributes.ctaType;

			var target = "_self";
			var rel = "noopener noreferrer";
			if (attributes.ctaTarget) {
				target = "_blank";
			}

			var cta_icon_output = "";
			if (attributes.ctaIcon !== "") {
				cta_icon_output = wp.element.createElement(
					"span",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-cta-" + attributes.ctaType + "-icon", "uagb-cta__align-button-" + attributes.ctaIconPosition) },
					wp.element.createElement("i", { className: attributes.ctaIcon })
				);
			}

			var link = "javascript:void(0)";
			if (setAttributes == "not_set") {
				link = attributes.ctaLink;
			}
			return wp.element.createElement(
				"div",
				{ className: "uagb-cta__link-wrapper uagb-cta__block-link-style" },
				(attributes.ctaType === "button" || attributes.ctaType === "text") && wp.element.createElement(
					"div",
					{ className: "uagb-cta__button-wrapper" },
					wp.element.createElement(
						"a",
						{ href: link, className: ctaBtnClass, target: target, rel: rel },
						attributes.ctaIconPosition === "before" && cta_icon_output,
						wp.element.createElement(
							"span",
							{ className: "uagb-cta__link-content-inner" },
							wp.element.createElement(
								"span",
								null,
								attributes.ctaText
							)
						),
						attributes.ctaIconPosition === "after" && cta_icon_output
					)
				)
			);
		}
	}]);

	return CallToAction;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (CallToAction);

/***/ }),
/* 142 */
/*!****************************************************!*\
  !*** ./src/blocks/call-to-action/inline-styles.js ***!
  \****************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline styles.
 * @param  {object} props - The block object.
 * @return {object} The inline background type CSS.
 */
function CtaStyle(props) {
	var _props$attributes = props.attributes,
	    textAlign = _props$attributes.textAlign,
	    titleColor = _props$attributes.titleColor,
	    descColor = _props$attributes.descColor,
	    titleFontSize = _props$attributes.titleFontSize,
	    descFontSize = _props$attributes.descFontSize,
	    titleSpace = _props$attributes.titleSpace,
	    descSpace = _props$attributes.descSpace,
	    ctaPosition = _props$attributes.ctaPosition,
	    block_id = _props$attributes.block_id,
	    ctaFontSize = _props$attributes.ctaFontSize,
	    ctaBtnSize = _props$attributes.ctaBtnSize,
	    ctaBtnLinkColor = _props$attributes.ctaBtnLinkColor,
	    ctaBgColor = _props$attributes.ctaBgColor,
	    ctaBtnVertPadding = _props$attributes.ctaBtnVertPadding,
	    ctaBtnHrPadding = _props$attributes.ctaBtnHrPadding,
	    ctaBorderStyle = _props$attributes.ctaBorderStyle,
	    ctaBorderColor = _props$attributes.ctaBorderColor,
	    ctaBorderWidth = _props$attributes.ctaBorderWidth,
	    ctaBorderRadius = _props$attributes.ctaBorderRadius,
	    ctaLinkHoverColor = _props$attributes.ctaLinkHoverColor,
	    ctaBgHoverColor = _props$attributes.ctaBgHoverColor,
	    ctaBorderhoverColor = _props$attributes.ctaBorderhoverColor,
	    ctaIconSpace = _props$attributes.ctaIconSpace,
	    ctaLeftSpace = _props$attributes.ctaLeftSpace,
	    ctaRightSpace = _props$attributes.ctaRightSpace,
	    contentWidth = _props$attributes.contentWidth,
	    ctaType = _props$attributes.ctaType;


	if (props.clientId) {
		var clientId = "uagb-cta-block-" + props.clientId;
	} else {
		var clientId = "uagb-cta-block-" + block_id;
	}

	var selectors = {};

	selectors[".uagb-cta__content-wrap"] = {
		"text-align": textAlign
	};

	if (textAlign === "left" && ctaPosition === "right") {
		selectors[".uagb-cta__left-right-wrap .uagb-cta__content"] = {
			"margin-left": ctaLeftSpace + "px",
			"margin-right": "0px"
		};
	}

	if (textAlign === "right" && ctaPosition === "right") {
		selectors[".uagb-cta__left-right-wrap .uagb-cta__content"] = {
			"margin-right": ctaRightSpace + "px",
			"margin-left": "0px"
		};
	}

	if (ctaPosition === "right" && (ctaType === "text" || ctaType === "button")) {
		selectors[".uagb-cta__content-right .uagb-cta__left-right-wrap .uagb-cta__content"] = {
			"width": contentWidth + "%"
		};
		selectors[".uagb-cta__content-right .uagb-cta__left-right-wrap .uagb-cta__link-wrapper"] = {
			"width": 100 - contentWidth + "%"
		};
	}

	// CTA style

	selectors[".uagb-cta__button-wrapper a.uagb-cta-typeof-text"] = {
		"font-size": ctaFontSize + "px",
		"color": ctaBtnLinkColor
	};
	selectors[".uagb-cta__button-wrapper:hover a.uagb-cta-typeof-text"] = {
		"color": ctaLinkHoverColor
	};

	selectors[".uagb-cta__button-wrapper a.uagb-cta-typeof-button"] = {
		"font-size": ctaFontSize + "px",
		"color": ctaBtnLinkColor,
		"background-color": ctaBgColor,
		"border-style": ctaBorderStyle,
		"border-color": ctaBorderColor,
		"border-radius": ctaBorderRadius + "px",
		"border-width": ctaBorderWidth + "px",
		"padding-top": ctaBtnVertPadding + "px",
		"padding-bottom": ctaBtnVertPadding + "px",
		"padding-left": ctaBtnHrPadding + "px",
		"padding-right": ctaBtnHrPadding + "px"
	};

	selectors[".uagb-cta__button-wrapper:hover a.uagb-cta-typeof-button"] = {
		"color": ctaLinkHoverColor,
		"background-color": ctaBgHoverColor,
		"border-color": ctaBorderhoverColor

		// Title Style
	};selectors[".editor-rich-text .uagb-cta__title"] = {
		"font-size": titleFontSize + "px",
		"color": titleColor,
		"margin-bottom": titleSpace + "px"

		// Description Style
	};selectors[".editor-rich-text .uagb-cta__desc"] = {
		"font-size": descFontSize + "px",
		"color": descColor,
		"margin-bottom": descSpace + "px"
	};

	selectors[".uagb-cta__align-button-after"] = {
		"margin-left": ctaIconSpace + "px"
	};

	selectors[".uagb-cta__align-button-before"] = {
		"margin-right": ctaIconSpace + "px"
	};

	var styling_css = "";

	for (var i in selectors) {

		styling_css += " .block-editor-page #wpwrap #" + clientId + " " + i + " { ";

		var sel = selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (CtaStyle);

/***/ }),
/* 143 */
/*!**************************************!*\
  !*** ./src/blocks/columns/shapes.js ***!
  \**************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var el = wp.element.createElement;

var shapes = {
	"triangle": el("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 1000 100", preserveAspectRatio: "none" }, el("path", { className: "uagb-columns__shape-fill", d: "M500,98.9L0,6.1V0h1000v6.1L500,98.9z" })),
	"wave_brush": el("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 283.5 27.8", preserveAspectRatio: "none" }, el("path", { className: "uagb-columns__shape-fill", d: "M283.5,9.7c0,0-7.3,4.3-14,4.6c-6.8,0.3-12.6,0-20.9-1.5c-11.3-2-33.1-10.1-44.7-5.7	s-12.1,4.6-18,7.4c-6.6,3.2-20,9.6-36.6,9.3C131.6,23.5,99.5,7.2,86.3,8c-1.4,0.1-6.6,0.8-10.5,2c-3.8,1.2-9.4,3.8-17,4.7	c-3.2,0.4-8.3,1.1-14.2,0.9c-1.5-0.1-6.3-0.4-12-1.6c-5.7-1.2-11-3.1-15.8-3.7C6.5,9.2,0,10.8,0,10.8V0h283.5V9.7z M260.8,11.3	c-0.7-1-2-0.4-4.3-0.4c-2.3,0-6.1-1.2-5.8-1.1c0.3,0.1,3.1,1.5,6,1.9C259.7,12.2,261.4,12.3,260.8,11.3z M242.4,8.6	c0,0-2.4-0.2-5.6-0.9c-3.2-0.8-10.3-2.8-15.1-3.5c-8.2-1.1-15.8,0-15.1,0.1c0.8,0.1,9.6-0.6,17.6,1.1c3.3,0.7,9.3,2.2,12.4,2.7	C239.9,8.7,242.4,8.6,242.4,8.6z M185.2,8.5c1.7-0.7-13.3,4.7-18.5,6.1c-2.1,0.6-6.2,1.6-10,2c-3.9,0.4-8.9,0.4-8.8,0.5	c0,0.2,5.8,0.8,11.2,0c5.4-0.8,5.2-1.1,7.6-1.6C170.5,14.7,183.5,9.2,185.2,8.5z M199.1,6.9c0.2,0-0.8-0.4-4.8,1.1	c-4,1.5-6.7,3.5-6.9,3.7c-0.2,0.1,3.5-1.8,6.6-3C197,7.5,199,6.9,199.1,6.9z M283,6c-0.1,0.1-1.9,1.1-4.8,2.5s-6.9,2.8-6.7,2.7	c0.2,0,3.5-0.6,7.4-2.5C282.8,6.8,283.1,5.9,283,6z M31.3,11.6c0.1-0.2-1.9-0.2-4.5-1.2s-5.4-1.6-7.8-2C15,7.6,7.3,8.5,7.7,8.6	C8,8.7,15.9,8.3,20.2,9.3c2.2,0.5,2.4,0.5,5.7,1.6S31.2,11.9,31.3,11.6z M73,9.2c0.4-0.1,3.5-1.6,8.4-2.6c4.9-1.1,8.9-0.5,8.9-0.8	c0-0.3-1-0.9-6.2-0.3S72.6,9.3,73,9.2z M71.6,6.7C71.8,6.8,75,5.4,77.3,5c2.3-0.3,1.9-0.5,1.9-0.6c0-0.1-1.1-0.2-2.7,0.2	C74.8,5.1,71.4,6.6,71.6,6.7z M93.6,4.4c0.1,0.2,3.5,0.8,5.6,1.8c2.1,1,1.8,0.6,1.9,0.5c0.1-0.1-0.8-0.8-2.4-1.3	C97.1,4.8,93.5,4.2,93.6,4.4z M65.4,11.1c-0.1,0.3,0.3,0.5,1.9-0.2s2.6-1.3,2.2-1.2s-0.9,0.4-2.5,0.8C65.3,10.9,65.5,10.8,65.4,11.1	z M34.5,12.4c-0.2,0,2.1,0.8,3.3,0.9c1.2,0.1,2,0.1,2-0.2c0-0.3-0.1-0.5-1.6-0.4C36.6,12.8,34.7,12.4,34.5,12.4z M152.2,21.1	c-0.1,0.1-2.4-0.3-7.5-0.3c-5,0-13.6-2.4-17.2-3.5c-3.6-1.1,10,3.9,16.5,4.1C150.5,21.6,152.3,21,152.2,21.1z" }), el("path", { className: "uagb-columns__shape-fill", d: "M269.6,18c-0.1-0.1-4.6,0.3-7.2,0c-7.3-0.7-17-3.2-16.6-2.9c0.4,0.3,13.7,3.1,17,3.3	C267.7,18.8,269.7,18,269.6,18z" }), el("path", { className: "uagb-columns__shape-fill", d: "M227.4,9.8c-0.2-0.1-4.5-1-9.5-1.2c-5-0.2-12.7,0.6-12.3,0.5c0.3-0.1,5.9-1.8,13.3-1.2	S227.6,9.9,227.4,9.8z" }), el("path", { className: "uagb-columns__shape-fill", d: "M204.5,13.4c-0.1-0.1,2-1,3.2-1.1c1.2-0.1,2,0,2,0.3c0,0.3-0.1,0.5-1.6,0.4	C206.4,12.9,204.6,13.5,204.5,13.4z" }), el("path", { className: "uagb-columns__shape-fill", d: "M201,10.6c0-0.1-4.4,1.2-6.3,2.2c-1.9,0.9-6.2,3.1-6.1,3.1c0.1,0.1,4.2-1.6,6.3-2.6	S201,10.7,201,10.6z" }), el("path", { className: "uagb-columns__shape-fill", d: "M154.5,26.7c-0.1-0.1-4.6,0.3-7.2,0c-7.3-0.7-17-3.2-16.6-2.9c0.4,0.3,13.7,3.1,17,3.3	C152.6,27.5,154.6,26.8,154.5,26.7z" }), el("path", { className: "uagb-columns__shape-fill", d: "M41.9,19.3c0,0,1.2-0.3,2.9-0.1c1.7,0.2,5.8,0.9,8.2,0.7c4.2-0.4,7.4-2.7,7-2.6	c-0.4,0-4.3,2.2-8.6,1.9c-1.8-0.1-5.1-0.5-6.7-0.4S41.9,19.3,41.9,19.3z" }), el("path", { className: "uagb-columns__shape-fill", d: "M75.5,12.6c0.2,0.1,2-0.8,4.3-1.1c2.3-0.2,2.1-0.3,2.1-0.5c0-0.1-1.8-0.4-3.4,0	C76.9,11.5,75.3,12.5,75.5,12.6z" }), el("path", { className: "uagb-columns__shape-fill", d: "M15.6,13.2c0-0.1,4.3,0,6.7,0.5c2.4,0.5,5,1.9,5,2c0,0.1-2.7-0.8-5.1-1.4	C19.9,13.7,15.7,13.3,15.6,13.2z" })),
	"tilt": el("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 1000 100", preserveAspectRatio: "none" }, el("path", { className: "uagb-columns__shape-fill", d: "M0,6V0h1000v100L0,6z" })),
	"mountains": el("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 1000 100", preserveAspectRatio: "none" }, el("path", { className: "uagb-columns__shape-fill", opacity: "0.33", d: "M473,67.3c-203.9,88.3-263.1-34-320.3,0C66,119.1,0,59.7,0,59.7V0h1000v59.7 c0,0-62.1,26.1-94.9,29.3c-32.8,3.3-62.8-12.3-75.8-22.1C806,49.6,745.3,8.7,694.9,4.7S492.4,59,473,67.3z" }), el("path", { className: "uagb-columns__shape-fill", opacity: "0.66", d: "M734,67.3c-45.5,0-77.2-23.2-129.1-39.1c-28.6-8.7-150.3-10.1-254,39.1 s-91.7-34.4-149.2,0C115.7,118.3,0,39.8,0,39.8V0h1000v36.5c0,0-28.2-18.5-92.1-18.5C810.2,18.1,775.7,67.3,734,67.3z" }), el("path", { className: "uagb-columns__shape-fill", d: "M766.1,28.9c-200-57.5-266,65.5-395.1,19.5C242,1.8,242,5.4,184.8,20.6C128,35.8,132.3,44.9,89.9,52.5C28.6,63.7,0,0,0,0 h1000c0,0-9.9,40.9-83.6,48.1S829.6,47,766.1,28.9z" }))
};

/* harmony default export */ __webpack_exports__["a"] = (shapes);

/***/ }),
/* 144 */
/*!*********************************************************!*\
  !*** ./src/blocks/blockquote/components/TweetButton.js ***!
  \*********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Fragment = wp.element.Fragment;

var TweetButton = function (_React$Component) {
	_inherits(TweetButton, _React$Component);

	function TweetButton() {
		_classCallCheck(this, TweetButton);

		return _possibleConstructorReturn(this, (TweetButton.__proto__ || Object.getPrototypeOf(TweetButton)).apply(this, arguments));
	}

	_createClass(TweetButton, [{
		key: 'render',
		value: function render() {
			var attributes = this.props.attributes;


			return wp.element.createElement(
				'a',
				{ href: 'javascript:void(0)', className: 'uagb-blockquote__tweet-button', target: '_blank', rel: 'noopener noreferrer' },
				attributes.iconView === 'icon_text' && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement('i', { className: 'fab fa-twitter' }),
					wp.element.createElement(
						'span',
						{ className: 'uagb-blockquote__tweet-label' },
						attributes.iconLabel
					)
				),
				attributes.iconView === 'icon' && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement('i', { className: 'fab fa-twitter' })
				),
				attributes.iconView === 'text' && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(
						'span',
						{ className: 'uagb-blockquote__tweet-label' },
						attributes.iconLabel
					)
				)
			);
		}
	}]);

	return TweetButton;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (TweetButton);

/***/ }),
/* 145 */
/*!*********************************************************!*\
  !*** ./src/blocks/blockquote/components/Description.js ***!
  \*********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var __ = wp.i18n.__;
var createBlock = wp.blocks.createBlock;

var Description = function (_React$Component) {
	_inherits(Description, _React$Component);

	function Description() {
		_classCallCheck(this, Description);

		return _possibleConstructorReturn(this, (Description.__proto__ || Object.getPrototypeOf(Description)).apply(this, arguments));
	}

	_createClass(Description, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes,
			    props = _props.props;


			if (setAttributes !== "not_set") {
				return wp.element.createElement(RichText, {
					tagName: "div",
					value: attributes.description_text,
					placeholder: __("Write a Description"),
					className: "uagb-blockquote__content",
					onChange: function onChange(value) {
						return setAttributes({ description_text: value });
					},
					onMerge: props.mergeBlocks,
					unstableOnSplit: props.insertBlocksAfter ? function (before, after) {
						for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
							blocks[_key - 2] = arguments[_key];
						}

						setAttributes({ content: before });
						props.insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
					} : undefined,
					onRemove: function onRemove() {
						return props.onReplace([]);
					}
				});
			} else {
				return wp.element.createElement(RichText.Content, {
					tagName: "div",
					value: attributes.description_text,
					className: "uagb-blockquote__content"
				});
			}
		}
	}]);

	return Description;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Description);

/***/ }),
/* 146 */
/*!********************************************************!*\
  !*** ./src/blocks/blockquote/components/AuthorText.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RichText = wp.editor.RichText;
var __ = wp.i18n.__;
var createBlock = wp.blocks.createBlock;

var AuthorText = function (_React$Component) {
	_inherits(AuthorText, _React$Component);

	function AuthorText() {
		_classCallCheck(this, AuthorText);

		return _possibleConstructorReturn(this, (AuthorText.__proto__ || Object.getPrototypeOf(AuthorText)).apply(this, arguments));
	}

	_createClass(AuthorText, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes,
			    props = _props.props;


			if (setAttributes !== "not_set") {
				return wp.element.createElement(RichText, {
					tagName: "cite",
					value: attributes.author,
					placeholder: __("Author Name"),
					className: "uagb-blockquote__author",
					onChange: function onChange(value) {
						return setAttributes({ author: value });
					},
					onMerge: props.mergeBlocks,
					unstableOnSplit: props.insertBlocksAfter ? function (before, after) {
						for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
							blocks[_key - 2] = arguments[_key];
						}

						setAttributes({ content: before });
						props.insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
					} : undefined,
					onRemove: function onRemove() {
						return props.onReplace([]);
					}
				});
			} else {
				return wp.element.createElement(RichText.Content, {
					tagName: "cite",
					value: attributes.author,
					className: "uagb-blockquote__author"
				});
			}
		}
	}]);

	return AuthorText;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (AuthorText);

/***/ }),
/* 147 */
/*!*********************************************************!*\
  !*** ./src/blocks/blockquote/components/AuthorImage.js ***!
  \*********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AuthorImage = function (_React$Component) {
	_inherits(AuthorImage, _React$Component);

	function AuthorImage() {
		_classCallCheck(this, AuthorImage);

		return _possibleConstructorReturn(this, (AuthorImage.__proto__ || Object.getPrototypeOf(AuthorImage)).apply(this, arguments));
	}

	_createClass(AuthorImage, [{
		key: "render",
		value: function render() {
			var attributes = this.props.attributes;


			var url_chk = "";
			if (typeof attributes.authorImage !== "undefined" && attributes.authorImage !== null && attributes.authorImage !== "") {
				url_chk = attributes.authorImage.url;
			}

			var url = "";
			if (url_chk !== "") {
				var size = attributes.authorImage.sizes;
				var authorImageSize = attributes.authorImageSize;

				if (typeof size !== "undefined" && typeof size[authorImageSize] !== "undefined") {
					url = size[authorImageSize].url;
				} else {
					url = url_chk;
				}

				return wp.element.createElement(
					"div",
					{ className: "uagb-quote__author-image" },
					wp.element.createElement("img", {
						className: "",
						src: url,
						alt: attributes.authorImage.alt
					})
				);
			} else {
				return null;
			}
		}
	}]);

	return AuthorImage;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (AuthorImage);

/***/ }),
/* 148 */
/*!***********************!*\
  !*** ./src/blocks.js ***!
  \***********************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__blocks_advanced_heading_block_js__ = __webpack_require__(/*! ./blocks/advanced-heading/block.js */ 149);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__blocks_post_block_js__ = __webpack_require__(/*! ./blocks/post/block.js */ 152);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__blocks_section_block_js__ = __webpack_require__(/*! ./blocks/section/block.js */ 324);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__blocks_buttons_block_js__ = __webpack_require__(/*! ./blocks/buttons/block.js */ 330);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__blocks_info_box_block_js__ = __webpack_require__(/*! ./blocks/info-box/block.js */ 337);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__blocks_testimonial_block_js__ = __webpack_require__(/*! ./blocks/testimonial/block.js */ 349);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__blocks_team_block_js__ = __webpack_require__(/*! ./blocks/team/block.js */ 355);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__blocks_social_share_block_js__ = __webpack_require__(/*! ./blocks/social-share/block.js */ 361);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__blocks_google_map_block_js__ = __webpack_require__(/*! ./blocks/google-map/block.js */ 367);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__blocks_icon_list_block_js__ = __webpack_require__(/*! ./blocks/icon-list/block.js */ 369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__blocks_restaurant_menu_block_js__ = __webpack_require__(/*! ./blocks/restaurant-menu/block.js */ 375);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__blocks_timeline_block_js__ = __webpack_require__(/*! ./blocks/timeline/block.js */ 381);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__blocks_call_to_action_block_js__ = __webpack_require__(/*! ./blocks/call-to-action/block.js */ 395);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__blocks_column_block_js__ = __webpack_require__(/*! ./blocks/column/block.js */ 400);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__blocks_columns_block_js__ = __webpack_require__(/*! ./blocks/columns/block.js */ 405);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__blocks_blockquote_block_js__ = __webpack_require__(/*! ./blocks/blockquote/block.js */ 420);
/**
 * Gutenberg Blocks
 *
 * All blocks related JavaScript files should be imported here.
 * You can create a new block folder in this dir and include code
 * for that block here as well.
 *
 * All blocks should be included here since this is the file that
 * Webpack is compiling as the input file.
 */

















/***/ }),
/* 149 */
/*!**********************************************!*\
  !*** ./src/blocks/advanced-heading/block.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__styling__ = __webpack_require__(/*! ./styling */ 150);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__style_scss__ = __webpack_require__(/*! ./style.scss */ 151);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__style_scss__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * BLOCK: advanced-heading
 */

// Import block dependencies and components.




//  Import CSS.


/* eslint-disable */
// Import __() from wp.i18n
var __ = wp.i18n.__;
/* eslint-enable  */

// Import registerBlockType() from wp.blocks

var _wp$blocks = wp.blocks,
    registerBlockType = _wp$blocks.registerBlockType,
    createBlock = _wp$blocks.createBlock;
var _wp$editor = wp.editor,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    InspectorControls = _wp$editor.InspectorControls,
    RichText = _wp$editor.RichText,
    PanelColorSettings = _wp$editor.PanelColorSettings,
    ColorPalette = _wp$editor.ColorPalette;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl;

// Extend component

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;

var UAGBAdvancedHeading = function (_Component) {
	_inherits(UAGBAdvancedHeading, _Component);

	function UAGBAdvancedHeading() {
		_classCallCheck(this, UAGBAdvancedHeading);

		var _this = _possibleConstructorReturn(this, (UAGBAdvancedHeading.__proto__ || Object.getPrototypeOf(UAGBAdvancedHeading)).apply(this, arguments));

		_this.splitBlock = _this.splitBlock.bind(_this);
		return _this;
	}

	_createClass(UAGBAdvancedHeading, [{
		key: "componentDidMount",
		value: function componentDidMount() {

			// Assigning block_id in the attribute.
			this.props.setAttributes({ block_id: this.props.clientId });

			// Pushing Style tag for this block css.
			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-adv-heading-style-" + this.props.clientId);
			document.head.appendChild($style);
		}
	}, {
		key: "splitBlock",
		value: function splitBlock(before, after) {
			var _props = this.props,
			    attributes = _props.attributes,
			    insertBlocksAfter = _props.insertBlocksAfter,
			    setAttributes = _props.setAttributes,
			    onReplace = _props.onReplace;

			for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
				blocks[_key - 2] = arguments[_key];
			}

			if (after) {
				// Append "After" content as a new paragraph block to the end of
				// any other blocks being inserted after the current paragraph.
				blocks.push(createBlock("core/paragraph", { content: after }));
			}

			if (blocks.length && insertBlocksAfter) {
				insertBlocksAfter(blocks);
			}

			var content = attributes.content;

			if (!before) {
				// If before content is omitted, treat as intent to delete block.
				onReplace([]);
			} else if (content !== before) {
				// Only update content if it has in-fact changed. In case that user
				// has created a new paragraph at end of an existing one, the value
				// of before will be strictly equal to the current content.
				setAttributes({ content: before });
			}
		}
	}, {
		key: "render",
		value: function render() {

			// Setup the attributes
			var _props2 = this.props,
			    isSelected = _props2.isSelected,
			    className = _props2.className,
			    setAttributes = _props2.setAttributes,
			    insertBlocksAfter = _props2.insertBlocksAfter,
			    mergeBlocks = _props2.mergeBlocks,
			    onReplace = _props2.onReplace,
			    _props2$attributes = _props2.attributes,
			    headingTitle = _props2$attributes.headingTitle,
			    headingDesc = _props2$attributes.headingDesc,
			    headingAlign = _props2$attributes.headingAlign,
			    headingColor = _props2$attributes.headingColor,
			    subHeadingColor = _props2$attributes.subHeadingColor,
			    separatorColor = _props2$attributes.separatorColor,
			    headingTag = _props2$attributes.headingTag,
			    headFontSize = _props2$attributes.headFontSize,
			    subHeadFontSize = _props2$attributes.subHeadFontSize,
			    separatorWidth = _props2$attributes.separatorWidth,
			    seperatorStyle = _props2$attributes.seperatorStyle,
			    separatorHeight = _props2$attributes.separatorHeight,
			    headSpace = _props2$attributes.headSpace,
			    separatorSpace = _props2$attributes.separatorSpace,
			    subHeadSpace = _props2$attributes.subHeadSpace;


			var element = document.getElementById("uagb-adv-heading-style-" + this.props.clientId);

			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_1__styling__["a" /* default */])(this.props);
			}

			return wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					BlockControls,
					{ key: "controls" },
					wp.element.createElement(AlignmentToolbar, {
						value: headingAlign,
						onChange: function onChange(value) {
							return setAttributes({ headingAlign: value });
						}
					})
				),
				wp.element.createElement(
					InspectorControls,
					null,
					wp.element.createElement(
						PanelBody,
						{
							title: __("Typography")
						},
						wp.element.createElement(SelectControl, {
							label: __("Tag"),
							value: headingTag,
							onChange: function onChange(value) {
								return setAttributes({ headingTag: value });
							},
							options: [{ value: "h1", label: __("H1") }, { value: "h2", label: __("H2") }, { value: "h3", label: __("H3") }, { value: "h4", label: __("H4") }, { value: "h5", label: __("H5") }, { value: "h6", label: __("H6") }]
						}),
						wp.element.createElement(RangeControl, {
							label: __("Heading Font Size"),
							value: headFontSize,
							onChange: function onChange(value) {
								return setAttributes({ headFontSize: value });
							},
							min: 10,
							max: 100,
							beforeIcon: "editor-textcolor",
							allowReset: true,
							initialPosition: 30
						}),
						wp.element.createElement(RangeControl, {
							label: __("Sub-Heading Font Size"),
							value: subHeadFontSize,
							onChange: function onChange(value) {
								return setAttributes({ subHeadFontSize: value });
							},
							min: 10,
							max: 100,
							beforeIcon: "editor-textcolor",
							allowReset: true,
							initialPosition: 10
						})
					),
					wp.element.createElement(
						PanelBody,
						{
							title: __("Separator"),
							initialOpen: false
						},
						wp.element.createElement(SelectControl, {
							label: __("Style"),
							value: seperatorStyle,
							onChange: function onChange(value) {
								return setAttributes({ seperatorStyle: value });
							},
							options: [{ value: "none", label: __("None") }, { value: "solid", label: __("Solid") }, { value: "double", label: __("Double") }, { value: "dashed", label: __("Dashed") }, { value: "dotted", label: __("Dotted") }]
						}),
						seperatorStyle !== "none" && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(RangeControl, {
								label: __("Thickness"),
								value: separatorHeight,
								onChange: function onChange(value) {
									return setAttributes({ separatorHeight: value });
								},
								min: 0,
								max: 20,
								beforeIcon: "",
								allowReset: true,
								initialPosition: 3
							}),
							wp.element.createElement(RangeControl, {
								label: __("Width"),
								value: separatorWidth,
								onChange: function onChange(value) {
									return setAttributes({ separatorWidth: value });
								},
								min: 0,
								max: 100,
								beforeIcon: "",
								allowReset: true,
								initialPosition: 20
							})
						)
					),
					wp.element.createElement(
						PanelColorSettings,
						{
							title: __("Color Settings"),
							initialOpen: false,
							colorSettings: [{
								value: headingColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ headingColor: colorValue });
								},
								label: __("Heading Color")
							}, {
								value: subHeadingColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ subHeadingColor: colorValue });
								},
								label: __("Sub-Heading Color")
							}]
						},
						seperatorStyle !== "none" && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(
								"p",
								{ className: "uagb-setting-label" },
								__("Seperator Color"),
								wp.element.createElement(
									"span",
									{ className: "components-base-control__label" },
									wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: separatorColor } })
								)
							),
							wp.element.createElement(ColorPalette, {
								value: separatorColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ separatorColor: colorValue });
								},
								allowReset: true
							})
						)
					),
					wp.element.createElement(
						PanelBody,
						{
							title: __("Spacing"),
							initialOpen: false
						},
						wp.element.createElement(RangeControl, {
							label: __("Heading Spacing"),
							value: headSpace,
							onChange: function onChange(value) {
								return setAttributes({ headSpace: value });
							},
							min: 0,
							max: 50,
							beforeIcon: "",
							allowReset: true,
							initialPosition: 0
						}),
						seperatorStyle !== "none" && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(RangeControl, {
								label: __("Separator Spacing"),
								value: separatorSpace,
								onChange: function onChange(value) {
									return setAttributes({ separatorSpace: value });
								},
								min: 0,
								max: 50,
								beforeIcon: "",
								allowReset: true,
								initialPosition: 0
							})
						),
						wp.element.createElement(RangeControl, {
							label: __("Sub-Heading Spacing"),
							value: subHeadSpace,
							onChange: function onChange(value) {
								return setAttributes({ subHeadSpace: value });
							},
							min: 0,
							max: 50,
							beforeIcon: "",
							allowReset: true,
							initialPosition: 0
						})
					)
				),
				wp.element.createElement(
					"div",
					{ className: className, id: "uagb-adv-heading-" + this.props.clientId },
					wp.element.createElement(RichText, {
						tagName: headingTag,
						placeholder: __("Write a Heading"),
						value: headingTitle,
						className: "uagb-heading-text",
						multiline: false,
						onChange: function onChange(value) {
							setAttributes({ headingTitle: value });
						},
						onMerge: mergeBlocks,
						unstableOnSplit: insertBlocksAfter ? function (before, after) {
							for (var _len2 = arguments.length, blocks = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
								blocks[_key2 - 2] = arguments[_key2];
							}

							setAttributes({ content: before });
							insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
						} : undefined,
						onRemove: function onRemove() {
							return onReplace([]);
						}
					}),
					seperatorStyle !== "none" && wp.element.createElement(
						"div",
						{ className: "uagb-separator-wrap" },
						wp.element.createElement("div", { className: "uagb-separator" })
					),
					wp.element.createElement(RichText, {
						tagName: "p",
						placeholder: __("Write a Description"),
						value: headingDesc,
						className: "uagb-desc-text",
						onChange: function onChange(value) {
							return setAttributes({ headingDesc: value });
						},
						onMerge: mergeBlocks,
						unstableOnSplit: this.splitBlock,
						onRemove: function onRemove() {
							return onReplace([]);
						}
					})
				)
			);
		}
	}]);

	return UAGBAdvancedHeading;
}(Component);

/**
 * Register: as Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */


/* unused harmony default export */ var _unused_webpack_default_export = (UAGBAdvancedHeading);
registerBlockType("uagb/advanced-heading", {

	title: uagb_blocks_info.blocks["uagb/advanced-heading"]["title"],
	description: uagb_blocks_info.blocks["uagb/advanced-heading"]["description"],
	icon: __WEBPACK_IMPORTED_MODULE_2__dist_blocks_uagb_controls_block_icons__["a" /* default */].advanced_heading,
	keywords: [__("advanced heading"), __("uagb")],
	category: uagb_blocks_info.category,
	attributes: {
		block_id: {
			type: "string"
		},
		headingTitle: {
			source: "html",
			selector: "h1,h2,h3,h4,h5,h6"
		},
		headingDesc: {
			source: "html",
			selector: "p",
			default: ""
		},
		headingAlign: {
			type: "string",
			default: "center"
		},
		headingColor: {
			type: "string"
		},
		subHeadingColor: {
			type: "string"
		},
		separatorColor: {
			type: "string"
		},
		headingTag: {
			type: "string",
			default: "h2"
		},
		seperatorStyle: {
			type: "string",
			default: "solid"
		},
		separatorHeight: {
			type: "number"
		},
		separatorWidth: {
			type: "number"
		},
		headFontSize: {
			type: "number"
		},
		subHeadFontSize: {
			type: "number"
		},
		headSpace: {
			type: "number",
			default: 15
		},
		separatorSpace: {
			type: "number",
			default: 15
		},
		subHeadSpace: {
			type: "number"
		}
	},
	transforms: {
		from: [{
			type: "block",
			blocks: ["core/paragraph"],
			transform: function transform(_ref) {
				var content = _ref.content;

				console.log(content);
				return createBlock("uagb/advanced-heading", {
					headingDesc: content
				});
			}
		}, {
			type: "block",
			blocks: ["core/heading"],
			transform: function transform(_ref2) {
				var content = _ref2.content;

				console.log(content);
				return createBlock("uagb/advanced-heading", {
					headingTitle: content,
					headingTag: "h3"
				});
			}
		}],
		to: [{
			type: "block",
			blocks: ["core/paragraph"],
			transform: function transform(_ref3) {
				var content = _ref3.content;

				console.log(content);
				return createBlock("core/paragraph", {
					content: content
				});
			}
		}, {
			type: "block",
			blocks: ["core/heading"],
			transform: function transform(_ref4) {
				var content = _ref4.content;

				console.log(content);
				return createBlock("core/heading", {
					content: content
				});
			}
		}]
	},
	edit: UAGBAdvancedHeading,
	save: function save(props) {
		var _props$attributes = props.attributes,
		    block_id = _props$attributes.block_id,
		    headingTitle = _props$attributes.headingTitle,
		    headingDesc = _props$attributes.headingDesc,
		    headingTag = _props$attributes.headingTag,
		    seperatorStyle = _props$attributes.seperatorStyle;


		var seprator_output = "";
		if (seperatorStyle !== "none") {
			seprator_output = wp.element.createElement(
				"div",
				{ className: "uagb-separator-wrap" },
				wp.element.createElement("div", { className: "uagb-separator" })
			);
		}
		return wp.element.createElement(
			"div",
			{ className: props.className, id: "uagb-adv-heading-" + block_id },
			wp.element.createElement(RichText.Content, {
				tagName: headingTag,
				value: headingTitle,
				className: "uagb-heading-text"
			}),
			seprator_output,
			wp.element.createElement(RichText.Content, {
				tagName: "p",
				value: headingDesc,
				className: "uagb-desc-text"
			})
		);
	}
});

/***/ }),
/* 150 */
/*!************************************************!*\
  !*** ./src/blocks/advanced-heading/styling.js ***!
  \************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline styles.
 * @param  {object} props - The block object.
 * @return {object} The inline background type CSS.
 */

function styling(props) {
	var _props$attributes = props.attributes,
	    headingAlign = _props$attributes.headingAlign,
	    headingTag = _props$attributes.headingTag,
	    headFontSize = _props$attributes.headFontSize,
	    headingColor = _props$attributes.headingColor,
	    headSpace = _props$attributes.headSpace,
	    seperatorStyle = _props$attributes.seperatorStyle,
	    separatorHeight = _props$attributes.separatorHeight,
	    separatorWidth = _props$attributes.separatorWidth,
	    separatorColor = _props$attributes.separatorColor,
	    separatorSpace = _props$attributes.separatorSpace,
	    subHeadFontSize = _props$attributes.subHeadFontSize,
	    subHeadingColor = _props$attributes.subHeadingColor,
	    subHeadSpace = _props$attributes.subHeadSpace;


	var selectors = {
		" .uagb-separator-wrap": {
			"text-align": headingAlign
		},
		" .editor-rich-text .uagb-desc-text": {
			"text-align": headingAlign,
			"font-size": subHeadFontSize + "px",
			"color": subHeadingColor,
			"margin-bottom": subHeadSpace + "px"
		}
	};

	selectors[" .editor-rich-text " + headingTag + ".uagb-heading-text"] = {
		"text-align": headingAlign,
		"font-size": headFontSize + "px",
		"color": headingColor,
		"margin-bottom": headSpace + "px"
	};

	if (seperatorStyle !== "none") {
		selectors[" .uagb-separator"] = {
			"border-top-style": seperatorStyle,
			"border-top-width": separatorHeight + "px",
			"width": separatorWidth + "%",
			"border-color": separatorColor,
			"margin-bottom": separatorSpace + "px"
		};
	}
	var styling_css = "";

	for (var i in selectors) {

		styling_css += ".block-editor-page #wpwrap #uagb-adv-heading-" + props.clientId;

		styling_css += i + " { ";

		var sel = selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (styling);

/***/ }),
/* 151 */
/*!************************************************!*\
  !*** ./src/blocks/advanced-heading/style.scss ***!
  \************************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 152 */
/*!**********************************!*\
  !*** ./src/blocks/post/block.js ***!
  \**********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__post_grid_block_js__ = __webpack_require__(/*! ./post-grid/block.js */ 153);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__post_masonry_block_js__ = __webpack_require__(/*! ./post-masonry/block.js */ 231);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__post_carousel_block_js__ = __webpack_require__(/*! ./post-carousel/block.js */ 298);
/**
 * Gutenberg Blocks
 *
 * All blocks related JavaScript files should be imported here.
 * You can create a new block folder in this dir and include code
 * for that block here as well.
 *
 * All blocks should be included here since this is the file that
 * Webpack is compiling as the input file.
 */





/***/ }),
/* 153 */
/*!********************************************!*\
  !*** ./src/blocks/post/post-grid/block.js ***!
  \********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__edit__ = __webpack_require__(/*! ./edit */ 154);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss__ = __webpack_require__(/*! .././style.scss */ 63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__style_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss__ = __webpack_require__(/*! .././editor.scss */ 64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__editor_scss__);
/**
 * BLOCK: UAGB - post-grid
 */

// Import block dependencies and components



//  Import CSS.



// Components
var __ = wp.i18n.__;

// Register block controls

var registerBlockType = wp.blocks.registerBlockType;

// Register the block

registerBlockType("uagb/post-grid", {
	title: uagb_blocks_info.blocks["uagb/post-grid"]["title"],
	description: uagb_blocks_info.blocks["uagb/post-grid"]["description"],
	icon: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__["a" /* default */].post_grid,
	category: uagb_blocks_info.category,
	keywords: [__("post"), __("grid"), __("uagb")],
	edit: __WEBPACK_IMPORTED_MODULE_0__edit__["a" /* default */],
	// Render via PHP
	save: function save() {
		return null;
	}
});

/***/ }),
/* 154 */
/*!*******************************************!*\
  !*** ./src/blocks/post/post-grid/edit.js ***!
  \*******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_isUndefined__ = __webpack_require__(/*! lodash/isUndefined */ 25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_isUndefined___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_isUndefined__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_pickBy__ = __webpack_require__(/*! lodash/pickBy */ 26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_pickBy___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_pickBy__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__blog__ = __webpack_require__(/*! ./blog */ 219);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__styling__ = __webpack_require__(/*! .././styling */ 62);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * External dependencies
 */




// Import Post Components



var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var __ = wp.i18n.__;

var MAX_POSTS_COLUMNS = 4;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Placeholder = _wp$components.Placeholder,
    QueryControls = _wp$components.QueryControls,
    RangeControl = _wp$components.RangeControl,
    SelectControl = _wp$components.SelectControl,
    Spinner = _wp$components.Spinner,
    ToggleControl = _wp$components.ToggleControl,
    TabPanel = _wp$components.TabPanel,
    TextControl = _wp$components.TextControl;
var _wp$editor = wp.editor,
    InspectorControls = _wp$editor.InspectorControls,
    BlockAlignmentToolbar = _wp$editor.BlockAlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    ColorPalette = _wp$editor.ColorPalette;
var withSelect = wp.data.withSelect;

var UAGBPostGrid = function (_Component) {
	_inherits(UAGBPostGrid, _Component);

	function UAGBPostGrid() {
		_classCallCheck(this, UAGBPostGrid);

		return _possibleConstructorReturn(this, (UAGBPostGrid.__proto__ || Object.getPrototypeOf(UAGBPostGrid)).apply(this, arguments));
	}

	_createClass(UAGBPostGrid, [{
		key: "componentDidMount",
		value: function componentDidMount() {

			this.props.setAttributes({ block_id: this.props.clientId });

			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-post-grid-style-" + this.props.clientId);
			document.head.appendChild($style);
		}
	}, {
		key: "render",
		value: function render() {

			// Caching all Props.
			var _props = this.props,
			    attributes = _props.attributes,
			    categoriesList = _props.categoriesList,
			    setAttributes = _props.setAttributes,
			    latestPosts = _props.latestPosts;

			// Caching all attributes.

			var block_id = attributes.block_id,
			    displayPostDate = attributes.displayPostDate,
			    displayPostComment = attributes.displayPostComment,
			    displayPostExcerpt = attributes.displayPostExcerpt,
			    displayPostAuthor = attributes.displayPostAuthor,
			    displayPostImage = attributes.displayPostImage,
			    imgSize = attributes.imgSize,
			    imgPosition = attributes.imgPosition,
			    displayPostLink = attributes.displayPostLink,
			    newTab = attributes.newTab,
			    ctaText = attributes.ctaText,
			    borderWidth = attributes.borderWidth,
			    borderStyle = attributes.borderStyle,
			    borderColor = attributes.borderColor,
			    borderHColor = attributes.borderHColor,
			    borderRadius = attributes.borderRadius,
			    btnVPadding = attributes.btnVPadding,
			    btnHPadding = attributes.btnHPadding,
			    align = attributes.align,
			    columns = attributes.columns,
			    tcolumns = attributes.tcolumns,
			    mcolumns = attributes.mcolumns,
			    order = attributes.order,
			    orderBy = attributes.orderBy,
			    categories = attributes.categories,
			    postsToShow = attributes.postsToShow,
			    rowGap = attributes.rowGap,
			    columnGap = attributes.columnGap,
			    bgColor = attributes.bgColor,
			    contentPadding = attributes.contentPadding,
			    contentPaddingMobile = attributes.contentPaddingMobile,
			    titleColor = attributes.titleColor,
			    titleTag = attributes.titleTag,
			    titleFontSize = attributes.titleFontSize,
			    metaFontSize = attributes.metaFontSize,
			    excerptFontSize = attributes.excerptFontSize,
			    ctaFontSize = attributes.ctaFontSize,
			    metaColor = attributes.metaColor,
			    excerptColor = attributes.excerptColor,
			    ctaColor = attributes.ctaColor,
			    ctaBgColor = attributes.ctaBgColor,
			    ctaHColor = attributes.ctaHColor,
			    ctaBgHColor = attributes.ctaBgHColor,
			    titleBottomSpace = attributes.titleBottomSpace,
			    metaBottomSpace = attributes.metaBottomSpace,
			    excerptBottomSpace = attributes.excerptBottomSpace,
			    equalHeight = attributes.equalHeight,
			    excerptLength = attributes.excerptLength,
			    overlayOpacity = attributes.overlayOpacity,
			    bgOverlayColor = attributes.bgOverlayColor,
			    linkBox = attributes.linkBox;


			var hoverSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Hover Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaHColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: ctaHColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ ctaHColor: colorValue });
					},
					allowReset: true
				}),
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Background Hover Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaBgHColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: ctaBgHColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ ctaBgHColor: colorValue });
					},
					allowReset: true
				}),
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Border Hover Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: borderHColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: borderHColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ borderHColor: colorValue });
					},
					allowReset: true
				})
			);

			var normalSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: ctaColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ ctaColor: colorValue });
					},
					allowReset: true
				}),
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Background Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaBgColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: ctaBgColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ ctaBgColor: colorValue });
					},
					allowReset: true
				}),
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Border Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: borderColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: borderColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ borderColor: colorValue });
					},
					allowReset: true
				})
			);

			// All Controls.
			var inspectorControls = wp.element.createElement(
				InspectorControls,
				null,
				wp.element.createElement(
					PanelBody,
					{ title: __("General") },
					wp.element.createElement(QueryControls, _extends({ order: order, orderBy: orderBy }, {
						numberOfItems: postsToShow,
						categoriesList: categoriesList,
						selectedCategoryId: categories,
						onOrderChange: function onOrderChange(value) {
							return setAttributes({ order: value });
						},
						onOrderByChange: function onOrderByChange(value) {
							return setAttributes({ orderBy: value });
						},
						onCategoryChange: function onCategoryChange(value) {
							return setAttributes({ categories: "" !== value ? value : undefined });
						},
						onNumberOfItemsChange: function onNumberOfItemsChange(value) {
							return setAttributes({ postsToShow: value });
						}
					})),
					wp.element.createElement(RangeControl, {
						label: __("Columns"),
						value: columns,
						onChange: function onChange(value) {
							return setAttributes({ columns: value });
						},
						min: 1,
						max: !hasPosts ? MAX_POSTS_COLUMNS : Math.min(MAX_POSTS_COLUMNS, latestPosts.length)
					}),
					wp.element.createElement(RangeControl, {
						label: __("Columns (Tablet)"),
						value: tcolumns,
						onChange: function onChange(value) {
							return setAttributes({ tcolumns: value });
						},
						min: 1,
						max: !hasPosts ? MAX_POSTS_COLUMNS : Math.min(MAX_POSTS_COLUMNS, latestPosts.length)
					}),
					wp.element.createElement(RangeControl, {
						label: __("Columns (Mobile)"),
						value: mcolumns,
						onChange: function onChange(value) {
							return setAttributes({ mcolumns: value });
						},
						min: 1,
						max: !hasPosts ? MAX_POSTS_COLUMNS : Math.min(MAX_POSTS_COLUMNS, latestPosts.length)
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Equal Height"),
						checked: equalHeight,
						onChange: function onChange(value) {
							return setAttributes({ equalHeight: !equalHeight });
						}
					})
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Image"), initialOpen: false },
					wp.element.createElement(ToggleControl, {
						label: __("Show Featured Image"),
						checked: displayPostImage,
						onChange: function onChange(value) {
							return setAttributes({ displayPostImage: !displayPostImage });
						}
					}),
					displayPostImage == true && wp.element.createElement(SelectControl, {
						label: __("Image Sizes"),
						value: imgSize,
						onChange: function onChange(value) {
							return setAttributes({ imgSize: value });
						},
						options: [{ value: "thumbnail", label: __("Thumbnail") }, { value: "medium", label: __("Medium") }, { value: "medium_large", label: __("Medium Large") }, { value: "large", label: __("Large") }]
					}),
					displayPostImage == true && wp.element.createElement(SelectControl, {
						label: __("Image Position"),
						value: imgPosition,
						onChange: function onChange(value) {
							return setAttributes({ imgPosition: value });
						},
						options: [{ value: "top", label: __("Top") }, { value: "background", label: __("Background") }]
					}),
					displayPostImage == true && imgPosition == "background" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Background Overlay Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: bgOverlayColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: bgOverlayColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ bgOverlayColor: colorValue });
							},
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Overlay Opacity"),
							value: overlayOpacity,
							onChange: function onChange(value) {
								return setAttributes({ overlayOpacity: value });
							},
							min: 0,
							max: 100,
							allowReset: true
						}),
						wp.element.createElement(ToggleControl, {
							label: __("Link Complete Box"),
							checked: linkBox,
							onChange: function onChange(value) {
								return setAttributes({ linkBox: !linkBox });
							}
						})
					)
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Content"), initialOpen: false },
					wp.element.createElement(ToggleControl, {
						label: __("Show Author"),
						checked: displayPostAuthor,
						onChange: function onChange(value) {
							return setAttributes({ displayPostAuthor: !displayPostAuthor });
						}
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Show Date"),
						checked: displayPostDate,
						onChange: function onChange(value) {
							return setAttributes({ displayPostDate: !displayPostDate });
						}
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Show Comment"),
						checked: displayPostComment,
						onChange: function onChange(value) {
							return setAttributes({ displayPostComment: !displayPostComment });
						}
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Show Excerpt"),
						checked: displayPostExcerpt,
						onChange: function onChange(value) {
							return setAttributes({ displayPostExcerpt: !displayPostExcerpt });
						}
					}),
					displayPostExcerpt && wp.element.createElement(RangeControl, {
						label: __("Excerpt Length"),
						value: excerptLength,
						onChange: function onChange(value) {
							return setAttributes({ excerptLength: value });
						},
						min: 1,
						max: 50,
						allowReset: true
					})
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Read More Link"), initialOpen: false },
					wp.element.createElement(ToggleControl, {
						label: __("Show Read More Link"),
						checked: displayPostLink,
						onChange: function onChange(value) {
							return setAttributes({ displayPostLink: !displayPostLink });
						}
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Open links in New Tab"),
						checked: newTab,
						onChange: function onChange(value) {
							return setAttributes({ newTab: !newTab });
						}
					}),
					displayPostLink && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(TextControl, {
							label: __("Text"),
							value: ctaText,
							onChange: function onChange(value) {
								return setAttributes({ ctaText: value });
							}
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Text Font Size"),
							value: ctaFontSize,
							onChange: function onChange(value) {
								return setAttributes({ ctaFontSize: value });
							},
							min: 1,
							max: 50,
							beforeIcon: "editor-textcolor",
							allowReset: true
						}),
						wp.element.createElement(SelectControl, {
							label: __("Border Style"),
							value: borderStyle,
							onChange: function onChange(value) {
								return setAttributes({ borderStyle: value });
							},
							options: [{ value: "none", label: __("None") }, { value: "solid", label: __("Solid") }, { value: "dashed", label: __("Dashed") }, { value: "dotted", label: __("Dotted") }, { value: "double", label: __("Double") }]
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Border"),
							value: borderWidth,
							onChange: function onChange(value) {
								return setAttributes({ borderWidth: value });
							},
							min: 0,
							max: 10,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Border Radius"),
							value: borderRadius,
							onChange: function onChange(value) {
								return setAttributes({ borderRadius: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Vertical Padding"),
							value: btnVPadding,
							onChange: function onChange(value) {
								return setAttributes({ btnVPadding: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Horizontal Padding"),
							value: btnHPadding,
							onChange: function onChange(value) {
								return setAttributes({ btnHPadding: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						}),
						wp.element.createElement(
							"p",
							{ className: "uagb-inspect-tab-title" },
							wp.element.createElement(
								"strong",
								null,
								__("Colors")
							)
						),
						wp.element.createElement(
							TabPanel,
							{ className: "uagb-inspect-tabs uagb-inspect-tabs-col-2",
								activeClass: "active-tab",
								tabs: [{
									name: "normal",
									title: __("Normal"),
									className: "uagb-normal-tab"
								}, {
									name: "hover",
									title: __("Hover"),
									className: "uagb-hover-tab"
								}] },
							function (tabName) {
								var tabout = void 0;
								if ("hover" === tabName.name) {
									tabout = hoverSettings;
								} else {
									tabout = normalSettings;
								}
								return wp.element.createElement(
									"div",
									null,
									tabout
								);
							}
						)
					)
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Typography"), initialOpen: false },
					wp.element.createElement(SelectControl, {
						label: __("Title Tag"),
						value: titleTag,
						onChange: function onChange(value) {
							return setAttributes({ titleTag: value });
						},
						options: [{ value: "h1", label: __("H1") }, { value: "h2", label: __("H2") }, { value: "h3", label: __("H3") }, { value: "h4", label: __("H4") }, { value: "h5", label: __("H5") }, { value: "h6", label: __("H6") }]
					}),
					wp.element.createElement(RangeControl, {
						label: __("Title Font Size"),
						value: titleFontSize,
						onChange: function onChange(value) {
							return setAttributes({ titleFontSize: value });
						},
						min: 1,
						max: 50,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					(displayPostAuthor || displayPostDate || displayPostComment) && wp.element.createElement(RangeControl, {
						label: __("Meta Font Size"),
						value: metaFontSize,
						onChange: function onChange(value) {
							return setAttributes({ metaFontSize: value });
						},
						min: 1,
						max: 50,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					displayPostExcerpt && wp.element.createElement(RangeControl, {
						label: __("Excerpt Font Size"),
						value: excerptFontSize,
						onChange: function onChange(value) {
							return setAttributes({ excerptFontSize: value });
						},
						min: 1,
						max: 50,
						beforeIcon: "editor-textcolor",
						allowReset: true
					})
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Colors"), initialOpen: false },
					imgPosition == "top" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Blog Background Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: bgColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: bgColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ bgColor: colorValue });
							},
							allowReset: true
						})
					),
					wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Title Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: titleColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: titleColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ titleColor: colorValue });
							},
							allowReset: true
						})
					),
					wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Meta Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: metaColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: metaColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ metaColor: colorValue });
							}
						})
					),
					displayPostExcerpt == true && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Excerpt Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: excerptColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: excerptColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ excerptColor: colorValue });
							},
							allowReset: true
						})
					)
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Spacing"), initialOpen: false },
					wp.element.createElement(RangeControl, {
						label: __("Row Gap"),
						value: rowGap,
						onChange: function onChange(value) {
							return setAttributes({ rowGap: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Column Gap"),
						value: columnGap,
						onChange: function onChange(value) {
							return setAttributes({ columnGap: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Content Padding"),
						value: contentPadding,
						onChange: function onChange(value) {
							return setAttributes({ contentPadding: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Content Padding (Mobile)"),
						value: contentPaddingMobile,
						onChange: function onChange(value) {
							return setAttributes({ contentPaddingMobile: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Title Bottom Spacing"),
						value: titleBottomSpace,
						onChange: function onChange(value) {
							return setAttributes({ titleBottomSpace: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Meta Bottom Spacing"),
						value: metaBottomSpace,
						onChange: function onChange(value) {
							return setAttributes({ metaBottomSpace: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Excerpt Bottom Spacing"),
						value: excerptBottomSpace,
						onChange: function onChange(value) {
							return setAttributes({ excerptBottomSpace: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					})
				)
			);

			var element = document.getElementById("uagb-post-grid-style-" + this.props.clientId);

			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_3__styling__["a" /* default */])(this.props, "uagb-post__grid");
			}

			var hasPosts = Array.isArray(latestPosts) && latestPosts.length;

			if (!hasPosts) {
				return wp.element.createElement(
					Fragment,
					null,
					inspectorControls,
					wp.element.createElement(
						Placeholder,
						{
							icon: "admin-post",
							label: uagb_blocks_info.blocks["uagb/post-grid"]["title"]
						},
						!Array.isArray(latestPosts) ? wp.element.createElement(Spinner, null) : __("No posts found.")
					)
				);
			}

			return wp.element.createElement(
				Fragment,
				null,
				inspectorControls,
				wp.element.createElement(
					BlockControls,
					null,
					wp.element.createElement(BlockAlignmentToolbar, {
						value: align,
						onChange: function onChange(value) {
							setAttributes({ align: value });
						},
						controls: ["left", "center", "right"]
					})
				),
				wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__blog__["a" /* default */], { attributes: attributes, className: this.props.className, latestPosts: latestPosts, block_id: this.props.clientId })
			);
		}
	}]);

	return UAGBPostGrid;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (withSelect(function (select, props) {
	var _props$attributes = props.attributes,
	    categories = _props$attributes.categories,
	    postsToShow = _props$attributes.postsToShow,
	    order = _props$attributes.order,
	    orderBy = _props$attributes.orderBy;

	var _select = select("core"),
	    getEntityRecords = _select.getEntityRecords;

	var latestPostsQuery = __WEBPACK_IMPORTED_MODULE_1_lodash_pickBy___default()({
		categories: categories,
		order: order,
		orderby: orderBy,
		per_page: postsToShow
	}, function (value) {
		return !__WEBPACK_IMPORTED_MODULE_0_lodash_isUndefined___default()(value);
	});
	var categoriesListQuery = {
		per_page: 100
	};
	return {
		latestPosts: getEntityRecords("postType", "post", latestPostsQuery),
		categoriesList: getEntityRecords("taxonomy", "category", categoriesListQuery)
	};
})(UAGBPostGrid));

/***/ }),
/* 155 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseMatches.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMatch = __webpack_require__(/*! ./_baseIsMatch */ 156),
    getMatchData = __webpack_require__(/*! ./_getMatchData */ 205),
    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ 90);

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;


/***/ }),
/* 156 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIsMatch.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ 43),
    baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ 79);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;


/***/ }),
/* 157 */
/*!************************************************!*\
  !*** ./node_modules/lodash/_listCacheClear.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),
/* 158 */
/*!*************************************************!*\
  !*** ./node_modules/lodash/_listCacheDelete.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ 29);

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),
/* 159 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheGet.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ 29);

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),
/* 160 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheHas.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ 29);

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),
/* 161 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheSet.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ 29);

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),
/* 162 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_stackClear.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ 28);

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;


/***/ }),
/* 163 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_stackDelete.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;


/***/ }),
/* 164 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackGet.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;


/***/ }),
/* 165 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackHas.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;


/***/ }),
/* 166 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackSet.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ 28),
    Map = __webpack_require__(/*! ./_Map */ 44),
    MapCache = __webpack_require__(/*! ./_MapCache */ 46);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;


/***/ }),
/* 167 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIsNative.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ 76),
    isMasked = __webpack_require__(/*! ./_isMasked */ 170),
    isObject = __webpack_require__(/*! ./isObject */ 5),
    toSource = __webpack_require__(/*! ./_toSource */ 78);

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),
/* 168 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getRawTag.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ 14);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),
/* 169 */
/*!************************************************!*\
  !*** ./node_modules/lodash/_objectToString.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),
/* 170 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_isMasked.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__(/*! ./_coreJsData */ 171);

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),
/* 171 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_coreJsData.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ 4);

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),
/* 172 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_getValue.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),
/* 173 */
/*!***********************************************!*\
  !*** ./node_modules/lodash/_mapCacheClear.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__(/*! ./_Hash */ 174),
    ListCache = __webpack_require__(/*! ./_ListCache */ 28),
    Map = __webpack_require__(/*! ./_Map */ 44);

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;


/***/ }),
/* 174 */
/*!**************************************!*\
  !*** ./node_modules/lodash/_Hash.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__(/*! ./_hashClear */ 175),
    hashDelete = __webpack_require__(/*! ./_hashDelete */ 176),
    hashGet = __webpack_require__(/*! ./_hashGet */ 177),
    hashHas = __webpack_require__(/*! ./_hashHas */ 178),
    hashSet = __webpack_require__(/*! ./_hashSet */ 179);

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;


/***/ }),
/* 175 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_hashClear.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ 31);

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;


/***/ }),
/* 176 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_hashDelete.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;


/***/ }),
/* 177 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashGet.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ 31);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;


/***/ }),
/* 178 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashHas.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ 31);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;


/***/ }),
/* 179 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashSet.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ 31);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;


/***/ }),
/* 180 */
/*!************************************************!*\
  !*** ./node_modules/lodash/_mapCacheDelete.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ 32);

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;


/***/ }),
/* 181 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_isKeyable.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;


/***/ }),
/* 182 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheGet.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ 32);

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;


/***/ }),
/* 183 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheHas.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ 32);

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;


/***/ }),
/* 184 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheSet.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ 32);

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;


/***/ }),
/* 185 */
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsEqualDeep.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ 43),
    equalArrays = __webpack_require__(/*! ./_equalArrays */ 80),
    equalByTag = __webpack_require__(/*! ./_equalByTag */ 191),
    equalObjects = __webpack_require__(/*! ./_equalObjects */ 194),
    getTag = __webpack_require__(/*! ./_getTag */ 37),
    isArray = __webpack_require__(/*! ./isArray */ 6),
    isBuffer = __webpack_require__(/*! ./isBuffer */ 50),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ 87);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;


/***/ }),
/* 186 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_SetCache.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(/*! ./_MapCache */ 46),
    setCacheAdd = __webpack_require__(/*! ./_setCacheAdd */ 187),
    setCacheHas = __webpack_require__(/*! ./_setCacheHas */ 188);

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;


/***/ }),
/* 187 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheAdd.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;


/***/ }),
/* 188 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheHas.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;


/***/ }),
/* 189 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arraySome.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;


/***/ }),
/* 190 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_cacheHas.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;


/***/ }),
/* 191 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_equalByTag.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ 14),
    Uint8Array = __webpack_require__(/*! ./_Uint8Array */ 81),
    eq = __webpack_require__(/*! ./eq */ 30),
    equalArrays = __webpack_require__(/*! ./_equalArrays */ 80),
    mapToArray = __webpack_require__(/*! ./_mapToArray */ 192),
    setToArray = __webpack_require__(/*! ./_setToArray */ 193);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;


/***/ }),
/* 192 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_mapToArray.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;


/***/ }),
/* 193 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_setToArray.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;


/***/ }),
/* 194 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_equalObjects.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getAllKeys = __webpack_require__(/*! ./_getAllKeys */ 82);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;


/***/ }),
/* 195 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_arrayFilter.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;


/***/ }),
/* 196 */
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsArguments.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 10),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 7);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),
/* 197 */
/*!******************************************!*\
  !*** ./node_modules/lodash/stubFalse.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),
/* 198 */
/*!**************************************************!*\
  !*** ./node_modules/lodash/_baseIsTypedArray.js ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 10),
    isLength = __webpack_require__(/*! ./isLength */ 52),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 7);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),
/* 199 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseKeys.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__(/*! ./_isPrototype */ 36),
    nativeKeys = __webpack_require__(/*! ./_nativeKeys */ 200);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;


/***/ }),
/* 200 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_nativeKeys.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(/*! ./_overArg */ 88);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),
/* 201 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_DataView.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ 9),
    root = __webpack_require__(/*! ./_root */ 4);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;


/***/ }),
/* 202 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/_Promise.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ 9),
    root = __webpack_require__(/*! ./_root */ 4);

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;


/***/ }),
/* 203 */
/*!*************************************!*\
  !*** ./node_modules/lodash/_Set.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ 9),
    root = __webpack_require__(/*! ./_root */ 4);

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;


/***/ }),
/* 204 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/_WeakMap.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ 9),
    root = __webpack_require__(/*! ./_root */ 4);

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;


/***/ }),
/* 205 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getMatchData.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ 89),
    keys = __webpack_require__(/*! ./keys */ 15);

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

module.exports = getMatchData;


/***/ }),
/* 206 */
/*!*****************************************************!*\
  !*** ./node_modules/lodash/_baseMatchesProperty.js ***!
  \*****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ 79),
    get = __webpack_require__(/*! ./get */ 91),
    hasIn = __webpack_require__(/*! ./hasIn */ 210),
    isKey = __webpack_require__(/*! ./_isKey */ 53),
    isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ 89),
    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ 90),
    toKey = __webpack_require__(/*! ./_toKey */ 18);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;


/***/ }),
/* 207 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_stringToPath.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var memoizeCapped = __webpack_require__(/*! ./_memoizeCapped */ 208);

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;


/***/ }),
/* 208 */
/*!***********************************************!*\
  !*** ./node_modules/lodash/_memoizeCapped.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var memoize = __webpack_require__(/*! ./memoize */ 209);

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;


/***/ }),
/* 209 */
/*!****************************************!*\
  !*** ./node_modules/lodash/memoize.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(/*! ./_MapCache */ 46);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;


/***/ }),
/* 210 */
/*!**************************************!*\
  !*** ./node_modules/lodash/hasIn.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseHasIn = __webpack_require__(/*! ./_baseHasIn */ 211),
    hasPath = __webpack_require__(/*! ./_hasPath */ 212);

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;


/***/ }),
/* 211 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseHasIn.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;


/***/ }),
/* 212 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hasPath.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ 17),
    isArguments = __webpack_require__(/*! ./isArguments */ 49),
    isArray = __webpack_require__(/*! ./isArray */ 6),
    isIndex = __webpack_require__(/*! ./_isIndex */ 33),
    isLength = __webpack_require__(/*! ./isLength */ 52),
    toKey = __webpack_require__(/*! ./_toKey */ 18);

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

module.exports = hasPath;


/***/ }),
/* 213 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/property.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__(/*! ./_baseProperty */ 94),
    basePropertyDeep = __webpack_require__(/*! ./_basePropertyDeep */ 214),
    isKey = __webpack_require__(/*! ./_isKey */ 53),
    toKey = __webpack_require__(/*! ./_toKey */ 18);

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;


/***/ }),
/* 214 */
/*!**************************************************!*\
  !*** ./node_modules/lodash/_basePropertyDeep.js ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ 38);

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;


/***/ }),
/* 215 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_basePickBy.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ 38),
    baseSet = __webpack_require__(/*! ./_baseSet */ 216),
    castPath = __webpack_require__(/*! ./_castPath */ 17);

/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @param {Function} predicate The function invoked per property.
 * @returns {Object} Returns the new object.
 */
function basePickBy(object, paths, predicate) {
  var index = -1,
      length = paths.length,
      result = {};

  while (++index < length) {
    var path = paths[index],
        value = baseGet(object, path);

    if (predicate(value, path)) {
      baseSet(result, castPath(path, object), value);
    }
  }
  return result;
}

module.exports = basePickBy;


/***/ }),
/* 216 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseSet.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(/*! ./_assignValue */ 41),
    castPath = __webpack_require__(/*! ./_castPath */ 17),
    isIndex = __webpack_require__(/*! ./_isIndex */ 33),
    isObject = __webpack_require__(/*! ./isObject */ 5),
    toKey = __webpack_require__(/*! ./_toKey */ 18);

/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseSet(object, path, value, customizer) {
  if (!isObject(object)) {
    return object;
  }
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = toKey(path[index]),
        newValue = value;

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = isObject(objValue)
          ? objValue
          : (isIndex(path[index + 1]) ? [] : {});
      }
    }
    assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}

module.exports = baseSet;


/***/ }),
/* 217 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseKeysIn.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ 5),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ 36),
    nativeKeysIn = __webpack_require__(/*! ./_nativeKeysIn */ 218);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;


/***/ }),
/* 218 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_nativeKeysIn.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;


/***/ }),
/* 219 */
/*!*******************************************!*\
  !*** ./src/blocks/post/post-grid/blog.js ***!
  \*******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_FeaturedImage__ = __webpack_require__(/*! .././components/FeaturedImage */ 56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Title__ = __webpack_require__(/*! .././components/Title */ 57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Meta__ = __webpack_require__(/*! .././components/Meta */ 58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Excerpt__ = __webpack_require__(/*! .././components/Excerpt */ 59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_Button__ = __webpack_require__(/*! .././components/Button */ 61);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var decodeEntities = wp.htmlEntities.decodeEntities;









var Blog = function (_React$Component) {
	_inherits(Blog, _React$Component);

	function Blog() {
		_classCallCheck(this, Blog);

		return _possibleConstructorReturn(this, (Blog.__proto__ || Object.getPrototypeOf(Blog)).apply(this, arguments));
	}

	_createClass(Blog, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    className = _props.className,
			    latestPosts = _props.latestPosts,
			    block_id = _props.block_id;
			var displayPostImage = attributes.displayPostImage,
			    columns = attributes.columns,
			    tcolumns = attributes.tcolumns,
			    mcolumns = attributes.mcolumns,
			    imgPosition = attributes.imgPosition,
			    postsToShow = attributes.postsToShow,
			    rowGap = attributes.rowGap,
			    columnGap = attributes.columnGap,
			    bgColor = attributes.bgColor,
			    contentPadding = attributes.contentPadding,
			    equalHeight = attributes.equalHeight;


			var equalHeightClass = equalHeight ? "uagb-post__equal-height" : "";

			// Removing posts from display should be instant.
			var displayPosts = latestPosts.length > postsToShow ? latestPosts.slice(0, postsToShow) : latestPosts;

			return wp.element.createElement(
				"div",
				{
					className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-post-grid", "uagb-post__image-position-" + imgPosition),
					id: "uagb-post__grid-" + block_id
				},
				wp.element.createElement(
					"div",
					{
						className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("is-grid", "uagb-post__columns-" + columns, "uagb-post__columns-tablet-" + tcolumns, "uagb-post__columns-mobile-" + mcolumns, "uagb-post__items", "" + equalHeightClass)
					},
					displayPosts.map(function (post, i) {
						return wp.element.createElement(
							"article",
							{ key: i },
							wp.element.createElement(
								"div",
								{ className: "uagb-post__inner-wrap" },
								wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_FeaturedImage__["a" /* default */], { post: post, attributes: attributes }),
								wp.element.createElement(
									"div",
									{ className: "uagb-post__text" },
									wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_Title__["a" /* default */], { post: post, attributes: attributes }),
									wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_Meta__["a" /* default */], { post: post, attributes: attributes }),
									wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_Excerpt__["a" /* default */], { post: post, attributes: attributes }),
									wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_Button__["a" /* default */], { post: post, attributes: attributes })
								)
							)
						);
					})
				)
			);
		}
	}]);

	return Blog;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Blog);

/***/ }),
/* 220 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/truncate.js ***!
  \*****************************************/
/*! dynamic exports provided */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(/*! ./_baseToString */ 93),
    castSlice = __webpack_require__(/*! ./_castSlice */ 221),
    hasUnicode = __webpack_require__(/*! ./_hasUnicode */ 60),
    isObject = __webpack_require__(/*! ./isObject */ 5),
    isRegExp = __webpack_require__(/*! ./isRegExp */ 222),
    stringSize = __webpack_require__(/*! ./_stringSize */ 224),
    stringToArray = __webpack_require__(/*! ./_stringToArray */ 227),
    toInteger = __webpack_require__(/*! ./toInteger */ 100),
    toString = __webpack_require__(/*! ./toString */ 92);

/** Used as default options for `_.truncate`. */
var DEFAULT_TRUNC_LENGTH = 30,
    DEFAULT_TRUNC_OMISSION = '...';

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Truncates `string` if it's longer than the given maximum string length.
 * The last characters of the truncated string are replaced with the omission
 * string which defaults to "...".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to truncate.
 * @param {Object} [options={}] The options object.
 * @param {number} [options.length=30] The maximum string length.
 * @param {string} [options.omission='...'] The string to indicate text is omitted.
 * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
 * @returns {string} Returns the truncated string.
 * @example
 *
 * _.truncate('hi-diddly-ho there, neighborino');
 * // => 'hi-diddly-ho there, neighbo...'
 *
 * _.truncate('hi-diddly-ho there, neighborino', {
 *   'length': 24,
 *   'separator': ' '
 * });
 * // => 'hi-diddly-ho there,...'
 *
 * _.truncate('hi-diddly-ho there, neighborino', {
 *   'length': 24,
 *   'separator': /,? +/
 * });
 * // => 'hi-diddly-ho there...'
 *
 * _.truncate('hi-diddly-ho there, neighborino', {
 *   'omission': ' [...]'
 * });
 * // => 'hi-diddly-ho there, neig [...]'
 */
function truncate(string, options) {
  var length = DEFAULT_TRUNC_LENGTH,
      omission = DEFAULT_TRUNC_OMISSION;

  if (isObject(options)) {
    var separator = 'separator' in options ? options.separator : separator;
    length = 'length' in options ? toInteger(options.length) : length;
    omission = 'omission' in options ? baseToString(options.omission) : omission;
  }
  string = toString(string);

  var strLength = string.length;
  if (hasUnicode(string)) {
    var strSymbols = stringToArray(string);
    strLength = strSymbols.length;
  }
  if (length >= strLength) {
    return string;
  }
  var end = length - stringSize(omission);
  if (end < 1) {
    return omission;
  }
  var result = strSymbols
    ? castSlice(strSymbols, 0, end).join('')
    : string.slice(0, end);

  if (separator === undefined) {
    return result + omission;
  }
  if (strSymbols) {
    end += (result.length - end);
  }
  if (isRegExp(separator)) {
    if (string.slice(end).search(separator)) {
      var match,
          substring = result;

      if (!separator.global) {
        separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
      }
      separator.lastIndex = 0;
      while ((match = separator.exec(substring))) {
        var newEnd = match.index;
      }
      result = result.slice(0, newEnd === undefined ? end : newEnd);
    }
  } else if (string.indexOf(baseToString(separator), end) != end) {
    var index = result.lastIndexOf(separator);
    if (index > -1) {
      result = result.slice(0, index);
    }
  }
  return result + omission;
}

module.exports = truncate;


/***/ }),
/* 221 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_castSlice.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseSlice = __webpack_require__(/*! ./_baseSlice */ 99);

/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */
function castSlice(array, start, end) {
  var length = array.length;
  end = end === undefined ? length : end;
  return (!start && end >= length) ? array : baseSlice(array, start, end);
}

module.exports = castSlice;


/***/ }),
/* 222 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/isRegExp.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsRegExp = __webpack_require__(/*! ./_baseIsRegExp */ 223),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ 34),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ 35);

/* Node.js helper references. */
var nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;

/**
 * Checks if `value` is classified as a `RegExp` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
 * @example
 *
 * _.isRegExp(/abc/);
 * // => true
 *
 * _.isRegExp('/abc/');
 * // => false
 */
var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

module.exports = isRegExp;


/***/ }),
/* 223 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIsRegExp.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 10),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 7);

/** `Object#toString` result references. */
var regexpTag = '[object RegExp]';

/**
 * The base implementation of `_.isRegExp` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
 */
function baseIsRegExp(value) {
  return isObjectLike(value) && baseGetTag(value) == regexpTag;
}

module.exports = baseIsRegExp;


/***/ }),
/* 224 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_stringSize.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var asciiSize = __webpack_require__(/*! ./_asciiSize */ 225),
    hasUnicode = __webpack_require__(/*! ./_hasUnicode */ 60),
    unicodeSize = __webpack_require__(/*! ./_unicodeSize */ 226);

/**
 * Gets the number of symbols in `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the string size.
 */
function stringSize(string) {
  return hasUnicode(string)
    ? unicodeSize(string)
    : asciiSize(string);
}

module.exports = stringSize;


/***/ }),
/* 225 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_asciiSize.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__(/*! ./_baseProperty */ 94);

/**
 * Gets the size of an ASCII `string`.
 *
 * @private
 * @param {string} string The string inspect.
 * @returns {number} Returns the string size.
 */
var asciiSize = baseProperty('length');

module.exports = asciiSize;


/***/ }),
/* 226 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_unicodeSize.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsAstral = '[' + rsAstralRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

/**
 * Gets the size of a Unicode `string`.
 *
 * @private
 * @param {string} string The string inspect.
 * @returns {number} Returns the string size.
 */
function unicodeSize(string) {
  var result = reUnicode.lastIndex = 0;
  while (reUnicode.test(string)) {
    ++result;
  }
  return result;
}

module.exports = unicodeSize;


/***/ }),
/* 227 */
/*!***********************************************!*\
  !*** ./node_modules/lodash/_stringToArray.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var asciiToArray = __webpack_require__(/*! ./_asciiToArray */ 228),
    hasUnicode = __webpack_require__(/*! ./_hasUnicode */ 60),
    unicodeToArray = __webpack_require__(/*! ./_unicodeToArray */ 229);

/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function stringToArray(string) {
  return hasUnicode(string)
    ? unicodeToArray(string)
    : asciiToArray(string);
}

module.exports = stringToArray;


/***/ }),
/* 228 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_asciiToArray.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Converts an ASCII `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function asciiToArray(string) {
  return string.split('');
}

module.exports = asciiToArray;


/***/ }),
/* 229 */
/*!************************************************!*\
  !*** ./node_modules/lodash/_unicodeToArray.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsAstral = '[' + rsAstralRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

/**
 * Converts a Unicode `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}

module.exports = unicodeToArray;


/***/ }),
/* 230 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/toFinite.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var toNumber = __webpack_require__(/*! ./toNumber */ 101);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

module.exports = toFinite;


/***/ }),
/* 231 */
/*!***********************************************!*\
  !*** ./src/blocks/post/post-masonry/block.js ***!
  \***********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__edit__ = __webpack_require__(/*! ./edit */ 232);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss__ = __webpack_require__(/*! .././style.scss */ 63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__style_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss__ = __webpack_require__(/*! .././editor.scss */ 64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__editor_scss__);
/**
 * BLOCK: UAGB - post-masonry
 */

// Import block dependencies and components



//  Import CSS.



// Components
var __ = wp.i18n.__;

// Register block controls

var registerBlockType = wp.blocks.registerBlockType;

// Register the block

registerBlockType("uagb/post-masonry", {
	title: uagb_blocks_info.blocks["uagb/post-masonry"]["title"],
	description: uagb_blocks_info.blocks["uagb/post-masonry"]["description"],
	icon: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__["a" /* default */].post_masonry,
	category: uagb_blocks_info.category,
	keywords: [__("post"), __("masonry"), __("uagb")],
	edit: __WEBPACK_IMPORTED_MODULE_0__edit__["a" /* default */],
	// Render via PHP
	save: function save() {
		return null;
	}
});

/***/ }),
/* 232 */
/*!**********************************************!*\
  !*** ./src/blocks/post/post-masonry/edit.js ***!
  \**********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_isUndefined__ = __webpack_require__(/*! lodash/isUndefined */ 25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_isUndefined___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_isUndefined__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_pickBy__ = __webpack_require__(/*! lodash/pickBy */ 26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_pickBy___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_pickBy__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__blog__ = __webpack_require__(/*! ./blog */ 233);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__styling__ = __webpack_require__(/*! .././styling */ 62);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * External dependencies
 */




// Import Post Components



var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var __ = wp.i18n.__;

var MAX_POSTS_COLUMNS = 4;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Placeholder = _wp$components.Placeholder,
    QueryControls = _wp$components.QueryControls,
    RangeControl = _wp$components.RangeControl,
    SelectControl = _wp$components.SelectControl,
    Spinner = _wp$components.Spinner,
    ToggleControl = _wp$components.ToggleControl,
    TabPanel = _wp$components.TabPanel,
    TextControl = _wp$components.TextControl;
var _wp$editor = wp.editor,
    InspectorControls = _wp$editor.InspectorControls,
    BlockAlignmentToolbar = _wp$editor.BlockAlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    ColorPalette = _wp$editor.ColorPalette;
var withSelect = wp.data.withSelect;

var UAGBPostMasonry = function (_Component) {
	_inherits(UAGBPostMasonry, _Component);

	function UAGBPostMasonry() {
		_classCallCheck(this, UAGBPostMasonry);

		return _possibleConstructorReturn(this, (UAGBPostMasonry.__proto__ || Object.getPrototypeOf(UAGBPostMasonry)).apply(this, arguments));
	}

	_createClass(UAGBPostMasonry, [{
		key: "componentDidMount",
		value: function componentDidMount() {

			this.props.setAttributes({ block_id: this.props.clientId });

			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-post-masonry-style-" + this.props.clientId);
			document.head.appendChild($style);
		}
	}, {
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    categoriesList = _props.categoriesList,
			    setAttributes = _props.setAttributes,
			    latestPosts = _props.latestPosts;
			var displayPostDate = attributes.displayPostDate,
			    displayPostComment = attributes.displayPostComment,
			    displayPostExcerpt = attributes.displayPostExcerpt,
			    displayPostAuthor = attributes.displayPostAuthor,
			    displayPostImage = attributes.displayPostImage,
			    imgSize = attributes.imgSize,
			    imgPosition = attributes.imgPosition,
			    displayPostLink = attributes.displayPostLink,
			    newTab = attributes.newTab,
			    ctaText = attributes.ctaText,
			    borderWidth = attributes.borderWidth,
			    borderStyle = attributes.borderStyle,
			    borderColor = attributes.borderColor,
			    borderHColor = attributes.borderHColor,
			    borderRadius = attributes.borderRadius,
			    btnVPadding = attributes.btnVPadding,
			    btnHPadding = attributes.btnHPadding,
			    align = attributes.align,
			    columns = attributes.columns,
			    tcolumns = attributes.tcolumns,
			    mcolumns = attributes.mcolumns,
			    order = attributes.order,
			    orderBy = attributes.orderBy,
			    categories = attributes.categories,
			    postsToShow = attributes.postsToShow,
			    rowGap = attributes.rowGap,
			    columnGap = attributes.columnGap,
			    bgColor = attributes.bgColor,
			    contentPadding = attributes.contentPadding,
			    contentPaddingMobile = attributes.contentPaddingMobile,
			    titleColor = attributes.titleColor,
			    titleTag = attributes.titleTag,
			    titleFontSize = attributes.titleFontSize,
			    metaFontSize = attributes.metaFontSize,
			    excerptFontSize = attributes.excerptFontSize,
			    ctaFontSize = attributes.ctaFontSize,
			    metaColor = attributes.metaColor,
			    excerptColor = attributes.excerptColor,
			    ctaColor = attributes.ctaColor,
			    ctaBgColor = attributes.ctaBgColor,
			    ctaHColor = attributes.ctaHColor,
			    ctaBgHColor = attributes.ctaBgHColor,
			    titleBottomSpace = attributes.titleBottomSpace,
			    metaBottomSpace = attributes.metaBottomSpace,
			    excerptBottomSpace = attributes.excerptBottomSpace,
			    excerptLength = attributes.excerptLength,
			    overlayOpacity = attributes.overlayOpacity,
			    bgOverlayColor = attributes.bgOverlayColor,
			    linkBox = attributes.linkBox;


			var hoverSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Hover Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaHColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: ctaHColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ ctaHColor: colorValue });
					},
					allowReset: true
				}),
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Background Hover Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaBgHColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: ctaBgHColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ ctaBgHColor: colorValue });
					},
					allowReset: true
				}),
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Border Hover Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: borderHColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: borderHColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ borderHColor: colorValue });
					},
					allowReset: true
				})
			);

			var normalSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: ctaColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ ctaColor: colorValue });
					},
					allowReset: true
				}),
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Background Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaBgColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: ctaBgColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ ctaBgColor: colorValue });
					},
					allowReset: true
				}),
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Border Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: borderColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: borderColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ borderColor: colorValue });
					},
					allowReset: true
				})
			);

			var inspectorControls = wp.element.createElement(
				InspectorControls,
				null,
				wp.element.createElement(
					PanelBody,
					{ title: __("General") },
					wp.element.createElement(QueryControls, _extends({ order: order, orderBy: orderBy }, {
						numberOfItems: postsToShow,
						categoriesList: categoriesList,
						selectedCategoryId: categories,
						onOrderChange: function onOrderChange(value) {
							return setAttributes({ order: value });
						},
						onOrderByChange: function onOrderByChange(value) {
							return setAttributes({ orderBy: value });
						},
						onCategoryChange: function onCategoryChange(value) {
							return setAttributes({ categories: "" !== value ? value : undefined });
						},
						onNumberOfItemsChange: function onNumberOfItemsChange(value) {
							return setAttributes({ postsToShow: value });
						}
					})),
					wp.element.createElement(RangeControl, {
						label: __("Columns"),
						value: columns,
						onChange: function onChange(value) {
							return setAttributes({ columns: value });
						},
						min: 1,
						max: !hasPosts ? MAX_POSTS_COLUMNS : Math.min(MAX_POSTS_COLUMNS, latestPosts.length)
					}),
					wp.element.createElement(RangeControl, {
						label: __("Columns (Tablet)"),
						value: tcolumns,
						onChange: function onChange(value) {
							return setAttributes({ tcolumns: value });
						},
						min: 1,
						max: !hasPosts ? MAX_POSTS_COLUMNS : Math.min(MAX_POSTS_COLUMNS, latestPosts.length)
					}),
					wp.element.createElement(RangeControl, {
						label: __("Columns (Mobile)"),
						value: mcolumns,
						onChange: function onChange(value) {
							return setAttributes({ mcolumns: value });
						},
						min: 1,
						max: !hasPosts ? MAX_POSTS_COLUMNS : Math.min(MAX_POSTS_COLUMNS, latestPosts.length)
					})
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Image"), initialOpen: false },
					wp.element.createElement(ToggleControl, {
						label: __("Show Featured Image"),
						checked: displayPostImage,
						onChange: function onChange(value) {
							return setAttributes({ displayPostImage: !displayPostImage });
						}
					}),
					displayPostImage == true && wp.element.createElement(SelectControl, {
						label: __("Image Sizes"),
						value: imgSize,
						onChange: function onChange(value) {
							return setAttributes({ imgSize: value });
						},
						options: [{ value: "thumbnail", label: __("Thumbnail") }, { value: "medium", label: __("Medium") }, { value: "medium_large", label: __("Medium Large") }, { value: "large", label: __("Large") }]
					}),
					displayPostImage == true && wp.element.createElement(SelectControl, {
						label: __("Image Position"),
						value: imgPosition,
						onChange: function onChange(value) {
							return setAttributes({ imgPosition: value });
						},
						options: [{ value: "top", label: __("Top") }, { value: "background", label: __("Background") }]
					}),
					displayPostImage == true && imgPosition == "background" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Background Overlay Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: bgOverlayColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: bgOverlayColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ bgOverlayColor: colorValue });
							},
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Overlay Opacity"),
							value: overlayOpacity,
							onChange: function onChange(value) {
								return setAttributes({ overlayOpacity: value });
							},
							min: 0,
							max: 100,
							allowReset: true
						}),
						wp.element.createElement(ToggleControl, {
							label: __("Link Complete Box"),
							checked: linkBox,
							onChange: function onChange(value) {
								return setAttributes({ linkBox: !linkBox });
							}
						})
					)
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Content"), initialOpen: false },
					wp.element.createElement(ToggleControl, {
						label: __("Show Author"),
						checked: displayPostAuthor,
						onChange: function onChange(value) {
							return setAttributes({ displayPostAuthor: !displayPostAuthor });
						}
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Show Date"),
						checked: displayPostDate,
						onChange: function onChange(value) {
							return setAttributes({ displayPostDate: !displayPostDate });
						}
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Show Comment"),
						checked: displayPostComment,
						onChange: function onChange(value) {
							return setAttributes({ displayPostComment: !displayPostComment });
						}
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Show Excerpt"),
						checked: displayPostExcerpt,
						onChange: function onChange(value) {
							return setAttributes({ displayPostExcerpt: !displayPostExcerpt });
						}
					}),
					displayPostExcerpt && wp.element.createElement(RangeControl, {
						label: __("Excerpt Length"),
						value: excerptLength,
						onChange: function onChange(value) {
							return setAttributes({ excerptLength: value });
						},
						min: 1,
						max: 50,
						allowReset: true
					})
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Read More Link"), initialOpen: false },
					wp.element.createElement(ToggleControl, {
						label: __("Show Read More Link"),
						checked: displayPostLink,
						onChange: function onChange(value) {
							return setAttributes({ displayPostLink: !displayPostLink });
						}
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Open links in New Tab"),
						checked: newTab,
						onChange: function onChange(value) {
							return setAttributes({ newTab: !newTab });
						}
					}),
					displayPostLink && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(TextControl, {
							label: __("Text"),
							value: ctaText,
							onChange: function onChange(value) {
								return setAttributes({ ctaText: value });
							}
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Text Font Size"),
							value: ctaFontSize,
							onChange: function onChange(value) {
								return setAttributes({ ctaFontSize: value });
							},
							min: 1,
							max: 50,
							beforeIcon: "editor-textcolor",
							allowReset: true
						}),
						wp.element.createElement(SelectControl, {
							label: __("Border Style"),
							value: borderStyle,
							onChange: function onChange(value) {
								return setAttributes({ borderStyle: value });
							},
							options: [{ value: "none", label: __("None") }, { value: "solid", label: __("Solid") }, { value: "dashed", label: __("Dashed") }, { value: "dotted", label: __("Dotted") }, { value: "double", label: __("Double") }]
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Border"),
							value: borderWidth,
							onChange: function onChange(value) {
								return setAttributes({ borderWidth: value });
							},
							min: 0,
							max: 10,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Border Radius"),
							value: borderRadius,
							onChange: function onChange(value) {
								return setAttributes({ borderRadius: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Vertical Padding"),
							value: btnVPadding,
							onChange: function onChange(value) {
								return setAttributes({ btnVPadding: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Horizontal Padding"),
							value: btnHPadding,
							onChange: function onChange(value) {
								return setAttributes({ btnHPadding: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						}),
						wp.element.createElement(
							"p",
							{ className: "uagb-inspect-tab-title" },
							wp.element.createElement(
								"strong",
								null,
								__("Colors")
							)
						),
						wp.element.createElement(
							TabPanel,
							{ className: "uagb-inspect-tabs uagb-inspect-tabs-col-2",
								activeClass: "active-tab",
								tabs: [{
									name: "normal",
									title: __("Normal"),
									className: "uagb-normal-tab"
								}, {
									name: "hover",
									title: __("Hover"),
									className: "uagb-hover-tab"
								}] },
							function (tabName) {
								var tabout = void 0;
								if ("hover" === tabName.name) {
									tabout = hoverSettings;
								} else {
									tabout = normalSettings;
								}
								return wp.element.createElement(
									"div",
									null,
									tabout
								);
							}
						)
					)
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Typography"), initialOpen: false },
					wp.element.createElement(SelectControl, {
						label: __("Title Tag"),
						value: titleTag,
						onChange: function onChange(value) {
							return setAttributes({ titleTag: value });
						},
						options: [{ value: "h1", label: __("H1") }, { value: "h2", label: __("H2") }, { value: "h3", label: __("H3") }, { value: "h4", label: __("H4") }, { value: "h5", label: __("H5") }, { value: "h6", label: __("H6") }]
					}),
					wp.element.createElement(RangeControl, {
						label: __("Title Font Size"),
						value: titleFontSize,
						onChange: function onChange(value) {
							return setAttributes({ titleFontSize: value });
						},
						min: 1,
						max: 50,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					(displayPostAuthor || displayPostDate || displayPostComment) && wp.element.createElement(RangeControl, {
						label: __("Meta Font Size"),
						value: metaFontSize,
						onChange: function onChange(value) {
							return setAttributes({ metaFontSize: value });
						},
						min: 1,
						max: 50,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					displayPostExcerpt && wp.element.createElement(RangeControl, {
						label: __("Excerpt Font Size"),
						value: excerptFontSize,
						onChange: function onChange(value) {
							return setAttributes({ excerptFontSize: value });
						},
						min: 1,
						max: 50,
						beforeIcon: "editor-textcolor",
						allowReset: true
					})
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Colors"), initialOpen: false },
					imgPosition == "top" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Blog Background Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: bgColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: bgColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ bgColor: colorValue });
							},
							allowReset: true
						})
					),
					wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Title Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: titleColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: titleColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ titleColor: colorValue });
							},
							allowReset: true
						})
					),
					wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Meta Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: metaColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: metaColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ metaColor: colorValue });
							}
						})
					),
					displayPostExcerpt == true && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Excerpt Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: excerptColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: excerptColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ excerptColor: colorValue });
							},
							allowReset: true
						})
					)
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Spacing"), initialOpen: false },
					wp.element.createElement(RangeControl, {
						label: __("Row Gap"),
						value: rowGap,
						onChange: function onChange(value) {
							return setAttributes({ rowGap: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Column Gap"),
						value: columnGap,
						onChange: function onChange(value) {
							return setAttributes({ columnGap: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Content Padding"),
						value: contentPadding,
						onChange: function onChange(value) {
							return setAttributes({ contentPadding: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Content Padding (Mobile)"),
						value: contentPaddingMobile,
						onChange: function onChange(value) {
							return setAttributes({ contentPaddingMobile: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Title Bottom Spacing"),
						value: titleBottomSpace,
						onChange: function onChange(value) {
							return setAttributes({ titleBottomSpace: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Meta Bottom Spacing"),
						value: metaBottomSpace,
						onChange: function onChange(value) {
							return setAttributes({ metaBottomSpace: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Excerpt Bottom Spacing"),
						value: excerptBottomSpace,
						onChange: function onChange(value) {
							return setAttributes({ excerptBottomSpace: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					})
				)
			);

			var element = document.getElementById("uagb-post-masonry-style-" + this.props.clientId);

			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_3__styling__["a" /* default */])(this.props, "uagb-post__masonry");
			}

			var hasPosts = Array.isArray(latestPosts) && latestPosts.length;

			if (!hasPosts) {
				return wp.element.createElement(
					Fragment,
					null,
					inspectorControls,
					wp.element.createElement(
						Placeholder,
						{
							icon: "admin-post",
							label: uagb_blocks_info.blocks["uagb/post-masonry"]["title"]
						},
						!Array.isArray(latestPosts) ? wp.element.createElement(Spinner, null) : __("No posts found.")
					)
				);
			}

			return wp.element.createElement(
				Fragment,
				null,
				inspectorControls,
				wp.element.createElement(
					BlockControls,
					null,
					wp.element.createElement(BlockAlignmentToolbar, {
						value: align,
						onChange: function onChange(value) {
							setAttributes({ align: value });
						},
						controls: ["left", "center", "right"]
					})
				),
				wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__blog__["a" /* default */], { attributes: attributes, className: this.props.className, latestPosts: latestPosts, blogID: this.props.clientId })
			);
		}
	}]);

	return UAGBPostMasonry;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (withSelect(function (select, props) {
	var _props$attributes = props.attributes,
	    categories = _props$attributes.categories,
	    postsToShow = _props$attributes.postsToShow,
	    order = _props$attributes.order,
	    orderBy = _props$attributes.orderBy;

	var _select = select("core"),
	    getEntityRecords = _select.getEntityRecords;

	var latestPostsQuery = __WEBPACK_IMPORTED_MODULE_1_lodash_pickBy___default()({
		categories: categories,
		order: order,
		orderby: orderBy,
		per_page: postsToShow
	}, function (value) {
		return !__WEBPACK_IMPORTED_MODULE_0_lodash_isUndefined___default()(value);
	});
	var categoriesListQuery = {
		per_page: 100
	};
	return {
		latestPosts: getEntityRecords("postType", "post", latestPostsQuery),
		categoriesList: getEntityRecords("taxonomy", "category", categoriesListQuery)
	};
})(UAGBPostMasonry));

/***/ }),
/* 233 */
/*!**********************************************!*\
  !*** ./src/blocks/post/post-masonry/blog.js ***!
  \**********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_masonry_component__ = __webpack_require__(/*! react-masonry-component */ 234);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_masonry_component___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_masonry_component__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_FeaturedImage__ = __webpack_require__(/*! .././components/FeaturedImage */ 56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Title__ = __webpack_require__(/*! .././components/Title */ 57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Meta__ = __webpack_require__(/*! .././components/Meta */ 58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_Excerpt__ = __webpack_require__(/*! .././components/Excerpt */ 59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_Button__ = __webpack_require__(/*! .././components/Button */ 61);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }









var Blog = function (_React$Component) {
	_inherits(Blog, _React$Component);

	function Blog() {
		_classCallCheck(this, Blog);

		return _possibleConstructorReturn(this, (Blog.__proto__ || Object.getPrototypeOf(Blog)).apply(this, arguments));
	}

	_createClass(Blog, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    className = _props.className,
			    latestPosts = _props.latestPosts,
			    blogID = _props.blogID;
			var displayPostImage = attributes.displayPostImage,
			    columns = attributes.columns,
			    tcolumns = attributes.tcolumns,
			    mcolumns = attributes.mcolumns,
			    imgPosition = attributes.imgPosition,
			    postsToShow = attributes.postsToShow,
			    rowGap = attributes.rowGap,
			    columnGap = attributes.columnGap,
			    bgColor = attributes.bgColor,
			    contentPadding = attributes.contentPadding;

			// Removing posts from display should be instant.

			var displayPosts = latestPosts.length > postsToShow ? latestPosts.slice(0, postsToShow) : latestPosts;

			return wp.element.createElement(
				"div",
				{
					className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-post-grid", "uagb-post__arrow-outside", "uagb-post__image-position-" + imgPosition),
					"data-blog-id": blogID,
					id: "uagb-post__masonry-" + blogID
				},
				wp.element.createElement(
					__WEBPACK_IMPORTED_MODULE_1_react_masonry_component___default.a,
					{
						className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("is-masonry", "uagb-post__columns-" + columns, "uagb-post__columns-tablet-" + tcolumns, "uagb-post__columns-mobile-" + mcolumns, "uagb-post__items")
					},
					displayPosts.map(function (post, i) {
						return wp.element.createElement(
							"article",
							{ key: i },
							wp.element.createElement(
								"div",
								{ className: "uagb-post__inner-wrap" },
								wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_FeaturedImage__["a" /* default */], { post: post, attributes: attributes }),
								wp.element.createElement(
									"div",
									{ className: "uagb-post__text" },
									wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_Title__["a" /* default */], { post: post, attributes: attributes }),
									wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_Meta__["a" /* default */], { post: post, attributes: attributes }),
									wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_Excerpt__["a" /* default */], { post: post, attributes: attributes }),
									wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_Button__["a" /* default */], { post: post, attributes: attributes })
								)
							)
						);
					})
				)
			);
		}
	}]);

	return Blog;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Blog);

/***/ }),
/* 234 */
/*!***********************************************************!*\
  !*** ./node_modules/react-masonry-component/lib/index.js ***!
  \***********************************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

var isBrowser = typeof window !== 'undefined';
var Masonry = isBrowser ? window.Masonry || __webpack_require__(/*! masonry-layout */ 235) : null;
var imagesloaded = isBrowser ? __webpack_require__(/*! imagesloaded */ 240) : null;
var assign = __webpack_require__(/*! lodash/assign */ 241);
var elementResizeDetectorMaker = __webpack_require__(/*! element-resize-detector */ 249);
var debounce = __webpack_require__(/*! lodash/debounce */ 260);
var omit = __webpack_require__(/*! lodash/omit */ 262);
var PropTypes = __webpack_require__(/*! prop-types */ 11);
var React = __webpack_require__(/*! react */ 3);
var createReactClass = __webpack_require__(/*! create-react-class */ 296);

var propTypes = {
  enableResizableChildren: PropTypes.bool,
  disableImagesLoaded: PropTypes.bool,
  onImagesLoaded: PropTypes.func,
  updateOnEachImageLoad: PropTypes.bool,
  options: PropTypes.object,
  imagesLoadedOptions: PropTypes.object,
  elementType: PropTypes.string,
  onLayoutComplete: PropTypes.func,
  onRemoveComplete: PropTypes.func
};

var MasonryComponent = createReactClass({
  masonry: false,
  erd: undefined,
  latestKnownDomChildren: [],
  displayName: 'MasonryComponent',
  imagesLoadedCancelRef: undefined,
  propTypes: propTypes,

  getDefaultProps: function() {
    return {
      enableResizableChildren: false,
      disableImagesLoaded: false,
      updateOnEachImageLoad: false,
      options: {},
      imagesLoadedOptions: {},
      className: '',
      elementType: 'div',
      onLayoutComplete: function() {
      },
      onRemoveComplete: function() {
      }
    };
  },

  initializeMasonry: function(force) {
    if (!this.masonry || force) {
      this.masonry = new Masonry(
        this.masonryContainer,
        this.props.options
      );

      if (this.props.onLayoutComplete) {
        this.masonry.on('layoutComplete', this.props.onLayoutComplete);
      }

      if (this.props.onRemoveComplete) {
        this.masonry.on('removeComplete', this.props.onRemoveComplete);
      }

      this.latestKnownDomChildren = this.getCurrentDomChildren();
    }
  },

  getCurrentDomChildren: function() {
    var node = this.masonryContainer;
    var children = this.props.options.itemSelector ? node.querySelectorAll(this.props.options.itemSelector) : node.children;
    return Array.prototype.slice.call(children);
  },

  diffDomChildren: function() {
    var forceItemReload = false;

    var knownChildrenStillAttached = this.latestKnownDomChildren.filter(function(element) {
      /*
       * take only elements attached to DOM
       * (aka the parent is the masonry container, not null)
       * otherwise masonry would try to "remove it" again from the DOM
       */
      return !!element.parentNode;
    });

    /*
     * If not all known children are attached to the dom - we have no other way of notifying
     * masonry to remove the ones not still attached besides invoking a complete item reload.
     * basically all the rest of the code below does not matter in that case.
     */
    if (knownChildrenStillAttached.length !== this.latestKnownDomChildren.length) {
      forceItemReload = true;
    }

    var currentDomChildren = this.getCurrentDomChildren();

    /*
     * Since we are looking for a known child which is also attached to the dom AND
     * not attached to the dom at the same time - this would *always* produce an empty array.
     */
    var removed = knownChildrenStillAttached.filter(function(attachedKnownChild) {
      return !~currentDomChildren.indexOf(attachedKnownChild);
    });

    /*
     * This would get any children which are attached to the dom but are *unkown* to us
     * from previous renders
     */
    var newDomChildren = currentDomChildren.filter(function(currentChild) {
      return !~knownChildrenStillAttached.indexOf(currentChild);
    });

    var beginningIndex = 0;

    // get everything added to the beginning of the DOMNode list
    var prepended = newDomChildren.filter(function(newChild) {
      var prepend = (beginningIndex === currentDomChildren.indexOf(newChild));

      if (prepend) {
        // increase the index
        beginningIndex++;
      }

      return prepend;
    });

    // we assume that everything else is appended
    var appended = newDomChildren.filter(function(el) {
      return prepended.indexOf(el) === -1;
    });

    /*
     * otherwise we reverse it because so we're going through the list picking off the items that
     * have been added at the end of the list. this complex logic is preserved in case it needs to be
     * invoked
     *
     * var endingIndex = currentDomChildren.length - 1;
     *
     * newDomChildren.reverse().filter(function(newChild, i){
     *     var append = endingIndex == currentDomChildren.indexOf(newChild);
     *
     *     if (append) {
     *         endingIndex--;
     *     }
     *
     *     return append;
     * });
     */

    // get everything added to the end of the DOMNode list
    var moved = [];

    /*
     * This would always be true (see above about the lofic for "removed")
     */
    if (removed.length === 0) {
      /*
       * 'moved' will contain some random elements (if any) since the "knownChildrenStillAttached" is a filter
       * of the "known" children which are still attached - All indexes could basically change. (for example
       * if the first element is not attached)
       * Don't trust this array.
       */
      moved = knownChildrenStillAttached.filter(function(child, index) {
        return index !== currentDomChildren.indexOf(child);
      });
    }

    this.latestKnownDomChildren = currentDomChildren;

    return {
      old: knownChildrenStillAttached, // Not used
      new: currentDomChildren, // Not used
      removed: removed,
      appended: appended,
      prepended: prepended,
      moved: moved,
      forceItemReload: forceItemReload
    };
  },

  performLayout: function() {
    var diff = this.diffDomChildren();
    var reloadItems = diff.forceItemReload || diff.moved.length > 0;

    // Would never be true. (see comments of 'diffDomChildren' about 'removed')
    if (diff.removed.length > 0) {
      if (this.props.enableResizableChildren) {
        diff.removed.forEach(this.erd.removeAllListeners, this.erd);
      }
      this.masonry.remove(diff.removed);
      reloadItems = true;
    }

    if (diff.appended.length > 0) {
      this.masonry.appended(diff.appended);

      if (diff.prepended.length === 0) {
        reloadItems = true;
      }

      if (this.props.enableResizableChildren) {
        diff.appended.forEach(this.listenToElementResize, this);
      }
    }

    if (diff.prepended.length > 0) {
      this.masonry.prepended(diff.prepended);

      if (this.props.enableResizableChildren) {
        diff.prepended.forEach(this.listenToElementResize, this);
      }
    }

    if (reloadItems) {
      this.masonry.reloadItems();
    }

    this.masonry.layout();
  },

  derefImagesLoaded: function() {
    this.imagesLoadedCancelRef();
    this.imagesLoadedCancelRef = undefined;
  },

  imagesLoaded: function() {
    if (this.props.disableImagesLoaded) {
      return;
    }

    if (this.imagesLoadedCancelRef) {
      this.derefImagesLoaded();
    }

    var event = this.props.updateOnEachImageLoad ? 'progress' : 'always';
    var handler = debounce(
      function(instance) {
        if (this.props.onImagesLoaded) {
          this.props.onImagesLoaded(instance);
        }
        this.masonry.layout();
      }.bind(this), 100);

    var imgLoad = imagesloaded(this.masonryContainer, this.props.imagesLoadedOptions).on(event, handler);

    this.imagesLoadedCancelRef = function() {
      imgLoad.off(event, handler);
      handler.cancel();
    };
  },

  initializeResizableChildren: function() {
    if (!this.props.enableResizableChildren) {
      return;
    }

    this.erd = elementResizeDetectorMaker({
      strategy: 'scroll'
    });

    this.latestKnownDomChildren.forEach(this.listenToElementResize, this);
  },

  listenToElementResize: function(el) {
    this.erd.listenTo(el, function() {
      this.masonry.layout()
    }.bind(this))
  },

  destroyErd: function() {
    if (this.erd) {
      this.latestKnownDomChildren.forEach(this.erd.uninstall, this.erd);
    }
  },

  componentDidMount: function() {
    this.initializeMasonry();
    this.initializeResizableChildren();
    this.imagesLoaded();
  },

  componentDidUpdate: function() {
    this.performLayout();
    this.imagesLoaded();
  },

  componentWillUnmount: function() {
    this.destroyErd();

    // unregister events
    if (this.props.onLayoutComplete) {
      this.masonry.off('layoutComplete', this.props.onLayoutComplete);
    }

    if (this.props.onRemoveComplete) {
      this.masonry.off('removeComplete', this.props.onRemoveComplete);
    }

    if (this.imagesLoadedCancelRef) {
      this.derefImagesLoaded();
    }
    this.masonry.destroy();
  },
  
  setRef: function(n) {
    this.masonryContainer = n;
  },

  render: function() {
    var props = omit(this.props, Object.keys(propTypes));
    return React.createElement(this.props.elementType, assign({}, props, {ref: this.setRef}), this.props.children);
  }
});

module.exports = MasonryComponent;
module.exports.default = MasonryComponent;


/***/ }),
/* 235 */
/*!************************************************!*\
  !*** ./node_modules/masonry-layout/masonry.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * Masonry v4.2.2
 * Cascading grid layout library
 * https://masonry.desandro.com
 * MIT License
 * by David DeSandro
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /*globals define, module, require */
  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
        __webpack_require__(/*! outlayer/outlayer */ 236),
        __webpack_require__(/*! get-size/get-size */ 66)
      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      require('outlayer'),
      require('get-size')
    );
  } else {
    // browser global
    window.Masonry = factory(
      window.Outlayer,
      window.getSize
    );
  }

}( window, function factory( Outlayer, getSize ) {

'use strict';

// -------------------------- masonryDefinition -------------------------- //

  // create an Outlayer layout class
  var Masonry = Outlayer.create('masonry');
  // isFitWidth -> fitWidth
  Masonry.compatOptions.fitWidth = 'isFitWidth';

  var proto = Masonry.prototype;

  proto._resetLayout = function() {
    this.getSize();
    this._getMeasurement( 'columnWidth', 'outerWidth' );
    this._getMeasurement( 'gutter', 'outerWidth' );
    this.measureColumns();

    // reset column Y
    this.colYs = [];
    for ( var i=0; i < this.cols; i++ ) {
      this.colYs.push( 0 );
    }

    this.maxY = 0;
    this.horizontalColIndex = 0;
  };

  proto.measureColumns = function() {
    this.getContainerWidth();
    // if columnWidth is 0, default to outerWidth of first item
    if ( !this.columnWidth ) {
      var firstItem = this.items[0];
      var firstItemElem = firstItem && firstItem.element;
      // columnWidth fall back to item of first element
      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||
        // if first elem has no width, default to size of container
        this.containerWidth;
    }

    var columnWidth = this.columnWidth += this.gutter;

    // calculate columns
    var containerWidth = this.containerWidth + this.gutter;
    var cols = containerWidth / columnWidth;
    // fix rounding errors, typically with gutters
    var excess = columnWidth - containerWidth % columnWidth;
    // if overshoot is less than a pixel, round up, otherwise floor it
    var mathMethod = excess && excess < 1 ? 'round' : 'floor';
    cols = Math[ mathMethod ]( cols );
    this.cols = Math.max( cols, 1 );
  };

  proto.getContainerWidth = function() {
    // container is parent if fit width
    var isFitWidth = this._getOption('fitWidth');
    var container = isFitWidth ? this.element.parentNode : this.element;
    // check that this.size and size are there
    // IE8 triggers resize on body size change, so they might not be
    var size = getSize( container );
    this.containerWidth = size && size.innerWidth;
  };

  proto._getItemLayoutPosition = function( item ) {
    item.getSize();
    // how many columns does this brick span
    var remainder = item.size.outerWidth % this.columnWidth;
    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';
    // round if off by 1 pixel, otherwise use ceil
    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );
    colSpan = Math.min( colSpan, this.cols );
    // use horizontal or top column position
    var colPosMethod = this.options.horizontalOrder ?
      '_getHorizontalColPosition' : '_getTopColPosition';
    var colPosition = this[ colPosMethod ]( colSpan, item );
    // position the brick
    var position = {
      x: this.columnWidth * colPosition.col,
      y: colPosition.y
    };
    // apply setHeight to necessary columns
    var setHeight = colPosition.y + item.size.outerHeight;
    var setMax = colSpan + colPosition.col;
    for ( var i = colPosition.col; i < setMax; i++ ) {
      this.colYs[i] = setHeight;
    }

    return position;
  };

  proto._getTopColPosition = function( colSpan ) {
    var colGroup = this._getTopColGroup( colSpan );
    // get the minimum Y value from the columns
    var minimumY = Math.min.apply( Math, colGroup );

    return {
      col: colGroup.indexOf( minimumY ),
      y: minimumY,
    };
  };

  /**
   * @param {Number} colSpan - number of columns the element spans
   * @returns {Array} colGroup
   */
  proto._getTopColGroup = function( colSpan ) {
    if ( colSpan < 2 ) {
      // if brick spans only one column, use all the column Ys
      return this.colYs;
    }

    var colGroup = [];
    // how many different places could this brick fit horizontally
    var groupCount = this.cols + 1 - colSpan;
    // for each group potential horizontal position
    for ( var i = 0; i < groupCount; i++ ) {
      colGroup[i] = this._getColGroupY( i, colSpan );
    }
    return colGroup;
  };

  proto._getColGroupY = function( col, colSpan ) {
    if ( colSpan < 2 ) {
      return this.colYs[ col ];
    }
    // make an array of colY values for that one group
    var groupColYs = this.colYs.slice( col, col + colSpan );
    // and get the max value of the array
    return Math.max.apply( Math, groupColYs );
  };

  // get column position based on horizontal index. #873
  proto._getHorizontalColPosition = function( colSpan, item ) {
    var col = this.horizontalColIndex % this.cols;
    var isOver = colSpan > 1 && col + colSpan > this.cols;
    // shift to next row if item can't fit on current row
    col = isOver ? 0 : col;
    // don't let zero-size items take up space
    var hasSize = item.size.outerWidth && item.size.outerHeight;
    this.horizontalColIndex = hasSize ? col + colSpan : this.horizontalColIndex;

    return {
      col: col,
      y: this._getColGroupY( col, colSpan ),
    };
  };

  proto._manageStamp = function( stamp ) {
    var stampSize = getSize( stamp );
    var offset = this._getElementOffset( stamp );
    // get the columns that this stamp affects
    var isOriginLeft = this._getOption('originLeft');
    var firstX = isOriginLeft ? offset.left : offset.right;
    var lastX = firstX + stampSize.outerWidth;
    var firstCol = Math.floor( firstX / this.columnWidth );
    firstCol = Math.max( 0, firstCol );
    var lastCol = Math.floor( lastX / this.columnWidth );
    // lastCol should not go over if multiple of columnWidth #425
    lastCol -= lastX % this.columnWidth ? 0 : 1;
    lastCol = Math.min( this.cols - 1, lastCol );
    // set colYs to bottom of the stamp

    var isOriginTop = this._getOption('originTop');
    var stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +
      stampSize.outerHeight;
    for ( var i = firstCol; i <= lastCol; i++ ) {
      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );
    }
  };

  proto._getContainerSize = function() {
    this.maxY = Math.max.apply( Math, this.colYs );
    var size = {
      height: this.maxY
    };

    if ( this._getOption('fitWidth') ) {
      size.width = this._getContainerFitWidth();
    }

    return size;
  };

  proto._getContainerFitWidth = function() {
    var unusedCols = 0;
    // count unused columns
    var i = this.cols;
    while ( --i ) {
      if ( this.colYs[i] !== 0 ) {
        break;
      }
      unusedCols++;
    }
    // fit container to columns that have been used
    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;
  };

  proto.needsResizeLayout = function() {
    var previousWidth = this.containerWidth;
    this.getContainerWidth();
    return previousWidth != this.containerWidth;
  };

  return Masonry;

}));


/***/ }),
/* 236 */
/*!*******************************************!*\
  !*** ./node_modules/outlayer/outlayer.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * Outlayer v2.1.1
 * the brains and guts of a layout library
 * MIT license
 */

( function( window, factory ) {
  'use strict';
  // universal module definition
  /* jshint strict: false */ /* globals define, module, require */
  if ( true ) {
    // AMD - RequireJS
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
        __webpack_require__(/*! ev-emitter/ev-emitter */ 65),
        __webpack_require__(/*! get-size/get-size */ 66),
        __webpack_require__(/*! fizzy-ui-utils/utils */ 237),
        __webpack_require__(/*! ./item */ 239)
      ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( EvEmitter, getSize, utils, Item ) {
        return factory( window, EvEmitter, getSize, utils, Item);
      }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS - Browserify, Webpack
    module.exports = factory(
      window,
      require('ev-emitter'),
      require('get-size'),
      require('fizzy-ui-utils'),
      require('./item')
    );
  } else {
    // browser global
    window.Outlayer = factory(
      window,
      window.EvEmitter,
      window.getSize,
      window.fizzyUIUtils,
      window.Outlayer.Item
    );
  }

}( window, function factory( window, EvEmitter, getSize, utils, Item ) {
'use strict';

// ----- vars ----- //

var console = window.console;
var jQuery = window.jQuery;
var noop = function() {};

// -------------------------- Outlayer -------------------------- //

// globally unique identifiers
var GUID = 0;
// internal store of all Outlayer intances
var instances = {};


/**
 * @param {Element, String} element
 * @param {Object} options
 * @constructor
 */
function Outlayer( element, options ) {
  var queryElement = utils.getQueryElement( element );
  if ( !queryElement ) {
    if ( console ) {
      console.error( 'Bad element for ' + this.constructor.namespace +
        ': ' + ( queryElement || element ) );
    }
    return;
  }
  this.element = queryElement;
  // add jQuery
  if ( jQuery ) {
    this.$element = jQuery( this.element );
  }

  // options
  this.options = utils.extend( {}, this.constructor.defaults );
  this.option( options );

  // add id for Outlayer.getFromElement
  var id = ++GUID;
  this.element.outlayerGUID = id; // expando
  instances[ id ] = this; // associate via id

  // kick it off
  this._create();

  var isInitLayout = this._getOption('initLayout');
  if ( isInitLayout ) {
    this.layout();
  }
}

// settings are for internal use only
Outlayer.namespace = 'outlayer';
Outlayer.Item = Item;

// default options
Outlayer.defaults = {
  containerStyle: {
    position: 'relative'
  },
  initLayout: true,
  originLeft: true,
  originTop: true,
  resize: true,
  resizeContainer: true,
  // item options
  transitionDuration: '0.4s',
  hiddenStyle: {
    opacity: 0,
    transform: 'scale(0.001)'
  },
  visibleStyle: {
    opacity: 1,
    transform: 'scale(1)'
  }
};

var proto = Outlayer.prototype;
// inherit EvEmitter
utils.extend( proto, EvEmitter.prototype );

/**
 * set options
 * @param {Object} opts
 */
proto.option = function( opts ) {
  utils.extend( this.options, opts );
};

/**
 * get backwards compatible option value, check old name
 */
proto._getOption = function( option ) {
  var oldOption = this.constructor.compatOptions[ option ];
  return oldOption && this.options[ oldOption ] !== undefined ?
    this.options[ oldOption ] : this.options[ option ];
};

Outlayer.compatOptions = {
  // currentName: oldName
  initLayout: 'isInitLayout',
  horizontal: 'isHorizontal',
  layoutInstant: 'isLayoutInstant',
  originLeft: 'isOriginLeft',
  originTop: 'isOriginTop',
  resize: 'isResizeBound',
  resizeContainer: 'isResizingContainer'
};

proto._create = function() {
  // get items from children
  this.reloadItems();
  // elements that affect layout, but are not laid out
  this.stamps = [];
  this.stamp( this.options.stamp );
  // set container style
  utils.extend( this.element.style, this.options.containerStyle );

  // bind resize method
  var canBindResize = this._getOption('resize');
  if ( canBindResize ) {
    this.bindResize();
  }
};

// goes through all children again and gets bricks in proper order
proto.reloadItems = function() {
  // collection of item elements
  this.items = this._itemize( this.element.children );
};


/**
 * turn elements into Outlayer.Items to be used in layout
 * @param {Array or NodeList or HTMLElement} elems
 * @returns {Array} items - collection of new Outlayer Items
 */
proto._itemize = function( elems ) {

  var itemElems = this._filterFindItemElements( elems );
  var Item = this.constructor.Item;

  // create new Outlayer Items for collection
  var items = [];
  for ( var i=0; i < itemElems.length; i++ ) {
    var elem = itemElems[i];
    var item = new Item( elem, this );
    items.push( item );
  }

  return items;
};

/**
 * get item elements to be used in layout
 * @param {Array or NodeList or HTMLElement} elems
 * @returns {Array} items - item elements
 */
proto._filterFindItemElements = function( elems ) {
  return utils.filterFindElements( elems, this.options.itemSelector );
};

/**
 * getter method for getting item elements
 * @returns {Array} elems - collection of item elements
 */
proto.getItemElements = function() {
  return this.items.map( function( item ) {
    return item.element;
  });
};

// ----- init & layout ----- //

/**
 * lays out all items
 */
proto.layout = function() {
  this._resetLayout();
  this._manageStamps();

  // don't animate first layout
  var layoutInstant = this._getOption('layoutInstant');
  var isInstant = layoutInstant !== undefined ?
    layoutInstant : !this._isLayoutInited;
  this.layoutItems( this.items, isInstant );

  // flag for initalized
  this._isLayoutInited = true;
};

// _init is alias for layout
proto._init = proto.layout;

/**
 * logic before any new layout
 */
proto._resetLayout = function() {
  this.getSize();
};


proto.getSize = function() {
  this.size = getSize( this.element );
};

/**
 * get measurement from option, for columnWidth, rowHeight, gutter
 * if option is String -> get element from selector string, & get size of element
 * if option is Element -> get size of element
 * else use option as a number
 *
 * @param {String} measurement
 * @param {String} size - width or height
 * @private
 */
proto._getMeasurement = function( measurement, size ) {
  var option = this.options[ measurement ];
  var elem;
  if ( !option ) {
    // default to 0
    this[ measurement ] = 0;
  } else {
    // use option as an element
    if ( typeof option == 'string' ) {
      elem = this.element.querySelector( option );
    } else if ( option instanceof HTMLElement ) {
      elem = option;
    }
    // use size of element, if element
    this[ measurement ] = elem ? getSize( elem )[ size ] : option;
  }
};

/**
 * layout a collection of item elements
 * @api public
 */
proto.layoutItems = function( items, isInstant ) {
  items = this._getItemsForLayout( items );

  this._layoutItems( items, isInstant );

  this._postLayout();
};

/**
 * get the items to be laid out
 * you may want to skip over some items
 * @param {Array} items
 * @returns {Array} items
 */
proto._getItemsForLayout = function( items ) {
  return items.filter( function( item ) {
    return !item.isIgnored;
  });
};

/**
 * layout items
 * @param {Array} items
 * @param {Boolean} isInstant
 */
proto._layoutItems = function( items, isInstant ) {
  this._emitCompleteOnItems( 'layout', items );

  if ( !items || !items.length ) {
    // no items, emit event with empty array
    return;
  }

  var queue = [];

  items.forEach( function( item ) {
    // get x/y object from method
    var position = this._getItemLayoutPosition( item );
    // enqueue
    position.item = item;
    position.isInstant = isInstant || item.isLayoutInstant;
    queue.push( position );
  }, this );

  this._processLayoutQueue( queue );
};

/**
 * get item layout position
 * @param {Outlayer.Item} item
 * @returns {Object} x and y position
 */
proto._getItemLayoutPosition = function( /* item */ ) {
  return {
    x: 0,
    y: 0
  };
};

/**
 * iterate over array and position each item
 * Reason being - separating this logic prevents 'layout invalidation'
 * thx @paul_irish
 * @param {Array} queue
 */
proto._processLayoutQueue = function( queue ) {
  this.updateStagger();
  queue.forEach( function( obj, i ) {
    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );
  }, this );
};

// set stagger from option in milliseconds number
proto.updateStagger = function() {
  var stagger = this.options.stagger;
  if ( stagger === null || stagger === undefined ) {
    this.stagger = 0;
    return;
  }
  this.stagger = getMilliseconds( stagger );
  return this.stagger;
};

/**
 * Sets position of item in DOM
 * @param {Outlayer.Item} item
 * @param {Number} x - horizontal position
 * @param {Number} y - vertical position
 * @param {Boolean} isInstant - disables transitions
 */
proto._positionItem = function( item, x, y, isInstant, i ) {
  if ( isInstant ) {
    // if not transition, just set CSS
    item.goTo( x, y );
  } else {
    item.stagger( i * this.stagger );
    item.moveTo( x, y );
  }
};

/**
 * Any logic you want to do after each layout,
 * i.e. size the container
 */
proto._postLayout = function() {
  this.resizeContainer();
};

proto.resizeContainer = function() {
  var isResizingContainer = this._getOption('resizeContainer');
  if ( !isResizingContainer ) {
    return;
  }
  var size = this._getContainerSize();
  if ( size ) {
    this._setContainerMeasure( size.width, true );
    this._setContainerMeasure( size.height, false );
  }
};

/**
 * Sets width or height of container if returned
 * @returns {Object} size
 *   @param {Number} width
 *   @param {Number} height
 */
proto._getContainerSize = noop;

/**
 * @param {Number} measure - size of width or height
 * @param {Boolean} isWidth
 */
proto._setContainerMeasure = function( measure, isWidth ) {
  if ( measure === undefined ) {
    return;
  }

  var elemSize = this.size;
  // add padding and border width if border box
  if ( elemSize.isBorderBox ) {
    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +
      elemSize.borderLeftWidth + elemSize.borderRightWidth :
      elemSize.paddingBottom + elemSize.paddingTop +
      elemSize.borderTopWidth + elemSize.borderBottomWidth;
  }

  measure = Math.max( measure, 0 );
  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';
};

/**
 * emit eventComplete on a collection of items events
 * @param {String} eventName
 * @param {Array} items - Outlayer.Items
 */
proto._emitCompleteOnItems = function( eventName, items ) {
  var _this = this;
  function onComplete() {
    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );
  }

  var count = items.length;
  if ( !items || !count ) {
    onComplete();
    return;
  }

  var doneCount = 0;
  function tick() {
    doneCount++;
    if ( doneCount == count ) {
      onComplete();
    }
  }

  // bind callback
  items.forEach( function( item ) {
    item.once( eventName, tick );
  });
};

/**
 * emits events via EvEmitter and jQuery events
 * @param {String} type - name of event
 * @param {Event} event - original event
 * @param {Array} args - extra arguments
 */
proto.dispatchEvent = function( type, event, args ) {
  // add original event to arguments
  var emitArgs = event ? [ event ].concat( args ) : args;
  this.emitEvent( type, emitArgs );

  if ( jQuery ) {
    // set this.$element
    this.$element = this.$element || jQuery( this.element );
    if ( event ) {
      // create jQuery event
      var $event = jQuery.Event( event );
      $event.type = type;
      this.$element.trigger( $event, args );
    } else {
      // just trigger with type if no event available
      this.$element.trigger( type, args );
    }
  }
};

// -------------------------- ignore & stamps -------------------------- //


/**
 * keep item in collection, but do not lay it out
 * ignored items do not get skipped in layout
 * @param {Element} elem
 */
proto.ignore = function( elem ) {
  var item = this.getItem( elem );
  if ( item ) {
    item.isIgnored = true;
  }
};

/**
 * return item to layout collection
 * @param {Element} elem
 */
proto.unignore = function( elem ) {
  var item = this.getItem( elem );
  if ( item ) {
    delete item.isIgnored;
  }
};

/**
 * adds elements to stamps
 * @param {NodeList, Array, Element, or String} elems
 */
proto.stamp = function( elems ) {
  elems = this._find( elems );
  if ( !elems ) {
    return;
  }

  this.stamps = this.stamps.concat( elems );
  // ignore
  elems.forEach( this.ignore, this );
};

/**
 * removes elements to stamps
 * @param {NodeList, Array, or Element} elems
 */
proto.unstamp = function( elems ) {
  elems = this._find( elems );
  if ( !elems ){
    return;
  }

  elems.forEach( function( elem ) {
    // filter out removed stamp elements
    utils.removeFrom( this.stamps, elem );
    this.unignore( elem );
  }, this );
};

/**
 * finds child elements
 * @param {NodeList, Array, Element, or String} elems
 * @returns {Array} elems
 */
proto._find = function( elems ) {
  if ( !elems ) {
    return;
  }
  // if string, use argument as selector string
  if ( typeof elems == 'string' ) {
    elems = this.element.querySelectorAll( elems );
  }
  elems = utils.makeArray( elems );
  return elems;
};

proto._manageStamps = function() {
  if ( !this.stamps || !this.stamps.length ) {
    return;
  }

  this._getBoundingRect();

  this.stamps.forEach( this._manageStamp, this );
};

// update boundingLeft / Top
proto._getBoundingRect = function() {
  // get bounding rect for container element
  var boundingRect = this.element.getBoundingClientRect();
  var size = this.size;
  this._boundingRect = {
    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,
    top: boundingRect.top + size.paddingTop + size.borderTopWidth,
    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),
    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )
  };
};

/**
 * @param {Element} stamp
**/
proto._manageStamp = noop;

/**
 * get x/y position of element relative to container element
 * @param {Element} elem
 * @returns {Object} offset - has left, top, right, bottom
 */
proto._getElementOffset = function( elem ) {
  var boundingRect = elem.getBoundingClientRect();
  var thisRect = this._boundingRect;
  var size = getSize( elem );
  var offset = {
    left: boundingRect.left - thisRect.left - size.marginLeft,
    top: boundingRect.top - thisRect.top - size.marginTop,
    right: thisRect.right - boundingRect.right - size.marginRight,
    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom
  };
  return offset;
};

// -------------------------- resize -------------------------- //

// enable event handlers for listeners
// i.e. resize -> onresize
proto.handleEvent = utils.handleEvent;

/**
 * Bind layout to window resizing
 */
proto.bindResize = function() {
  window.addEventListener( 'resize', this );
  this.isResizeBound = true;
};

/**
 * Unbind layout to window resizing
 */
proto.unbindResize = function() {
  window.removeEventListener( 'resize', this );
  this.isResizeBound = false;
};

proto.onresize = function() {
  this.resize();
};

utils.debounceMethod( Outlayer, 'onresize', 100 );

proto.resize = function() {
  // don't trigger if size did not change
  // or if resize was unbound. See #9
  if ( !this.isResizeBound || !this.needsResizeLayout() ) {
    return;
  }

  this.layout();
};

/**
 * check if layout is needed post layout
 * @returns Boolean
 */
proto.needsResizeLayout = function() {
  var size = getSize( this.element );
  // check that this.size and size are there
  // IE8 triggers resize on body size change, so they might not be
  var hasSizes = this.size && size;
  return hasSizes && size.innerWidth !== this.size.innerWidth;
};

// -------------------------- methods -------------------------- //

/**
 * add items to Outlayer instance
 * @param {Array or NodeList or Element} elems
 * @returns {Array} items - Outlayer.Items
**/
proto.addItems = function( elems ) {
  var items = this._itemize( elems );
  // add items to collection
  if ( items.length ) {
    this.items = this.items.concat( items );
  }
  return items;
};

/**
 * Layout newly-appended item elements
 * @param {Array or NodeList or Element} elems
 */
proto.appended = function( elems ) {
  var items = this.addItems( elems );
  if ( !items.length ) {
    return;
  }
  // layout and reveal just the new items
  this.layoutItems( items, true );
  this.reveal( items );
};

/**
 * Layout prepended elements
 * @param {Array or NodeList or Element} elems
 */
proto.prepended = function( elems ) {
  var items = this._itemize( elems );
  if ( !items.length ) {
    return;
  }
  // add items to beginning of collection
  var previousItems = this.items.slice(0);
  this.items = items.concat( previousItems );
  // start new layout
  this._resetLayout();
  this._manageStamps();
  // layout new stuff without transition
  this.layoutItems( items, true );
  this.reveal( items );
  // layout previous items
  this.layoutItems( previousItems );
};

/**
 * reveal a collection of items
 * @param {Array of Outlayer.Items} items
 */
proto.reveal = function( items ) {
  this._emitCompleteOnItems( 'reveal', items );
  if ( !items || !items.length ) {
    return;
  }
  var stagger = this.updateStagger();
  items.forEach( function( item, i ) {
    item.stagger( i * stagger );
    item.reveal();
  });
};

/**
 * hide a collection of items
 * @param {Array of Outlayer.Items} items
 */
proto.hide = function( items ) {
  this._emitCompleteOnItems( 'hide', items );
  if ( !items || !items.length ) {
    return;
  }
  var stagger = this.updateStagger();
  items.forEach( function( item, i ) {
    item.stagger( i * stagger );
    item.hide();
  });
};

/**
 * reveal item elements
 * @param {Array}, {Element}, {NodeList} items
 */
proto.revealItemElements = function( elems ) {
  var items = this.getItems( elems );
  this.reveal( items );
};

/**
 * hide item elements
 * @param {Array}, {Element}, {NodeList} items
 */
proto.hideItemElements = function( elems ) {
  var items = this.getItems( elems );
  this.hide( items );
};

/**
 * get Outlayer.Item, given an Element
 * @param {Element} elem
 * @param {Function} callback
 * @returns {Outlayer.Item} item
 */
proto.getItem = function( elem ) {
  // loop through items to get the one that matches
  for ( var i=0; i < this.items.length; i++ ) {
    var item = this.items[i];
    if ( item.element == elem ) {
      // return item
      return item;
    }
  }
};

/**
 * get collection of Outlayer.Items, given Elements
 * @param {Array} elems
 * @returns {Array} items - Outlayer.Items
 */
proto.getItems = function( elems ) {
  elems = utils.makeArray( elems );
  var items = [];
  elems.forEach( function( elem ) {
    var item = this.getItem( elem );
    if ( item ) {
      items.push( item );
    }
  }, this );

  return items;
};

/**
 * remove element(s) from instance and DOM
 * @param {Array or NodeList or Element} elems
 */
proto.remove = function( elems ) {
  var removeItems = this.getItems( elems );

  this._emitCompleteOnItems( 'remove', removeItems );

  // bail if no items to remove
  if ( !removeItems || !removeItems.length ) {
    return;
  }

  removeItems.forEach( function( item ) {
    item.remove();
    // remove item from collection
    utils.removeFrom( this.items, item );
  }, this );
};

// ----- destroy ----- //

// remove and disable Outlayer instance
proto.destroy = function() {
  // clean up dynamic styles
  var style = this.element.style;
  style.height = '';
  style.position = '';
  style.width = '';
  // destroy items
  this.items.forEach( function( item ) {
    item.destroy();
  });

  this.unbindResize();

  var id = this.element.outlayerGUID;
  delete instances[ id ]; // remove reference to instance by id
  delete this.element.outlayerGUID;
  // remove data for jQuery
  if ( jQuery ) {
    jQuery.removeData( this.element, this.constructor.namespace );
  }

};

// -------------------------- data -------------------------- //

/**
 * get Outlayer instance from element
 * @param {Element} elem
 * @returns {Outlayer}
 */
Outlayer.data = function( elem ) {
  elem = utils.getQueryElement( elem );
  var id = elem && elem.outlayerGUID;
  return id && instances[ id ];
};


// -------------------------- create Outlayer class -------------------------- //

/**
 * create a layout class
 * @param {String} namespace
 */
Outlayer.create = function( namespace, options ) {
  // sub-class Outlayer
  var Layout = subclass( Outlayer );
  // apply new options and compatOptions
  Layout.defaults = utils.extend( {}, Outlayer.defaults );
  utils.extend( Layout.defaults, options );
  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );

  Layout.namespace = namespace;

  Layout.data = Outlayer.data;

  // sub-class Item
  Layout.Item = subclass( Item );

  // -------------------------- declarative -------------------------- //

  utils.htmlInit( Layout, namespace );

  // -------------------------- jQuery bridge -------------------------- //

  // make into jQuery plugin
  if ( jQuery && jQuery.bridget ) {
    jQuery.bridget( namespace, Layout );
  }

  return Layout;
};

function subclass( Parent ) {
  function SubClass() {
    Parent.apply( this, arguments );
  }

  SubClass.prototype = Object.create( Parent.prototype );
  SubClass.prototype.constructor = SubClass;

  return SubClass;
}

// ----- helpers ----- //

// how many milliseconds are in each unit
var msUnits = {
  ms: 1,
  s: 1000
};

// munge time-like parameter into millisecond number
// '0.4s' -> 40
function getMilliseconds( time ) {
  if ( typeof time == 'number' ) {
    return time;
  }
  var matches = time.match( /(^\d*\.?\d*)(\w*)/ );
  var num = matches && matches[1];
  var unit = matches && matches[2];
  if ( !num.length ) {
    return 0;
  }
  num = parseFloat( num );
  var mult = msUnits[ unit ] || 1;
  return num * mult;
}

// ----- fin ----- //

// back in global
Outlayer.Item = Item;

return Outlayer;

}));


/***/ }),
/* 237 */
/*!**********************************************!*\
  !*** ./node_modules/fizzy-ui-utils/utils.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Fizzy UI utils v2.0.7
 * MIT license
 */

/*jshint browser: true, undef: true, unused: true, strict: true */

( function( window, factory ) {
  // universal module definition
  /*jshint strict: false */ /*globals define, module, require */

  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
      __webpack_require__(/*! desandro-matches-selector/matches-selector */ 238)
    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( matchesSelector ) {
      return factory( window, matchesSelector );
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      window,
      require('desandro-matches-selector')
    );
  } else {
    // browser global
    window.fizzyUIUtils = factory(
      window,
      window.matchesSelector
    );
  }

}( window, function factory( window, matchesSelector ) {

'use strict';

var utils = {};

// ----- extend ----- //

// extends objects
utils.extend = function( a, b ) {
  for ( var prop in b ) {
    a[ prop ] = b[ prop ];
  }
  return a;
};

// ----- modulo ----- //

utils.modulo = function( num, div ) {
  return ( ( num % div ) + div ) % div;
};

// ----- makeArray ----- //

var arraySlice = Array.prototype.slice;

// turn element or nodeList into an array
utils.makeArray = function( obj ) {
  if ( Array.isArray( obj ) ) {
    // use object if already an array
    return obj;
  }
  // return empty array if undefined or null. #6
  if ( obj === null || obj === undefined ) {
    return [];
  }

  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';
  if ( isArrayLike ) {
    // convert nodeList to array
    return arraySlice.call( obj );
  }

  // array of single index
  return [ obj ];
};

// ----- removeFrom ----- //

utils.removeFrom = function( ary, obj ) {
  var index = ary.indexOf( obj );
  if ( index != -1 ) {
    ary.splice( index, 1 );
  }
};

// ----- getParent ----- //

utils.getParent = function( elem, selector ) {
  while ( elem.parentNode && elem != document.body ) {
    elem = elem.parentNode;
    if ( matchesSelector( elem, selector ) ) {
      return elem;
    }
  }
};

// ----- getQueryElement ----- //

// use element as selector string
utils.getQueryElement = function( elem ) {
  if ( typeof elem == 'string' ) {
    return document.querySelector( elem );
  }
  return elem;
};

// ----- handleEvent ----- //

// enable .ontype to trigger from .addEventListener( elem, 'type' )
utils.handleEvent = function( event ) {
  var method = 'on' + event.type;
  if ( this[ method ] ) {
    this[ method ]( event );
  }
};

// ----- filterFindElements ----- //

utils.filterFindElements = function( elems, selector ) {
  // make array of elems
  elems = utils.makeArray( elems );
  var ffElems = [];

  elems.forEach( function( elem ) {
    // check that elem is an actual element
    if ( !( elem instanceof HTMLElement ) ) {
      return;
    }
    // add elem if no selector
    if ( !selector ) {
      ffElems.push( elem );
      return;
    }
    // filter & find items if we have a selector
    // filter
    if ( matchesSelector( elem, selector ) ) {
      ffElems.push( elem );
    }
    // find children
    var childElems = elem.querySelectorAll( selector );
    // concat childElems to filterFound array
    for ( var i=0; i < childElems.length; i++ ) {
      ffElems.push( childElems[i] );
    }
  });

  return ffElems;
};

// ----- debounceMethod ----- //

utils.debounceMethod = function( _class, methodName, threshold ) {
  threshold = threshold || 100;
  // original method
  var method = _class.prototype[ methodName ];
  var timeoutName = methodName + 'Timeout';

  _class.prototype[ methodName ] = function() {
    var timeout = this[ timeoutName ];
    clearTimeout( timeout );

    var args = arguments;
    var _this = this;
    this[ timeoutName ] = setTimeout( function() {
      method.apply( _this, args );
      delete _this[ timeoutName ];
    }, threshold );
  };
};

// ----- docReady ----- //

utils.docReady = function( callback ) {
  var readyState = document.readyState;
  if ( readyState == 'complete' || readyState == 'interactive' ) {
    // do async to allow for other scripts to run. metafizzy/flickity#441
    setTimeout( callback );
  } else {
    document.addEventListener( 'DOMContentLoaded', callback );
  }
};

// ----- htmlInit ----- //

// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/
utils.toDashed = function( str ) {
  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {
    return $1 + '-' + $2;
  }).toLowerCase();
};

var console = window.console;
/**
 * allow user to initialize classes via [data-namespace] or .js-namespace class
 * htmlInit( Widget, 'widgetName' )
 * options are parsed from data-namespace-options
 */
utils.htmlInit = function( WidgetClass, namespace ) {
  utils.docReady( function() {
    var dashedNamespace = utils.toDashed( namespace );
    var dataAttr = 'data-' + dashedNamespace;
    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );
    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );
    var elems = utils.makeArray( dataAttrElems )
      .concat( utils.makeArray( jsDashElems ) );
    var dataOptionsAttr = dataAttr + '-options';
    var jQuery = window.jQuery;

    elems.forEach( function( elem ) {
      var attr = elem.getAttribute( dataAttr ) ||
        elem.getAttribute( dataOptionsAttr );
      var options;
      try {
        options = attr && JSON.parse( attr );
      } catch ( error ) {
        // log error, do not initialize
        if ( console ) {
          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +
          ': ' + error );
        }
        return;
      }
      // initialize
      var instance = new WidgetClass( elem, options );
      // make available via $().data('namespace')
      if ( jQuery ) {
        jQuery.data( elem, namespace, instance );
      }
    });

  });
};

// -----  ----- //

return utils;

}));


/***/ }),
/* 238 */
/*!********************************************************************!*\
  !*** ./node_modules/desandro-matches-selector/matches-selector.js ***!
  \********************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * matchesSelector v2.0.2
 * matchesSelector( element, '.selector' )
 * MIT license
 */

/*jshint browser: true, strict: true, undef: true, unused: true */

( function( window, factory ) {
  /*global define: false, module: false */
  'use strict';
  // universal module definition
  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory();
  } else {
    // browser global
    window.matchesSelector = factory();
  }

}( window, function factory() {
  'use strict';

  var matchesMethod = ( function() {
    var ElemProto = window.Element.prototype;
    // check for the standard method name first
    if ( ElemProto.matches ) {
      return 'matches';
    }
    // check un-prefixed
    if ( ElemProto.matchesSelector ) {
      return 'matchesSelector';
    }
    // check vendor prefixes
    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];

    for ( var i=0; i < prefixes.length; i++ ) {
      var prefix = prefixes[i];
      var method = prefix + 'MatchesSelector';
      if ( ElemProto[ method ] ) {
        return method;
      }
    }
  })();

  return function matchesSelector( elem, selector ) {
    return elem[ matchesMethod ]( selector );
  };

}));


/***/ }),
/* 239 */
/*!***************************************!*\
  !*** ./node_modules/outlayer/item.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Outlayer Item
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, require */
  if ( true ) {
    // AMD - RequireJS
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
        __webpack_require__(/*! ev-emitter/ev-emitter */ 65),
        __webpack_require__(/*! get-size/get-size */ 66)
      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS - Browserify, Webpack
    module.exports = factory(
      require('ev-emitter'),
      require('get-size')
    );
  } else {
    // browser global
    window.Outlayer = {};
    window.Outlayer.Item = factory(
      window.EvEmitter,
      window.getSize
    );
  }

}( window, function factory( EvEmitter, getSize ) {
'use strict';

// ----- helpers ----- //

function isEmptyObj( obj ) {
  for ( var prop in obj ) {
    return false;
  }
  prop = null;
  return true;
}

// -------------------------- CSS3 support -------------------------- //


var docElemStyle = document.documentElement.style;

var transitionProperty = typeof docElemStyle.transition == 'string' ?
  'transition' : 'WebkitTransition';
var transformProperty = typeof docElemStyle.transform == 'string' ?
  'transform' : 'WebkitTransform';

var transitionEndEvent = {
  WebkitTransition: 'webkitTransitionEnd',
  transition: 'transitionend'
}[ transitionProperty ];

// cache all vendor properties that could have vendor prefix
var vendorProperties = {
  transform: transformProperty,
  transition: transitionProperty,
  transitionDuration: transitionProperty + 'Duration',
  transitionProperty: transitionProperty + 'Property',
  transitionDelay: transitionProperty + 'Delay'
};

// -------------------------- Item -------------------------- //

function Item( element, layout ) {
  if ( !element ) {
    return;
  }

  this.element = element;
  // parent layout class, i.e. Masonry, Isotope, or Packery
  this.layout = layout;
  this.position = {
    x: 0,
    y: 0
  };

  this._create();
}

// inherit EvEmitter
var proto = Item.prototype = Object.create( EvEmitter.prototype );
proto.constructor = Item;

proto._create = function() {
  // transition objects
  this._transn = {
    ingProperties: {},
    clean: {},
    onEnd: {}
  };

  this.css({
    position: 'absolute'
  });
};

// trigger specified handler for event type
proto.handleEvent = function( event ) {
  var method = 'on' + event.type;
  if ( this[ method ] ) {
    this[ method ]( event );
  }
};

proto.getSize = function() {
  this.size = getSize( this.element );
};

/**
 * apply CSS styles to element
 * @param {Object} style
 */
proto.css = function( style ) {
  var elemStyle = this.element.style;

  for ( var prop in style ) {
    // use vendor property if available
    var supportedProp = vendorProperties[ prop ] || prop;
    elemStyle[ supportedProp ] = style[ prop ];
  }
};

 // measure position, and sets it
proto.getPosition = function() {
  var style = getComputedStyle( this.element );
  var isOriginLeft = this.layout._getOption('originLeft');
  var isOriginTop = this.layout._getOption('originTop');
  var xValue = style[ isOriginLeft ? 'left' : 'right' ];
  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];
  var x = parseFloat( xValue );
  var y = parseFloat( yValue );
  // convert percent to pixels
  var layoutSize = this.layout.size;
  if ( xValue.indexOf('%') != -1 ) {
    x = ( x / 100 ) * layoutSize.width;
  }
  if ( yValue.indexOf('%') != -1 ) {
    y = ( y / 100 ) * layoutSize.height;
  }
  // clean up 'auto' or other non-integer values
  x = isNaN( x ) ? 0 : x;
  y = isNaN( y ) ? 0 : y;
  // remove padding from measurement
  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;
  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;

  this.position.x = x;
  this.position.y = y;
};

// set settled position, apply padding
proto.layoutPosition = function() {
  var layoutSize = this.layout.size;
  var style = {};
  var isOriginLeft = this.layout._getOption('originLeft');
  var isOriginTop = this.layout._getOption('originTop');

  // x
  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';
  var xProperty = isOriginLeft ? 'left' : 'right';
  var xResetProperty = isOriginLeft ? 'right' : 'left';

  var x = this.position.x + layoutSize[ xPadding ];
  // set in percentage or pixels
  style[ xProperty ] = this.getXValue( x );
  // reset other property
  style[ xResetProperty ] = '';

  // y
  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';
  var yProperty = isOriginTop ? 'top' : 'bottom';
  var yResetProperty = isOriginTop ? 'bottom' : 'top';

  var y = this.position.y + layoutSize[ yPadding ];
  // set in percentage or pixels
  style[ yProperty ] = this.getYValue( y );
  // reset other property
  style[ yResetProperty ] = '';

  this.css( style );
  this.emitEvent( 'layout', [ this ] );
};

proto.getXValue = function( x ) {
  var isHorizontal = this.layout._getOption('horizontal');
  return this.layout.options.percentPosition && !isHorizontal ?
    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';
};

proto.getYValue = function( y ) {
  var isHorizontal = this.layout._getOption('horizontal');
  return this.layout.options.percentPosition && isHorizontal ?
    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';
};

proto._transitionTo = function( x, y ) {
  this.getPosition();
  // get current x & y from top/left
  var curX = this.position.x;
  var curY = this.position.y;

  var didNotMove = x == this.position.x && y == this.position.y;

  // save end position
  this.setPosition( x, y );

  // if did not move and not transitioning, just go to layout
  if ( didNotMove && !this.isTransitioning ) {
    this.layoutPosition();
    return;
  }

  var transX = x - curX;
  var transY = y - curY;
  var transitionStyle = {};
  transitionStyle.transform = this.getTranslate( transX, transY );

  this.transition({
    to: transitionStyle,
    onTransitionEnd: {
      transform: this.layoutPosition
    },
    isCleaning: true
  });
};

proto.getTranslate = function( x, y ) {
  // flip cooridinates if origin on right or bottom
  var isOriginLeft = this.layout._getOption('originLeft');
  var isOriginTop = this.layout._getOption('originTop');
  x = isOriginLeft ? x : -x;
  y = isOriginTop ? y : -y;
  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';
};

// non transition + transform support
proto.goTo = function( x, y ) {
  this.setPosition( x, y );
  this.layoutPosition();
};

proto.moveTo = proto._transitionTo;

proto.setPosition = function( x, y ) {
  this.position.x = parseFloat( x );
  this.position.y = parseFloat( y );
};

// ----- transition ----- //

/**
 * @param {Object} style - CSS
 * @param {Function} onTransitionEnd
 */

// non transition, just trigger callback
proto._nonTransition = function( args ) {
  this.css( args.to );
  if ( args.isCleaning ) {
    this._removeStyles( args.to );
  }
  for ( var prop in args.onTransitionEnd ) {
    args.onTransitionEnd[ prop ].call( this );
  }
};

/**
 * proper transition
 * @param {Object} args - arguments
 *   @param {Object} to - style to transition to
 *   @param {Object} from - style to start transition from
 *   @param {Boolean} isCleaning - removes transition styles after transition
 *   @param {Function} onTransitionEnd - callback
 */
proto.transition = function( args ) {
  // redirect to nonTransition if no transition duration
  if ( !parseFloat( this.layout.options.transitionDuration ) ) {
    this._nonTransition( args );
    return;
  }

  var _transition = this._transn;
  // keep track of onTransitionEnd callback by css property
  for ( var prop in args.onTransitionEnd ) {
    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];
  }
  // keep track of properties that are transitioning
  for ( prop in args.to ) {
    _transition.ingProperties[ prop ] = true;
    // keep track of properties to clean up when transition is done
    if ( args.isCleaning ) {
      _transition.clean[ prop ] = true;
    }
  }

  // set from styles
  if ( args.from ) {
    this.css( args.from );
    // force redraw. http://blog.alexmaccaw.com/css-transitions
    var h = this.element.offsetHeight;
    // hack for JSHint to hush about unused var
    h = null;
  }
  // enable transition
  this.enableTransition( args.to );
  // set styles that are transitioning
  this.css( args.to );

  this.isTransitioning = true;

};

// dash before all cap letters, including first for
// WebkitTransform => -webkit-transform
function toDashedAll( str ) {
  return str.replace( /([A-Z])/g, function( $1 ) {
    return '-' + $1.toLowerCase();
  });
}

var transitionProps = 'opacity,' + toDashedAll( transformProperty );

proto.enableTransition = function(/* style */) {
  // HACK changing transitionProperty during a transition
  // will cause transition to jump
  if ( this.isTransitioning ) {
    return;
  }

  // make `transition: foo, bar, baz` from style object
  // HACK un-comment this when enableTransition can work
  // while a transition is happening
  // var transitionValues = [];
  // for ( var prop in style ) {
  //   // dash-ify camelCased properties like WebkitTransition
  //   prop = vendorProperties[ prop ] || prop;
  //   transitionValues.push( toDashedAll( prop ) );
  // }
  // munge number to millisecond, to match stagger
  var duration = this.layout.options.transitionDuration;
  duration = typeof duration == 'number' ? duration + 'ms' : duration;
  // enable transition styles
  this.css({
    transitionProperty: transitionProps,
    transitionDuration: duration,
    transitionDelay: this.staggerDelay || 0
  });
  // listen for transition end event
  this.element.addEventListener( transitionEndEvent, this, false );
};

// ----- events ----- //

proto.onwebkitTransitionEnd = function( event ) {
  this.ontransitionend( event );
};

proto.onotransitionend = function( event ) {
  this.ontransitionend( event );
};

// properties that I munge to make my life easier
var dashedVendorProperties = {
  '-webkit-transform': 'transform'
};

proto.ontransitionend = function( event ) {
  // disregard bubbled events from children
  if ( event.target !== this.element ) {
    return;
  }
  var _transition = this._transn;
  // get property name of transitioned property, convert to prefix-free
  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;

  // remove property that has completed transitioning
  delete _transition.ingProperties[ propertyName ];
  // check if any properties are still transitioning
  if ( isEmptyObj( _transition.ingProperties ) ) {
    // all properties have completed transitioning
    this.disableTransition();
  }
  // clean style
  if ( propertyName in _transition.clean ) {
    // clean up style
    this.element.style[ event.propertyName ] = '';
    delete _transition.clean[ propertyName ];
  }
  // trigger onTransitionEnd callback
  if ( propertyName in _transition.onEnd ) {
    var onTransitionEnd = _transition.onEnd[ propertyName ];
    onTransitionEnd.call( this );
    delete _transition.onEnd[ propertyName ];
  }

  this.emitEvent( 'transitionEnd', [ this ] );
};

proto.disableTransition = function() {
  this.removeTransitionStyles();
  this.element.removeEventListener( transitionEndEvent, this, false );
  this.isTransitioning = false;
};

/**
 * removes style property from element
 * @param {Object} style
**/
proto._removeStyles = function( style ) {
  // clean up transition styles
  var cleanStyle = {};
  for ( var prop in style ) {
    cleanStyle[ prop ] = '';
  }
  this.css( cleanStyle );
};

var cleanTransitionStyle = {
  transitionProperty: '',
  transitionDuration: '',
  transitionDelay: ''
};

proto.removeTransitionStyles = function() {
  // remove transition
  this.css( cleanTransitionStyle );
};

// ----- stagger ----- //

proto.stagger = function( delay ) {
  delay = isNaN( delay ) ? 0 : delay;
  this.staggerDelay = delay + 'ms';
};

// ----- show/hide/remove ----- //

// remove element from DOM
proto.removeElem = function() {
  this.element.parentNode.removeChild( this.element );
  // remove display: none
  this.css({ display: '' });
  this.emitEvent( 'remove', [ this ] );
};

proto.remove = function() {
  // just remove element if no transition support or no transition
  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {
    this.removeElem();
    return;
  }

  // start transition
  this.once( 'transitionEnd', function() {
    this.removeElem();
  });
  this.hide();
};

proto.reveal = function() {
  delete this.isHidden;
  // remove display: none
  this.css({ display: '' });

  var options = this.layout.options;

  var onTransitionEnd = {};
  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');
  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;

  this.transition({
    from: options.hiddenStyle,
    to: options.visibleStyle,
    isCleaning: true,
    onTransitionEnd: onTransitionEnd
  });
};

proto.onRevealTransitionEnd = function() {
  // check if still visible
  // during transition, item may have been hidden
  if ( !this.isHidden ) {
    this.emitEvent('reveal');
  }
};

/**
 * get style property use for hide/reveal transition end
 * @param {String} styleProperty - hiddenStyle/visibleStyle
 * @returns {String}
 */
proto.getHideRevealTransitionEndProperty = function( styleProperty ) {
  var optionStyle = this.layout.options[ styleProperty ];
  // use opacity
  if ( optionStyle.opacity ) {
    return 'opacity';
  }
  // get first property
  for ( var prop in optionStyle ) {
    return prop;
  }
};

proto.hide = function() {
  // set flag
  this.isHidden = true;
  // remove display: none
  this.css({ display: '' });

  var options = this.layout.options;

  var onTransitionEnd = {};
  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');
  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;

  this.transition({
    from: options.visibleStyle,
    to: options.hiddenStyle,
    // keep hidden stuff hidden
    isCleaning: true,
    onTransitionEnd: onTransitionEnd
  });
};

proto.onHideTransitionEnd = function() {
  // check if still hidden
  // during transition, item may have been un-hidden
  if ( this.isHidden ) {
    this.css({ display: 'none' });
    this.emitEvent('hide');
  }
};

proto.destroy = function() {
  this.css({
    position: '',
    left: '',
    right: '',
    top: '',
    bottom: '',
    transition: '',
    transform: ''
  });
};

return Item;

}));


/***/ }),
/* 240 */
/*!***************************************************!*\
  !*** ./node_modules/imagesloaded/imagesloaded.js ***!
  \***************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * imagesLoaded v4.1.4
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */

( function( window, factory ) { 'use strict';
  // universal module definition

  /*global define: false, module: false, require: false */

  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
      __webpack_require__(/*! ev-emitter/ev-emitter */ 65)
    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( EvEmitter ) {
      return factory( window, EvEmitter );
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      window,
      require('ev-emitter')
    );
  } else {
    // browser global
    window.imagesLoaded = factory(
      window,
      window.EvEmitter
    );
  }

})( typeof window !== 'undefined' ? window : this,

// --------------------------  factory -------------------------- //

function factory( window, EvEmitter ) {

'use strict';

var $ = window.jQuery;
var console = window.console;

// -------------------------- helpers -------------------------- //

// extend objects
function extend( a, b ) {
  for ( var prop in b ) {
    a[ prop ] = b[ prop ];
  }
  return a;
}

var arraySlice = Array.prototype.slice;

// turn element or nodeList into an array
function makeArray( obj ) {
  if ( Array.isArray( obj ) ) {
    // use object if already an array
    return obj;
  }

  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';
  if ( isArrayLike ) {
    // convert nodeList to array
    return arraySlice.call( obj );
  }

  // array of single index
  return [ obj ];
}

// -------------------------- imagesLoaded -------------------------- //

/**
 * @param {Array, Element, NodeList, String} elem
 * @param {Object or Function} options - if function, use as callback
 * @param {Function} onAlways - callback function
 */
function ImagesLoaded( elem, options, onAlways ) {
  // coerce ImagesLoaded() without new, to be new ImagesLoaded()
  if ( !( this instanceof ImagesLoaded ) ) {
    return new ImagesLoaded( elem, options, onAlways );
  }
  // use elem as selector string
  var queryElem = elem;
  if ( typeof elem == 'string' ) {
    queryElem = document.querySelectorAll( elem );
  }
  // bail if bad element
  if ( !queryElem ) {
    console.error( 'Bad element for imagesLoaded ' + ( queryElem || elem ) );
    return;
  }

  this.elements = makeArray( queryElem );
  this.options = extend( {}, this.options );
  // shift arguments if no options set
  if ( typeof options == 'function' ) {
    onAlways = options;
  } else {
    extend( this.options, options );
  }

  if ( onAlways ) {
    this.on( 'always', onAlways );
  }

  this.getImages();

  if ( $ ) {
    // add jQuery Deferred object
    this.jqDeferred = new $.Deferred();
  }

  // HACK check async to allow time to bind listeners
  setTimeout( this.check.bind( this ) );
}

ImagesLoaded.prototype = Object.create( EvEmitter.prototype );

ImagesLoaded.prototype.options = {};

ImagesLoaded.prototype.getImages = function() {
  this.images = [];

  // filter & find items if we have an item selector
  this.elements.forEach( this.addElementImages, this );
};

/**
 * @param {Node} element
 */
ImagesLoaded.prototype.addElementImages = function( elem ) {
  // filter siblings
  if ( elem.nodeName == 'IMG' ) {
    this.addImage( elem );
  }
  // get background image on element
  if ( this.options.background === true ) {
    this.addElementBackgroundImages( elem );
  }

  // find children
  // no non-element nodes, #143
  var nodeType = elem.nodeType;
  if ( !nodeType || !elementNodeTypes[ nodeType ] ) {
    return;
  }
  var childImgs = elem.querySelectorAll('img');
  // concat childElems to filterFound array
  for ( var i=0; i < childImgs.length; i++ ) {
    var img = childImgs[i];
    this.addImage( img );
  }

  // get child background images
  if ( typeof this.options.background == 'string' ) {
    var children = elem.querySelectorAll( this.options.background );
    for ( i=0; i < children.length; i++ ) {
      var child = children[i];
      this.addElementBackgroundImages( child );
    }
  }
};

var elementNodeTypes = {
  1: true,
  9: true,
  11: true
};

ImagesLoaded.prototype.addElementBackgroundImages = function( elem ) {
  var style = getComputedStyle( elem );
  if ( !style ) {
    // Firefox returns null if in a hidden iframe https://bugzil.la/548397
    return;
  }
  // get url inside url("...")
  var reURL = /url\((['"])?(.*?)\1\)/gi;
  var matches = reURL.exec( style.backgroundImage );
  while ( matches !== null ) {
    var url = matches && matches[2];
    if ( url ) {
      this.addBackground( url, elem );
    }
    matches = reURL.exec( style.backgroundImage );
  }
};

/**
 * @param {Image} img
 */
ImagesLoaded.prototype.addImage = function( img ) {
  var loadingImage = new LoadingImage( img );
  this.images.push( loadingImage );
};

ImagesLoaded.prototype.addBackground = function( url, elem ) {
  var background = new Background( url, elem );
  this.images.push( background );
};

ImagesLoaded.prototype.check = function() {
  var _this = this;
  this.progressedCount = 0;
  this.hasAnyBroken = false;
  // complete if no images
  if ( !this.images.length ) {
    this.complete();
    return;
  }

  function onProgress( image, elem, message ) {
    // HACK - Chrome triggers event before object properties have changed. #83
    setTimeout( function() {
      _this.progress( image, elem, message );
    });
  }

  this.images.forEach( function( loadingImage ) {
    loadingImage.once( 'progress', onProgress );
    loadingImage.check();
  });
};

ImagesLoaded.prototype.progress = function( image, elem, message ) {
  this.progressedCount++;
  this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded;
  // progress event
  this.emitEvent( 'progress', [ this, image, elem ] );
  if ( this.jqDeferred && this.jqDeferred.notify ) {
    this.jqDeferred.notify( this, image );
  }
  // check if completed
  if ( this.progressedCount == this.images.length ) {
    this.complete();
  }

  if ( this.options.debug && console ) {
    console.log( 'progress: ' + message, image, elem );
  }
};

ImagesLoaded.prototype.complete = function() {
  var eventName = this.hasAnyBroken ? 'fail' : 'done';
  this.isComplete = true;
  this.emitEvent( eventName, [ this ] );
  this.emitEvent( 'always', [ this ] );
  if ( this.jqDeferred ) {
    var jqMethod = this.hasAnyBroken ? 'reject' : 'resolve';
    this.jqDeferred[ jqMethod ]( this );
  }
};

// --------------------------  -------------------------- //

function LoadingImage( img ) {
  this.img = img;
}

LoadingImage.prototype = Object.create( EvEmitter.prototype );

LoadingImage.prototype.check = function() {
  // If complete is true and browser supports natural sizes,
  // try to check for image status manually.
  var isComplete = this.getIsImageComplete();
  if ( isComplete ) {
    // report based on naturalWidth
    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );
    return;
  }

  // If none of the checks above matched, simulate loading on detached element.
  this.proxyImage = new Image();
  this.proxyImage.addEventListener( 'load', this );
  this.proxyImage.addEventListener( 'error', this );
  // bind to image as well for Firefox. #191
  this.img.addEventListener( 'load', this );
  this.img.addEventListener( 'error', this );
  this.proxyImage.src = this.img.src;
};

LoadingImage.prototype.getIsImageComplete = function() {
  // check for non-zero, non-undefined naturalWidth
  // fixes Safari+InfiniteScroll+Masonry bug infinite-scroll#671
  return this.img.complete && this.img.naturalWidth;
};

LoadingImage.prototype.confirm = function( isLoaded, message ) {
  this.isLoaded = isLoaded;
  this.emitEvent( 'progress', [ this, this.img, message ] );
};

// ----- events ----- //

// trigger specified handler for event type
LoadingImage.prototype.handleEvent = function( event ) {
  var method = 'on' + event.type;
  if ( this[ method ] ) {
    this[ method ]( event );
  }
};

LoadingImage.prototype.onload = function() {
  this.confirm( true, 'onload' );
  this.unbindEvents();
};

LoadingImage.prototype.onerror = function() {
  this.confirm( false, 'onerror' );
  this.unbindEvents();
};

LoadingImage.prototype.unbindEvents = function() {
  this.proxyImage.removeEventListener( 'load', this );
  this.proxyImage.removeEventListener( 'error', this );
  this.img.removeEventListener( 'load', this );
  this.img.removeEventListener( 'error', this );
};

// -------------------------- Background -------------------------- //

function Background( url, element ) {
  this.url = url;
  this.element = element;
  this.img = new Image();
}

// inherit LoadingImage prototype
Background.prototype = Object.create( LoadingImage.prototype );

Background.prototype.check = function() {
  this.img.addEventListener( 'load', this );
  this.img.addEventListener( 'error', this );
  this.img.src = this.url;
  // check if image is already complete
  var isComplete = this.getIsImageComplete();
  if ( isComplete ) {
    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );
    this.unbindEvents();
  }
};

Background.prototype.unbindEvents = function() {
  this.img.removeEventListener( 'load', this );
  this.img.removeEventListener( 'error', this );
};

Background.prototype.confirm = function( isLoaded, message ) {
  this.isLoaded = isLoaded;
  this.emitEvent( 'progress', [ this, this.element, message ] );
};

// -------------------------- jQuery -------------------------- //

ImagesLoaded.makeJQueryPlugin = function( jQuery ) {
  jQuery = jQuery || window.jQuery;
  if ( !jQuery ) {
    return;
  }
  // set local variable
  $ = jQuery;
  // $().imagesLoaded()
  $.fn.imagesLoaded = function( options, callback ) {
    var instance = new ImagesLoaded( this, options, callback );
    return instance.jqDeferred.promise( $(this) );
  };
};
// try making plugin
ImagesLoaded.makeJQueryPlugin();

// --------------------------  -------------------------- //

return ImagesLoaded;

});


/***/ }),
/* 241 */
/*!***************************************!*\
  !*** ./node_modules/lodash/assign.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(/*! ./_assignValue */ 41),
    copyObject = __webpack_require__(/*! ./_copyObject */ 19),
    createAssigner = __webpack_require__(/*! ./_createAssigner */ 242),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ 16),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ 36),
    keys = __webpack_require__(/*! ./keys */ 15);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns own enumerable string keyed properties of source objects to the
 * destination object. Source objects are applied from left to right.
 * Subsequent sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object` and is loosely based on
 * [`Object.assign`](https://mdn.io/Object/assign).
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assignIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assign({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'c': 3 }
 */
var assign = createAssigner(function(object, source) {
  if (isPrototype(source) || isArrayLike(source)) {
    copyObject(source, keys(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty.call(source, key)) {
      assignValue(object, key, source[key]);
    }
  }
});

module.exports = assign;


/***/ }),
/* 242 */
/*!************************************************!*\
  !*** ./node_modules/lodash/_createAssigner.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__(/*! ./_baseRest */ 243),
    isIterateeCall = __webpack_require__(/*! ./_isIterateeCall */ 248);

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;


/***/ }),
/* 243 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseRest.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(/*! ./identity */ 40),
    overRest = __webpack_require__(/*! ./_overRest */ 102),
    setToString = __webpack_require__(/*! ./_setToString */ 103);

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;


/***/ }),
/* 244 */
/*!***************************************!*\
  !*** ./node_modules/lodash/_apply.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;


/***/ }),
/* 245 */
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseSetToString.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var constant = __webpack_require__(/*! ./constant */ 246),
    defineProperty = __webpack_require__(/*! ./_defineProperty */ 96),
    identity = __webpack_require__(/*! ./identity */ 40);

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;


/***/ }),
/* 246 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/constant.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;


/***/ }),
/* 247 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_shortOut.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;


/***/ }),
/* 248 */
/*!************************************************!*\
  !*** ./node_modules/lodash/_isIterateeCall.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(/*! ./eq */ 30),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ 16),
    isIndex = __webpack_require__(/*! ./_isIndex */ 33),
    isObject = __webpack_require__(/*! ./isObject */ 5);

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;


/***/ }),
/* 249 */
/*!*****************************************************************************!*\
  !*** ./node_modules/element-resize-detector/src/element-resize-detector.js ***!
  \*****************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var forEach                 = __webpack_require__(/*! ./collection-utils */ 104).forEach;
var elementUtilsMaker       = __webpack_require__(/*! ./element-utils */ 250);
var listenerHandlerMaker    = __webpack_require__(/*! ./listener-handler */ 251);
var idGeneratorMaker        = __webpack_require__(/*! ./id-generator */ 252);
var idHandlerMaker          = __webpack_require__(/*! ./id-handler */ 253);
var reporterMaker           = __webpack_require__(/*! ./reporter */ 254);
var browserDetector         = __webpack_require__(/*! ./browser-detector */ 105);
var batchProcessorMaker     = __webpack_require__(/*! batch-processor */ 255);
var stateHandler            = __webpack_require__(/*! ./state-handler */ 257);

//Detection strategies.
var objectStrategyMaker     = __webpack_require__(/*! ./detection-strategy/object.js */ 258);
var scrollStrategyMaker     = __webpack_require__(/*! ./detection-strategy/scroll.js */ 259);

function isCollection(obj) {
    return Array.isArray(obj) || obj.length !== undefined;
}

function toArray(collection) {
    if (!Array.isArray(collection)) {
        var array = [];
        forEach(collection, function (obj) {
            array.push(obj);
        });
        return array;
    } else {
        return collection;
    }
}

function isElement(obj) {
    return obj && obj.nodeType === 1;
}

/**
 * @typedef idHandler
 * @type {object}
 * @property {function} get Gets the resize detector id of the element.
 * @property {function} set Generate and sets the resize detector id of the element.
 */

/**
 * @typedef Options
 * @type {object}
 * @property {boolean} callOnAdd    Determines if listeners should be called when they are getting added.
                                    Default is true. If true, the listener is guaranteed to be called when it has been added.
                                    If false, the listener will not be guarenteed to be called when it has been added (does not prevent it from being called).
 * @property {idHandler} idHandler  A custom id handler that is responsible for generating, setting and retrieving id's for elements.
                                    If not provided, a default id handler will be used.
 * @property {reporter} reporter    A custom reporter that handles reporting logs, warnings and errors.
                                    If not provided, a default id handler will be used.
                                    If set to false, then nothing will be reported.
 * @property {boolean} debug        If set to true, the the system will report debug messages as default for the listenTo method.
 */

/**
 * Creates an element resize detector instance.
 * @public
 * @param {Options?} options Optional global options object that will decide how this instance will work.
 */
module.exports = function(options) {
    options = options || {};

    //idHandler is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var idHandler;

    if (options.idHandler) {
        // To maintain compatability with idHandler.get(element, readonly), make sure to wrap the given idHandler
        // so that readonly flag always is true when it's used here. This may be removed next major version bump.
        idHandler = {
            get: function (element) { return options.idHandler.get(element, true); },
            set: options.idHandler.set
        };
    } else {
        var idGenerator = idGeneratorMaker();
        var defaultIdHandler = idHandlerMaker({
            idGenerator: idGenerator,
            stateHandler: stateHandler
        });
        idHandler = defaultIdHandler;
    }

    //reporter is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var reporter = options.reporter;

    if(!reporter) {
        //If options.reporter is false, then the reporter should be quiet.
        var quiet = reporter === false;
        reporter = reporterMaker(quiet);
    }

    //batchProcessor is currently not an option to the listenTo function, so it should not be added to globalOptions.
    var batchProcessor = getOption(options, "batchProcessor", batchProcessorMaker({ reporter: reporter }));

    //Options to be used as default for the listenTo function.
    var globalOptions = {};
    globalOptions.callOnAdd     = !!getOption(options, "callOnAdd", true);
    globalOptions.debug         = !!getOption(options, "debug", false);

    var eventListenerHandler    = listenerHandlerMaker(idHandler);
    var elementUtils            = elementUtilsMaker({
        stateHandler: stateHandler
    });

    //The detection strategy to be used.
    var detectionStrategy;
    var desiredStrategy = getOption(options, "strategy", "object");
    var strategyOptions = {
        reporter: reporter,
        batchProcessor: batchProcessor,
        stateHandler: stateHandler,
        idHandler: idHandler
    };

    if(desiredStrategy === "scroll") {
        if (browserDetector.isLegacyOpera()) {
            reporter.warn("Scroll strategy is not supported on legacy Opera. Changing to object strategy.");
            desiredStrategy = "object";
        } else if (browserDetector.isIE(9)) {
            reporter.warn("Scroll strategy is not supported on IE9. Changing to object strategy.");
            desiredStrategy = "object";
        }
    }

    if(desiredStrategy === "scroll") {
        detectionStrategy = scrollStrategyMaker(strategyOptions);
    } else if(desiredStrategy === "object") {
        detectionStrategy = objectStrategyMaker(strategyOptions);
    } else {
        throw new Error("Invalid strategy name: " + desiredStrategy);
    }

    //Calls can be made to listenTo with elements that are still being installed.
    //Also, same elements can occur in the elements list in the listenTo function.
    //With this map, the ready callbacks can be synchronized between the calls
    //so that the ready callback can always be called when an element is ready - even if
    //it wasn't installed from the function itself.
    var onReadyCallbacks = {};

    /**
     * Makes the given elements resize-detectable and starts listening to resize events on the elements. Calls the event callback for each event for each element.
     * @public
     * @param {Options?} options Optional options object. These options will override the global options. Some options may not be overriden, such as idHandler.
     * @param {element[]|element} elements The given array of elements to detect resize events of. Single element is also valid.
     * @param {function} listener The callback to be executed for each resize event for each element.
     */
    function listenTo(options, elements, listener) {
        function onResizeCallback(element) {
            var listeners = eventListenerHandler.get(element);
            forEach(listeners, function callListenerProxy(listener) {
                listener(element);
            });
        }

        function addListener(callOnAdd, element, listener) {
            eventListenerHandler.add(element, listener);

            if(callOnAdd) {
                listener(element);
            }
        }

        //Options object may be omitted.
        if(!listener) {
            listener = elements;
            elements = options;
            options = {};
        }

        if(!elements) {
            throw new Error("At least one element required.");
        }

        if(!listener) {
            throw new Error("Listener required.");
        }

        if (isElement(elements)) {
            // A single element has been passed in.
            elements = [elements];
        } else if (isCollection(elements)) {
            // Convert collection to array for plugins.
            // TODO: May want to check so that all the elements in the collection are valid elements.
            elements = toArray(elements);
        } else {
            return reporter.error("Invalid arguments. Must be a DOM element or a collection of DOM elements.");
        }

        var elementsReady = 0;

        var callOnAdd = getOption(options, "callOnAdd", globalOptions.callOnAdd);
        var onReadyCallback = getOption(options, "onReady", function noop() {});
        var debug = getOption(options, "debug", globalOptions.debug);

        forEach(elements, function attachListenerToElement(element) {
            if (!stateHandler.getState(element)) {
                stateHandler.initState(element);
                idHandler.set(element);
            }

            var id = idHandler.get(element);

            debug && reporter.log("Attaching listener to element", id, element);

            if(!elementUtils.isDetectable(element)) {
                debug && reporter.log(id, "Not detectable.");
                if(elementUtils.isBusy(element)) {
                    debug && reporter.log(id, "System busy making it detectable");

                    //The element is being prepared to be detectable. Do not make it detectable.
                    //Just add the listener, because the element will soon be detectable.
                    addListener(callOnAdd, element, listener);
                    onReadyCallbacks[id] = onReadyCallbacks[id] || [];
                    onReadyCallbacks[id].push(function onReady() {
                        elementsReady++;

                        if(elementsReady === elements.length) {
                            onReadyCallback();
                        }
                    });
                    return;
                }

                debug && reporter.log(id, "Making detectable...");
                //The element is not prepared to be detectable, so do prepare it and add a listener to it.
                elementUtils.markBusy(element, true);
                return detectionStrategy.makeDetectable({ debug: debug }, element, function onElementDetectable(element) {
                    debug && reporter.log(id, "onElementDetectable");

                    if (stateHandler.getState(element)) {
                        elementUtils.markAsDetectable(element);
                        elementUtils.markBusy(element, false);
                        detectionStrategy.addListener(element, onResizeCallback);
                        addListener(callOnAdd, element, listener);

                        // Since the element size might have changed since the call to "listenTo", we need to check for this change,
                        // so that a resize event may be emitted.
                        // Having the startSize object is optional (since it does not make sense in some cases such as unrendered elements), so check for its existance before.
                        // Also, check the state existance before since the element may have been uninstalled in the installation process.
                        var state = stateHandler.getState(element);
                        if (state && state.startSize) {
                            var width = element.offsetWidth;
                            var height = element.offsetHeight;
                            if (state.startSize.width !== width || state.startSize.height !== height) {
                                onResizeCallback(element);
                            }
                        }

                        if(onReadyCallbacks[id]) {
                            forEach(onReadyCallbacks[id], function(callback) {
                                callback();
                            });
                        }
                    } else {
                        // The element has been unisntalled before being detectable.
                        debug && reporter.log(id, "Element uninstalled before being detectable.");
                    }

                    delete onReadyCallbacks[id];

                    elementsReady++;
                    if(elementsReady === elements.length) {
                        onReadyCallback();
                    }
                });
            }

            debug && reporter.log(id, "Already detecable, adding listener.");

            //The element has been prepared to be detectable and is ready to be listened to.
            addListener(callOnAdd, element, listener);
            elementsReady++;
        });

        if(elementsReady === elements.length) {
            onReadyCallback();
        }
    }

    function uninstall(elements) {
        if(!elements) {
            return reporter.error("At least one element is required.");
        }

        if (isElement(elements)) {
            // A single element has been passed in.
            elements = [elements];
        } else if (isCollection(elements)) {
            // Convert collection to array for plugins.
            // TODO: May want to check so that all the elements in the collection are valid elements.
            elements = toArray(elements);
        } else {
            return reporter.error("Invalid arguments. Must be a DOM element or a collection of DOM elements.");
        }

        forEach(elements, function (element) {
            eventListenerHandler.removeAllListeners(element);
            detectionStrategy.uninstall(element);
            stateHandler.cleanState(element);
        });
    }

    return {
        listenTo: listenTo,
        removeListener: eventListenerHandler.removeListener,
        removeAllListeners: eventListenerHandler.removeAllListeners,
        uninstall: uninstall
    };
};

function getOption(options, name, defaultValue) {
    var value = options[name];

    if((value === undefined || value === null) && defaultValue !== undefined) {
        return defaultValue;
    }

    return value;
}


/***/ }),
/* 250 */
/*!*******************************************************************!*\
  !*** ./node_modules/element-resize-detector/src/element-utils.js ***!
  \*******************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(options) {
    var getState = options.stateHandler.getState;

    /**
     * Tells if the element has been made detectable and ready to be listened for resize events.
     * @public
     * @param {element} The element to check.
     * @returns {boolean} True or false depending on if the element is detectable or not.
     */
    function isDetectable(element) {
        var state = getState(element);
        return state && !!state.isDetectable;
    }

    /**
     * Marks the element that it has been made detectable and ready to be listened for resize events.
     * @public
     * @param {element} The element to mark.
     */
    function markAsDetectable(element) {
        getState(element).isDetectable = true;
    }

    /**
     * Tells if the element is busy or not.
     * @public
     * @param {element} The element to check.
     * @returns {boolean} True or false depending on if the element is busy or not.
     */
    function isBusy(element) {
        return !!getState(element).busy;
    }

    /**
     * Marks the object is busy and should not be made detectable.
     * @public
     * @param {element} element The element to mark.
     * @param {boolean} busy If the element is busy or not.
     */
    function markBusy(element, busy) {
        getState(element).busy = !!busy;
    }

    return {
        isDetectable: isDetectable,
        markAsDetectable: markAsDetectable,
        isBusy: isBusy,
        markBusy: markBusy
    };
};


/***/ }),
/* 251 */
/*!**********************************************************************!*\
  !*** ./node_modules/element-resize-detector/src/listener-handler.js ***!
  \**********************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(idHandler) {
    var eventListeners = {};

    /**
     * Gets all listeners for the given element.
     * @public
     * @param {element} element The element to get all listeners for.
     * @returns All listeners for the given element.
     */
    function getListeners(element) {
        var id = idHandler.get(element);

        if (id === undefined) {
            return [];
        }

        return eventListeners[id] || [];
    }

    /**
     * Stores the given listener for the given element. Will not actually add the listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The callback that the element has added.
     */
    function addListener(element, listener) {
        var id = idHandler.get(element);

        if(!eventListeners[id]) {
            eventListeners[id] = [];
        }

        eventListeners[id].push(listener);
    }

    function removeListener(element, listener) {
        var listeners = getListeners(element);
        for (var i = 0, len = listeners.length; i < len; ++i) {
            if (listeners[i] === listener) {
              listeners.splice(i, 1);
              break;
            }
        }
    }

    function removeAllListeners(element) {
      var listeners = getListeners(element);
      if (!listeners) { return; }
      listeners.length = 0;
    }

    return {
        get: getListeners,
        add: addListener,
        removeListener: removeListener,
        removeAllListeners: removeAllListeners
    };
};


/***/ }),
/* 252 */
/*!******************************************************************!*\
  !*** ./node_modules/element-resize-detector/src/id-generator.js ***!
  \******************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function() {
    var idCount = 1;

    /**
     * Generates a new unique id in the context.
     * @public
     * @returns {number} A unique id in the context.
     */
    function generate() {
        return idCount++;
    }

    return {
        generate: generate
    };
};


/***/ }),
/* 253 */
/*!****************************************************************!*\
  !*** ./node_modules/element-resize-detector/src/id-handler.js ***!
  \****************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(options) {
    var idGenerator     = options.idGenerator;
    var getState        = options.stateHandler.getState;

    /**
     * Gets the resize detector id of the element.
     * @public
     * @param {element} element The target element to get the id of.
     * @returns {string|number|null} The id of the element. Null if it has no id.
     */
    function getId(element) {
        var state = getState(element);

        if (state && state.id !== undefined) {
            return state.id;
        }

        return null;
    }

    /**
     * Sets the resize detector id of the element. Requires the element to have a resize detector state initialized.
     * @public
     * @param {element} element The target element to set the id of.
     * @returns {string|number|null} The id of the element.
     */
    function setId(element) {
        var state = getState(element);

        if (!state) {
            throw new Error("setId required the element to have a resize detection state.");
        }

        var id = idGenerator.generate();

        state.id = id;

        return id;
    }

    return {
        get: getId,
        set: setId
    };
};


/***/ }),
/* 254 */
/*!**************************************************************!*\
  !*** ./node_modules/element-resize-detector/src/reporter.js ***!
  \**************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* global console: false */

/**
 * Reporter that handles the reporting of logs, warnings and errors.
 * @public
 * @param {boolean} quiet Tells if the reporter should be quiet or not.
 */
module.exports = function(quiet) {
    function noop() {
        //Does nothing.
    }

    var reporter = {
        log: noop,
        warn: noop,
        error: noop
    };

    if(!quiet && window.console) {
        var attachFunction = function(reporter, name) {
            //The proxy is needed to be able to call the method with the console context,
            //since we cannot use bind.
            reporter[name] = function reporterProxy() {
                var f = console[name];
                if (f.apply) { //IE9 does not support console.log.apply :)
                    f.apply(console, arguments);
                } else {
                    for (var i = 0; i < arguments.length; i++) {
                        f(arguments[i]);
                    }
                }
            };
        };

        attachFunction(reporter, "log");
        attachFunction(reporter, "warn");
        attachFunction(reporter, "error");
    }

    return reporter;
};

/***/ }),
/* 255 */
/*!*************************************************************!*\
  !*** ./node_modules/batch-processor/src/batch-processor.js ***!
  \*************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ 256);

module.exports = function batchProcessorMaker(options) {
    options             = options || {};
    var reporter        = options.reporter;
    var asyncProcess    = utils.getOption(options, "async", true);
    var autoProcess     = utils.getOption(options, "auto", true);

    if(autoProcess && !asyncProcess) {
        reporter && reporter.warn("Invalid options combination. auto=true and async=false is invalid. Setting async=true.");
        asyncProcess = true;
    }

    var batch = Batch();
    var asyncFrameHandler;
    var isProcessing = false;

    function addFunction(level, fn) {
        if(!isProcessing && autoProcess && asyncProcess && batch.size() === 0) {
            // Since this is async, it is guaranteed to be executed after that the fn is added to the batch.
            // This needs to be done before, since we're checking the size of the batch to be 0.
            processBatchAsync();
        }

        batch.add(level, fn);
    }

    function processBatch() {
        // Save the current batch, and create a new batch so that incoming functions are not added into the currently processing batch.
        // Continue processing until the top-level batch is empty (functions may be added to the new batch while processing, and so on).
        isProcessing = true;
        while (batch.size()) {
            var processingBatch = batch;
            batch = Batch();
            processingBatch.process();
        }
        isProcessing = false;
    }

    function forceProcessBatch(localAsyncProcess) {
        if (isProcessing) {
            return;
        }

        if(localAsyncProcess === undefined) {
            localAsyncProcess = asyncProcess;
        }

        if(asyncFrameHandler) {
            cancelFrame(asyncFrameHandler);
            asyncFrameHandler = null;
        }

        if(localAsyncProcess) {
            processBatchAsync();
        } else {
            processBatch();
        }
    }

    function processBatchAsync() {
        asyncFrameHandler = requestFrame(processBatch);
    }

    function clearBatch() {
        batch           = {};
        batchSize       = 0;
        topLevel        = 0;
        bottomLevel     = 0;
    }

    function cancelFrame(listener) {
        // var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;
        var cancel = clearTimeout;
        return cancel(listener);
    }

    function requestFrame(callback) {
        // var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) { return window.setTimeout(fn, 20); };
        var raf = function(fn) { return setTimeout(fn, 0); };
        return raf(callback);
    }

    return {
        add: addFunction,
        force: forceProcessBatch
    };
};

function Batch() {
    var batch       = {};
    var size        = 0;
    var topLevel    = 0;
    var bottomLevel = 0;

    function add(level, fn) {
        if(!fn) {
            fn = level;
            level = 0;
        }

        if(level > topLevel) {
            topLevel = level;
        } else if(level < bottomLevel) {
            bottomLevel = level;
        }

        if(!batch[level]) {
            batch[level] = [];
        }

        batch[level].push(fn);
        size++;
    }

    function process() {
        for(var level = bottomLevel; level <= topLevel; level++) {
            var fns = batch[level];

            for(var i = 0; i < fns.length; i++) {
                var fn = fns[i];
                fn();
            }
        }
    }

    function getSize() {
        return size;
    }

    return {
        add: add,
        process: process,
        size: getSize
    };
}


/***/ }),
/* 256 */
/*!***************************************************!*\
  !*** ./node_modules/batch-processor/src/utils.js ***!
  \***************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = module.exports = {};

utils.getOption = getOption;

function getOption(options, name, defaultValue) {
    var value = options[name];

    if((value === undefined || value === null) && defaultValue !== undefined) {
        return defaultValue;
    }

    return value;
}


/***/ }),
/* 257 */
/*!*******************************************************************!*\
  !*** ./node_modules/element-resize-detector/src/state-handler.js ***!
  \*******************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var prop = "_erd";

function initState(element) {
    element[prop] = {};
    return getState(element);
}

function getState(element) {
    return element[prop];
}

function cleanState(element) {
    delete element[prop];
}

module.exports = {
    initState: initState,
    getState: getState,
    cleanState: cleanState
};


/***/ }),
/* 258 */
/*!*******************************************************************************!*\
  !*** ./node_modules/element-resize-detector/src/detection-strategy/object.js ***!
  \*******************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Resize detection strategy that injects objects to elements in order to detect resize events.
 * Heavily inspired by: http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/
 */



var browserDetector = __webpack_require__(/*! ../browser-detector */ 105);

module.exports = function(options) {
    options             = options || {};
    var reporter        = options.reporter;
    var batchProcessor  = options.batchProcessor;
    var getState        = options.stateHandler.getState;

    if(!reporter) {
        throw new Error("Missing required dependency: reporter.");
    }

    /**
     * Adds a resize event listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.
     */
    function addListener(element, listener) {
        if(!getObject(element)) {
            throw new Error("Element is not detectable by this strategy.");
        }

        function listenerProxy() {
            listener(element);
        }

        if(browserDetector.isIE(8)) {
            //IE 8 does not support object, but supports the resize event directly on elements.
            getState(element).object = {
                proxy: listenerProxy
            };
            element.attachEvent("onresize", listenerProxy);
        } else {
            var object = getObject(element);
            object.contentDocument.defaultView.addEventListener("resize", listenerProxy);
        }
    }

    /**
     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.
     * @private
     * @param {object} options Optional options object.
     * @param {element} element The element to make detectable
     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.
     */
    function makeDetectable(options, element, callback) {
        if (!callback) {
            callback = element;
            element = options;
            options = null;
        }

        options = options || {};
        var debug = options.debug;

        function injectObject(element, callback) {
            var OBJECT_STYLE = "display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none; padding: 0; margin: 0; opacity: 0; z-index: -1000; pointer-events: none;";

            //The target element needs to be positioned (everything except static) so the absolute positioned object will be positioned relative to the target element.

            // Position altering may be performed directly or on object load, depending on if style resolution is possible directly or not.
            var positionCheckPerformed = false;

            // The element may not yet be attached to the DOM, and therefore the style object may be empty in some browsers.
            // Since the style object is a reference, it will be updated as soon as the element is attached to the DOM.
            var style = window.getComputedStyle(element);
            var width = element.offsetWidth;
            var height = element.offsetHeight;

            getState(element).startSize = {
                width: width,
                height: height
            };

            function mutateDom() {
                function alterPositionStyles() {
                    if(style.position === "static") {
                        element.style.position = "relative";

                        var removeRelativeStyles = function(reporter, element, style, property) {
                            function getNumericalValue(value) {
                                return value.replace(/[^-\d\.]/g, "");
                            }

                            var value = style[property];

                            if(value !== "auto" && getNumericalValue(value) !== "0") {
                                reporter.warn("An element that is positioned static has style." + property + "=" + value + " which is ignored due to the static positioning. The element will need to be positioned relative, so the style." + property + " will be set to 0. Element: ", element);
                                element.style[property] = 0;
                            }
                        };

                        //Check so that there are no accidental styles that will make the element styled differently now that is is relative.
                        //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).
                        removeRelativeStyles(reporter, element, style, "top");
                        removeRelativeStyles(reporter, element, style, "right");
                        removeRelativeStyles(reporter, element, style, "bottom");
                        removeRelativeStyles(reporter, element, style, "left");
                    }
                }

                function onObjectLoad() {
                    // The object has been loaded, which means that the element now is guaranteed to be attached to the DOM.
                    if (!positionCheckPerformed) {
                        alterPositionStyles();
                    }

                    /*jshint validthis: true */

                    function getDocument(element, callback) {
                        //Opera 12 seem to call the object.onload before the actual document has been created.
                        //So if it is not present, poll it with an timeout until it is present.
                        //TODO: Could maybe be handled better with object.onreadystatechange or similar.
                        if(!element.contentDocument) {
                            setTimeout(function checkForObjectDocument() {
                                getDocument(element, callback);
                            }, 100);

                            return;
                        }

                        callback(element.contentDocument);
                    }

                    //Mutating the object element here seems to fire another load event.
                    //Mutating the inner document of the object element is fine though.
                    var objectElement = this;

                    //Create the style element to be added to the object.
                    getDocument(objectElement, function onObjectDocumentReady(objectDocument) {
                        //Notify that the element is ready to be listened to.
                        callback(element);
                    });
                }

                // The element may be detached from the DOM, and some browsers does not support style resolving of detached elements.
                // The alterPositionStyles needs to be delayed until we know the element has been attached to the DOM (which we are sure of when the onObjectLoad has been fired), if style resolution is not possible.
                if (style.position !== "") {
                    alterPositionStyles(style);
                    positionCheckPerformed = true;
                }

                //Add an object element as a child to the target element that will be listened to for resize events.
                var object = document.createElement("object");
                object.style.cssText = OBJECT_STYLE;
                object.tabIndex = -1;
                object.type = "text/html";
                object.onload = onObjectLoad;

                //Safari: This must occur before adding the object to the DOM.
                //IE: Does not like that this happens before, even if it is also added after.
                if(!browserDetector.isIE()) {
                    object.data = "about:blank";
                }

                element.appendChild(object);
                getState(element).object = object;

                //IE: This must occur after adding the object to the DOM.
                if(browserDetector.isIE()) {
                    object.data = "about:blank";
                }
            }

            if(batchProcessor) {
                batchProcessor.add(mutateDom);
            } else {
                mutateDom();
            }
        }

        if(browserDetector.isIE(8)) {
            //IE 8 does not support objects properly. Luckily they do support the resize event.
            //So do not inject the object and notify that the element is already ready to be listened to.
            //The event handler for the resize event is attached in the utils.addListener instead.
            callback(element);
        } else {
            injectObject(element, callback);
        }
    }

    /**
     * Returns the child object of the target element.
     * @private
     * @param {element} element The target element.
     * @returns The object element of the target.
     */
    function getObject(element) {
        return getState(element).object;
    }

    function uninstall(element) {
        if(browserDetector.isIE(8)) {
            element.detachEvent("onresize", getState(element).object.proxy);
        } else {
            element.removeChild(getObject(element));
        }
        delete getState(element).object;
    }

    return {
        makeDetectable: makeDetectable,
        addListener: addListener,
        uninstall: uninstall
    };
};


/***/ }),
/* 259 */
/*!*******************************************************************************!*\
  !*** ./node_modules/element-resize-detector/src/detection-strategy/scroll.js ***!
  \*******************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Resize detection strategy that injects divs to elements in order to detect resize events on scroll events.
 * Heavily inspired by: https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js
 */



var forEach = __webpack_require__(/*! ../collection-utils */ 104).forEach;

module.exports = function(options) {
    options             = options || {};
    var reporter        = options.reporter;
    var batchProcessor  = options.batchProcessor;
    var getState        = options.stateHandler.getState;
    var hasState        = options.stateHandler.hasState;
    var idHandler       = options.idHandler;

    if (!batchProcessor) {
        throw new Error("Missing required dependency: batchProcessor");
    }

    if (!reporter) {
        throw new Error("Missing required dependency: reporter.");
    }

    //TODO: Could this perhaps be done at installation time?
    var scrollbarSizes = getScrollbarSizes();

    // Inject the scrollbar styling that prevents them from appearing sometimes in Chrome.
    // The injected container needs to have a class, so that it may be styled with CSS (pseudo elements).
    var styleId = "erd_scroll_detection_scrollbar_style";
    var detectionContainerClass = "erd_scroll_detection_container";
    injectScrollStyle(styleId, detectionContainerClass);

    function getScrollbarSizes() {
        var width = 500;
        var height = 500;

        var child = document.createElement("div");
        child.style.cssText = "position: absolute; width: " + width*2 + "px; height: " + height*2 + "px; visibility: hidden; margin: 0; padding: 0;";

        var container = document.createElement("div");
        container.style.cssText = "position: absolute; width: " + width + "px; height: " + height + "px; overflow: scroll; visibility: none; top: " + -width*3 + "px; left: " + -height*3 + "px; visibility: hidden; margin: 0; padding: 0;";

        container.appendChild(child);

        document.body.insertBefore(container, document.body.firstChild);

        var widthSize = width - container.clientWidth;
        var heightSize = height - container.clientHeight;

        document.body.removeChild(container);

        return {
            width: widthSize,
            height: heightSize
        };
    }

    function injectScrollStyle(styleId, containerClass) {
        function injectStyle(style, method) {
            method = method || function (element) {
                document.head.appendChild(element);
            };

            var styleElement = document.createElement("style");
            styleElement.innerHTML = style;
            styleElement.id = styleId;
            method(styleElement);
            return styleElement;
        }

        if (!document.getElementById(styleId)) {
            var containerAnimationClass = containerClass + "_animation";
            var containerAnimationActiveClass = containerClass + "_animation_active";
            var style = "/* Created by the element-resize-detector library. */\n";
            style += "." + containerClass + " > div::-webkit-scrollbar { display: none; }\n\n";
            style += "." + containerAnimationActiveClass + " { -webkit-animation-duration: 0.1s; animation-duration: 0.1s; -webkit-animation-name: " + containerAnimationClass + "; animation-name: " + containerAnimationClass + "; }\n";
            style += "@-webkit-keyframes " + containerAnimationClass +  " { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }\n";
            style += "@keyframes " + containerAnimationClass +          " { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }";
            injectStyle(style);
        }
    }

    function addAnimationClass(element) {
        element.className += " " + detectionContainerClass + "_animation_active";
    }

    function addEvent(el, name, cb) {
        if (el.addEventListener) {
            el.addEventListener(name, cb);
        } else if(el.attachEvent) {
            el.attachEvent("on" + name, cb);
        } else {
            return reporter.error("[scroll] Don't know how to add event listeners.");
        }
    }

    function removeEvent(el, name, cb) {
        if (el.removeEventListener) {
            el.removeEventListener(name, cb);
        } else if(el.detachEvent) {
            el.detachEvent("on" + name, cb);
        } else {
            return reporter.error("[scroll] Don't know how to remove event listeners.");
        }
    }

    function getExpandElement(element) {
        return getState(element).container.childNodes[0].childNodes[0].childNodes[0];
    }

    function getShrinkElement(element) {
        return getState(element).container.childNodes[0].childNodes[0].childNodes[1];
    }

    /**
     * Adds a resize event listener to the element.
     * @public
     * @param {element} element The element that should have the listener added.
     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.
     */
    function addListener(element, listener) {
        var listeners = getState(element).listeners;

        if (!listeners.push) {
            throw new Error("Cannot add listener to an element that is not detectable.");
        }

        getState(element).listeners.push(listener);
    }

    /**
     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.
     * @private
     * @param {object} options Optional options object.
     * @param {element} element The element to make detectable
     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.
     */
    function makeDetectable(options, element, callback) {
        if (!callback) {
            callback = element;
            element = options;
            options = null;
        }

        options = options || {};

        function debug() {
            if (options.debug) {
                var args = Array.prototype.slice.call(arguments);
                args.unshift(idHandler.get(element), "Scroll: ");
                if (reporter.log.apply) {
                    reporter.log.apply(null, args);
                } else {
                    for (var i = 0; i < args.length; i++) {
                        reporter.log(args[i]);
                    }
                }
            }
        }

        function isDetached(element) {
            function isInDocument(element) {
                return element === element.ownerDocument.body || element.ownerDocument.body.contains(element);
            }

            if (!isInDocument(element)) {
                return true;
            }

            // FireFox returns null style in hidden iframes. See https://github.com/wnr/element-resize-detector/issues/68 and https://bugzilla.mozilla.org/show_bug.cgi?id=795520
            if (window.getComputedStyle(element) === null) {
                return true;
            }

            return false;
        }

        function isUnrendered(element) {
            // Check the absolute positioned container since the top level container is display: inline.
            var container = getState(element).container.childNodes[0];
            var style = window.getComputedStyle(container);
            return !style.width || style.width.indexOf("px") === -1; //Can only compute pixel value when rendered.
        }

        function getStyle() {
            // Some browsers only force layouts when actually reading the style properties of the style object, so make sure that they are all read here,
            // so that the user of the function can be sure that it will perform the layout here, instead of later (important for batching).
            var elementStyle            = window.getComputedStyle(element);
            var style                   = {};
            style.position              = elementStyle.position;
            style.width                 = element.offsetWidth;
            style.height                = element.offsetHeight;
            style.top                   = elementStyle.top;
            style.right                 = elementStyle.right;
            style.bottom                = elementStyle.bottom;
            style.left                  = elementStyle.left;
            style.widthCSS              = elementStyle.width;
            style.heightCSS             = elementStyle.height;
            return style;
        }

        function storeStartSize() {
            var style = getStyle();
            getState(element).startSize = {
                width: style.width,
                height: style.height
            };
            debug("Element start size", getState(element).startSize);
        }

        function initListeners() {
            getState(element).listeners = [];
        }

        function storeStyle() {
            debug("storeStyle invoked.");
            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            var style = getStyle();
            getState(element).style = style;
        }

        function storeCurrentSize(element, width, height) {
            getState(element).lastWidth = width;
            getState(element).lastHeight  = height;
        }

        function getExpandChildElement(element) {
            return getExpandElement(element).childNodes[0];
        }

        function getWidthOffset() {
            return 2 * scrollbarSizes.width + 1;
        }

        function getHeightOffset() {
            return 2 * scrollbarSizes.height + 1;
        }

        function getExpandWidth(width) {
            return width + 10 + getWidthOffset();
        }

        function getExpandHeight(height) {
            return height + 10 + getHeightOffset();
        }

        function getShrinkWidth(width) {
            return width * 2 + getWidthOffset();
        }

        function getShrinkHeight(height) {
            return height * 2 + getHeightOffset();
        }

        function positionScrollbars(element, width, height) {
            var expand          = getExpandElement(element);
            var shrink          = getShrinkElement(element);
            var expandWidth     = getExpandWidth(width);
            var expandHeight    = getExpandHeight(height);
            var shrinkWidth     = getShrinkWidth(width);
            var shrinkHeight    = getShrinkHeight(height);
            expand.scrollLeft   = expandWidth;
            expand.scrollTop    = expandHeight;
            shrink.scrollLeft   = shrinkWidth;
            shrink.scrollTop    = shrinkHeight;
        }

        function injectContainerElement() {
            var container = getState(element).container;

            if (!container) {
                container                   = document.createElement("div");
                container.className         = detectionContainerClass;
                container.style.cssText     = "visibility: hidden; display: inline; width: 0px; height: 0px; z-index: -1; overflow: hidden; margin: 0; padding: 0;";
                getState(element).container = container;
                addAnimationClass(container);
                element.appendChild(container);

                var onAnimationStart = function () {
                    getState(element).onRendered && getState(element).onRendered();
                };

                addEvent(container, "animationstart", onAnimationStart);

                // Store the event handler here so that they may be removed when uninstall is called.
                // See uninstall function for an explanation why it is needed.
                getState(element).onAnimationStart = onAnimationStart;
            }

            return container;
        }

        function injectScrollElements() {
            function alterPositionStyles() {
                var style = getState(element).style;

                if(style.position === "static") {
                    element.style.position = "relative";

                    var removeRelativeStyles = function(reporter, element, style, property) {
                        function getNumericalValue(value) {
                            return value.replace(/[^-\d\.]/g, "");
                        }

                        var value = style[property];

                        if(value !== "auto" && getNumericalValue(value) !== "0") {
                            reporter.warn("An element that is positioned static has style." + property + "=" + value + " which is ignored due to the static positioning. The element will need to be positioned relative, so the style." + property + " will be set to 0. Element: ", element);
                            element.style[property] = 0;
                        }
                    };

                    //Check so that there are no accidental styles that will make the element styled differently now that is is relative.
                    //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).
                    removeRelativeStyles(reporter, element, style, "top");
                    removeRelativeStyles(reporter, element, style, "right");
                    removeRelativeStyles(reporter, element, style, "bottom");
                    removeRelativeStyles(reporter, element, style, "left");
                }
            }

            function getLeftTopBottomRightCssText(left, top, bottom, right) {
                left = (!left ? "0" : (left + "px"));
                top = (!top ? "0" : (top + "px"));
                bottom = (!bottom ? "0" : (bottom + "px"));
                right = (!right ? "0" : (right + "px"));

                return "left: " + left + "; top: " + top + "; right: " + right + "; bottom: " + bottom + ";";
            }

            debug("Injecting elements");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            alterPositionStyles();

            var rootContainer = getState(element).container;

            if (!rootContainer) {
                rootContainer = injectContainerElement();
            }

            // Due to this WebKit bug https://bugs.webkit.org/show_bug.cgi?id=80808 (currently fixed in Blink, but still present in WebKit browsers such as Safari),
            // we need to inject two containers, one that is width/height 100% and another that is left/top -1px so that the final container always is 1x1 pixels bigger than
            // the targeted element.
            // When the bug is resolved, "containerContainer" may be removed.

            // The outer container can occasionally be less wide than the targeted when inside inline elements element in WebKit (see https://bugs.webkit.org/show_bug.cgi?id=152980).
            // This should be no problem since the inner container either way makes sure the injected scroll elements are at least 1x1 px.

            var scrollbarWidth          = scrollbarSizes.width;
            var scrollbarHeight         = scrollbarSizes.height;
            var containerContainerStyle = "position: absolute; flex: none; overflow: hidden; z-index: -1; visibility: hidden; width: 100%; height: 100%; left: 0px; top: 0px;";
            var containerStyle          = "position: absolute; flex: none; overflow: hidden; z-index: -1; visibility: hidden; " + getLeftTopBottomRightCssText(-(1 + scrollbarWidth), -(1 + scrollbarHeight), -scrollbarHeight, -scrollbarWidth);
            var expandStyle             = "position: absolute; flex: none; overflow: scroll; z-index: -1; visibility: hidden; width: 100%; height: 100%;";
            var shrinkStyle             = "position: absolute; flex: none; overflow: scroll; z-index: -1; visibility: hidden; width: 100%; height: 100%;";
            var expandChildStyle        = "position: absolute; left: 0; top: 0;";
            var shrinkChildStyle        = "position: absolute; width: 200%; height: 200%;";

            var containerContainer      = document.createElement("div");
            var container               = document.createElement("div");
            var expand                  = document.createElement("div");
            var expandChild             = document.createElement("div");
            var shrink                  = document.createElement("div");
            var shrinkChild             = document.createElement("div");

            // Some browsers choke on the resize system being rtl, so force it to ltr. https://github.com/wnr/element-resize-detector/issues/56
            // However, dir should not be set on the top level container as it alters the dimensions of the target element in some browsers.
            containerContainer.dir              = "ltr";

            containerContainer.style.cssText    = containerContainerStyle;
            containerContainer.className        = detectionContainerClass;
            container.className                 = detectionContainerClass;
            container.style.cssText             = containerStyle;
            expand.style.cssText                = expandStyle;
            expandChild.style.cssText           = expandChildStyle;
            shrink.style.cssText                = shrinkStyle;
            shrinkChild.style.cssText           = shrinkChildStyle;

            expand.appendChild(expandChild);
            shrink.appendChild(shrinkChild);
            container.appendChild(expand);
            container.appendChild(shrink);
            containerContainer.appendChild(container);
            rootContainer.appendChild(containerContainer);

            function onExpandScroll() {
                getState(element).onExpand && getState(element).onExpand();
            }

            function onShrinkScroll() {
                getState(element).onShrink && getState(element).onShrink();
            }

            addEvent(expand, "scroll", onExpandScroll);
            addEvent(shrink, "scroll", onShrinkScroll);

            // Store the event handlers here so that they may be removed when uninstall is called.
            // See uninstall function for an explanation why it is needed.
            getState(element).onExpandScroll = onExpandScroll;
            getState(element).onShrinkScroll = onShrinkScroll;
        }

        function registerListenersAndPositionElements() {
            function updateChildSizes(element, width, height) {
                var expandChild             = getExpandChildElement(element);
                var expandWidth             = getExpandWidth(width);
                var expandHeight            = getExpandHeight(height);
                expandChild.style.width     = expandWidth + "px";
                expandChild.style.height    = expandHeight + "px";
            }

            function updateDetectorElements(done) {
                var width           = element.offsetWidth;
                var height          = element.offsetHeight;

                debug("Storing current size", width, height);

                // Store the size of the element sync here, so that multiple scroll events may be ignored in the event listeners.
                // Otherwise the if-check in handleScroll is useless.
                storeCurrentSize(element, width, height);

                // Since we delay the processing of the batch, there is a risk that uninstall has been called before the batch gets to execute.
                // Since there is no way to cancel the fn executions, we need to add an uninstall guard to all fns of the batch.

                batchProcessor.add(0, function performUpdateChildSizes() {
                    if (!getState(element)) {
                        debug("Aborting because element has been uninstalled");
                        return;
                    }

                    if (!areElementsInjected()) {
                        debug("Aborting because element container has not been initialized");
                        return;
                    }

                    if (options.debug) {
                        var w = element.offsetWidth;
                        var h = element.offsetHeight;

                        if (w !== width || h !== height) {
                            reporter.warn(idHandler.get(element), "Scroll: Size changed before updating detector elements.");
                        }
                    }

                    updateChildSizes(element, width, height);
                });

                batchProcessor.add(1, function updateScrollbars() {
                    if (!getState(element)) {
                        debug("Aborting because element has been uninstalled");
                        return;
                    }

                    if (!areElementsInjected()) {
                        debug("Aborting because element container has not been initialized");
                        return;
                    }

                    positionScrollbars(element, width, height);
                });

                if (done) {
                    batchProcessor.add(2, function () {
                        if (!getState(element)) {
                            debug("Aborting because element has been uninstalled");
                            return;
                        }

                        if (!areElementsInjected()) {
                          debug("Aborting because element container has not been initialized");
                          return;
                        }

                        done();
                    });
                }
            }

            function areElementsInjected() {
                return !!getState(element).container;
            }

            function notifyListenersIfNeeded() {
                function isFirstNotify() {
                    return getState(element).lastNotifiedWidth === undefined;
                }

                debug("notifyListenersIfNeeded invoked");

                var state = getState(element);

                // Don't notify the if the current size is the start size, and this is the first notification.
                if (isFirstNotify() && state.lastWidth === state.startSize.width && state.lastHeight === state.startSize.height) {
                    return debug("Not notifying: Size is the same as the start size, and there has been no notification yet.");
                }

                // Don't notify if the size already has been notified.
                if (state.lastWidth === state.lastNotifiedWidth && state.lastHeight === state.lastNotifiedHeight) {
                    return debug("Not notifying: Size already notified");
                }


                debug("Current size not notified, notifying...");
                state.lastNotifiedWidth = state.lastWidth;
                state.lastNotifiedHeight = state.lastHeight;
                forEach(getState(element).listeners, function (listener) {
                    listener(element);
                });
            }

            function handleRender() {
                debug("startanimation triggered.");

                if (isUnrendered(element)) {
                    debug("Ignoring since element is still unrendered...");
                    return;
                }

                debug("Element rendered.");
                var expand = getExpandElement(element);
                var shrink = getShrinkElement(element);
                if (expand.scrollLeft === 0 || expand.scrollTop === 0 || shrink.scrollLeft === 0 || shrink.scrollTop === 0) {
                    debug("Scrollbars out of sync. Updating detector elements...");
                    updateDetectorElements(notifyListenersIfNeeded);
                }
            }

            function handleScroll() {
                debug("Scroll detected.");

                if (isUnrendered(element)) {
                    // Element is still unrendered. Skip this scroll event.
                    debug("Scroll event fired while unrendered. Ignoring...");
                    return;
                }

                var width = element.offsetWidth;
                var height = element.offsetHeight;

                if (width !== getState(element).lastWidth || height !== getState(element).lastHeight) {
                    debug("Element size changed.");
                    updateDetectorElements(notifyListenersIfNeeded);
                } else {
                    debug("Element size has not changed (" + width + "x" + height + ").");
                }
            }

            debug("registerListenersAndPositionElements invoked.");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            getState(element).onRendered = handleRender;
            getState(element).onExpand = handleScroll;
            getState(element).onShrink = handleScroll;

            var style = getState(element).style;
            updateChildSizes(element, style.width, style.height);
        }

        function finalizeDomMutation() {
            debug("finalizeDomMutation invoked.");

            if (!getState(element)) {
                debug("Aborting because element has been uninstalled");
                return;
            }

            var style = getState(element).style;
            storeCurrentSize(element, style.width, style.height);
            positionScrollbars(element, style.width, style.height);
        }

        function ready() {
            callback(element);
        }

        function install() {
            debug("Installing...");
            initListeners();
            storeStartSize();

            batchProcessor.add(0, storeStyle);
            batchProcessor.add(1, injectScrollElements);
            batchProcessor.add(2, registerListenersAndPositionElements);
            batchProcessor.add(3, finalizeDomMutation);
            batchProcessor.add(4, ready);
        }

        debug("Making detectable...");

        if (isDetached(element)) {
            debug("Element is detached");

            injectContainerElement();

            debug("Waiting until element is attached...");

            getState(element).onRendered = function () {
                debug("Element is now attached");
                install();
            };
        } else {
            install();
        }
    }

    function uninstall(element) {
        var state = getState(element);

        if (!state) {
            // Uninstall has been called on a non-erd element.
            return;
        }

        // Uninstall may have been called in the following scenarios:
        // (1) Right between the sync code and async batch (here state.busy = true, but nothing have been registered or injected).
        // (2) In the ready callback of the last level of the batch by another element (here, state.busy = true, but all the stuff has been injected).
        // (3) After the installation process (here, state.busy = false and all the stuff has been injected).
        // So to be on the safe side, let's check for each thing before removing.

        // We need to remove the event listeners, because otherwise the event might fire on an uninstall element which results in an error when trying to get the state of the element.
        state.onExpandScroll && removeEvent(getExpandElement(element), "scroll", state.onExpandScroll);
        state.onShrinkScroll && removeEvent(getShrinkElement(element), "scroll", state.onShrinkScroll);
        state.onAnimationStart && removeEvent(state.container, "animationstart", state.onAnimationStart);

        state.container && element.removeChild(state.container);
    }

    return {
        makeDetectable: makeDetectable,
        addListener: addListener,
        uninstall: uninstall
    };
};


/***/ }),
/* 260 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/debounce.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ 5),
    now = __webpack_require__(/*! ./now */ 261),
    toNumber = __webpack_require__(/*! ./toNumber */ 101);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

module.exports = debounce;


/***/ }),
/* 261 */
/*!************************************!*\
  !*** ./node_modules/lodash/now.js ***!
  \************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ 4);

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

module.exports = now;


/***/ }),
/* 262 */
/*!*************************************!*\
  !*** ./node_modules/lodash/omit.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(/*! ./_arrayMap */ 27),
    baseClone = __webpack_require__(/*! ./_baseClone */ 263),
    baseUnset = __webpack_require__(/*! ./_baseUnset */ 283),
    castPath = __webpack_require__(/*! ./_castPath */ 17),
    copyObject = __webpack_require__(/*! ./_copyObject */ 19),
    customOmitClone = __webpack_require__(/*! ./_customOmitClone */ 286),
    flatRest = __webpack_require__(/*! ./_flatRest */ 288),
    getAllKeysIn = __webpack_require__(/*! ./_getAllKeysIn */ 54);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * The opposite of `_.pick`; this method creates an object composed of the
 * own and inherited enumerable property paths of `object` that are not omitted.
 *
 * **Note:** This method is considerably slower than `_.pick`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to omit.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omit(object, ['a', 'c']);
 * // => { 'b': '2' }
 */
var omit = flatRest(function(object, paths) {
  var result = {};
  if (object == null) {
    return result;
  }
  var isDeep = false;
  paths = arrayMap(paths, function(path) {
    path = castPath(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject(object, getAllKeysIn(object), result);
  if (isDeep) {
    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
  }
  var length = paths.length;
  while (length--) {
    baseUnset(result, paths[length]);
  }
  return result;
});

module.exports = omit;


/***/ }),
/* 263 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseClone.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ 43),
    arrayEach = __webpack_require__(/*! ./_arrayEach */ 264),
    assignValue = __webpack_require__(/*! ./_assignValue */ 41),
    baseAssign = __webpack_require__(/*! ./_baseAssign */ 265),
    baseAssignIn = __webpack_require__(/*! ./_baseAssignIn */ 266),
    cloneBuffer = __webpack_require__(/*! ./_cloneBuffer */ 267),
    copyArray = __webpack_require__(/*! ./_copyArray */ 268),
    copySymbols = __webpack_require__(/*! ./_copySymbols */ 269),
    copySymbolsIn = __webpack_require__(/*! ./_copySymbolsIn */ 270),
    getAllKeys = __webpack_require__(/*! ./_getAllKeys */ 82),
    getAllKeysIn = __webpack_require__(/*! ./_getAllKeysIn */ 54),
    getTag = __webpack_require__(/*! ./_getTag */ 37),
    initCloneArray = __webpack_require__(/*! ./_initCloneArray */ 271),
    initCloneByTag = __webpack_require__(/*! ./_initCloneByTag */ 272),
    initCloneObject = __webpack_require__(/*! ./_initCloneObject */ 277),
    isArray = __webpack_require__(/*! ./isArray */ 6),
    isBuffer = __webpack_require__(/*! ./isBuffer */ 50),
    isMap = __webpack_require__(/*! ./isMap */ 279),
    isObject = __webpack_require__(/*! ./isObject */ 5),
    isSet = __webpack_require__(/*! ./isSet */ 281),
    keys = __webpack_require__(/*! ./keys */ 15);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? copySymbolsIn(value, baseAssignIn(result, value))
          : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });

    return result;
  }

  if (isMap(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });

    return result;
  }

  var keysFunc = isFull
    ? (isFlat ? getAllKeysIn : getAllKeys)
    : (isFlat ? keysIn : keys);

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;


/***/ }),
/* 264 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arrayEach.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;


/***/ }),
/* 265 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseAssign.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ 19),
    keys = __webpack_require__(/*! ./keys */ 15);

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;


/***/ }),
/* 266 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseAssignIn.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ 19),
    keysIn = __webpack_require__(/*! ./keysIn */ 98);

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;


/***/ }),
/* 267 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_cloneBuffer.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(/*! ./_root */ 4);

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/module.js */ 51)(module)))

/***/ }),
/* 268 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_copyArray.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;


/***/ }),
/* 269 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_copySymbols.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ 19),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ 48);

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;


/***/ }),
/* 270 */
/*!***********************************************!*\
  !*** ./node_modules/lodash/_copySymbolsIn.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ 19),
    getSymbolsIn = __webpack_require__(/*! ./_getSymbolsIn */ 97);

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;


/***/ }),
/* 271 */
/*!************************************************!*\
  !*** ./node_modules/lodash/_initCloneArray.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;


/***/ }),
/* 272 */
/*!************************************************!*\
  !*** ./node_modules/lodash/_initCloneByTag.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ 67),
    cloneDataView = __webpack_require__(/*! ./_cloneDataView */ 273),
    cloneRegExp = __webpack_require__(/*! ./_cloneRegExp */ 274),
    cloneSymbol = __webpack_require__(/*! ./_cloneSymbol */ 275),
    cloneTypedArray = __webpack_require__(/*! ./_cloneTypedArray */ 276);

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return new Ctor;

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return new Ctor;

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;


/***/ }),
/* 273 */
/*!***********************************************!*\
  !*** ./node_modules/lodash/_cloneDataView.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ 67);

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;


/***/ }),
/* 274 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_cloneRegExp.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;


/***/ }),
/* 275 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_cloneSymbol.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ 14);

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;


/***/ }),
/* 276 */
/*!*************************************************!*\
  !*** ./node_modules/lodash/_cloneTypedArray.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ 67);

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;


/***/ }),
/* 277 */
/*!*************************************************!*\
  !*** ./node_modules/lodash/_initCloneObject.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(/*! ./_baseCreate */ 278),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ 55),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ 36);

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;


/***/ }),
/* 278 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseCreate.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ 5);

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;


/***/ }),
/* 279 */
/*!**************************************!*\
  !*** ./node_modules/lodash/isMap.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMap = __webpack_require__(/*! ./_baseIsMap */ 280),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ 34),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ 35);

/* Node.js helper references. */
var nodeIsMap = nodeUtil && nodeUtil.isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

module.exports = isMap;


/***/ }),
/* 280 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseIsMap.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(/*! ./_getTag */ 37),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 7);

/** `Object#toString` result references. */
var mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return isObjectLike(value) && getTag(value) == mapTag;
}

module.exports = baseIsMap;


/***/ }),
/* 281 */
/*!**************************************!*\
  !*** ./node_modules/lodash/isSet.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsSet = __webpack_require__(/*! ./_baseIsSet */ 282),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ 34),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ 35);

/* Node.js helper references. */
var nodeIsSet = nodeUtil && nodeUtil.isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

module.exports = isSet;


/***/ }),
/* 282 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseIsSet.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(/*! ./_getTag */ 37),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 7);

/** `Object#toString` result references. */
var setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return isObjectLike(value) && getTag(value) == setTag;
}

module.exports = baseIsSet;


/***/ }),
/* 283 */
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseUnset.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ 17),
    last = __webpack_require__(/*! ./last */ 284),
    parent = __webpack_require__(/*! ./_parent */ 285),
    toKey = __webpack_require__(/*! ./_toKey */ 18);

/**
 * The base implementation of `_.unset`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The property path to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 */
function baseUnset(object, path) {
  path = castPath(path, object);
  object = parent(object, path);
  return object == null || delete object[toKey(last(path))];
}

module.exports = baseUnset;


/***/ }),
/* 284 */
/*!*************************************!*\
  !*** ./node_modules/lodash/last.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

module.exports = last;


/***/ }),
/* 285 */
/*!****************************************!*\
  !*** ./node_modules/lodash/_parent.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ 38),
    baseSlice = __webpack_require__(/*! ./_baseSlice */ 99);

/**
 * Gets the parent value at `path` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} path The path to get the parent value of.
 * @returns {*} Returns the parent value.
 */
function parent(object, path) {
  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
}

module.exports = parent;


/***/ }),
/* 286 */
/*!*************************************************!*\
  !*** ./node_modules/lodash/_customOmitClone.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isPlainObject = __webpack_require__(/*! ./isPlainObject */ 287);

/**
 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
 * objects.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {string} key The key of the property to inspect.
 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
 */
function customOmitClone(value) {
  return isPlainObject(value) ? undefined : value;
}

module.exports = customOmitClone;


/***/ }),
/* 287 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/isPlainObject.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 10),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ 55),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 7);

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;


/***/ }),
/* 288 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_flatRest.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var flatten = __webpack_require__(/*! ./flatten */ 289),
    overRest = __webpack_require__(/*! ./_overRest */ 102),
    setToString = __webpack_require__(/*! ./_setToString */ 103);

/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
  return setToString(overRest(func, undefined, flatten), func + '');
}

module.exports = flatRest;


/***/ }),
/* 289 */
/*!****************************************!*\
  !*** ./node_modules/lodash/flatten.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__(/*! ./_baseFlatten */ 290);

/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}

module.exports = flatten;


/***/ }),
/* 290 */
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseFlatten.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ 47),
    isFlattenable = __webpack_require__(/*! ./_isFlattenable */ 291);

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;


/***/ }),
/* 291 */
/*!***********************************************!*\
  !*** ./node_modules/lodash/_isFlattenable.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ 14),
    isArguments = __webpack_require__(/*! ./isArguments */ 49),
    isArray = __webpack_require__(/*! ./isArray */ 6);

/** Built-in value references. */
var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray(value) || isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;


/***/ }),
/* 292 */
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var assign = __webpack_require__(/*! object-assign */ 20);

var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ 68);
var checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ 69);

var printWarning = function() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../process/browser.js */ 2)))

/***/ }),
/* 293 */
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithThrowingShims.js ***!
  \*************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ 68);

function emptyFunction() {}

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 294 */
/*!********************************************************!*\
  !*** ./node_modules/react/cjs/react.production.min.js ***!
  \********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.4.2
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var k=__webpack_require__(/*! object-assign */ 20),n=__webpack_require__(/*! fbjs/lib/invariant */ 21),p=__webpack_require__(/*! fbjs/lib/emptyObject */ 22),q=__webpack_require__(/*! fbjs/lib/emptyFunction */ 23),r="function"===typeof Symbol&&Symbol.for,t=r?Symbol.for("react.element"):60103,u=r?Symbol.for("react.portal"):60106,v=r?Symbol.for("react.fragment"):60107,w=r?Symbol.for("react.strict_mode"):60108,x=r?Symbol.for("react.profiler"):60114,y=r?Symbol.for("react.provider"):60109,z=r?Symbol.for("react.context"):60110,A=r?Symbol.for("react.async_mode"):60111,B=
r?Symbol.for("react.forward_ref"):60112;r&&Symbol.for("react.timeout");var C="function"===typeof Symbol&&Symbol.iterator;function D(a){for(var b=arguments.length-1,e="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=0;c<b;c++)e+="&args[]="+encodeURIComponent(arguments[c+1]);n(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",e)}
var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function F(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){"object"!==typeof a&&"function"!==typeof a&&null!=a?D("85"):void 0;this.updater.enqueueSetState(this,a,b,"setState")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function G(){}
G.prototype=F.prototype;function H(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}var I=H.prototype=new G;I.constructor=H;k(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};
function M(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=""+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:J.current}}
function N(a){return"object"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={"=":"=0",":":"=2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\/+/g,P=[];function Q(a,b,e,c){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}
function S(a,b,e,c){var d=typeof a;if("undefined"===d||"boolean"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case "string":case "number":g=!0;break;case "object":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,""===b?"."+T(a,0):b),1;g=0;b=""===b?".":b+":";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+T(d,h);g+=S(d,f,e,c)}else if(null===a||"undefined"===typeof a?f=null:(f=C&&a[C]||a["@@iterator"],f="function"===typeof f?f:null),"function"===typeof f)for(a=f.call(a),
h=0;!(d=a.next()).done;)d=d.value,f=b+T(d,h++),g+=S(d,f,e,c);else"object"===d&&(e=""+a,D("31","[object Object]"===e?"object with keys {"+Object.keys(a).join(", ")+"}":e,""));return g}function T(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function U(a,b){a.func.call(a.context,b,a.count++)}
function V(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,q.thatReturnsArgument):null!=a&&(N(a)&&(b=d+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(O,"$&/")+"/")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function W(a,b,e,c,d){var g="";null!=e&&(g=(""+e).replace(O,"$&/")+"/");b=Q(b,g,c,d);null==a||S(a,"",V,b);R(b)}
var X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=Q(null,null,b,e);null==a||S(a,"",U,b);R(b)},count:function(a){return null==a?0:S(a,"",q.thatReturnsNull,null)},toArray:function(a){var b=[];W(a,b,null,q.thatReturnsArgument);return b},only:function(a){N(a)?void 0:D("143");return a}},createRef:function(){return{current:null}},Component:F,PureComponent:H,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:z,
_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_currentValue2:a,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null};a.Provider={$$typeof:y,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:B,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:A,unstable_Profiler:x,createElement:M,cloneElement:function(a,b,e){null===a||void 0===a?D("267",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==
b.key&&(g=""+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:"16.4.2",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:J,
assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;


/***/ }),
/* 295 */
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.4.2
 * react.development.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var _assign = __webpack_require__(/*! object-assign */ 20);
var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 21);
var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 22);
var warning = __webpack_require__(/*! fbjs/lib/warning */ 70);
var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 23);
var checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ 69);

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.4.2';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_TIMEOUT_TYPE = hasSymbol ? Symbol.for('react.timeout') : 0xead1;

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';

function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable === 'undefined') {
    return null;
  }
  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }
  return null;
}

// Relying on the `invariant()` implementation lets us
// have preserve the format and params in the www builds.

// Exports ReactDOM.createRoot


// Experimental error-boundary API that can recover from errors within a single
// render phase

// Suspense
var enableSuspense = false;
// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:


// In some cases, StrictMode should also double-render lifecycles.
// This can be confusing for tests though,
// And it can be bad for performance in production.
// This feature flag can be used to control the behavior:


// To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.


// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:


// Warn about legacy context API


// Gather advanced timing metrics for Profiler subtrees.


// Only used in www builds.

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + '.' + callerName;
    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }
    warning(false, "Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

/**
 * Base class helpers for the updating state of a component.
 */
function Component(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
Component.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
        return undefined;
      }
    });
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}
ComponentDummy.prototype = Component.prototype;

/**
 * Convenience component with default shallow equality check for sCU.
 */
function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent;
// Avoid an extra prototype jump for these methods.
_assign(pureComponentPrototype, Component.prototype);
pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };
  {
    Object.seal(refObject);
  }
  return refObject;
}

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var hasOwnProperty = Object.prototype.hasOwnProperty;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown = void 0;
var specialPropRefWarningShown = void 0;

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    });
    // self and source are DEV only properties.
    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    });
    // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.
    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */
function createElement(type, config, children) {
  var propName = void 0;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}

/**
 * Return a function that produces ReactElements of a given type.
 * See https://reactjs.org/docs/react-api.html#createfactory
 */


function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
}

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */
function cloneElement(element, config, children) {
  !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;

  var propName = void 0;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps = void 0;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}

/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var ReactDebugCurrentFrame = {};

{
  // Component that is being worked on
  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var impl = ReactDebugCurrentFrame.getCurrentStack;
    if (impl) {
      return impl();
    }
    return null;
  };
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */
function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

var POOL_SIZE = 10;
var traverseContextPool = [];
function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
  if (traverseContextPool.length) {
    var traverseContext = traverseContextPool.pop();
    traverseContext.result = mapResult;
    traverseContext.keyPrefix = keyPrefix;
    traverseContext.func = mapFunction;
    traverseContext.context = mapContext;
    traverseContext.count = 0;
    return traverseContext;
  } else {
    return {
      result: mapResult,
      keyPrefix: keyPrefix,
      func: mapFunction,
      context: mapContext,
      count: 0
    };
  }
}

function releaseTraverseContext(traverseContext) {
  traverseContext.result = null;
  traverseContext.keyPrefix = null;
  traverseContext.func = null;
  traverseContext.context = null;
  traverseContext.count = 0;
  if (traverseContextPool.length < POOL_SIZE) {
    traverseContextPool.push(traverseContext);
  }
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;
      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }
    }
  }

  if (invokeCallback) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child = void 0;
  var nextName = void 0;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (typeof iteratorFn === 'function') {
      {
        // Warn about using Maps as children
        if (iteratorFn === children.entries) {
          !didWarnAboutMaps ? warning(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum()) : void 0;
          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(children);
      var step = void 0;
      var ii = 0;
      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getComponentKey(child, ii++);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else if (type === 'object') {
      var addendum = '';
      {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
      }
      var childrenString = '' + children;
      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof component === 'object' && component !== null && component.key != null) {
    // Explicit key
    return escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  releaseTraverseContext(traverseContext);
}

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (isValidElement(mappedChild)) {
      mappedChild = cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  releaseTraverseContext(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children) {
  return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
  return children;
}

function createContext(defaultValue, calculateChangedBits) {
  if (calculateChangedBits === undefined) {
    calculateChangedBits = null;
  } else {
    {
      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warning(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;
    }
  }

  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    _calculateChangedBits: calculateChangedBits,
    _defaultValue: defaultValue,
    _currentValue: defaultValue,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue2: defaultValue,
    _changedBits: 0,
    _changedBits2: 0,
    // These are circular
    Provider: null,
    Consumer: null
  };

  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };
  context.Consumer = context;

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

function forwardRef(render) {
  {
    !(typeof render === 'function') ? warning(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render) : void 0;

    if (render != null) {
      !(render.defaultProps == null && render.propTypes == null) ? warning(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;
    }
  }

  return {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };
}

var describeComponentFrame = function (name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
};

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' ||
  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_TIMEOUT_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
}

function getComponentName(fiber) {
  var type = fiber.type;

  if (typeof type === 'function') {
    return type.displayName || type.name;
  }
  if (typeof type === 'string') {
    return type;
  }
  switch (type) {
    case REACT_ASYNC_MODE_TYPE:
      return 'AsyncMode';
    case REACT_CONTEXT_TYPE:
      return 'Context.Consumer';
    case REACT_FRAGMENT_TYPE:
      return 'ReactFragment';
    case REACT_PORTAL_TYPE:
      return 'ReactPortal';
    case REACT_PROFILER_TYPE:
      return 'Profiler(' + fiber.pendingProps.id + ')';
    case REACT_PROVIDER_TYPE:
      return 'Context.Provider';
    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';
    case REACT_TIMEOUT_TYPE:
      return 'Timeout';
  }
  if (typeof type === 'object' && type !== null) {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        var functionName = type.render.displayName || type.render.name || '';
        return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
    }
  }
  return null;
}

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

var currentlyValidatingElement = void 0;
var propTypesMisspellWarningShown = void 0;

var getDisplayName = function () {};
var getStackAddendum = function () {};

{
  currentlyValidatingElement = null;

  propTypesMisspellWarningShown = false;

  getDisplayName = function (element) {
    if (element == null) {
      return '#empty';
    } else if (typeof element === 'string' || typeof element === 'number') {
      return '#text';
    } else if (typeof element.type === 'string') {
      return element.type;
    }

    var type = element.type;
    if (type === REACT_FRAGMENT_TYPE) {
      return 'React.Fragment';
    } else if (typeof type === 'object' && type !== null && type.$$typeof === REACT_FORWARD_REF_TYPE) {
      var functionName = type.render.displayName || type.render.name || '';
      return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
    } else {
      return type.displayName || type.name || 'Unknown';
    }
  };

  getStackAddendum = function () {
    var stack = '';
    if (currentlyValidatingElement) {
      var name = getDisplayName(currentlyValidatingElement);
      var owner = currentlyValidatingElement._owner;
      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));
    }
    stack += ReactDebugCurrentFrame.getStackAddendum() || '';
    return stack;
  };
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentName(ReactCurrentOwner.current);
    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = '\n\nCheck the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }
  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';
  }

  currentlyValidatingElement = element;
  {
    warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());
  }
  currentlyValidatingElement = null;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step = void 0;
        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var type = element.type;
  var name = void 0,
      propTypes = void 0;
  if (typeof type === 'function') {
    // Class or functional component
    name = type.displayName || type.name;
    propTypes = type.propTypes;
  } else if (typeof type === 'object' && type !== null && type.$$typeof === REACT_FORWARD_REF_TYPE) {
    // ForwardRef
    var functionName = type.render.displayName || type.render.name || '';
    name = functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
    propTypes = type.propTypes;
  } else {
    return;
  }
  if (propTypes) {
    currentlyValidatingElement = element;
    checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);
    currentlyValidatingElement = null;
  } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
    propTypesMisspellWarningShown = true;
    warning(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
  }
  if (typeof type.getDefaultProps === 'function') {
    !type.getDefaultProps.isReactClassApproved ? warning(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */
function validateFragmentProps(fragment) {
  currentlyValidatingElement = fragment;

  var keys = Object.keys(fragment.props);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (key !== 'children' && key !== 'key') {
      warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());
      break;
    }
  }

  if (fragment.ref !== null) {
    warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());
  }

  currentlyValidatingElement = null;
}

function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type);

  // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.
  if (!validType) {
    var info = '';
    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendum(props);
    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    info += getStackAddendum() || '';

    var typeString = void 0;
    if (type === null) {
      typeString = 'null';
    } else if (Array.isArray(type)) {
      typeString = 'array';
    } else {
      typeString = typeof type;
    }

    warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
  }

  var element = createElement.apply(this, arguments);

  // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.
  if (element == null) {
    return element;
  }

  // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)
  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}

function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type;
  // Legacy hook: remove it
  {
    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}

function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);
  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }
  validatePropTypes(newElement);
  return newElement;
}

var React = {
  Children: {
    map: mapChildren,
    forEach: forEachChildren,
    count: countChildren,
    toArray: toArray,
    only: onlyChild
  },

  createRef: createRef,
  Component: Component,
  PureComponent: PureComponent,

  createContext: createContext,
  forwardRef: forwardRef,

  Fragment: REACT_FRAGMENT_TYPE,
  StrictMode: REACT_STRICT_MODE_TYPE,
  unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,
  unstable_Profiler: REACT_PROFILER_TYPE,

  createElement: createElementWithValidation,
  cloneElement: cloneElementWithValidation,
  createFactory: createFactoryWithValidation,
  isValidElement: isValidElement,

  version: ReactVersion,

  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    ReactCurrentOwner: ReactCurrentOwner,
    // Used by renderers to avoid bundling object-assign twice in UMD bundles:
    assign: _assign
  }
};

if (enableSuspense) {
  React.Timeout = REACT_TIMEOUT_TYPE;
}

{
  _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
    // These should not be included in production.
    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
    // TODO: remove in React 17.0.
    ReactComponentTreeHook: {}
  });
}



var React$2 = Object.freeze({
	default: React
});

var React$3 = ( React$2 && React ) || React$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var react = React$3.default ? React$3.default : React$3;

module.exports = react;
  })();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 2)))

/***/ }),
/* 296 */
/*!**************************************************!*\
  !*** ./node_modules/create-react-class/index.js ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var React = __webpack_require__(/*! react */ 3);
var factory = __webpack_require__(/*! ./factory */ 297);

if (typeof React === 'undefined') {
  throw Error(
    'create-react-class could not find the React object. If you are using script tags, ' +
      'make sure that React is being loaded before create-react-class.'
  );
}

// Hack to grab NoopUpdateQueue from isomorphic React
var ReactNoopUpdateQueue = new React.Component().updater;

module.exports = factory(
  React.Component,
  React.isValidElement,
  ReactNoopUpdateQueue
);


/***/ }),
/* 297 */
/*!****************************************************!*\
  !*** ./node_modules/create-react-class/factory.js ***!
  \****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var _assign = __webpack_require__(/*! object-assign */ 20);

var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 22);
var _invariant = __webpack_require__(/*! fbjs/lib/invariant */ 21);

if (process.env.NODE_ENV !== 'production') {
  var warning = __webpack_require__(/*! fbjs/lib/warning */ 70);
}

var MIXINS_KEY = 'mixins';

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity(fn) {
  return fn;
}

var ReactPropTypeLocationNames;
if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
} else {
  ReactPropTypeLocationNames = {};
}

function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
  /**
   * Policies that describe methods in `ReactClassInterface`.
   */

  var injectedMixins = [];

  /**
   * Composite components are higher-level components that compose other composite
   * or host components.
   *
   * To create a new type of `ReactClass`, pass a specification of
   * your new class to `React.createClass`. The only requirement of your class
   * specification is that you implement a `render` method.
   *
   *   var MyComponent = React.createClass({
   *     render: function() {
   *       return <div>Hello World</div>;
   *     }
   *   });
   *
   * The class specification supports a specific protocol of methods that have
   * special meaning (e.g. `render`). See `ReactClassInterface` for
   * more the comprehensive protocol. Any other properties and methods in the
   * class specification will be available on the prototype.
   *
   * @interface ReactClassInterface
   * @internal
   */
  var ReactClassInterface = {
    /**
     * An array of Mixin objects to include when defining your component.
     *
     * @type {array}
     * @optional
     */
    mixins: 'DEFINE_MANY',

    /**
     * An object containing properties and methods that should be defined on
     * the component's constructor instead of its prototype (static methods).
     *
     * @type {object}
     * @optional
     */
    statics: 'DEFINE_MANY',

    /**
     * Definition of prop types for this component.
     *
     * @type {object}
     * @optional
     */
    propTypes: 'DEFINE_MANY',

    /**
     * Definition of context types for this component.
     *
     * @type {object}
     * @optional
     */
    contextTypes: 'DEFINE_MANY',

    /**
     * Definition of context types this component sets for its children.
     *
     * @type {object}
     * @optional
     */
    childContextTypes: 'DEFINE_MANY',

    // ==== Definition methods ====

    /**
     * Invoked when the component is mounted. Values in the mapping will be set on
     * `this.props` if that prop is not specified (i.e. using an `in` check).
     *
     * This method is invoked before `getInitialState` and therefore cannot rely
     * on `this.state` or use `this.setState`.
     *
     * @return {object}
     * @optional
     */
    getDefaultProps: 'DEFINE_MANY_MERGED',

    /**
     * Invoked once before the component is mounted. The return value will be used
     * as the initial value of `this.state`.
     *
     *   getInitialState: function() {
     *     return {
     *       isOn: false,
     *       fooBaz: new BazFoo()
     *     }
     *   }
     *
     * @return {object}
     * @optional
     */
    getInitialState: 'DEFINE_MANY_MERGED',

    /**
     * @return {object}
     * @optional
     */
    getChildContext: 'DEFINE_MANY_MERGED',

    /**
     * Uses props from `this.props` and state from `this.state` to render the
     * structure of the component.
     *
     * No guarantees are made about when or how often this method is invoked, so
     * it must not have side effects.
     *
     *   render: function() {
     *     var name = this.props.name;
     *     return <div>Hello, {name}!</div>;
     *   }
     *
     * @return {ReactComponent}
     * @required
     */
    render: 'DEFINE_ONCE',

    // ==== Delegate methods ====

    /**
     * Invoked when the component is initially created and about to be mounted.
     * This may have side effects, but any external subscriptions or data created
     * by this method must be cleaned up in `componentWillUnmount`.
     *
     * @optional
     */
    componentWillMount: 'DEFINE_MANY',

    /**
     * Invoked when the component has been mounted and has a DOM representation.
     * However, there is no guarantee that the DOM node is in the document.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been mounted (initialized and rendered) for the first time.
     *
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidMount: 'DEFINE_MANY',

    /**
     * Invoked before the component receives new props.
     *
     * Use this as an opportunity to react to a prop transition by updating the
     * state using `this.setState`. Current props are accessed via `this.props`.
     *
     *   componentWillReceiveProps: function(nextProps, nextContext) {
     *     this.setState({
     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
     *     });
     *   }
     *
     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
     * transition may cause a state change, but the opposite is not true. If you
     * need it, you are probably looking for `componentWillUpdate`.
     *
     * @param {object} nextProps
     * @optional
     */
    componentWillReceiveProps: 'DEFINE_MANY',

    /**
     * Invoked while deciding if the component should be updated as a result of
     * receiving new props, state and/or context.
     *
     * Use this as an opportunity to `return false` when you're certain that the
     * transition to the new props/state/context will not require a component
     * update.
     *
     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
     *     return !equal(nextProps, this.props) ||
     *       !equal(nextState, this.state) ||
     *       !equal(nextContext, this.context);
     *   }
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @return {boolean} True if the component should update.
     * @optional
     */
    shouldComponentUpdate: 'DEFINE_ONCE',

    /**
     * Invoked when the component is about to update due to a transition from
     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
     * and `nextContext`.
     *
     * Use this as an opportunity to perform preparation before an update occurs.
     *
     * NOTE: You **cannot** use `this.setState()` in this method.
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @param {ReactReconcileTransaction} transaction
     * @optional
     */
    componentWillUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component's DOM representation has been updated.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been updated.
     *
     * @param {object} prevProps
     * @param {?object} prevState
     * @param {?object} prevContext
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component is about to be removed from its parent and have
     * its DOM representation destroyed.
     *
     * Use this as an opportunity to deallocate any external resources.
     *
     * NOTE: There is no `componentDidUnmount` since your component will have been
     * destroyed by that point.
     *
     * @optional
     */
    componentWillUnmount: 'DEFINE_MANY',

    /**
     * Replacement for (deprecated) `componentWillMount`.
     *
     * @optional
     */
    UNSAFE_componentWillMount: 'DEFINE_MANY',

    /**
     * Replacement for (deprecated) `componentWillReceiveProps`.
     *
     * @optional
     */
    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',

    /**
     * Replacement for (deprecated) `componentWillUpdate`.
     *
     * @optional
     */
    UNSAFE_componentWillUpdate: 'DEFINE_MANY',

    // ==== Advanced methods ====

    /**
     * Updates the component's currently mounted DOM representation.
     *
     * By default, this implements React's rendering and reconciliation algorithm.
     * Sophisticated clients may wish to override this.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     * @overridable
     */
    updateComponent: 'OVERRIDE_BASE'
  };

  /**
   * Similar to ReactClassInterface but for static methods.
   */
  var ReactClassStaticInterface = {
    /**
     * This method is invoked after a component is instantiated and when it
     * receives new props. Return an object to update state in response to
     * prop changes. Return null to indicate no change to state.
     *
     * If an object is returned, its keys will be merged into the existing state.
     *
     * @return {object || null}
     * @optional
     */
    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'
  };

  /**
   * Mapping from class specification keys to special processing functions.
   *
   * Although these are declared like instance properties in the specification
   * when defining classes using `React.createClass`, they are actually static
   * and are accessible on the constructor instead of the prototype. Despite
   * being static, they must be defined outside of the "statics" key under
   * which all other static methods are defined.
   */
  var RESERVED_SPEC_KEYS = {
    displayName: function(Constructor, displayName) {
      Constructor.displayName = displayName;
    },
    mixins: function(Constructor, mixins) {
      if (mixins) {
        for (var i = 0; i < mixins.length; i++) {
          mixSpecIntoComponent(Constructor, mixins[i]);
        }
      }
    },
    childContextTypes: function(Constructor, childContextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, childContextTypes, 'childContext');
      }
      Constructor.childContextTypes = _assign(
        {},
        Constructor.childContextTypes,
        childContextTypes
      );
    },
    contextTypes: function(Constructor, contextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, contextTypes, 'context');
      }
      Constructor.contextTypes = _assign(
        {},
        Constructor.contextTypes,
        contextTypes
      );
    },
    /**
     * Special case getDefaultProps which should move into statics but requires
     * automatic merging.
     */
    getDefaultProps: function(Constructor, getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(
          Constructor.getDefaultProps,
          getDefaultProps
        );
      } else {
        Constructor.getDefaultProps = getDefaultProps;
      }
    },
    propTypes: function(Constructor, propTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, propTypes, 'prop');
      }
      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
    },
    statics: function(Constructor, statics) {
      mixStaticSpecIntoComponent(Constructor, statics);
    },
    autobind: function() {}
  };

  function validateTypeDef(Constructor, typeDef, location) {
    for (var propName in typeDef) {
      if (typeDef.hasOwnProperty(propName)) {
        // use a warning instead of an _invariant so components
        // don't show up in prod but only in __DEV__
        if (process.env.NODE_ENV !== 'production') {
          warning(
            typeof typeDef[propName] === 'function',
            '%s: %s type `%s` is invalid; it must be a function, usually from ' +
              'React.PropTypes.',
            Constructor.displayName || 'ReactClass',
            ReactPropTypeLocationNames[location],
            propName
          );
        }
      }
    }
  }

  function validateMethodOverride(isAlreadyDefined, name) {
    var specPolicy = ReactClassInterface.hasOwnProperty(name)
      ? ReactClassInterface[name]
      : null;

    // Disallow overriding of base class methods unless explicitly allowed.
    if (ReactClassMixin.hasOwnProperty(name)) {
      _invariant(
        specPolicy === 'OVERRIDE_BASE',
        'ReactClassInterface: You are attempting to override ' +
          '`%s` from your class specification. Ensure that your method names ' +
          'do not overlap with React methods.',
        name
      );
    }

    // Disallow defining methods more than once unless explicitly allowed.
    if (isAlreadyDefined) {
      _invariant(
        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',
        'ReactClassInterface: You are attempting to define ' +
          '`%s` on your component more than once. This conflict may be due ' +
          'to a mixin.',
        name
      );
    }
  }

  /**
   * Mixin helper which handles policy validation and reserved
   * specification keys when building React classes.
   */
  function mixSpecIntoComponent(Constructor, spec) {
    if (!spec) {
      if (process.env.NODE_ENV !== 'production') {
        var typeofSpec = typeof spec;
        var isMixinValid = typeofSpec === 'object' && spec !== null;

        if (process.env.NODE_ENV !== 'production') {
          warning(
            isMixinValid,
            "%s: You're attempting to include a mixin that is either null " +
              'or not an object. Check the mixins included by the component, ' +
              'as well as any mixins they include themselves. ' +
              'Expected object but got %s.',
            Constructor.displayName || 'ReactClass',
            spec === null ? null : typeofSpec
          );
        }
      }

      return;
    }

    _invariant(
      typeof spec !== 'function',
      "ReactClass: You're attempting to " +
        'use a component class or function as a mixin. Instead, just use a ' +
        'regular object.'
    );
    _invariant(
      !isValidElement(spec),
      "ReactClass: You're attempting to " +
        'use a component as a mixin. Instead, just use a regular object.'
    );

    var proto = Constructor.prototype;
    var autoBindPairs = proto.__reactAutoBindPairs;

    // By handling mixins before any other properties, we ensure the same
    // chaining order is applied to methods with DEFINE_MANY policy, whether
    // mixins are listed before or after these methods in the spec.
    if (spec.hasOwnProperty(MIXINS_KEY)) {
      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
    }

    for (var name in spec) {
      if (!spec.hasOwnProperty(name)) {
        continue;
      }

      if (name === MIXINS_KEY) {
        // We have already handled mixins in a special case above.
        continue;
      }

      var property = spec[name];
      var isAlreadyDefined = proto.hasOwnProperty(name);
      validateMethodOverride(isAlreadyDefined, name);

      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
        RESERVED_SPEC_KEYS[name](Constructor, property);
      } else {
        // Setup methods on prototype:
        // The following member methods should not be automatically bound:
        // 1. Expected ReactClass methods (in the "interface").
        // 2. Overridden methods (that were mixed in).
        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
        var isFunction = typeof property === 'function';
        var shouldAutoBind =
          isFunction &&
          !isReactClassMethod &&
          !isAlreadyDefined &&
          spec.autobind !== false;

        if (shouldAutoBind) {
          autoBindPairs.push(name, property);
          proto[name] = property;
        } else {
          if (isAlreadyDefined) {
            var specPolicy = ReactClassInterface[name];

            // These cases should already be caught by validateMethodOverride.
            _invariant(
              isReactClassMethod &&
                (specPolicy === 'DEFINE_MANY_MERGED' ||
                  specPolicy === 'DEFINE_MANY'),
              'ReactClass: Unexpected spec policy %s for key %s ' +
                'when mixing in component specs.',
              specPolicy,
              name
            );

            // For methods which are defined more than once, call the existing
            // methods before calling the new property, merging if appropriate.
            if (specPolicy === 'DEFINE_MANY_MERGED') {
              proto[name] = createMergedResultFunction(proto[name], property);
            } else if (specPolicy === 'DEFINE_MANY') {
              proto[name] = createChainedFunction(proto[name], property);
            }
          } else {
            proto[name] = property;
            if (process.env.NODE_ENV !== 'production') {
              // Add verbose displayName to the function, which helps when looking
              // at profiling tools.
              if (typeof property === 'function' && spec.displayName) {
                proto[name].displayName = spec.displayName + '_' + name;
              }
            }
          }
        }
      }
    }
  }

  function mixStaticSpecIntoComponent(Constructor, statics) {
    if (!statics) {
      return;
    }

    for (var name in statics) {
      var property = statics[name];
      if (!statics.hasOwnProperty(name)) {
        continue;
      }

      var isReserved = name in RESERVED_SPEC_KEYS;
      _invariant(
        !isReserved,
        'ReactClass: You are attempting to define a reserved ' +
          'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
          'as an instance property instead; it will still be accessible on the ' +
          'constructor.',
        name
      );

      var isAlreadyDefined = name in Constructor;
      if (isAlreadyDefined) {
        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name)
          ? ReactClassStaticInterface[name]
          : null;

        _invariant(
          specPolicy === 'DEFINE_MANY_MERGED',
          'ReactClass: You are attempting to define ' +
            '`%s` on your component more than once. This conflict may be ' +
            'due to a mixin.',
          name
        );

        Constructor[name] = createMergedResultFunction(Constructor[name], property);

        return;
      }

      Constructor[name] = property;
    }
  }

  /**
   * Merge two objects, but throw if both contain the same key.
   *
   * @param {object} one The first object, which is mutated.
   * @param {object} two The second object
   * @return {object} one after it has been mutated to contain everything in two.
   */
  function mergeIntoWithNoDuplicateKeys(one, two) {
    _invariant(
      one && two && typeof one === 'object' && typeof two === 'object',
      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
    );

    for (var key in two) {
      if (two.hasOwnProperty(key)) {
        _invariant(
          one[key] === undefined,
          'mergeIntoWithNoDuplicateKeys(): ' +
            'Tried to merge two objects with the same key: `%s`. This conflict ' +
            'may be due to a mixin; in particular, this may be caused by two ' +
            'getInitialState() or getDefaultProps() methods returning objects ' +
            'with clashing keys.',
          key
        );
        one[key] = two[key];
      }
    }
    return one;
  }

  /**
   * Creates a function that invokes two functions and merges their return values.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createMergedResultFunction(one, two) {
    return function mergedResult() {
      var a = one.apply(this, arguments);
      var b = two.apply(this, arguments);
      if (a == null) {
        return b;
      } else if (b == null) {
        return a;
      }
      var c = {};
      mergeIntoWithNoDuplicateKeys(c, a);
      mergeIntoWithNoDuplicateKeys(c, b);
      return c;
    };
  }

  /**
   * Creates a function that invokes two functions and ignores their return vales.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createChainedFunction(one, two) {
    return function chainedFunction() {
      one.apply(this, arguments);
      two.apply(this, arguments);
    };
  }

  /**
   * Binds a method to the component.
   *
   * @param {object} component Component whose method is going to be bound.
   * @param {function} method Method to be bound.
   * @return {function} The bound method.
   */
  function bindAutoBindMethod(component, method) {
    var boundMethod = method.bind(component);
    if (process.env.NODE_ENV !== 'production') {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function(newThis) {
        for (
          var _len = arguments.length,
            args = Array(_len > 1 ? _len - 1 : 0),
            _key = 1;
          _key < _len;
          _key++
        ) {
          args[_key - 1] = arguments[_key];
        }

        // User is trying to bind() an autobound method; we effectively will
        // ignore the value of "this" that the user is trying to use, so
        // let's warn.
        if (newThis !== component && newThis !== null) {
          if (process.env.NODE_ENV !== 'production') {
            warning(
              false,
              'bind(): React component methods may only be bound to the ' +
                'component instance. See %s',
              componentName
            );
          }
        } else if (!args.length) {
          if (process.env.NODE_ENV !== 'production') {
            warning(
              false,
              'bind(): You are binding a component method to the component. ' +
                'React does this for you automatically in a high-performance ' +
                'way, so you can safely remove this call. See %s',
              componentName
            );
          }
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }

  /**
   * Binds all auto-bound methods in a component.
   *
   * @param {object} component Component whose method is going to be bound.
   */
  function bindAutoBindMethods(component) {
    var pairs = component.__reactAutoBindPairs;
    for (var i = 0; i < pairs.length; i += 2) {
      var autoBindKey = pairs[i];
      var method = pairs[i + 1];
      component[autoBindKey] = bindAutoBindMethod(component, method);
    }
  }

  var IsMountedPreMixin = {
    componentDidMount: function() {
      this.__isMounted = true;
    }
  };

  var IsMountedPostMixin = {
    componentWillUnmount: function() {
      this.__isMounted = false;
    }
  };

  /**
   * Add more to the ReactClass base class. These are all legacy features and
   * therefore not already part of the modern ReactComponent.
   */
  var ReactClassMixin = {
    /**
     * TODO: This will be deprecated because state should always keep a consistent
     * type signature and the only use case for this, is to avoid that.
     */
    replaceState: function(newState, callback) {
      this.updater.enqueueReplaceState(this, newState, callback);
    },

    /**
     * Checks whether or not this composite component is mounted.
     * @return {boolean} True if mounted, false otherwise.
     * @protected
     * @final
     */
    isMounted: function() {
      if (process.env.NODE_ENV !== 'production') {
        warning(
          this.__didWarnIsMounted,
          '%s: isMounted is deprecated. Instead, make sure to clean up ' +
            'subscriptions and pending requests in componentWillUnmount to ' +
            'prevent memory leaks.',
          (this.constructor && this.constructor.displayName) ||
            this.name ||
            'Component'
        );
        this.__didWarnIsMounted = true;
      }
      return !!this.__isMounted;
    }
  };

  var ReactClassComponent = function() {};
  _assign(
    ReactClassComponent.prototype,
    ReactComponent.prototype,
    ReactClassMixin
  );

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  function createClass(spec) {
    // To keep our warnings more understandable, we'll use a little hack here to
    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
    // unnecessarily identify a class without displayName as 'Constructor'.
    var Constructor = identity(function(props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        warning(
          this instanceof Constructor,
          'Something is calling a React component directly. Use a factory or ' +
            'JSX instead. See: https://fb.me/react-legacyfactory'
        );
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (
          initialState === undefined &&
          this.getInitialState._isMockFunction
        ) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      _invariant(
        typeof initialState === 'object' && !Array.isArray(initialState),
        '%s.getInitialState(): must return an object or null',
        Constructor.displayName || 'ReactCompositeComponent'
      );

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
    mixSpecIntoComponent(Constructor, spec);
    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    _invariant(
      Constructor.prototype.render,
      'createClass(...): Class specification must implement a `render` method.'
    );

    if (process.env.NODE_ENV !== 'production') {
      warning(
        !Constructor.prototype.componentShouldUpdate,
        '%s has a method called ' +
          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
          'The name is phrased as a question because the function is ' +
          'expected to return a value.',
        spec.displayName || 'A component'
      );
      warning(
        !Constructor.prototype.componentWillRecieveProps,
        '%s has a method called ' +
          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
        spec.displayName || 'A component'
      );
      warning(
        !Constructor.prototype.UNSAFE_componentWillRecieveProps,
        '%s has a method called UNSAFE_componentWillRecieveProps(). ' +
          'Did you mean UNSAFE_componentWillReceiveProps()?',
        spec.displayName || 'A component'
      );
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  }

  return createClass;
}

module.exports = factory;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../process/browser.js */ 2)))

/***/ }),
/* 298 */
/*!************************************************!*\
  !*** ./src/blocks/post/post-carousel/block.js ***!
  \************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__edit__ = __webpack_require__(/*! ./edit */ 299);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss__ = __webpack_require__(/*! .././style.scss */ 63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__style_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss__ = __webpack_require__(/*! .././editor.scss */ 64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__editor_scss__);
/**
 * BLOCK: UAGb - post-carousel
 */

// Import block dependencies and components



//  Import CSS.



// Components
var __ = wp.i18n.__;

// Register block controls

var registerBlockType = wp.blocks.registerBlockType;

// Register the block

registerBlockType("uagb/post-carousel", {
	title: uagb_blocks_info.blocks["uagb/post-carousel"]["title"],
	description: uagb_blocks_info.blocks["uagb/post-carousel"]["description"],
	icon: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__["a" /* default */].post_carousel,
	category: uagb_blocks_info.category,
	keywords: [__("post"), __("carousel"), __("uagb")],
	edit: __WEBPACK_IMPORTED_MODULE_0__edit__["a" /* default */],
	// Render via PHP
	save: function save() {
		return null;
	}
});

/***/ }),
/* 299 */
/*!***********************************************!*\
  !*** ./src/blocks/post/post-carousel/edit.js ***!
  \***********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_get__ = __webpack_require__(/*! lodash/get */ 91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_get___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_get__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_isUndefined__ = __webpack_require__(/*! lodash/isUndefined */ 25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_isUndefined___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_isUndefined__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_pickBy__ = __webpack_require__(/*! lodash/pickBy */ 26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_pickBy___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash_pickBy__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__blog__ = __webpack_require__(/*! ./blog */ 300);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__styling__ = __webpack_require__(/*! .././styling */ 62);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * External dependencies
 */





// Import Post Components



var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var __ = wp.i18n.__;
var decodeEntities = wp.htmlEntities.decodeEntities;

var MAX_POSTS_COLUMNS = 4;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Placeholder = _wp$components.Placeholder,
    QueryControls = _wp$components.QueryControls,
    RangeControl = _wp$components.RangeControl,
    SelectControl = _wp$components.SelectControl,
    Spinner = _wp$components.Spinner,
    ToggleControl = _wp$components.ToggleControl,
    Toolbar = _wp$components.Toolbar,
    TabPanel = _wp$components.TabPanel,
    TextControl = _wp$components.TextControl;
var _wp$editor = wp.editor,
    InspectorControls = _wp$editor.InspectorControls,
    BlockAlignmentToolbar = _wp$editor.BlockAlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    ColorPalette = _wp$editor.ColorPalette,
    RichText = _wp$editor.RichText;
var withSelect = wp.data.withSelect;

var UAGBPostCarousel = function (_Component) {
	_inherits(UAGBPostCarousel, _Component);

	function UAGBPostCarousel() {
		_classCallCheck(this, UAGBPostCarousel);

		return _possibleConstructorReturn(this, (UAGBPostCarousel.__proto__ || Object.getPrototypeOf(UAGBPostCarousel)).apply(this, arguments));
	}

	_createClass(UAGBPostCarousel, [{
		key: "componentDidMount",
		value: function componentDidMount() {

			this.props.setAttributes({ block_id: this.props.clientId });

			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-post-carousel-style-" + this.props.clientId);
			document.head.appendChild($style);
		}
	}, {
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    categoriesList = _props.categoriesList,
			    setAttributes = _props.setAttributes,
			    latestPosts = _props.latestPosts;
			var block_id = attributes.block_id,
			    displayPostDate = attributes.displayPostDate,
			    displayPostComment = attributes.displayPostComment,
			    displayPostExcerpt = attributes.displayPostExcerpt,
			    displayPostAuthor = attributes.displayPostAuthor,
			    displayPostImage = attributes.displayPostImage,
			    imgSize = attributes.imgSize,
			    imgPosition = attributes.imgPosition,
			    displayPostLink = attributes.displayPostLink,
			    newTab = attributes.newTab,
			    ctaText = attributes.ctaText,
			    borderWidth = attributes.borderWidth,
			    borderStyle = attributes.borderStyle,
			    borderColor = attributes.borderColor,
			    borderHColor = attributes.borderHColor,
			    borderRadius = attributes.borderRadius,
			    btnVPadding = attributes.btnVPadding,
			    btnHPadding = attributes.btnHPadding,
			    align = attributes.align,
			    postLayout = attributes.postLayout,
			    columns = attributes.columns,
			    tcolumns = attributes.tcolumns,
			    mcolumns = attributes.mcolumns,
			    order = attributes.order,
			    orderBy = attributes.orderBy,
			    categories = attributes.categories,
			    postsToShow = attributes.postsToShow,
			    rowGap = attributes.rowGap,
			    columnGap = attributes.columnGap,
			    bgColor = attributes.bgColor,
			    contentPadding = attributes.contentPadding,
			    contentPaddingMobile = attributes.contentPaddingMobile,
			    titleColor = attributes.titleColor,
			    titleTag = attributes.titleTag,
			    titleFontSize = attributes.titleFontSize,
			    metaFontSize = attributes.metaFontSize,
			    excerptFontSize = attributes.excerptFontSize,
			    ctaFontSize = attributes.ctaFontSize,
			    metaColor = attributes.metaColor,
			    excerptColor = attributes.excerptColor,
			    ctaColor = attributes.ctaColor,
			    ctaBgColor = attributes.ctaBgColor,
			    ctaHColor = attributes.ctaHColor,
			    ctaBgHColor = attributes.ctaBgHColor,
			    arrowColor = attributes.arrowColor,
			    titleBottomSpace = attributes.titleBottomSpace,
			    metaBottomSpace = attributes.metaBottomSpace,
			    excerptBottomSpace = attributes.excerptBottomSpace,
			    autoplay = attributes.autoplay,
			    autoplaySpeed = attributes.autoplaySpeed,
			    pauseOnHover = attributes.pauseOnHover,
			    infiniteLoop = attributes.infiniteLoop,
			    transitionSpeed = attributes.transitionSpeed,
			    arrowDots = attributes.arrowDots,
			    arrowSize = attributes.arrowSize,
			    arrowBorderSize = attributes.arrowBorderSize,
			    arrowBorderRadius = attributes.arrowBorderRadius,
			    excerptLength = attributes.excerptLength,
			    overlayOpacity = attributes.overlayOpacity,
			    bgOverlayColor = attributes.bgOverlayColor,
			    linkBox = attributes.linkBox;


			var hoverSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Hover Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaHColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: ctaHColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ ctaHColor: colorValue });
					},
					allowReset: true
				}),
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Background Hover Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaBgHColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: ctaBgHColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ ctaBgHColor: colorValue });
					},
					allowReset: true
				}),
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Border Hover Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: borderHColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: borderHColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ borderHColor: colorValue });
					},
					allowReset: true
				})
			);

			var normalSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: ctaColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ ctaColor: colorValue });
					},
					allowReset: true
				}),
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Background Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaBgColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: ctaBgColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ ctaBgColor: colorValue });
					},
					allowReset: true
				}),
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Border Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: borderColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: borderColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ borderColor: colorValue });
					},
					allowReset: true
				})
			);

			var inspectorControls = wp.element.createElement(
				InspectorControls,
				null,
				wp.element.createElement(
					PanelBody,
					{ title: __("General") },
					wp.element.createElement(QueryControls, _extends({ order: order, orderBy: orderBy }, {
						numberOfItems: postsToShow,
						categoriesList: categoriesList,
						selectedCategoryId: categories,
						onOrderChange: function onOrderChange(value) {
							return setAttributes({ order: value });
						},
						onOrderByChange: function onOrderByChange(value) {
							return setAttributes({ orderBy: value });
						},
						onCategoryChange: function onCategoryChange(value) {
							return setAttributes({ categories: "" !== value ? value : undefined });
						},
						onNumberOfItemsChange: function onNumberOfItemsChange(value) {
							return setAttributes({ postsToShow: value });
						}
					})),
					wp.element.createElement(RangeControl, {
						label: __("Columns"),
						value: columns,
						onChange: function onChange(value) {
							return setAttributes({ columns: value });
						},
						min: 1,
						max: !hasPosts ? MAX_POSTS_COLUMNS : Math.min(MAX_POSTS_COLUMNS, latestPosts.length)
					}),
					wp.element.createElement(RangeControl, {
						label: __("Columns (Tablet)"),
						value: tcolumns,
						onChange: function onChange(value) {
							return setAttributes({ tcolumns: value });
						},
						min: 1,
						max: !hasPosts ? MAX_POSTS_COLUMNS : Math.min(MAX_POSTS_COLUMNS, latestPosts.length)
					}),
					wp.element.createElement(RangeControl, {
						label: __("Columns (Mobile)"),
						value: mcolumns,
						onChange: function onChange(value) {
							return setAttributes({ mcolumns: value });
						},
						min: 1,
						max: !hasPosts ? MAX_POSTS_COLUMNS : Math.min(MAX_POSTS_COLUMNS, latestPosts.length)
					})
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Carousel"), initialOpen: false },
					wp.element.createElement(ToggleControl, {
						label: __("Pause On Hover"),
						checked: pauseOnHover,
						onChange: function onChange(value) {
							return setAttributes({ pauseOnHover: !pauseOnHover });
						}
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Autoplay"),
						checked: autoplay,
						onChange: function onChange(value) {
							return setAttributes({ autoplay: !autoplay });
						}
					}),
					autoplay == true && wp.element.createElement(RangeControl, {
						label: __("Autoplay Speed (ms)"),
						value: autoplaySpeed,
						onChange: function onChange(value) {
							return setAttributes({ autoplaySpeed: value });
						},
						min: 100,
						max: 10000
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Infinite Loop"),
						checked: infiniteLoop,
						onChange: function onChange(value) {
							return setAttributes({ infiniteLoop: !infiniteLoop });
						}
					}),
					wp.element.createElement(RangeControl, {
						label: __("Transition Speed (ms)"),
						value: transitionSpeed,
						onChange: function onChange(value) {
							return setAttributes({ transitionSpeed: value });
						},
						min: 100,
						max: 5000
					}),
					wp.element.createElement(SelectControl, {
						label: __("Show Arrows & Dots"),
						value: arrowDots,
						onChange: function onChange(value) {
							return setAttributes({ arrowDots: value });
						},
						options: [{ value: "arrows", label: __("Only Arrows") }, { value: "dots", label: __("Only Dots") }, { value: "arrows_dots", label: __("Both Arrows & Dots") }]
					}),
					"dots" != arrowDots && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(RangeControl, {
							label: __("Arrow Size"),
							value: arrowSize,
							onChange: function onChange(value) {
								return setAttributes({ arrowSize: value });
							},
							min: 0,
							max: 50
						}),
						wp.element.createElement(RangeControl, {
							label: __("Arrow Border Size"),
							value: arrowBorderSize,
							onChange: function onChange(value) {
								return setAttributes({ arrowBorderSize: value });
							},
							min: 0,
							max: 50
						}),
						wp.element.createElement(RangeControl, {
							label: __("Arrow Border Radius"),
							value: arrowBorderRadius,
							onChange: function onChange(value) {
								return setAttributes({ arrowBorderRadius: value });
							},
							min: 0,
							max: 50
						})
					)
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Image"), initialOpen: false },
					wp.element.createElement(ToggleControl, {
						label: __("Show Featured Image"),
						checked: displayPostImage,
						onChange: function onChange(value) {
							return setAttributes({ displayPostImage: !displayPostImage });
						}
					}),
					displayPostImage == true && wp.element.createElement(SelectControl, {
						label: __("Image Sizes"),
						value: imgSize,
						onChange: function onChange(value) {
							return setAttributes({ imgSize: value });
						},
						options: [{ value: "thumbnail", label: __("Thumbnail") }, { value: "medium", label: __("Medium") }, { value: "medium_large", label: __("Medium Large") }, { value: "large", label: __("Large") }]
					}),
					displayPostImage == true && wp.element.createElement(SelectControl, {
						label: __("Image Position"),
						value: imgPosition,
						onChange: function onChange(value) {
							return setAttributes({ imgPosition: value });
						},
						options: [{ value: "top", label: __("Top") }, { value: "background", label: __("Background") }]
					}),
					displayPostImage == true && imgPosition == "background" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Background Overlay Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: bgOverlayColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: bgOverlayColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ bgOverlayColor: colorValue });
							},
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Overlay Opacity"),
							value: overlayOpacity,
							onChange: function onChange(value) {
								return setAttributes({ overlayOpacity: value });
							},
							min: 0,
							max: 100,
							allowReset: true
						}),
						wp.element.createElement(ToggleControl, {
							label: __("Link Complete Box"),
							checked: linkBox,
							onChange: function onChange(value) {
								return setAttributes({ linkBox: !linkBox });
							}
						})
					)
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Content"), initialOpen: false },
					wp.element.createElement(ToggleControl, {
						label: __("Show Author"),
						checked: displayPostAuthor,
						onChange: function onChange(value) {
							return setAttributes({ displayPostAuthor: !displayPostAuthor });
						}
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Show Date"),
						checked: displayPostDate,
						onChange: function onChange(value) {
							return setAttributes({ displayPostDate: !displayPostDate });
						}
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Show Comment"),
						checked: displayPostComment,
						onChange: function onChange(value) {
							return setAttributes({ displayPostComment: !displayPostComment });
						}
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Show Excerpt"),
						checked: displayPostExcerpt,
						onChange: function onChange(value) {
							return setAttributes({ displayPostExcerpt: !displayPostExcerpt });
						}
					}),
					displayPostExcerpt && wp.element.createElement(RangeControl, {
						label: __("Excerpt Length"),
						value: excerptLength,
						onChange: function onChange(value) {
							return setAttributes({ excerptLength: value });
						},
						min: 1,
						max: 50,
						allowReset: true
					})
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Read More Link"), initialOpen: false },
					wp.element.createElement(ToggleControl, {
						label: __("Show Read More Link"),
						checked: displayPostLink,
						onChange: function onChange(value) {
							return setAttributes({ displayPostLink: !displayPostLink });
						}
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Open links in New Tab"),
						checked: newTab,
						onChange: function onChange(value) {
							return setAttributes({ newTab: !newTab });
						}
					}),
					displayPostLink && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(TextControl, {
							label: __("Text"),
							value: ctaText,
							onChange: function onChange(value) {
								return setAttributes({ ctaText: value });
							}
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Text Font Size"),
							value: ctaFontSize,
							onChange: function onChange(value) {
								return setAttributes({ ctaFontSize: value });
							},
							min: 1,
							max: 50,
							beforeIcon: "editor-textcolor",
							allowReset: true
						}),
						wp.element.createElement(SelectControl, {
							label: __("Border Style"),
							value: borderStyle,
							onChange: function onChange(value) {
								return setAttributes({ borderStyle: value });
							},
							options: [{ value: "none", label: __("None") }, { value: "solid", label: __("Solid") }, { value: "dashed", label: __("Dashed") }, { value: "dotted", label: __("Dotted") }, { value: "double", label: __("Double") }]
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Border"),
							value: borderWidth,
							onChange: function onChange(value) {
								return setAttributes({ borderWidth: value });
							},
							min: 0,
							max: 10,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Border Radius"),
							value: borderRadius,
							onChange: function onChange(value) {
								return setAttributes({ borderRadius: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Vertical Padding"),
							value: btnVPadding,
							onChange: function onChange(value) {
								return setAttributes({ btnVPadding: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Horizontal Padding"),
							value: btnHPadding,
							onChange: function onChange(value) {
								return setAttributes({ btnHPadding: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						}),
						wp.element.createElement(
							"p",
							{ className: "uagb-inspect-tab-title" },
							wp.element.createElement(
								"strong",
								null,
								__("Colors")
							)
						),
						wp.element.createElement(
							TabPanel,
							{ className: "uagb-inspect-tabs uagb-inspect-tabs-col-2",
								activeClass: "active-tab",
								tabs: [{
									name: "normal",
									title: __("Normal"),
									className: "uagb-normal-tab"
								}, {
									name: "hover",
									title: __("Hover"),
									className: "uagb-hover-tab"
								}] },
							function (tabName) {
								var tabout = void 0;
								if ("hover" === tabName.name) {
									tabout = hoverSettings;
								} else {
									tabout = normalSettings;
								}
								return wp.element.createElement(
									"div",
									null,
									tabout
								);
							}
						)
					)
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Typography"), initialOpen: false },
					wp.element.createElement(SelectControl, {
						label: __("Title Tag"),
						value: titleTag,
						onChange: function onChange(value) {
							return setAttributes({ titleTag: value });
						},
						options: [{ value: "h1", label: __("H1") }, { value: "h2", label: __("H2") }, { value: "h3", label: __("H3") }, { value: "h4", label: __("H4") }, { value: "h5", label: __("H5") }, { value: "h6", label: __("H6") }]
					}),
					wp.element.createElement(RangeControl, {
						label: __("Title Font Size"),
						value: titleFontSize,
						onChange: function onChange(value) {
							return setAttributes({ titleFontSize: value });
						},
						min: 1,
						max: 50,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					(displayPostAuthor || displayPostDate || displayPostComment) && wp.element.createElement(RangeControl, {
						label: __("Meta Font Size"),
						value: metaFontSize,
						onChange: function onChange(value) {
							return setAttributes({ metaFontSize: value });
						},
						min: 1,
						max: 50,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					displayPostExcerpt && wp.element.createElement(RangeControl, {
						label: __("Excerpt Font Size"),
						value: excerptFontSize,
						onChange: function onChange(value) {
							return setAttributes({ excerptFontSize: value });
						},
						min: 1,
						max: 50,
						beforeIcon: "editor-textcolor",
						allowReset: true
					})
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Colors"), initialOpen: false },
					imgPosition == "top" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Blog Background Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: bgColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: bgColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ bgColor: colorValue });
							},
							allowReset: true
						})
					),
					wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Title Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: titleColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: titleColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ titleColor: colorValue });
							},
							allowReset: true
						})
					),
					wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Meta Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: metaColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: metaColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ metaColor: colorValue });
							}
						})
					),
					displayPostExcerpt == true && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Excerpt Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: excerptColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: excerptColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ excerptColor: colorValue });
							},
							allowReset: true
						})
					),
					wp.element.createElement(
						"p",
						{ className: "uagb-setting-label" },
						__("Arrows & Dots Color"),
						wp.element.createElement(
							"span",
							{ className: "components-base-control__label" },
							wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: arrowColor } })
						)
					),
					wp.element.createElement(ColorPalette, {
						value: arrowColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ arrowColor: colorValue });
						},
						allowReset: true
					})
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Spacing"), initialOpen: false },
					wp.element.createElement(RangeControl, {
						label: __("Row Gap"),
						value: rowGap,
						onChange: function onChange(value) {
							return setAttributes({ rowGap: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Gap Between Posts & Dots"),
						value: columnGap,
						onChange: function onChange(value) {
							return setAttributes({ columnGap: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Content Padding"),
						value: contentPadding,
						onChange: function onChange(value) {
							return setAttributes({ contentPadding: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Content Padding (Mobile)"),
						value: contentPaddingMobile,
						onChange: function onChange(value) {
							return setAttributes({ contentPaddingMobile: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Title Bottom Spacing"),
						value: titleBottomSpace,
						onChange: function onChange(value) {
							return setAttributes({ titleBottomSpace: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Meta Bottom Spacing"),
						value: metaBottomSpace,
						onChange: function onChange(value) {
							return setAttributes({ metaBottomSpace: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Excerpt Bottom Spacing"),
						value: excerptBottomSpace,
						onChange: function onChange(value) {
							return setAttributes({ excerptBottomSpace: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					})
				)
			);

			var element = document.getElementById("uagb-post-carousel-style-" + this.props.clientId);

			var css = "";

			if (null != element && "undefined" != typeof element) {
				css = Object(__WEBPACK_IMPORTED_MODULE_4__styling__["a" /* default */])(this.props, "uagb-post__carousel");
				css += "#uagb-post__carousel-" + this.props.clientId + ".uagb-post-grid ul.slick-dots li.slick-active button:before, #uagb-post__carousel-" + this.props.clientId + ".uagb-slick-carousel ul.slick-dots li button:before { color: " + arrowColor + "; }";
				element.innerHTML = css;
			}

			var hasPosts = Array.isArray(latestPosts) && latestPosts.length;

			if (!hasPosts) {
				return wp.element.createElement(
					Fragment,
					null,
					inspectorControls,
					wp.element.createElement(
						Placeholder,
						{
							icon: "admin-post",
							label: uagb_blocks_info.blocks["uagb/post-carousel"]["title"]
						},
						!Array.isArray(latestPosts) ? wp.element.createElement(Spinner, null) : __("No posts found.")
					)
				);
			}

			return wp.element.createElement(
				Fragment,
				null,
				inspectorControls,
				wp.element.createElement(
					BlockControls,
					null,
					wp.element.createElement(BlockAlignmentToolbar, {
						value: align,
						onChange: function onChange(value) {
							setAttributes({ align: value });
						},
						controls: ["left", "center", "right"]
					})
				),
				wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__blog__["a" /* default */], { attributes: attributes, className: this.props.className, latestPosts: latestPosts, block_id: this.props.clientId })
			);
		}
	}]);

	return UAGBPostCarousel;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (withSelect(function (select, props) {
	var _props$attributes = props.attributes,
	    categories = _props$attributes.categories,
	    postsToShow = _props$attributes.postsToShow,
	    order = _props$attributes.order,
	    orderBy = _props$attributes.orderBy;

	var _select = select("core"),
	    getEntityRecords = _select.getEntityRecords;

	var latestPostsQuery = __WEBPACK_IMPORTED_MODULE_2_lodash_pickBy___default()({
		categories: categories,
		order: order,
		orderby: orderBy,
		per_page: postsToShow
	}, function (value) {
		return !__WEBPACK_IMPORTED_MODULE_1_lodash_isUndefined___default()(value);
	});
	var categoriesListQuery = {
		per_page: 100
	};
	return {
		latestPosts: getEntityRecords("postType", "post", latestPostsQuery),
		categoriesList: getEntityRecords("taxonomy", "category", categoriesListQuery)
	};
})(UAGBPostCarousel));

/***/ }),
/* 300 */
/*!***********************************************!*\
  !*** ./src/blocks/post/post-carousel/blog.js ***!
  \***********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_slick__ = __webpack_require__(/*! react-slick */ 106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_slick___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_slick__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_FeaturedImage__ = __webpack_require__(/*! .././components/FeaturedImage */ 56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Title__ = __webpack_require__(/*! .././components/Title */ 57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Meta__ = __webpack_require__(/*! .././components/Meta */ 58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_Excerpt__ = __webpack_require__(/*! .././components/Excerpt */ 59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_Button__ = __webpack_require__(/*! .././components/Button */ 61);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }









var Blog = function (_React$Component) {
	_inherits(Blog, _React$Component);

	function Blog() {
		_classCallCheck(this, Blog);

		return _possibleConstructorReturn(this, (Blog.__proto__ || Object.getPrototypeOf(Blog)).apply(this, arguments));
	}

	_createClass(Blog, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    className = _props.className,
			    latestPosts = _props.latestPosts,
			    block_id = _props.block_id;
			var displayPostImage = attributes.displayPostImage,
			    columns = attributes.columns,
			    tcolumns = attributes.tcolumns,
			    mcolumns = attributes.mcolumns,
			    imgPosition = attributes.imgPosition,
			    postsToShow = attributes.postsToShow,
			    rowGap = attributes.rowGap,
			    columnGap = attributes.columnGap,
			    bgColor = attributes.bgColor,
			    contentPadding = attributes.contentPadding,
			    autoplay = attributes.autoplay,
			    pauseOnHover = attributes.pauseOnHover,
			    transitionSpeed = attributes.transitionSpeed,
			    infiniteLoop = attributes.infiniteLoop,
			    arrowSize = attributes.arrowSize,
			    arrowBorderSize = attributes.arrowBorderSize,
			    arrowBorderRadius = attributes.arrowBorderRadius,
			    arrowColor = attributes.arrowColor,
			    arrowDots = attributes.arrowDots;

			// Removing posts from display should be instant.

			var displayPosts = latestPosts.length > postsToShow ? latestPosts.slice(0, postsToShow) : latestPosts;

			function NextArrow(props) {

				return wp.element.createElement(
					"button",
					{ type: "button", "data-role": "none", className: "slick-next slick-arrow", "aria-label": "Next", tabIndex: "0", role: "button", style: { "borderColor": arrowColor, "borderRadius": arrowBorderRadius, "borderWidth": arrowBorderSize } },
					wp.element.createElement("span", { className: "fas fa-angle-right", style: { "fontSize": props.arrowSize, "width": props.arrowSize, "height": props.arrowSize, "color": arrowColor } })
				);
			}

			function PrevArrow(props) {

				return wp.element.createElement(
					"button",
					{ type: "button", "data-role": "none", className: "slick-prev slick-arrow", "aria-label": "Previous", tabIndex: "0", role: "button", style: { "borderColor": arrowColor, "borderRadius": arrowBorderRadius, "borderWidth": arrowBorderSize } },
					wp.element.createElement("span", { className: "fas fa-angle-left", style: { "fontSize": props.arrowSize, "width": props.arrowSize, "height": props.arrowSize, "color": arrowColor } })
				);
			}

			var dots = "dots" == arrowDots || "arrows_dots" == arrowDots ? true : false;
			var arrows = "arrows" == arrowDots || "arrows_dots" == arrowDots ? true : false;

			var settings = {
				slidesToShow: columns,
				slidesToScroll: 1,
				autoplaySpeed: 2000,
				autoplay: autoplay,
				infinite: infiniteLoop,
				pauseOnHover: pauseOnHover,
				speed: transitionSpeed,
				arrows: arrows,
				dots: dots,
				rtl: false,
				nextArrow: wp.element.createElement(NextArrow, { arrowSize: arrowSize }),
				prevArrow: wp.element.createElement(PrevArrow, { arrowSize: arrowSize }),
				responsive: [{
					breakpoint: 1024,
					settings: {
						slidesToShow: tcolumns,
						slidesToScroll: 1
					}
				}, {
					breakpoint: 767,
					settings: {
						slidesToShow: mcolumns,
						slidesToScroll: 1
					}
				}]
			};

			var all_posts = displayPosts.map(function (post, i) {
				return wp.element.createElement(
					"article",
					{ key: i },
					wp.element.createElement(
						"div",
						{ className: "uagb-post__inner-wrap" },
						wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_FeaturedImage__["a" /* default */], { post: post, attributes: attributes }),
						wp.element.createElement(
							"div",
							{ className: "uagb-post__text" },
							wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_Title__["a" /* default */], { post: post, attributes: attributes }),
							wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_Meta__["a" /* default */], { post: post, attributes: attributes }),
							wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_Excerpt__["a" /* default */], { post: post, attributes: attributes }),
							wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_Button__["a" /* default */], { post: post, attributes: attributes })
						)
					)
				);
			});

			if (columns >= displayPosts.length) {
				return wp.element.createElement(
					"div",
					{
						className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-post-grid", "uagb-post__arrow-outside", "uagb-post__image-position-" + imgPosition),
						"data-blog-id": block_id,
						id: "uagb-post__carousel-" + block_id
					},
					wp.element.createElement(
						"div",
						{
							className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("is-carousel", "uagb-post__columns-" + columns, "uagb-post__columns-tablet-" + tcolumns, "uagb-post__columns-mobile-" + mcolumns, "uagb-post__items")
						},
						all_posts
					)
				);
			} else {

				var style_str = "";

				if ("dots" == arrowDots) {
					style_str = { padding: 0 };
				}

				return wp.element.createElement(
					"div",
					{
						className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-post-grid", "uagb-post__arrow-outside", "uagb-slick-carousel", "uagb-post__image-position-" + imgPosition),
						"data-blog-id": block_id,
						id: "uagb-post__carousel-" + block_id,
						style: "dots" == arrowDots ? { padding: 0 } : {}
					},
					wp.element.createElement(
						__WEBPACK_IMPORTED_MODULE_1_react_slick___default.a,
						_extends({
							className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("is-carousel", "uagb-post__columns-" + columns, "uagb-post__items")
						}, settings),
						all_posts
					)
				);
			}
		}
	}]);

	return Blog;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Blog);

/***/ }),
/* 301 */
/*!************************************************!*\
  !*** ./node_modules/react-slick/lib/slider.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(/*! react */ 3);

var _react2 = _interopRequireDefault(_react);

var _innerSlider = __webpack_require__(/*! ./inner-slider */ 302);

var _json2mq = __webpack_require__(/*! json2mq */ 317);

var _json2mq2 = _interopRequireDefault(_json2mq);

var _defaultProps = __webpack_require__(/*! ./default-props */ 319);

var _defaultProps2 = _interopRequireDefault(_defaultProps);

var _innerSliderUtils = __webpack_require__(/*! ./utils/innerSliderUtils */ 42);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var enquire = (0, _innerSliderUtils.canUseDOM)() && __webpack_require__(/*! enquire.js */ 320);

var Slider = function (_React$Component) {
  _inherits(Slider, _React$Component);

  function Slider(props) {
    _classCallCheck(this, Slider);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.innerSliderRefHandler = function (ref) {
      return _this.innerSlider = ref;
    };

    _this.slickPrev = function () {
      return _this.innerSlider.slickPrev();
    };

    _this.slickNext = function () {
      return _this.innerSlider.slickNext();
    };

    _this.slickGoTo = function (slide) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      return _this.innerSlider.slickGoTo(slide, dontAnimate);
    };

    _this.slickPause = function () {
      return _this.innerSlider.pause("paused");
    };

    _this.slickPlay = function () {
      return _this.innerSlider.autoPlay("play");
    };

    _this.state = {
      breakpoint: null
    };
    _this._responsiveMediaHandlers = [];
    return _this;
  }

  Slider.prototype.media = function media(query, handler) {
    // javascript handler for  css media query
    enquire.register(query, handler);
    this._responsiveMediaHandlers.push({ query: query, handler: handler });
  };

  // handles responsive breakpoints


  Slider.prototype.componentWillMount = function componentWillMount() {
    var _this2 = this;

    // performance monitoring
    //if (process.env.NODE_ENV !== 'production') {
    //const { whyDidYouUpdate } = require('why-did-you-update')
    //whyDidYouUpdate(React)
    //}
    if (this.props.responsive) {
      var breakpoints = this.props.responsive.map(function (breakpt) {
        return breakpt.breakpoint;
      });
      // sort them in increasing order of their numerical value
      breakpoints.sort(function (x, y) {
        return x - y;
      });

      breakpoints.forEach(function (breakpoint, index) {
        // media query for each breakpoint
        var bQuery = void 0;
        if (index === 0) {
          bQuery = (0, _json2mq2.default)({ minWidth: 0, maxWidth: breakpoint });
        } else {
          bQuery = (0, _json2mq2.default)({
            minWidth: breakpoints[index - 1] + 1,
            maxWidth: breakpoint
          });
        }
        // when not using server side rendering
        (0, _innerSliderUtils.canUseDOM)() && _this2.media(bQuery, function () {
          _this2.setState({ breakpoint: breakpoint });
        });
      });

      // Register media query for full screen. Need to support resize from small to large
      // convert javascript object to media query string
      var query = (0, _json2mq2.default)({ minWidth: breakpoints.slice(-1)[0] });

      (0, _innerSliderUtils.canUseDOM)() && this.media(query, function () {
        _this2.setState({ breakpoint: null });
      });
    }
  };

  Slider.prototype.componentWillUnmount = function componentWillUnmount() {
    this._responsiveMediaHandlers.forEach(function (obj) {
      enquire.unregister(obj.query, obj.handler);
    });
  };

  Slider.prototype.render = function render() {
    var _this3 = this;

    var settings;
    var newProps;
    if (this.state.breakpoint) {
      newProps = this.props.responsive.filter(function (resp) {
        return resp.breakpoint === _this3.state.breakpoint;
      });
      settings = newProps[0].settings === "unslick" ? "unslick" : _extends({}, _defaultProps2.default, this.props, newProps[0].settings);
    } else {
      settings = _extends({}, _defaultProps2.default, this.props);
    }

    // force scrolling by one if centerMode is on
    if (settings.centerMode) {
      if (settings.slidesToScroll > 1 && process.env.NODE_ENV !== "production") {
        console.warn("slidesToScroll should be equal to 1 in centerMode, you are using " + settings.slidesToScroll);
      }
      settings.slidesToScroll = 1;
    }
    // force showing one slide and scrolling by one if the fade mode is on
    if (settings.fade) {
      if (settings.slidesToShow > 1 && process.env.NODE_ENV !== "production") {
        console.warn("slidesToShow should be equal to 1 when fade is true, you're using " + settings.slidesToShow);
      }
      if (settings.slidesToScroll > 1 && process.env.NODE_ENV !== "production") {
        console.warn("slidesToScroll should be equal to 1 when fade is true, you're using " + settings.slidesToScroll);
      }
      settings.slidesToShow = 1;
      settings.slidesToScroll = 1;
    }

    // makes sure that children is an array, even when there is only 1 child
    var children = _react2.default.Children.toArray(this.props.children);

    // Children may contain false or null, so we should filter them
    // children may also contain string filled with spaces (in certain cases where we use jsx strings)
    children = children.filter(function (child) {
      if (typeof child === "string") {
        return !!child.trim();
      }
      return !!child;
    });

    // rows and slidesPerRow logic is handled here
    if (settings.variableWidth && (settings.rows > 1 || settings.slidesPerRow > 1)) {
      console.warn("variableWidth is not supported in case of rows > 1 or slidesPerRow > 1");
      settings.variableWidth = false;
    }
    var newChildren = [];
    var currentWidth = null;
    for (var i = 0; i < children.length; i += settings.rows * settings.slidesPerRow) {
      var newSlide = [];
      for (var j = i; j < i + settings.rows * settings.slidesPerRow; j += settings.slidesPerRow) {
        var row = [];
        for (var k = j; k < j + settings.slidesPerRow; k += 1) {
          if (settings.variableWidth && children[k].props.style) {
            currentWidth = children[k].props.style.width;
          }
          if (k >= children.length) break;
          row.push(_react2.default.cloneElement(children[k], {
            key: 100 * i + 10 * j + k,
            tabIndex: -1,
            style: {
              width: 100 / settings.slidesPerRow + "%",
              display: "inline-block"
            }
          }));
        }
        newSlide.push(_react2.default.createElement(
          "div",
          { key: 10 * i + j },
          row
        ));
      }
      if (settings.variableWidth) {
        newChildren.push(_react2.default.createElement(
          "div",
          { key: i, style: { width: currentWidth } },
          newSlide
        ));
      } else {
        newChildren.push(_react2.default.createElement(
          "div",
          { key: i },
          newSlide
        ));
      }
    }

    if (settings === "unslick") {
      var className = "regular slider " + (this.props.className || "");
      return _react2.default.createElement(
        "div",
        { className: className },
        newChildren
      );
    } else if (newChildren.length <= settings.slidesToShow) {
      settings.unslick = true;
    }
    return _react2.default.createElement(
      _innerSlider.InnerSlider,
      _extends({ ref: this.innerSliderRefHandler }, settings),
      newChildren
    );
  };

  return Slider;
}(_react2.default.Component);

exports.default = Slider;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 2)))

/***/ }),
/* 302 */
/*!******************************************************!*\
  !*** ./node_modules/react-slick/lib/inner-slider.js ***!
  \******************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.InnerSlider = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(/*! react */ 3);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(/*! react-dom */ 24);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _initialState = __webpack_require__(/*! ./initial-state */ 311);

var _initialState2 = _interopRequireDefault(_initialState);

var _lodash = __webpack_require__(/*! lodash.debounce */ 312);

var _lodash2 = _interopRequireDefault(_lodash);

var _classnames = __webpack_require__(/*! classnames */ 0);

var _classnames2 = _interopRequireDefault(_classnames);

var _innerSliderUtils = __webpack_require__(/*! ./utils/innerSliderUtils */ 42);

var _track = __webpack_require__(/*! ./track */ 313);

var _dots = __webpack_require__(/*! ./dots */ 314);

var _arrows = __webpack_require__(/*! ./arrows */ 315);

var _resizeObserverPolyfill = __webpack_require__(/*! resize-observer-polyfill */ 316);

var _resizeObserverPolyfill2 = _interopRequireDefault(_resizeObserverPolyfill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InnerSlider = exports.InnerSlider = function (_React$Component) {
  _inherits(InnerSlider, _React$Component);

  function InnerSlider(props) {
    _classCallCheck(this, InnerSlider);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.listRefHandler = function (ref) {
      return _this.list = ref;
    };

    _this.trackRefHandler = function (ref) {
      return _this.track = ref;
    };

    _this.adaptHeight = function () {
      if (_this.props.adaptiveHeight && _this.list) {
        var elem = _this.list.querySelector("[data-index=\"" + _this.state.currentSlide + "\"]");
        _this.list.style.height = (0, _innerSliderUtils.getHeight)(elem) + "px";
      }
    };

    _this.componentWillMount = function () {
      _this.ssrInit();
      _this.props.onInit && _this.props.onInit();
      if (_this.props.lazyLoad) {
        var slidesToLoad = (0, _innerSliderUtils.getOnDemandLazySlides)(_extends({}, _this.props, _this.state));
        if (slidesToLoad.length > 0) {
          _this.setState(function (prevState) {
            return {
              lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)
            };
          });
          if (_this.props.onLazyLoad) {
            _this.props.onLazyLoad(slidesToLoad);
          }
        }
      }
    };

    _this.componentDidMount = function () {
      var spec = _extends({ listRef: _this.list, trackRef: _this.track }, _this.props);
      _this.updateState(spec, true, function () {
        _this.adaptHeight();
        _this.props.autoplay && _this.autoPlay("update");
      });
      if (_this.props.lazyLoad === "progressive") {
        _this.lazyLoadTimer = setInterval(_this.progressiveLazyLoad, 1000);
      }
      _this.ro = new _resizeObserverPolyfill2.default(function () {
        if (_this.state.animating) {
          _this.onWindowResized(false); // don't set trackStyle hence don't break animation
          _this.callbackTimers.push(setTimeout(function () {
            return _this.onWindowResized();
          }, _this.props.speed));
        } else {
          _this.onWindowResized();
        }
      });
      _this.ro.observe(_this.list);
      Array.prototype.forEach.call(document.querySelectorAll(".slick-slide"), function (slide) {
        slide.onfocus = _this.props.pauseOnFocus ? _this.onSlideFocus : null;
        slide.onblur = _this.props.pauseOnFocus ? _this.onSlideBlur : null;
      });
      // To support server-side rendering
      if (!window) {
        return;
      }
      if (window.addEventListener) {
        window.addEventListener("resize", _this.onWindowResized);
      } else {
        window.attachEvent("onresize", _this.onWindowResized);
      }
    };

    _this.componentWillUnmount = function () {
      if (_this.animationEndCallback) {
        clearTimeout(_this.animationEndCallback);
      }
      if (_this.lazyLoadTimer) {
        clearInterval(_this.lazyLoadTimer);
      }
      if (_this.callbackTimers.length) {
        _this.callbackTimers.forEach(function (timer) {
          return clearTimeout(timer);
        });
        _this.callbackTimers = [];
      }
      if (window.addEventListener) {
        window.removeEventListener("resize", _this.onWindowResized);
      } else {
        window.detachEvent("onresize", _this.onWindowResized);
      }
      if (_this.autoplayTimer) {
        clearInterval(_this.autoplayTimer);
      }
    };

    _this.componentWillReceiveProps = function (nextProps) {
      var spec = _extends({
        listRef: _this.list,
        trackRef: _this.track
      }, nextProps, _this.state);
      var setTrackStyle = false;
      for (var _iterator = Object.keys(_this.props), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var key = _ref;

        if (!nextProps.hasOwnProperty(key)) {
          setTrackStyle = true;
          break;
        }
        if (_typeof(nextProps[key]) === "object" || typeof nextProps[key] === "function") {
          continue;
        }
        if (nextProps[key] !== _this.props[key]) {
          setTrackStyle = true;
          break;
        }
      }
      _this.updateState(spec, setTrackStyle, function () {
        if (_this.state.currentSlide >= _react2.default.Children.count(nextProps.children)) {
          _this.changeSlide({
            message: "index",
            index: _react2.default.Children.count(nextProps.children) - nextProps.slidesToShow,
            currentSlide: _this.state.currentSlide
          });
        }
        if (nextProps.autoplay) {
          _this.autoPlay("update");
        } else {
          _this.pause("paused");
        }
      });
    };

    _this.componentDidUpdate = function () {
      _this.checkImagesLoad();
      _this.props.onReInit && _this.props.onReInit();
      if (_this.props.lazyLoad) {
        var slidesToLoad = (0, _innerSliderUtils.getOnDemandLazySlides)(_extends({}, _this.props, _this.state));
        if (slidesToLoad.length > 0) {
          _this.setState(function (prevState) {
            return {
              lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)
            };
          });
          if (_this.props.onLazyLoad) {
            _this.props.onLazyLoad(slidesToLoad);
          }
        }
      }
      // if (this.props.onLazyLoad) {
      //   this.props.onLazyLoad([leftMostSlide])
      // }
      _this.adaptHeight();
    };

    _this.onWindowResized = function (setTrackStyle) {
      if (_this.debouncedResize) _this.debouncedResize.cancel();
      _this.debouncedResize = (0, _lodash2.default)(function () {
        return _this.resizeWindow(setTrackStyle);
      }, 50);
      _this.debouncedResize();
    };

    _this.resizeWindow = function () {
      var setTrackStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      if (!_reactDom2.default.findDOMNode(_this.track)) return;
      var spec = _extends({
        listRef: _this.list,
        trackRef: _this.track
      }, _this.props, _this.state);
      _this.updateState(spec, setTrackStyle, function () {
        if (_this.props.autoplay) _this.autoPlay("update");else _this.pause("paused");
      });
      // animating state should be cleared while resizing, otherwise autoplay stops working
      _this.setState({
        animating: false
      });
      clearTimeout(_this.animationEndCallback);
      delete _this.animationEndCallback;
    };

    _this.updateState = function (spec, setTrackStyle, callback) {
      var updatedState = (0, _innerSliderUtils.initializedState)(spec);
      spec = _extends({}, spec, updatedState, { slideIndex: updatedState.currentSlide });
      var targetLeft = (0, _innerSliderUtils.getTrackLeft)(spec);
      spec = _extends({}, spec, { left: targetLeft });
      var trackStyle = (0, _innerSliderUtils.getTrackCSS)(spec);
      if (setTrackStyle || _react2.default.Children.count(_this.props.children) !== _react2.default.Children.count(spec.children)) {
        updatedState["trackStyle"] = trackStyle;
      }
      _this.setState(updatedState, callback);
    };

    _this.ssrInit = function () {
      if (_this.props.variableWidth) {
        var _trackWidth = 0,
            _trackLeft = 0;
        var childrenWidths = [];
        var preClones = (0, _innerSliderUtils.getPreClones)(_extends({}, _this.props, _this.state, {
          slideCount: _this.props.children.length
        }));
        var postClones = (0, _innerSliderUtils.getPostClones)(_extends({}, _this.props, _this.state, {
          slideCount: _this.props.children.length
        }));
        _this.props.children.forEach(function (child) {
          childrenWidths.push(child.props.style.width);
          _trackWidth += child.props.style.width;
        });
        for (var i = 0; i < preClones; i++) {
          _trackLeft += childrenWidths[childrenWidths.length - 1 - i];
          _trackWidth += childrenWidths[childrenWidths.length - 1 - i];
        }
        for (var _i2 = 0; _i2 < postClones; _i2++) {
          _trackWidth += childrenWidths[_i2];
        }
        for (var _i3 = 0; _i3 < _this.state.currentSlide; _i3++) {
          _trackLeft += childrenWidths[_i3];
        }
        var _trackStyle = {
          width: _trackWidth + "px",
          left: -_trackLeft + "px"
        };
        if (_this.props.centerMode) {
          var currentWidth = childrenWidths[_this.state.currentSlide] + "px";
          _trackStyle.left = "calc(" + _trackStyle.left + " + (100% - " + currentWidth + ") / 2 ) ";
        }
        _this.setState({
          trackStyle: _trackStyle
        });
        return;
      }
      var childrenCount = _react2.default.Children.count(_this.props.children);
      var spec = _extends({}, _this.props, _this.state, { slideCount: childrenCount });
      var slideCount = (0, _innerSliderUtils.getPreClones)(spec) + (0, _innerSliderUtils.getPostClones)(spec) + childrenCount;
      var trackWidth = 100 / _this.props.slidesToShow * slideCount;
      var slideWidth = 100 / slideCount;
      var trackLeft = -slideWidth * ((0, _innerSliderUtils.getPreClones)(spec) + _this.state.currentSlide) * trackWidth / 100;
      if (_this.props.centerMode) {
        trackLeft += (100 - slideWidth * trackWidth / 100) / 2;
      }
      var trackStyle = {
        width: trackWidth + "%",
        left: trackLeft + "%"
      };
      _this.setState({
        slideWidth: slideWidth + "%",
        trackStyle: trackStyle
      });
    };

    _this.checkImagesLoad = function () {
      var images = document.querySelectorAll(".slick-slide img");
      var imagesCount = images.length,
          loadedCount = 0;
      Array.prototype.forEach.call(images, function (image) {
        var handler = function handler() {
          return ++loadedCount && loadedCount >= imagesCount && _this.onWindowResized();
        };
        if (!image.onclick) {
          image.onclick = function () {
            return image.parentNode.focus();
          };
        } else {
          var prevClickHandler = image.onclick;
          image.onclick = function () {
            prevClickHandler();
            image.parentNode.focus();
          };
        }
        if (!image.onload) {
          if (_this.props.lazyLoad) {
            image.onload = function () {
              _this.adaptHeight();
              _this.callbackTimers.push(setTimeout(_this.onWindowResized, _this.props.speed));
            };
          } else {
            image.onload = handler;
            image.onerror = function () {
              handler();
              _this.props.onLazyLoadError && _this.props.onLazyLoadError();
            };
          }
        }
      });
    };

    _this.progressiveLazyLoad = function () {
      var slidesToLoad = [];
      var spec = _extends({}, _this.props, _this.state);
      for (var index = _this.state.currentSlide; index < _this.state.slideCount + (0, _innerSliderUtils.getPostClones)(spec); index++) {
        if (_this.state.lazyLoadedList.indexOf(index) < 0) {
          slidesToLoad.push(index);
          break;
        }
      }
      for (var _index = _this.state.currentSlide - 1; _index >= -(0, _innerSliderUtils.getPreClones)(spec); _index--) {
        if (_this.state.lazyLoadedList.indexOf(_index) < 0) {
          slidesToLoad.push(_index);
          break;
        }
      }
      if (slidesToLoad.length > 0) {
        _this.setState(function (state) {
          return {
            lazyLoadedList: state.lazyLoadedList.concat(slidesToLoad)
          };
        });
        if (_this.props.onLazyLoad) {
          _this.props.onLazyLoad(slidesToLoad);
        }
      } else {
        if (_this.lazyLoadTimer) {
          clearInterval(_this.lazyLoadTimer);
          delete _this.lazyLoadTimer;
        }
      }
    };

    _this.slideHandler = function (index) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var _this$props = _this.props,
          asNavFor = _this$props.asNavFor,
          currentSlide = _this$props.currentSlide,
          beforeChange = _this$props.beforeChange,
          onLazyLoad = _this$props.onLazyLoad,
          speed = _this$props.speed,
          afterChange = _this$props.afterChange;

      var _slideHandler = (0, _innerSliderUtils.slideHandler)(_extends({
        index: index
      }, _this.props, _this.state, {
        trackRef: _this.track,
        useCSS: _this.props.useCSS && !dontAnimate
      })),
          state = _slideHandler.state,
          nextState = _slideHandler.nextState;

      if (!state) return;
      beforeChange && beforeChange(currentSlide, state.currentSlide);
      var slidesToLoad = state.lazyLoadedList.filter(function (value) {
        return _this.state.lazyLoadedList.indexOf(value) < 0;
      });
      onLazyLoad && slidesToLoad.length > 0 && onLazyLoad(slidesToLoad);
      _this.setState(state, function () {
        asNavFor && asNavFor.innerSlider.state.currentSlide !== currentSlide && asNavFor.innerSlider.slideHandler(index);
        if (!nextState) return;
        _this.animationEndCallback = setTimeout(function () {
          var animating = nextState.animating,
              firstBatch = _objectWithoutProperties(nextState, ["animating"]);

          _this.setState(firstBatch, function () {
            _this.callbackTimers.push(setTimeout(function () {
              return _this.setState({ animating: animating });
            }, 10));
            afterChange && afterChange(state.currentSlide);
            delete _this.animationEndCallback;
          });
        }, speed);
      });
    };

    _this.changeSlide = function (options) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      var spec = _extends({}, _this.props, _this.state);
      var targetSlide = (0, _innerSliderUtils.changeSlide)(spec, options);
      if (targetSlide !== 0 && !targetSlide) return;
      if (dontAnimate === true) {
        _this.slideHandler(targetSlide, dontAnimate);
      } else {
        _this.slideHandler(targetSlide);
      }
    };

    _this.clickHandler = function (e) {
      if (_this.clickable === false) {
        e.stopPropagation();
        e.preventDefault();
      }
      _this.clickable = true;
    };

    _this.keyHandler = function (e) {
      var dir = (0, _innerSliderUtils.keyHandler)(e, _this.props.accessibility, _this.props.rtl);
      dir !== "" && _this.changeSlide({ message: dir });
    };

    _this.selectHandler = function (options) {
      _this.changeSlide(options);
    };

    _this.disableBodyScroll = function () {
      var preventDefault = function preventDefault(e) {
        e = e || window.event;
        if (e.preventDefault) e.preventDefault();
        e.returnValue = false;
      };
      window.ontouchmove = preventDefault;
    };

    _this.enableBodyScroll = function () {
      window.ontouchmove = null;
    };

    _this.swipeStart = function (e) {
      if (_this.props.verticalSwiping) {
        _this.disableBodyScroll();
      }
      var state = (0, _innerSliderUtils.swipeStart)(e, _this.props.swipe, _this.props.draggable);
      state !== "" && _this.setState(state);
    };

    _this.swipeMove = function (e) {
      var state = (0, _innerSliderUtils.swipeMove)(e, _extends({}, _this.props, _this.state, {
        trackRef: _this.track,
        listRef: _this.list,
        slideIndex: _this.state.currentSlide
      }));
      if (!state) return;
      if (state["swiping"]) {
        _this.clickable = false;
      }
      _this.setState(state);
    };

    _this.swipeEnd = function (e) {
      var state = (0, _innerSliderUtils.swipeEnd)(e, _extends({}, _this.props, _this.state, {
        trackRef: _this.track,
        listRef: _this.list,
        slideIndex: _this.state.currentSlide
      }));
      if (!state) return;
      var triggerSlideHandler = state["triggerSlideHandler"];
      delete state["triggerSlideHandler"];
      _this.setState(state);
      if (triggerSlideHandler === undefined) return;
      _this.slideHandler(triggerSlideHandler);
      if (_this.props.verticalSwiping) {
        _this.enableBodyScroll();
      }
    };

    _this.slickPrev = function () {
      // this and fellow methods are wrapped in setTimeout
      // to make sure initialize setState has happened before
      // any of such methods are called
      _this.callbackTimers.push(setTimeout(function () {
        return _this.changeSlide({ message: "previous" });
      }, 0));
    };

    _this.slickNext = function () {
      _this.callbackTimers.push(setTimeout(function () {
        return _this.changeSlide({ message: "next" });
      }, 0));
    };

    _this.slickGoTo = function (slide) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      slide = Number(slide);
      if (isNaN(slide)) return "";
      _this.callbackTimers.push(setTimeout(function () {
        return _this.changeSlide({
          message: "index",
          index: slide,
          currentSlide: _this.state.currentSlide
        }, dontAnimate);
      }, 0));
    };

    _this.play = function () {
      var nextIndex;
      if (_this.props.rtl) {
        nextIndex = _this.state.currentSlide - _this.props.slidesToScroll;
      } else {
        if ((0, _innerSliderUtils.canGoNext)(_extends({}, _this.props, _this.state))) {
          nextIndex = _this.state.currentSlide + _this.props.slidesToScroll;
        } else {
          return false;
        }
      }

      _this.slideHandler(nextIndex);
    };

    _this.autoPlay = function (playType) {
      if (_this.autoplayTimer) {
        clearInterval(_this.autoplayTimer);
      }
      var autoplaying = _this.state.autoplaying;
      if (playType === "update") {
        if (autoplaying === "hovered" || autoplaying === "focused" || autoplaying === "paused") {
          return;
        }
      } else if (playType === "leave") {
        if (autoplaying === "paused" || autoplaying === "focused") {
          return;
        }
      } else if (playType === "blur") {
        if (autoplaying === "paused" || autoplaying === "hovered") {
          return;
        }
      }
      _this.autoplayTimer = setInterval(_this.play, _this.props.autoplaySpeed + 50);
      _this.setState({ autoplaying: "playing" });
    };

    _this.pause = function (pauseType) {
      if (_this.autoplayTimer) {
        clearInterval(_this.autoplayTimer);
        _this.autoplayTimer = null;
      }
      var autoplaying = _this.state.autoplaying;
      if (pauseType === "paused") {
        _this.setState({ autoplaying: "paused" });
      } else if (pauseType === "focused") {
        if (autoplaying === "hovered" || autoplaying === "playing") {
          _this.setState({ autoplaying: "focused" });
        }
      } else {
        // pauseType  is 'hovered'
        if (autoplaying === "playing") {
          _this.setState({ autoplaying: "hovered" });
        }
      }
    };

    _this.onDotsOver = function () {
      return _this.props.autoplay && _this.pause("hovered");
    };

    _this.onDotsLeave = function () {
      return _this.props.autoplay && _this.state.autoplaying === "hovered" && _this.autoPlay("leave");
    };

    _this.onTrackOver = function () {
      return _this.props.autoplay && _this.pause("hovered");
    };

    _this.onTrackLeave = function () {
      return _this.props.autoplay && _this.state.autoplaying === "hovered" && _this.autoPlay("leave");
    };

    _this.onSlideFocus = function () {
      return _this.props.autoplay && _this.pause("focused");
    };

    _this.onSlideBlur = function () {
      return _this.props.autoplay && _this.state.autoplaying === "focused" && _this.autoPlay("blur");
    };

    _this.render = function () {
      var className = (0, _classnames2.default)("slick-slider", _this.props.className, {
        "slick-vertical": _this.props.vertical,
        "slick-initialized": true
      });
      var spec = _extends({}, _this.props, _this.state);
      var trackProps = (0, _innerSliderUtils.extractObject)(spec, ["fade", "cssEase", "speed", "infinite", "centerMode", "focusOnSelect", "currentSlide", "lazyLoad", "lazyLoadedList", "rtl", "slideWidth", "slideHeight", "listHeight", "vertical", "slidesToShow", "slidesToScroll", "slideCount", "trackStyle", "variableWidth", "unslick", "centerPadding"]);
      var pauseOnHover = _this.props.pauseOnHover;

      trackProps = _extends({}, trackProps, {
        onMouseEnter: pauseOnHover ? _this.onTrackOver : null,
        onMouseLeave: pauseOnHover ? _this.onTrackLeave : null,
        onMouseOver: pauseOnHover ? _this.onTrackOver : null,
        focusOnSelect: _this.props.focusOnSelect ? _this.selectHandler : null
      });

      var dots;
      if (_this.props.dots === true && _this.state.slideCount >= _this.props.slidesToShow) {
        var dotProps = (0, _innerSliderUtils.extractObject)(spec, ["dotsClass", "slideCount", "slidesToShow", "currentSlide", "slidesToScroll", "clickHandler", "children", "customPaging", "infinite", "appendDots"]);
        var pauseOnDotsHover = _this.props.pauseOnDotsHover;

        dotProps = _extends({}, dotProps, {
          clickHandler: _this.changeSlide,
          onMouseEnter: pauseOnDotsHover ? _this.onDotsLeave : null,
          onMouseOver: pauseOnDotsHover ? _this.onDotsOver : null,
          onMouseLeave: pauseOnDotsHover ? _this.onDotsLeave : null
        });
        dots = _react2.default.createElement(_dots.Dots, dotProps);
      }

      var prevArrow, nextArrow;
      var arrowProps = (0, _innerSliderUtils.extractObject)(spec, ["infinite", "centerMode", "currentSlide", "slideCount", "slidesToShow", "prevArrow", "nextArrow"]);
      arrowProps.clickHandler = _this.changeSlide;

      if (_this.props.arrows) {
        prevArrow = _react2.default.createElement(_arrows.PrevArrow, arrowProps);
        nextArrow = _react2.default.createElement(_arrows.NextArrow, arrowProps);
      }

      var verticalHeightStyle = null;

      if (_this.props.vertical) {
        verticalHeightStyle = {
          height: _this.state.listHeight
        };
      }

      var centerPaddingStyle = null;

      if (_this.props.vertical === false) {
        if (_this.props.centerMode === true) {
          centerPaddingStyle = {
            padding: "0px " + _this.props.centerPadding
          };
        }
      } else {
        if (_this.props.centerMode === true) {
          centerPaddingStyle = {
            padding: _this.props.centerPadding + " 0px"
          };
        }
      }

      var listStyle = _extends({}, verticalHeightStyle, centerPaddingStyle);
      var touchMove = _this.props.touchMove;
      var listProps = {
        className: "slick-list",
        style: listStyle,
        onClick: _this.clickHandler,
        onMouseDown: touchMove ? _this.swipeStart : null,
        onMouseMove: _this.state.dragging && touchMove ? _this.swipeMove : null,
        onMouseUp: touchMove ? _this.swipeEnd : null,
        onMouseLeave: _this.state.dragging && touchMove ? _this.swipeEnd : null,
        onTouchStart: touchMove ? _this.swipeStart : null,
        onTouchMove: _this.state.dragging && touchMove ? _this.swipeMove : null,
        onTouchEnd: touchMove ? _this.swipeEnd : null,
        onTouchCancel: _this.state.dragging && touchMove ? _this.swipeEnd : null,
        onKeyDown: _this.props.accessibility ? _this.keyHandler : null
      };

      var innerSliderProps = {
        className: className,
        dir: "ltr"
      };

      if (_this.props.unslick) {
        listProps = { className: "slick-list" };
        innerSliderProps = { className: className };
      }
      return _react2.default.createElement(
        "div",
        innerSliderProps,
        !_this.props.unslick ? prevArrow : "",
        _react2.default.createElement(
          "div",
          _extends({ ref: _this.listRefHandler }, listProps),
          _react2.default.createElement(
            _track.Track,
            _extends({ ref: _this.trackRefHandler }, trackProps),
            _this.props.children
          )
        ),
        !_this.props.unslick ? nextArrow : "",
        !_this.props.unslick ? dots : ""
      );
    };

    _this.list = null;
    _this.track = null;
    _this.state = _extends({}, _initialState2.default, {
      currentSlide: _this.props.initialSlide,
      slideCount: _react2.default.Children.count(_this.props.children)
    });
    _this.callbackTimers = [];
    _this.clickable = true;
    _this.debouncedResize = null;
    return _this;
  }

  return InnerSlider;
}(_react2.default.Component);

/***/ }),
/* 303 */
/*!****************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom.production.min.js ***!
  \****************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.4.2
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
var aa=__webpack_require__(/*! fbjs/lib/invariant */ 21),ba=__webpack_require__(/*! react */ 3),m=__webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 107),p=__webpack_require__(/*! object-assign */ 20),v=__webpack_require__(/*! fbjs/lib/emptyFunction */ 23),da=__webpack_require__(/*! fbjs/lib/getActiveElement */ 108),ea=__webpack_require__(/*! fbjs/lib/shallowEqual */ 109),fa=__webpack_require__(/*! fbjs/lib/containsNode */ 110),ha=__webpack_require__(/*! fbjs/lib/emptyObject */ 22);
function A(a){for(var b=arguments.length-1,c="https://reactjs.org/docs/error-decoder.html?invariant="+a,d=0;d<b;d++)c+="&args[]="+encodeURIComponent(arguments[d+1]);aa(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",c)}ba?void 0:A("227");
function ia(a,b,c,d,e,f,g,h,k){this._hasCaughtError=!1;this._caughtError=null;var n=Array.prototype.slice.call(arguments,3);try{b.apply(c,n)}catch(r){this._caughtError=r,this._hasCaughtError=!0}}
var B={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){ia.apply(B,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){B.invokeGuardedCallback.apply(this,arguments);if(B.hasCaughtError()){var n=B.clearCaughtError();B._hasRethrowError||(B._hasRethrowError=!0,B._rethrowError=n)}},rethrowCaughtError:function(){return ka.apply(B,arguments)},hasCaughtError:function(){return B._hasCaughtError},clearCaughtError:function(){if(B._hasCaughtError){var a=
B._caughtError;B._caughtError=null;B._hasCaughtError=!1;return a}A("198")}};function ka(){if(B._hasRethrowError){var a=B._rethrowError;B._rethrowError=null;B._hasRethrowError=!1;throw a;}}var la=null,ma={};
function na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:A("96",a);if(!oa[c]){b.extractEvents?void 0:A("97",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?A("99",h):void 0;pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&qa(k[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:A("98",d,a)}}}}
function qa(a,b,c){ra[a]?A("100",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={};function ta(a){la?A("101"):void 0;la=Array.prototype.slice.call(a);na()}function ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?A("102",c):void 0,ma[c]=d,b=!0)}b&&na()}
var va={plugins:oa,eventNameDispatchConfigs:pa,registrationNameModules:ra,registrationNameDependencies:sa,possibleRegistrationNames:null,injectEventPluginOrder:ta,injectEventPluginsByName:ua},wa=null,xa=null,ya=null;function za(a,b,c,d){b=a.type||"unknown-event";a.currentTarget=ya(d);B.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}
function Aa(a,b){null==b?A("30"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ba(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ca=null;
function Da(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)za(a,b,c[e],d[e]);else c&&za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ea(a){return Da(a,!0)}function Fa(a){return Da(a,!1)}var Ga={injectEventPluginOrder:ta,injectEventPluginsByName:ua};
function Ha(a,b){var c=a.stateNode;if(!c)return null;var d=wa(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;c&&"function"!==typeof c?A("231",b,typeof c):void 0;
return c}function Ia(a,b){null!==a&&(Ca=Aa(Ca,a));a=Ca;Ca=null;a&&(b?Ba(a,Ea):Ba(a,Fa),Ca?A("95"):void 0,B.rethrowCaughtError())}function Ja(a,b,c,d){for(var e=null,f=0;f<oa.length;f++){var g=oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Aa(e,g))}Ia(e,!1)}var Ka={injection:Ga,getListener:Ha,runEventsInBatch:Ia,runExtractedEventsInBatch:Ja},La=Math.random().toString(36).slice(2),C="__reactInternalInstance$"+La,Ma="__reactEventHandlers$"+La;
function Na(a){if(a[C])return a[C];for(;!a[C];)if(a.parentNode)a=a.parentNode;else return null;a=a[C];return 5===a.tag||6===a.tag?a:null}function Oa(a){if(5===a.tag||6===a.tag)return a.stateNode;A("33")}function Pa(a){return a[Ma]||null}var Qa={precacheFiberNode:function(a,b){b[C]=a},getClosestInstanceFromNode:Na,getInstanceFromNode:function(a){a=a[C];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Oa,getFiberCurrentPropsFromNode:Pa,updateFiberProps:function(a,b){a[Ma]=b}};
function F(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ra(a,b,c){for(var d=[];a;)d.push(a),a=F(a);for(a=d.length;0<a--;)b(d[a],"captured",c);for(a=0;a<d.length;a++)b(d[a],"bubbled",c)}function Sa(a,b,c){if(b=Ha(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a)}function Ta(a){a&&a.dispatchConfig.phasedRegistrationNames&&Ra(a._targetInst,Sa,a)}
function Ua(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?F(b):null;Ra(b,Sa,a)}}function Va(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ha(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a))}function Xa(a){a&&a.dispatchConfig.registrationName&&Va(a._targetInst,null,a)}function Ya(a){Ba(a,Ta)}
function Za(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=F(h))g++;h=0;for(var k=f;k;k=F(k))h++;for(;0<g-h;)e=F(e),g--;for(;0<h-g;)f=F(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=F(e);f=F(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=F(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=F(d)}for(d=0;d<e.length;d++)Va(e[d],"bubbled",a);for(a=c.length;0<a--;)Va(c[a],"captured",b)}
var $a={accumulateTwoPhaseDispatches:Ya,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ba(a,Ua)},accumulateEnterLeaveDispatches:Za,accumulateDirectDispatches:function(a){Ba(a,Xa)}};function ab(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;c["ms"+a]="MS"+b;c["O"+a]="o"+b.toLowerCase();return c}
var bb={animationend:ab("Animation","AnimationEnd"),animationiteration:ab("Animation","AnimationIteration"),animationstart:ab("Animation","AnimationStart"),transitionend:ab("Transition","TransitionEnd")},cb={},db={};m.canUseDOM&&(db=document.createElement("div").style,"AnimationEvent"in window||(delete bb.animationend.animation,delete bb.animationiteration.animation,delete bb.animationstart.animation),"TransitionEvent"in window||delete bb.transitionend.transition);
function eb(a){if(cb[a])return cb[a];if(!bb[a])return a;var b=bb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in db)return cb[a]=b[c];return a}var fb=eb("animationend"),gb=eb("animationiteration"),hb=eb("animationstart"),ib=eb("transitionend"),jb="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),kb=null;
function lb(){!kb&&m.canUseDOM&&(kb="textContent"in document.documentElement?"textContent":"innerText");return kb}var G={_root:null,_startText:null,_fallbackText:null};function mb(){if(G._fallbackText)return G._fallbackText;var a,b=G._startText,c=b.length,d,e=nb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);G._fallbackText=e.slice(a,1<d?1-d:void 0);return G._fallbackText}function nb(){return"value"in G._root?G._root.value:G._root[lb()]}
var ob="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),pb={type:null,target:null,currentTarget:v.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
function H(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?v.thatReturnsTrue:v.thatReturnsFalse;this.isPropagationStopped=v.thatReturnsFalse;return this}
p(H.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=v.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=v.thatReturnsTrue)},persist:function(){this.isPersistent=v.thatReturnsTrue},isPersistent:v.thatReturnsFalse,
destructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<ob.length;a++)this[ob[a]]=null}});H.Interface=pb;H.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;p(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=p({},d.Interface,a);c.extend=d.extend;qb(c);return c};qb(H);
function rb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function sb(a){a instanceof this?void 0:A("223");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function qb(a){a.eventPool=[];a.getPooled=rb;a.release=sb}var tb=H.extend({data:null}),ub=H.extend({data:null}),vb=[9,13,27,32],wb=m.canUseDOM&&"CompositionEvent"in window,xb=null;m.canUseDOM&&"documentMode"in document&&(xb=document.documentMode);
var yb=m.canUseDOM&&"TextEvent"in window&&!xb,zb=m.canUseDOM&&(!wb||xb&&8<xb&&11>=xb),Ab=String.fromCharCode(32),Bb={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Cb=!1;
function Db(a,b){switch(a){case "keyup":return-1!==vb.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "blur":return!0;default:return!1}}function Eb(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var Fb=!1;function Gb(a,b){switch(a){case "compositionend":return Eb(b);case "keypress":if(32!==b.which)return null;Cb=!0;return Ab;case "textInput":return a=b.data,a===Ab&&Cb?null:a;default:return null}}
function Hb(a,b){if(Fb)return"compositionend"===a||!wb&&Db(a,b)?(a=mb(),G._root=null,G._startText=null,G._fallbackText=null,Fb=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return zb?null:b.data;default:return null}}
var Ib={eventTypes:Bb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(wb)b:{switch(a){case "compositionstart":e=Bb.compositionStart;break b;case "compositionend":e=Bb.compositionEnd;break b;case "compositionupdate":e=Bb.compositionUpdate;break b}e=void 0}else Fb?Db(a,c)&&(e=Bb.compositionEnd):"keydown"===a&&229===c.keyCode&&(e=Bb.compositionStart);e?(zb&&(Fb||e!==Bb.compositionStart?e===Bb.compositionEnd&&Fb&&(f=mb()):(G._root=d,G._startText=nb(),Fb=!0)),e=tb.getPooled(e,b,c,d),f?e.data=
f:(f=Eb(c),null!==f&&(e.data=f)),Ya(e),f=e):f=null;(a=yb?Gb(a,c):Hb(a,c))?(b=ub.getPooled(Bb.beforeInput,b,c,d),b.data=a,Ya(b)):b=null;return null===f?b:null===b?f:[f,b]}},Jb=null,Kb={injectFiberControlledHostComponent:function(a){Jb=a}},Lb=null,Mb=null;function Nb(a){if(a=xa(a)){Jb&&"function"===typeof Jb.restoreControlledState?void 0:A("194");var b=wa(a.stateNode);Jb.restoreControlledState(a.stateNode,a.type,b)}}function Ob(a){Lb?Mb?Mb.push(a):Mb=[a]:Lb=a}
function Pb(){return null!==Lb||null!==Mb}function Qb(){if(Lb){var a=Lb,b=Mb;Mb=Lb=null;Nb(a);if(b)for(a=0;a<b.length;a++)Nb(b[a])}}var Rb={injection:Kb,enqueueStateRestore:Ob,needsStateRestore:Pb,restoreStateIfNeeded:Qb};function Sb(a,b){return a(b)}function Tb(a,b,c){return a(b,c)}function Ub(){}var Vb=!1;function Wb(a,b){if(Vb)return a(b);Vb=!0;try{return Sb(a,b)}finally{Vb=!1,Pb()&&(Ub(),Qb())}}
var Xb={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!Xb[a.type]:"textarea"===b?!0:!1}function Zb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}
function $b(a,b){if(!m.canUseDOM||b&&!("addEventListener"in document))return!1;a="on"+a;b=a in document;b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"===typeof b[a]);return b}function ac(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function bc(a){var b=ac(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
null;delete a[b]}}}}function cc(a){a._valueTracker||(a._valueTracker=bc(a))}function dc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=ac(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}
var ec=ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,fc="function"===typeof Symbol&&Symbol.for,gc=fc?Symbol.for("react.element"):60103,hc=fc?Symbol.for("react.portal"):60106,ic=fc?Symbol.for("react.fragment"):60107,jc=fc?Symbol.for("react.strict_mode"):60108,kc=fc?Symbol.for("react.profiler"):60114,lc=fc?Symbol.for("react.provider"):60109,mc=fc?Symbol.for("react.context"):60110,pc=fc?Symbol.for("react.async_mode"):60111,qc=fc?Symbol.for("react.forward_ref"):60112,rc=fc?Symbol.for("react.timeout"):
60113,sc="function"===typeof Symbol&&Symbol.iterator;function tc(a){if(null===a||"undefined"===typeof a)return null;a=sc&&a[sc]||a["@@iterator"];return"function"===typeof a?a:null}
function uc(a){var b=a.type;if("function"===typeof b)return b.displayName||b.name;if("string"===typeof b)return b;switch(b){case pc:return"AsyncMode";case mc:return"Context.Consumer";case ic:return"ReactFragment";case hc:return"ReactPortal";case kc:return"Profiler("+a.pendingProps.id+")";case lc:return"Context.Provider";case jc:return"StrictMode";case rc:return"Timeout"}if("object"===typeof b&&null!==b)switch(b.$$typeof){case qc:return a=b.render.displayName||b.render.name||"",""!==a?"ForwardRef("+
a+")":"ForwardRef"}return null}function vc(a){var b="";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=uc(a);var f=null;c&&(f=uc(c));c=d;e="\n    in "+(e||"Unknown")+(c?" (at "+c.fileName.replace(/^.*[\\\/]/,"")+":"+c.lineNumber+")":f?" (created by "+f+")":"");break a;default:e=""}b+=e;a=a.return}while(a);return b}
var wc=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,xc=Object.prototype.hasOwnProperty,zc={},Ac={};
function Bc(a){if(xc.call(Ac,a))return!0;if(xc.call(zc,a))return!1;if(wc.test(a))return Ac[a]=!0;zc[a]=!0;return!1}function Cc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
function Dc(a,b,c,d){if(null===b||"undefined"===typeof b||Cc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function I(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var J={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){J[a]=new I(a,0,!1,a,null)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];J[b]=new I(b,1,!1,a[1],null)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){J[a]=new I(a,2,!1,a.toLowerCase(),null)});
["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(a){J[a]=new I(a,2,!1,a,null)});"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){J[a]=new I(a,3,!1,a.toLowerCase(),null)});["checked","multiple","muted","selected"].forEach(function(a){J[a]=new I(a,3,!0,a.toLowerCase(),null)});
["capture","download"].forEach(function(a){J[a]=new I(a,4,!1,a.toLowerCase(),null)});["cols","rows","size","span"].forEach(function(a){J[a]=new I(a,6,!1,a.toLowerCase(),null)});["rowSpan","start"].forEach(function(a){J[a]=new I(a,5,!1,a.toLowerCase(),null)});var Ec=/[\-:]([a-z])/g;function Fc(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(Ec,
Fc);J[b]=new I(b,1,!1,a,null)});"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(Ec,Fc);J[b]=new I(b,1,!1,a,"http://www.w3.org/1999/xlink")});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(Ec,Fc);J[b]=new I(b,1,!1,a,"http://www.w3.org/XML/1998/namespace")});J.tabIndex=new I("tabIndex",1,!1,"tabindex",null);
function Gc(a,b,c,d){var e=J.hasOwnProperty(b)?J[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(Dc(b,c,e,d)&&(c=null),d||null===e?Bc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
function Hc(a,b){var c=b.checked;return p({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Ic(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Jc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function Kc(a,b){b=b.checked;null!=b&&Gc(a,"checked",b,!1)}
function Lc(a,b){Kc(a,b);var c=Jc(b.value);if(null!=c)if("number"===b.type){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);b.hasOwnProperty("value")?Mc(a,b.type,c):b.hasOwnProperty("defaultValue")&&Mc(a,b.type,Jc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function Nc(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){b=""+a._wrapperState.initialValue;var d=a.value;c||b===d||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;""!==c&&(a.name=c)}function Mc(a,b,c){if("number"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}
function Jc(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}var Oc={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Pc(a,b,c){a=H.getPooled(Oc.change,a,b,c);a.type="change";Ob(c);Ya(a);return a}var Qc=null,Rc=null;function Sc(a){Ia(a,!1)}function Tc(a){var b=Oa(a);if(dc(b))return a}
function Uc(a,b){if("change"===a)return b}var Vc=!1;m.canUseDOM&&(Vc=$b("input")&&(!document.documentMode||9<document.documentMode));function Wc(){Qc&&(Qc.detachEvent("onpropertychange",Xc),Rc=Qc=null)}function Xc(a){"value"===a.propertyName&&Tc(Rc)&&(a=Pc(Rc,a,Zb(a)),Wb(Sc,a))}function Yc(a,b,c){"focus"===a?(Wc(),Qc=b,Rc=c,Qc.attachEvent("onpropertychange",Xc)):"blur"===a&&Wc()}function Zc(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return Tc(Rc)}
function $c(a,b){if("click"===a)return Tc(b)}function ad(a,b){if("input"===a||"change"===a)return Tc(b)}
var bd={eventTypes:Oc,_isInputEventSupported:Vc,extractEvents:function(a,b,c,d){var e=b?Oa(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();"select"===h||"input"===h&&"file"===e.type?f=Uc:Yb(e)?Vc?f=ad:(f=Zc,g=Yc):(h=e.nodeName)&&"input"===h.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(f=$c);if(f&&(f=f(a,b)))return Pc(f,c,d);g&&g(a,e,b);"blur"===a&&(a=e._wrapperState)&&a.controlled&&"number"===e.type&&Mc(e,"number",e.value)}},cd=H.extend({view:null,detail:null}),dd={Alt:"altKey",
Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function ed(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=dd[a])?!!b[a]:!1}function fd(){return ed}
var gd=cd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:fd,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),hd=gd.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),id={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},
mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},jd={eventTypes:id,extractEvents:function(a,b,c,d){var e="mouseover"===a||"pointerover"===a,f="mouseout"===a||"pointerout"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||
e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Na(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,n=void 0;if("mouseout"===a||"mouseover"===a)g=gd,h=id.mouseLeave,k=id.mouseEnter,n="mouse";else if("pointerout"===a||"pointerover"===a)g=hd,h=id.pointerLeave,k=id.pointerEnter,n="pointer";a=null==f?e:Oa(f);e=null==b?e:Oa(b);h=g.getPooled(h,f,c,d);h.type=n+"leave";h.target=a;h.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=n+"enter";c.target=e;c.relatedTarget=a;Za(h,
c,f,b);return[h,c]}};function kd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){2!==kd(a)?A("188"):void 0}
function md(a){var b=a.alternate;if(!b)return b=kd(a),3===b?A("188"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return ld(e),a;if(g===d)return ld(e),b;g=g.sibling}A("188")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?
void 0:A("189")}}c.alternate!==d?A("190"):void 0}3!==c.tag?A("188"):void 0;return c.stateNode.current===c?a:b}function nd(a){a=md(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
function od(a){a=md(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}var pd=H.extend({animationName:null,elapsedTime:null,pseudoElement:null}),qd=H.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),rd=cd.extend({relatedTarget:null});
function sd(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}
var td={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},ud={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},vd=cd.extend({key:function(a){if(a.key){var b=td[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=sd(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?ud[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:fd,charCode:function(a){return"keypress"===
a.type?sd(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?sd(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),wd=gd.extend({dataTransfer:null}),xd=cd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:fd}),yd=H.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),zd=gd.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in
a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),Ad=[["abort","abort"],[fb,"animationEnd"],[gb,"animationIteration"],[hb,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],
["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],
["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ib,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],Bd={},Cd={};function Dd(a,b){var c=a[0];a=a[1];var d="on"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+"Capture"},dependencies:[c],isInteractive:b};Bd[a]=b;Cd[c]=b}
[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],
["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(a){Dd(a,!0)});Ad.forEach(function(a){Dd(a,!1)});
var Ed={eventTypes:Bd,isInteractiveTopLevelEventType:function(a){a=Cd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Cd[a];if(!e)return null;switch(a){case "keypress":if(0===sd(c))return null;case "keydown":case "keyup":a=vd;break;case "blur":case "focus":a=rd;break;case "click":if(2===c.button)return null;case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":a=gd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":a=
wd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":a=xd;break;case fb:case gb:case hb:a=pd;break;case ib:a=yd;break;case "scroll":a=cd;break;case "wheel":a=zd;break;case "copy":case "cut":case "paste":a=qd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":a=hd;break;default:a=H}b=a.getPooled(e,b,c,d);Ya(b);return b}},Fd=Ed.isInteractiveTopLevelEventType,
Gd=[];function Hd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c.return;)c=c.return;c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Na(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Ja(a.topLevelType,b,a.nativeEvent,Zb(a.nativeEvent))}var Id=!0;function Kd(a){Id=!!a}function K(a,b){if(!b)return null;var c=(Fd(a)?Ld:Md).bind(null,a);b.addEventListener(a,c,!1)}
function Nd(a,b){if(!b)return null;var c=(Fd(a)?Ld:Md).bind(null,a);b.addEventListener(a,c,!0)}function Ld(a,b){Tb(Md,a,b)}function Md(a,b){if(Id){var c=Zb(b);c=Na(c);null===c||"number"!==typeof c.tag||2===kd(c)||(c=null);if(Gd.length){var d=Gd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Wb(Hd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Gd.length&&Gd.push(a)}}}
var Od={get _enabled(){return Id},setEnabled:Kd,isEnabled:function(){return Id},trapBubbledEvent:K,trapCapturedEvent:Nd,dispatchEvent:Md},Pd={},Qd=0,Rd="_reactListenersID"+(""+Math.random()).slice(2);function Sd(a){Object.prototype.hasOwnProperty.call(a,Rd)||(a[Rd]=Qd++,Pd[a[Rd]]={});return Pd[a[Rd]]}function Td(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
function Ud(a,b){var c=Td(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Td(c)}}function Vd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}
var Wd=m.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Xd={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Yd=null,Zd=null,$d=null,ae=!1;
function be(a,b){if(ae||null==Yd||Yd!==da())return null;var c=Yd;"selectionStart"in c&&Vd(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return $d&&ea($d,c)?null:($d=c,a=H.getPooled(Xd.select,Zd,a,b),a.type="select",a.target=Yd,Ya(a),a)}
var ce={eventTypes:Xd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Sd(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Oa(b):window;switch(a){case "focus":if(Yb(e)||"true"===e.contentEditable)Yd=e,Zd=b,$d=null;break;case "blur":$d=Zd=Yd=null;break;case "mousedown":ae=!0;break;case "contextmenu":case "mouseup":return ae=!1,be(c,d);case "selectionchange":if(Wd)break;
case "keydown":case "keyup":return be(c,d)}return null}};Ga.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));wa=Qa.getFiberCurrentPropsFromNode;xa=Qa.getInstanceFromNode;ya=Qa.getNodeFromInstance;Ga.injectEventPluginsByName({SimpleEventPlugin:Ed,EnterLeaveEventPlugin:jd,ChangeEventPlugin:bd,SelectEventPlugin:ce,BeforeInputEventPlugin:Ib});
var de="function"===typeof requestAnimationFrame?requestAnimationFrame:void 0,ee=Date,fe=setTimeout,ge=clearTimeout,he=void 0;if("object"===typeof performance&&"function"===typeof performance.now){var ie=performance;he=function(){return ie.now()}}else he=function(){return ee.now()};var je=void 0,ke=void 0;
if(m.canUseDOM){var le="function"===typeof de?de:function(){A("276")},L=null,me=null,ne=-1,oe=!1,pe=!1,qe=0,re=33,se=33,te={didTimeout:!1,timeRemaining:function(){var a=qe-he();return 0<a?a:0}},ve=function(a,b){var c=a.scheduledCallback,d=!1;try{c(b),d=!0}finally{ke(a),d||(oe=!0,window.postMessage(ue,"*"))}},ue="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(a){if(a.source===window&&a.data===ue&&(oe=!1,null!==L)){if(null!==L){var b=he();if(!(-1===
ne||ne>b)){a=-1;for(var c=[],d=L;null!==d;){var e=d.timeoutTime;-1!==e&&e<=b?c.push(d):-1!==e&&(-1===a||e<a)&&(a=e);d=d.next}if(0<c.length)for(te.didTimeout=!0,b=0,d=c.length;b<d;b++)ve(c[b],te);ne=a}}for(a=he();0<qe-a&&null!==L;)a=L,te.didTimeout=!1,ve(a,te),a=he();null===L||pe||(pe=!0,le(we))}},!1);var we=function(a){pe=!1;var b=a-qe+se;b<se&&re<se?(8>b&&(b=8),se=b<re?re:b):re=b;qe=a+se;oe||(oe=!0,window.postMessage(ue,"*"))};je=function(a,b){var c=-1;null!=b&&"number"===typeof b.timeout&&(c=he()+
b.timeout);if(-1===ne||-1!==c&&c<ne)ne=c;a={scheduledCallback:a,timeoutTime:c,prev:null,next:null};null===L?L=a:(b=a.prev=me,null!==b&&(b.next=a));me=a;pe||(pe=!0,le(we));return a};ke=function(a){if(null!==a.prev||L===a){var b=a.next,c=a.prev;a.next=null;a.prev=null;null!==b?null!==c?(c.next=b,b.prev=c):(b.prev=null,L=b):null!==c?(c.next=null,me=c):me=L=null}}}else{var xe=new Map;je=function(a){var b={scheduledCallback:a,timeoutTime:0,next:null,prev:null},c=fe(function(){a({timeRemaining:function(){return Infinity},
didTimeout:!1})});xe.set(a,c);return b};ke=function(a){var b=xe.get(a.scheduledCallback);xe.delete(a);ge(b)}}function ye(a){var b="";ba.Children.forEach(a,function(a){null==a||"string"!==typeof a&&"number"!==typeof a||(b+=a)});return b}function ze(a,b){a=p({children:void 0},b);if(b=ye(b.children))a.children=b;return a}
function Ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function Be(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Ce(a,b){null!=b.dangerouslySetInnerHTML?A("91"):void 0;return p({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function De(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?A("92"):void 0,Array.isArray(b)&&(1>=b.length?void 0:A("93"),b=b[0]),c=""+b),null==c&&(c=""));a._wrapperState={initialValue:""+c}}
function Ee(a,b){var c=b.value;null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Fe(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Ge={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function He(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ie(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?He(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var Je=void 0,Ke=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Ge.svg||"innerHTML"in a)a.innerHTML=b;else{Je=Je||document.createElement("div");Je.innerHTML="<svg>"+b+"</svg>";for(b=Je.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
function Le(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
var Me={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,
stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ne=["Webkit","ms","Moz","O"];Object.keys(Me).forEach(function(a){Ne.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Me[b]=Me[a]})});
function Oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--");var e=c;var f=b[c];e=null==f||"boolean"===typeof f||""===f?"":d||"number"!==typeof f||0===f||Me.hasOwnProperty(e)&&Me[e]?(""+f).trim():f+"px";"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var Pe=p({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function Qe(a,b,c){b&&(Pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?A("137",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?A("60"):void 0,"object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML?void 0:A("61")),null!=b.style&&"object"!==typeof b.style?A("62",c()):void 0)}
function Re(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var Se=v.thatReturns("");
function Te(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Sd(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case "scroll":Nd("scroll",a);break;case "focus":case "blur":Nd("focus",a);Nd("blur",a);c.blur=!0;c.focus=!0;break;case "cancel":case "close":$b(e,!0)&&Nd(e,a);break;case "invalid":case "submit":case "reset":break;default:-1===jb.indexOf(e)&&K(e,a)}c[e]=!0}}}
function Ue(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Ge.html&&(d=He(a));d===Ge.html?"script"===a?(a=c.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):a="string"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function Ve(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}
function We(a,b,c,d){var e=Re(b,c);switch(b){case "iframe":case "object":K("load",a);var f=c;break;case "video":case "audio":for(f=0;f<jb.length;f++)K(jb[f],a);f=c;break;case "source":K("error",a);f=c;break;case "img":case "image":case "link":K("error",a);K("load",a);f=c;break;case "form":K("reset",a);K("submit",a);f=c;break;case "details":K("toggle",a);f=c;break;case "input":Ic(a,c);f=Hc(a,c);K("invalid",a);Te(d,"onChange");break;case "option":f=ze(a,c);break;case "select":Be(a,c);f=p({},c,{value:void 0});
K("invalid",a);Te(d,"onChange");break;case "textarea":De(a,c);f=Ce(a,c);K("invalid",a);Te(d,"onChange");break;default:f=c}Qe(b,f,Se);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];"style"===h?Oe(a,k,Se):"dangerouslySetInnerHTML"===h?(k=k?k.__html:void 0,null!=k&&Ke(a,k)):"children"===h?"string"===typeof k?("textarea"!==b||""!==k)&&Le(a,k):"number"===typeof k&&Le(a,""+k):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(ra.hasOwnProperty(h)?null!=k&&Te(d,
h):null!=k&&Gc(a,h,k,e))}switch(b){case "input":cc(a);Nc(a,c,!1);break;case "textarea":cc(a);Fe(a,c);break;case "option":null!=c.value&&a.setAttribute("value",c.value);break;case "select":a.multiple=!!c.multiple;b=c.value;null!=b?Ae(a,!!c.multiple,b,!1):null!=c.defaultValue&&Ae(a,!!c.multiple,c.defaultValue,!0);break;default:"function"===typeof f.onClick&&(a.onclick=v)}}
function Xe(a,b,c,d,e){var f=null;switch(b){case "input":c=Hc(a,c);d=Hc(a,d);f=[];break;case "option":c=ze(a,c);d=ze(a,d);f=[];break;case "select":c=p({},c,{value:void 0});d=p({},d,{value:void 0});f=[];break;case "textarea":c=Ce(a,c);d=Ce(a,d);f=[];break;default:"function"!==typeof c.onClick&&"function"===typeof d.onClick&&(a.onclick=v)}Qe(b,d,Se);b=a=void 0;var g=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if("style"===a){var h=c[a];for(b in h)h.hasOwnProperty(b)&&(g||
(g={}),g[b]="")}else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(ra.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];h=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==h&&(null!=k||null!=h))if("style"===a)if(h){for(b in h)!h.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(g||(g={}),g[b]="");for(b in k)k.hasOwnProperty(b)&&h[b]!==k[b]&&(g||(g={}),g[b]=k[b])}else g||(f||(f=[]),f.push(a,g)),
g=k;else"dangerouslySetInnerHTML"===a?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(a,""+k)):"children"===a?h===k||"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(a,""+k):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(ra.hasOwnProperty(a)?(null!=k&&Te(e,a),f||h===k||(f=[])):(f=f||[]).push(a,k))}g&&(f=f||[]).push("style",g);return f}
function Ye(a,b,c,d,e){"input"===c&&"radio"===e.type&&null!=e.name&&Kc(a,e);Re(c,d);d=Re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];"style"===g?Oe(a,h,Se):"dangerouslySetInnerHTML"===g?Ke(a,h):"children"===g?Le(a,h):Gc(a,g,h,d)}switch(c){case "input":Lc(a,e);break;case "textarea":Ee(a,e);break;case "select":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?
Ae(a,!!e.multiple,e.defaultValue,!0):Ae(a,!!e.multiple,e.multiple?[]:"",!1))}}
function Ze(a,b,c,d,e){switch(b){case "iframe":case "object":K("load",a);break;case "video":case "audio":for(d=0;d<jb.length;d++)K(jb[d],a);break;case "source":K("error",a);break;case "img":case "image":case "link":K("error",a);K("load",a);break;case "form":K("reset",a);K("submit",a);break;case "details":K("toggle",a);break;case "input":Ic(a,c);K("invalid",a);Te(e,"onChange");break;case "select":Be(a,c);K("invalid",a);Te(e,"onChange");break;case "textarea":De(a,c),K("invalid",a),Te(e,"onChange")}Qe(b,
c,Se);d=null;for(var f in c)if(c.hasOwnProperty(f)){var g=c[f];"children"===f?"string"===typeof g?a.textContent!==g&&(d=["children",g]):"number"===typeof g&&a.textContent!==""+g&&(d=["children",""+g]):ra.hasOwnProperty(f)&&null!=g&&Te(e,f)}switch(b){case "input":cc(a);Nc(a,c,!0);break;case "textarea":cc(a);Fe(a,c);break;case "select":case "option":break;default:"function"===typeof c.onClick&&(a.onclick=v)}return d}function $e(a,b){return a.nodeValue!==b}
var af={createElement:Ue,createTextNode:Ve,setInitialProperties:We,diffProperties:Xe,updateProperties:Ye,diffHydratedProperties:Ze,diffHydratedText:$e,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case "input":Lc(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;
c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Pa(d);e?void 0:A("90");dc(d);Lc(d,e)}}}break;case "textarea":Ee(a,c);break;case "select":b=c.value,null!=b&&Ae(a,!!c.multiple,b,!1)}}},bf=null,cf=null;function df(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}
function ef(a,b){return"textarea"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&"string"===typeof b.dangerouslySetInnerHTML.__html}var ff=he,gf=je,hf=ke;function jf(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function kf(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var lf=[],mf=-1;function nf(a){return{current:a}}
function M(a){0>mf||(a.current=lf[mf],lf[mf]=null,mf--)}function N(a,b){mf++;lf[mf]=a.current;a.current=b}var of=nf(ha),O=nf(!1),pf=ha;function qf(a){return rf(a)?pf:of.current}
function sf(a,b){var c=a.type.contextTypes;if(!c)return ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function rf(a){return 2===a.tag&&null!=a.type.childContextTypes}function tf(a){rf(a)&&(M(O,a),M(of,a))}function uf(a){M(O,a);M(of,a)}
function vf(a,b,c){of.current!==ha?A("168"):void 0;N(of,b,a);N(O,c,a)}function wf(a,b){var c=a.stateNode,d=a.type.childContextTypes;if("function"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:A("108",uc(a)||"Unknown",e);return p({},b,c)}function xf(a){if(!rf(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ha;pf=of.current;N(of,b,a);N(O,O.current,a);return!0}
function yf(a,b){var c=a.stateNode;c?void 0:A("169");if(b){var d=wf(a,pf);c.__reactInternalMemoizedMergedChildContext=d;M(O,a);M(of,a);N(of,d,a)}else M(O,a);N(O,b,a)}
function zf(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}
function Af(a,b,c){var d=a.alternate;null===d?(d=new zf(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}
function Bf(a,b,c){var d=a.type,e=a.key;a=a.props;if("function"===typeof d)var f=d.prototype&&d.prototype.isReactComponent?2:0;else if("string"===typeof d)f=5;else switch(d){case ic:return Cf(a.children,b,c,e);case pc:f=11;b|=3;break;case jc:f=11;b|=2;break;case kc:return d=new zf(15,a,e,b|4),d.type=kc,d.expirationTime=c,d;case rc:f=16;b|=2;break;default:a:{switch("object"===typeof d&&null!==d?d.$$typeof:null){case lc:f=13;break a;case mc:f=12;break a;case qc:f=14;break a;default:A("130",null==d?
d:typeof d,"")}f=void 0}}b=new zf(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Cf(a,b,c,d){a=new zf(10,a,d,b);a.expirationTime=c;return a}function Df(a,b,c){a=new zf(6,a,null,b);a.expirationTime=c;return a}function Ef(a,b,c){b=new zf(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
function Ff(a,b,c){b=new zf(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a}var Gf=null,Hf=null;function If(a){return function(b){try{return a(b)}catch(c){}}}
function Jf(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Gf=If(function(a){return b.onCommitFiberRoot(c,a)});Hf=If(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Kf(a){"function"===typeof Gf&&Gf(a)}function Lf(a){"function"===typeof Hf&&Hf(a)}var Mf=!1;
function Nf(a){return{expirationTime:0,baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Of(a){return{expirationTime:a.expirationTime,baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}
function Pf(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Qf(a,b,c){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b);if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c}
function Rf(a,b,c){var d=a.alternate;if(null===d){var e=a.updateQueue;var f=null;null===e&&(e=a.updateQueue=Nf(a.memoizedState))}else e=a.updateQueue,f=d.updateQueue,null===e?null===f?(e=a.updateQueue=Nf(a.memoizedState),f=d.updateQueue=Nf(d.memoizedState)):e=a.updateQueue=Of(f):null===f&&(f=d.updateQueue=Of(e));null===f||e===f?Qf(e,b,c):null===e.lastUpdate||null===f.lastUpdate?(Qf(e,b,c),Qf(f,b,c)):(Qf(e,b,c),f.lastUpdate=b)}
function Sf(a,b,c){var d=a.updateQueue;d=null===d?a.updateQueue=Nf(a.memoizedState):Tf(a,d);null===d.lastCapturedUpdate?d.firstCapturedUpdate=d.lastCapturedUpdate=b:(d.lastCapturedUpdate.next=b,d.lastCapturedUpdate=b);if(0===d.expirationTime||d.expirationTime>c)d.expirationTime=c}function Tf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Of(b));return b}
function Uf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,"function"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e="function"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return p({},d,e);case 2:Mf=!0}return d}
function Vf(a,b,c,d,e){Mf=!1;if(!(0===b.expirationTime||b.expirationTime>e)){b=Tf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,n=f;null!==k;){var r=k.expirationTime;if(r>e){if(null===g&&(g=k,f=n),0===h||h>r)h=r}else n=Uf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}r=null;for(k=b.firstCapturedUpdate;null!==k;){var w=k.expirationTime;if(w>e){if(null===r&&(r=k,null===
g&&(f=n)),0===h||h>w)h=w}else n=Uf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===r?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===r&&(f=n);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=r;b.expirationTime=h;a.memoizedState=n}}
function Wf(a,b){"function"!==typeof a?A("191",a):void 0;a.call(b)}
function Xf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);a=b.firstEffect;for(b.firstEffect=b.lastEffect=null;null!==a;){var d=a.callback;null!==d&&(a.callback=null,Wf(d,c));a=a.nextEffect}a=b.firstCapturedEffect;for(b.firstCapturedEffect=b.lastCapturedEffect=null;null!==a;)b=a.callback,null!==b&&(a.callback=null,Wf(b,c)),a=a.nextEffect}
function Yf(a,b){return{value:a,source:b,stack:vc(b)}}var Zf=nf(null),$f=nf(null),ag=nf(0);function bg(a){var b=a.type._context;N(ag,b._changedBits,a);N($f,b._currentValue,a);N(Zf,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode}function cg(a){var b=ag.current,c=$f.current;M(Zf,a);M($f,a);M(ag,a);a=a.type._context;a._currentValue=c;a._changedBits=b}var dg={},eg=nf(dg),fg=nf(dg),gg=nf(dg);function hg(a){a===dg?A("174"):void 0;return a}
function jg(a,b){N(gg,b,a);N(fg,a,a);N(eg,dg,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Ie(null,"");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=Ie(b,c)}M(eg,a);N(eg,b,a)}function kg(a){M(eg,a);M(fg,a);M(gg,a)}function lg(a){fg.current===a&&(M(eg,a),M(fg,a))}function mg(a,b,c){var d=a.memoizedState;b=b(c,d);d=null===b||void 0===b?d:p({},d,b);a.memoizedState=d;a=a.updateQueue;null!==a&&0===a.expirationTime&&(a.baseState=d)}
var qg={isMounted:function(a){return(a=a._reactInternalFiber)?2===kd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=ng();d=og(d,a);var e=Pf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Rf(a,e,d);pg(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=ng();d=og(d,a);var e=Pf(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Rf(a,e,d);pg(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=ng();c=og(c,a);var d=Pf(c);d.tag=2;void 0!==
b&&null!==b&&(d.callback=b);Rf(a,d,c);pg(a,c)}};function rg(a,b,c,d,e,f){var g=a.stateNode;a=a.type;return"function"===typeof g.shouldComponentUpdate?g.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ea(b,c)||!ea(d,e):!0}
function sg(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&qg.enqueueReplaceState(b,b.state,null)}
function tg(a,b){var c=a.type,d=a.stateNode,e=a.pendingProps,f=qf(a);d.props=e;d.state=a.memoizedState;d.refs=ha;d.context=sf(a,f);f=a.updateQueue;null!==f&&(Vf(a,f,e,d,b),d.state=a.memoizedState);f=a.type.getDerivedStateFromProps;"function"===typeof f&&(mg(a,f,e),d.state=a.memoizedState);"function"===typeof c.getDerivedStateFromProps||"function"===typeof d.getSnapshotBeforeUpdate||"function"!==typeof d.UNSAFE_componentWillMount&&"function"!==typeof d.componentWillMount||(c=d.state,"function"===typeof d.componentWillMount&&
d.componentWillMount(),"function"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount(),c!==d.state&&qg.enqueueReplaceState(d,d.state,null),f=a.updateQueue,null!==f&&(Vf(a,f,e,d,b),d.state=a.memoizedState));"function"===typeof d.componentDidMount&&(a.effectTag|=4)}var ug=Array.isArray;
function vg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?A("110"):void 0,d=c.stateNode);d?void 0:A("147",a);var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ha?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}"string"!==typeof a?A("148"):void 0;c._owner?void 0:A("254",a)}return a}
function wg(a,b){"textarea"!==a.type&&A("31","[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,"")}
function xg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Af(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Df(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=vg(a,b,c),d.return=a,d;d=Bf(c,a.mode,d);d.ref=vg(a,b,c);d.return=a;return d}function n(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=
Ef(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function r(a,b,c,d,f){if(null===b||10!==b.tag)return b=Cf(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function w(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Df(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case gc:return c=Bf(b,a.mode,c),c.ref=vg(a,null,b),c.return=a,c;case hc:return b=Ef(b,a.mode,c),b.return=a,b}if(ug(b)||tc(b))return b=Cf(b,a.mode,c,null),b.return=
a,b;wg(a,b)}return null}function P(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case gc:return c.key===e?c.type===ic?r(a,b,c.props.children,d,e):k(a,b,c,d):null;case hc:return c.key===e?n(a,b,c,d):null}if(ug(c)||tc(c))return null!==e?null:r(a,b,c,d,null);wg(a,c)}return null}function nc(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);
if("object"===typeof d&&null!==d){switch(d.$$typeof){case gc:return a=a.get(null===d.key?c:d.key)||null,d.type===ic?r(b,a,d.props.children,e,d.key):k(b,a,d,e);case hc:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e)}if(ug(d)||tc(d))return a=a.get(c)||null,r(b,a,d,e,null);wg(b,d)}return null}function Jd(e,g,h,k){for(var u=null,x=null,t=g,q=g=0,n=null;null!==t&&q<h.length;q++){t.index>q?(n=t,t=null):n=t.sibling;var l=P(e,t,h[q],k);if(null===l){null===t&&(t=n);break}a&&t&&null===l.alternate&&b(e,
t);g=f(l,g,q);null===x?u=l:x.sibling=l;x=l;t=n}if(q===h.length)return c(e,t),u;if(null===t){for(;q<h.length;q++)if(t=w(e,h[q],k))g=f(t,g,q),null===x?u=t:x.sibling=t,x=t;return u}for(t=d(e,t);q<h.length;q++)if(n=nc(t,e,q,h[q],k))a&&null!==n.alternate&&t.delete(null===n.key?q:n.key),g=f(n,g,q),null===x?u=n:x.sibling=n,x=n;a&&t.forEach(function(a){return b(e,a)});return u}function E(e,g,h,k){var u=tc(h);"function"!==typeof u?A("150"):void 0;h=u.call(h);null==h?A("151"):void 0;for(var t=u=null,n=g,x=
g=0,y=null,l=h.next();null!==n&&!l.done;x++,l=h.next()){n.index>x?(y=n,n=null):y=n.sibling;var r=P(e,n,l.value,k);if(null===r){n||(n=y);break}a&&n&&null===r.alternate&&b(e,n);g=f(r,g,x);null===t?u=r:t.sibling=r;t=r;n=y}if(l.done)return c(e,n),u;if(null===n){for(;!l.done;x++,l=h.next())l=w(e,l.value,k),null!==l&&(g=f(l,g,x),null===t?u=l:t.sibling=l,t=l);return u}for(n=d(e,n);!l.done;x++,l=h.next())l=nc(n,e,x,l.value,k),null!==l&&(a&&null!==l.alternate&&n.delete(null===l.key?x:l.key),g=f(l,g,x),null===
t?u=l:t.sibling=l,t=l);a&&n.forEach(function(a){return b(e,a)});return u}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ic&&null===f.key;k&&(f=f.props.children);var n="object"===typeof f&&null!==f;if(n)switch(f.$$typeof){case gc:a:{n=f.key;for(k=d;null!==k;){if(k.key===n)if(10===k.tag?f.type===ic:k.type===f.type){c(a,k.sibling);d=e(k,f.type===ic?f.props.children:f.props,h);d.ref=vg(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===ic?(d=Cf(f.props.children,
a.mode,h,f.key),d.return=a,a=d):(h=Bf(f,a.mode,h),h.ref=vg(a,d,f),h.return=a,a=h)}return g(a);case hc:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Ef(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=
a,a=d):(c(a,d),d=Df(f,a.mode,h),d.return=a,a=d),g(a);if(ug(f))return Jd(a,d,f,h);if(tc(f))return E(a,d,f,h);n&&wg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 2:case 1:h=a.type,A("152",h.displayName||h.name||"Component")}return c(a,d)}}var yg=xg(!0),zg=xg(!1),Ag=null,Bg=null,Cg=!1;function Dg(a,b){var c=new zf(5,null,null,0);c.type="DELETED";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}
function Eg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Fg(a){if(Cg){var b=Bg;if(b){var c=b;if(!Eg(a,b)){b=jf(c);if(!b||!Eg(a,b)){a.effectTag|=2;Cg=!1;Ag=a;return}Dg(Ag,c)}Ag=a;Bg=kf(b)}else a.effectTag|=2,Cg=!1,Ag=a}}
function Gg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;Ag=a}function Hg(a){if(a!==Ag)return!1;if(!Cg)return Gg(a),Cg=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!ef(b,a.memoizedProps))for(b=Bg;b;)Dg(a,b),b=jf(b);Gg(a);Bg=Ag?jf(a.stateNode):null;return!0}function Ig(){Bg=Ag=null;Cg=!1}function Q(a,b,c){Jg(a,b,c,b.expirationTime)}function Jg(a,b,c,d){b.child=null===a?zg(b,null,c,d):yg(b,a.child,c,d)}
function Kg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Lg(a,b,c,d,e){Kg(a,b);var f=0!==(b.effectTag&64);if(!c&&!f)return d&&yf(b,!1),R(a,b);c=b.stateNode;ec.current=b;var g=f?null:c.render();b.effectTag|=1;f&&(Jg(a,b,null,e),b.child=null);Jg(a,b,g,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&yf(b,!0);return b.child}
function Mg(a){var b=a.stateNode;b.pendingContext?vf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&vf(a,b.context,!1);jg(a,b.containerInfo)}
function Ng(a,b,c,d){var e=a.child;null!==e&&(e.return=a);for(;null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var g=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==g&&(0===g.expirationTime||g.expirationTime>d)&&(g.expirationTime=d);else if(null!==g&&(0===g.expirationTime||g.expirationTime>d))g.expirationTime=d;else break;f=f.return}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=
e.child}if(null!==f)f.return=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){e.return=f.return;f=e;break}f=f.return}e=f}}
function Rg(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=!0;if(O.current)g=!1;else if(f===e)return b.stateNode=0,bg(b),R(a,b);var h=e.value;b.memoizedProps=e;if(null===f)h=1073741823;else if(f.value===e.value){if(f.children===e.children&&g)return b.stateNode=0,bg(b),R(a,b);h=0}else{var k=f.value;if(k===h&&(0!==k||1/k===1/h)||k!==k&&h!==h){if(f.children===e.children&&g)return b.stateNode=0,bg(b),R(a,b);h=0}else if(h="function"===typeof d._calculateChangedBits?d._calculateChangedBits(k,
h):1073741823,h|=0,0===h){if(f.children===e.children&&g)return b.stateNode=0,bg(b),R(a,b)}else Ng(b,d,h,c)}b.stateNode=h;bg(b);Q(a,b,e.children);return b.child}function R(a,b){null!==a&&b.child!==a.child?A("153"):void 0;if(null!==b.child){a=b.child;var c=Af(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Af(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}
function Sg(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:Mg(b);break;case 2:xf(b);break;case 4:jg(b,b.stateNode.containerInfo);break;case 13:bg(b)}return null}switch(b.tag){case 0:null!==a?A("155"):void 0;var d=b.type,e=b.pendingProps,f=qf(b);f=sf(b,f);d=d(e,f);b.effectTag|=1;"object"===typeof d&&null!==d&&"function"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,f=f.getDerivedStateFromProps,"function"===
typeof f&&mg(b,f,e),e=xf(b),d.updater=qg,b.stateNode=d,d._reactInternalFiber=b,tg(b,c),a=Lg(a,b,!0,e,c)):(b.tag=1,Q(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,O.current||b.memoizedProps!==c?(d=qf(b),d=sf(b,d),e=e(c,d),b.effectTag|=1,Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 2:e=xf(b);if(null===a)if(null===b.stateNode){var g=b.pendingProps,h=b.type;d=qf(b);var k=2===b.tag&&null!=b.type.contextTypes;f=k?sf(b,d):ha;g=new h(g,f);b.memoizedState=null!==
g.state&&void 0!==g.state?g.state:null;g.updater=qg;b.stateNode=g;g._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=d,k.__reactInternalMemoizedMaskedChildContext=f);tg(b,c);d=!0}else{h=b.type;d=b.stateNode;k=b.memoizedProps;f=b.pendingProps;d.props=k;var n=d.context;g=qf(b);g=sf(b,g);var r=h.getDerivedStateFromProps;(h="function"===typeof r||"function"===typeof d.getSnapshotBeforeUpdate)||"function"!==typeof d.UNSAFE_componentWillReceiveProps&&"function"!==typeof d.componentWillReceiveProps||
(k!==f||n!==g)&&sg(b,d,f,g);Mf=!1;var w=b.memoizedState;n=d.state=w;var P=b.updateQueue;null!==P&&(Vf(b,P,f,d,c),n=b.memoizedState);k!==f||w!==n||O.current||Mf?("function"===typeof r&&(mg(b,r,f),n=b.memoizedState),(k=Mf||rg(b,k,f,w,n,g))?(h||"function"!==typeof d.UNSAFE_componentWillMount&&"function"!==typeof d.componentWillMount||("function"===typeof d.componentWillMount&&d.componentWillMount(),"function"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount()),"function"===typeof d.componentDidMount&&
(b.effectTag|=4)):("function"===typeof d.componentDidMount&&(b.effectTag|=4),b.memoizedProps=f,b.memoizedState=n),d.props=f,d.state=n,d.context=g,d=k):("function"===typeof d.componentDidMount&&(b.effectTag|=4),d=!1)}else h=b.type,d=b.stateNode,f=b.memoizedProps,k=b.pendingProps,d.props=f,n=d.context,g=qf(b),g=sf(b,g),r=h.getDerivedStateFromProps,(h="function"===typeof r||"function"===typeof d.getSnapshotBeforeUpdate)||"function"!==typeof d.UNSAFE_componentWillReceiveProps&&"function"!==typeof d.componentWillReceiveProps||
(f!==k||n!==g)&&sg(b,d,k,g),Mf=!1,n=b.memoizedState,w=d.state=n,P=b.updateQueue,null!==P&&(Vf(b,P,k,d,c),w=b.memoizedState),f!==k||n!==w||O.current||Mf?("function"===typeof r&&(mg(b,r,k),w=b.memoizedState),(r=Mf||rg(b,f,k,n,w,g))?(h||"function"!==typeof d.UNSAFE_componentWillUpdate&&"function"!==typeof d.componentWillUpdate||("function"===typeof d.componentWillUpdate&&d.componentWillUpdate(k,w,g),"function"===typeof d.UNSAFE_componentWillUpdate&&d.UNSAFE_componentWillUpdate(k,w,g)),"function"===typeof d.componentDidUpdate&&
(b.effectTag|=4),"function"===typeof d.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),"function"!==typeof d.getSnapshotBeforeUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),b.memoizedProps=k,b.memoizedState=w),d.props=k,d.state=w,d.context=g,d=r):("function"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),"function"!==typeof d.getSnapshotBeforeUpdate||
f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),d=!1);return Lg(a,b,d,e,c);case 3:Mg(b);e=b.updateQueue;if(null!==e)if(d=b.memoizedState,d=null!==d?d.element:null,Vf(b,e,b.pendingProps,null,c),e=b.memoizedState.element,e===d)Ig(),a=R(a,b);else{d=b.stateNode;if(d=(null===a||null===a.child)&&d.hydrate)Bg=kf(b.stateNode.containerInfo),Ag=b,d=Cg=!0;d?(b.effectTag|=2,b.child=zg(b,null,e,c)):(Ig(),Q(a,b,e));a=b.child}else Ig(),a=R(a,b);return a;case 5:a:{hg(gg.current);e=hg(eg.current);d=Ie(e,
b.type);e!==d&&(N(fg,b,b),N(eg,d,b));null===a&&Fg(b);e=b.type;k=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!O.current&&k===d){if(k=b.mode&1&&!!d.hidden)b.expirationTime=1073741823;if(!k||1073741823!==c){a=R(a,b);break a}}k=d.children;ef(e,d)?k=null:f&&ef(e,f)&&(b.effectTag|=16);Kg(a,b);1073741823!==c&&b.mode&1&&d.hidden?(b.expirationTime=1073741823,b.memoizedProps=d,a=null):(Q(a,b,k),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Fg(b),b.memoizedProps=b.pendingProps,
null;case 16:return null;case 4:return jg(b,b.stateNode.containerInfo),e=b.pendingProps,O.current||b.memoizedProps!==e?(null===a?b.child=yg(b,null,e,c):Q(a,b,e),b.memoizedProps=e,a=b.child):a=R(a,b),a;case 14:return e=b.type.render,c=b.pendingProps,d=b.ref,O.current||b.memoizedProps!==c||d!==(null!==a?a.ref:null)?(e=e(c,d),Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 10:return c=b.pendingProps,O.current||b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 11:return c=
b.pendingProps.children,O.current||null!==c&&b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 15:return c=b.pendingProps,b.memoizedProps===c?a=R(a,b):(Q(a,b,c.children),b.memoizedProps=c,a=b.child),a;case 13:return Rg(a,b,c);case 12:a:if(d=b.type,f=b.pendingProps,k=b.memoizedProps,e=d._currentValue,g=d._changedBits,O.current||0!==g||k!==f){b.memoizedProps=f;h=f.unstable_observedBits;if(void 0===h||null===h)h=1073741823;b.stateNode=h;if(0!==(g&h))Ng(b,d,g,c);else if(k===f){a=
R(a,b);break a}c=f.children;c=c(e);b.effectTag|=1;Q(a,b,c);a=b.child}else a=R(a,b);return a;default:A("156")}}function Tg(a){a.effectTag|=4}var Ug=void 0,Vg=void 0,Wg=void 0;Ug=function(){};Vg=function(a,b,c){(b.updateQueue=c)&&Tg(b)};Wg=function(a,b,c,d){c!==d&&Tg(b)};
function Xg(a,b){var c=b.pendingProps;switch(b.tag){case 1:return null;case 2:return tf(b),null;case 3:kg(b);uf(b);var d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Hg(b),b.effectTag&=-3;Ug(b);return null;case 5:lg(b);d=hg(gg.current);var e=b.type;if(null!==a&&null!=b.stateNode){var f=a.memoizedProps,g=b.stateNode,h=hg(eg.current);g=Xe(g,e,f,c,d);Vg(a,b,g,e,f,c,d,h);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?
A("166"):void 0,null;a=hg(eg.current);if(Hg(b))c=b.stateNode,e=b.type,f=b.memoizedProps,c[C]=b,c[Ma]=f,d=Ze(c,e,f,a,d),b.updateQueue=d,null!==d&&Tg(b);else{a=Ue(e,c,d,a);a[C]=b;a[Ma]=c;a:for(f=b.child;null!==f;){if(5===f.tag||6===f.tag)a.appendChild(f.stateNode);else if(4!==f.tag&&null!==f.child){f.child.return=f;f=f.child;continue}if(f===b)break;for(;null===f.sibling;){if(null===f.return||f.return===b)break a;f=f.return}f.sibling.return=f.return;f=f.sibling}We(a,e,c,d);df(e,c)&&Tg(b);b.stateNode=
a}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)Wg(a,b,a.memoizedProps,c);else{if("string"!==typeof c)return null===b.stateNode?A("166"):void 0,null;d=hg(gg.current);hg(eg.current);Hg(b)?(d=b.stateNode,c=b.memoizedProps,d[C]=b,$e(d,c)&&Tg(b)):(d=Ve(c,d),d[C]=b,b.stateNode=d)}return null;case 14:return null;case 16:return null;case 10:return null;case 11:return null;case 15:return null;case 4:return kg(b),Ug(b),null;case 13:return cg(b),null;case 12:return null;case 0:A("167");
default:A("156")}}function Yg(a,b){var c=b.source;null===b.stack&&null!==c&&vc(c);null!==c&&uc(c);b=b.value;null!==a&&2===a.tag&&uc(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}function Zg(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){$g(a,c)}else b.current=null}
function ah(a){"function"===typeof Lf&&Lf(a);switch(a.tag){case 2:Zg(a);var b=a.stateNode;if("function"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){$g(a,c)}break;case 5:Zg(a);break;case 4:bh(a)}}function ch(a){return 5===a.tag||3===a.tag||4===a.tag}
function dh(a){a:{for(var b=a.return;null!==b;){if(ch(b)){var c=b;break a}b=b.return}A("160");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:A("161")}c.effectTag&16&&(Le(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ch(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;
if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?f.parentNode.insertBefore(g,f):f.appendChild(g)):b.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===
e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}
function bh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?A("160"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(ah(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?
(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?d=b.stateNode.containerInfo:ah(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}
function eh(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&(c[Ma]=d,Ye(c,f,e,a,d))}break;case 6:null===b.stateNode?A("162"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 15:break;case 16:break;default:A("163")}}function fh(a,b,c){c=Pf(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){gh(d);Yg(a,b)};return c}
function hh(a,b,c){c=Pf(c);c.tag=3;var d=a.stateNode;null!==d&&"function"===typeof d.componentDidCatch&&(c.callback=function(){null===ih?ih=new Set([this]):ih.add(this);var c=b.value,d=b.stack;Yg(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:""})});return c}
function jh(a,b,c,d,e,f){c.effectTag|=512;c.firstEffect=c.lastEffect=null;d=Yf(d,c);a=b;do{switch(a.tag){case 3:a.effectTag|=1024;d=fh(a,d,f);Sf(a,d,f);return;case 2:if(b=d,c=a.stateNode,0===(a.effectTag&64)&&null!==c&&"function"===typeof c.componentDidCatch&&(null===ih||!ih.has(c))){a.effectTag|=1024;d=hh(a,b,f);Sf(a,d,f);return}}a=a.return}while(null!==a)}
function kh(a){switch(a.tag){case 2:tf(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return kg(a),uf(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return lg(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 4:return kg(a),null;case 13:return cg(a),null;default:return null}}var lh=ff(),mh=2,nh=lh,oh=0,ph=0,qh=!1,S=null,rh=null,T=0,sh=-1,th=!1,U=null,uh=!1,vh=!1,ih=null;
function wh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 2:tf(b);break;case 3:kg(b);uf(b);break;case 5:lg(b);break;case 4:kg(b);break;case 13:cg(b)}a=a.return}rh=null;T=0;sh=-1;th=!1;S=null;vh=!1}
function xh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){b=Xg(b,a,T);var e=a;if(1073741823===T||1073741823!==e.expirationTime){var f=0;switch(e.tag){case 3:case 2:var g=e.updateQueue;null!==g&&(f=g.expirationTime)}for(g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&
(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{vh=!0;break}}else{a=kh(a,th,T);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}
function yh(a){var b=Sg(a.alternate,a,T);null===b&&(b=xh(a));ec.current=null;return b}
function zh(a,b,c){qh?A("243"):void 0;qh=!0;if(b!==T||a!==rh||null===S)wh(),rh=a,T=b,sh=-1,S=Af(rh.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;th=!c||T<=mh;do{try{if(c)for(;null!==S&&!Ah();)S=yh(S);else for(;null!==S;)S=yh(S)}catch(f){if(null===S)d=!0,gh(f);else{null===S?A("271"):void 0;c=S;var e=c.return;if(null===e){d=!0;gh(f);break}jh(a,e,c,f,th,T,nh);S=xh(c)}}break}while(1);qh=!1;if(d)return null;if(null===S){if(vh)return a.pendingCommitExpirationTime=b,a.current.alternate;th?A("262"):
void 0;0<=sh&&setTimeout(function(){var b=a.current.expirationTime;0!==b&&(0===a.remainingExpirationTime||a.remainingExpirationTime<b)&&Bh(a,b)},sh);Ch(a.current.expirationTime)}return null}
function $g(a,b){var c;a:{qh&&!uh?A("263"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromCatch||"function"===typeof d.componentDidCatch&&(null===ih||!ih.has(d))){a=Yf(b,a);a=hh(c,a,1);Rf(c,a,1);pg(c,1);c=void 0;break a}break;case 3:a=Yf(b,a);a=fh(c,a,1);Rf(c,a,1);pg(c,1);c=void 0;break a}c=c.return}3===a.tag&&(c=Yf(b,a),c=fh(a,c,1),Rf(a,c,1),pg(a,1));c=void 0}return c}
function Dh(){var a=2+25*(((ng()-2+500)/25|0)+1);a<=oh&&(a=oh+1);return oh=a}function og(a,b){a=0!==ph?ph:qh?uh?1:T:b.mode&1?Eh?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1):1;Eh&&(0===Fh||a>Fh)&&(Fh=a);return a}
function pg(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a.return)if(3===a.tag){var c=a.stateNode;!qh&&0!==T&&b<T&&wh();var d=c.current.expirationTime;qh&&!uh&&rh===c||Bh(c,d);Gh>Hh&&A("185")}else break;a=a.return}}function ng(){nh=ff()-lh;return mh=(nh/10|0)+2}
function Ih(a){var b=ph;ph=2+25*(((ng()-2+500)/25|0)+1);try{return a()}finally{ph=b}}function Jh(a,b,c,d,e){var f=ph;ph=1;try{return a(b,c,d,e)}finally{ph=f}}var Kh=null,V=null,Lh=0,Mh=void 0,W=!1,X=null,Y=0,Fh=0,Nh=!1,Oh=!1,Ph=null,Qh=null,Z=!1,Rh=!1,Eh=!1,Sh=null,Hh=1E3,Gh=0,Th=1;function Uh(a){if(0!==Lh){if(a>Lh)return;null!==Mh&&hf(Mh)}var b=ff()-lh;Lh=a;Mh=gf(Vh,{timeout:10*(a-2)-b})}
function Bh(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===V?(Kh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=Kh);else{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}W||(Z?Rh&&(X=a,Y=1,Wh(a,1,!1)):1===b?Xh():Uh(b))}
function Yh(){var a=0,b=null;if(null!==V)for(var c=V,d=Kh;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===V?A("244"):void 0;if(d===d.nextScheduledRoot){Kh=V=d.nextScheduledRoot=null;break}else if(d===Kh)Kh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=Kh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===V)break;
c=d;d=d.nextScheduledRoot}}c=X;null!==c&&c===b&&1===a?Gh++:Gh=0;X=b;Y=a}function Vh(a){Zh(0,!0,a)}function Xh(){Zh(1,!1,null)}function Zh(a,b,c){Qh=c;Yh();if(b)for(;null!==X&&0!==Y&&(0===a||a>=Y)&&(!Nh||ng()>=Y);)ng(),Wh(X,Y,!Nh),Yh();else for(;null!==X&&0!==Y&&(0===a||a>=Y);)Wh(X,Y,!1),Yh();null!==Qh&&(Lh=0,Mh=null);0!==Y&&Uh(Y);Qh=null;Nh=!1;$h()}function ai(a,b){W?A("253"):void 0;X=a;Y=b;Wh(a,b,!1);Xh();$h()}
function $h(){Gh=0;if(null!==Sh){var a=Sh;Sh=null;for(var b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Oh||(Oh=!0,Ph=d)}}}if(Oh)throw a=Ph,Ph=null,Oh=!1,a;}function Wh(a,b,c){W?A("245"):void 0;W=!0;c?(c=a.finishedWork,null!==c?bi(a,c,b):(c=zh(a,b,!0),null!==c&&(Ah()?a.finishedWork=c:bi(a,c,b)))):(c=a.finishedWork,null!==c?bi(a,c,b):(c=zh(a,b,!1),null!==c&&bi(a,c,b)));W=!1}
function bi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Sh?Sh=[d]:Sh.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=0;return}a.finishedWork=null;uh=qh=!0;c=b.stateNode;c.current===b?A("177"):void 0;d=c.pendingCommitExpirationTime;0===d?A("261"):void 0;c.pendingCommitExpirationTime=0;ng();ec.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var e=b.firstEffect}else e=b;else e=b.firstEffect;bf=Id;var f=da();if(Vd(f)){if("selectionStart"in
f)var g={start:f.selectionStart,end:f.selectionEnd};else a:{var h=window.getSelection&&window.getSelection();if(h&&0!==h.rangeCount){g=h.anchorNode;var k=h.anchorOffset,n=h.focusNode;h=h.focusOffset;try{g.nodeType,n.nodeType}catch(Wa){g=null;break a}var r=0,w=-1,P=-1,nc=0,Jd=0,E=f,t=null;b:for(;;){for(var x;;){E!==g||0!==k&&3!==E.nodeType||(w=r+k);E!==n||0!==h&&3!==E.nodeType||(P=r+h);3===E.nodeType&&(r+=E.nodeValue.length);if(null===(x=E.firstChild))break;t=E;E=x}for(;;){if(E===f)break b;t===g&&
++nc===k&&(w=r);t===n&&++Jd===h&&(P=r);if(null!==(x=E.nextSibling))break;E=t;t=E.parentNode}E=x}g=-1===w||-1===P?null:{start:w,end:P}}else g=null}g=g||{start:0,end:0}}else g=null;cf={focusedElem:f,selectionRange:g};Kd(!1);for(U=e;null!==U;){f=!1;g=void 0;try{for(;null!==U;){if(U.effectTag&256){var u=U.alternate;k=U;switch(k.tag){case 2:if(k.effectTag&256&&null!==u){var y=u.memoizedProps,D=u.memoizedState,ja=k.stateNode;ja.props=k.memoizedProps;ja.state=k.memoizedState;var ni=ja.getSnapshotBeforeUpdate(y,
D);ja.__reactInternalSnapshotBeforeUpdate=ni}break;case 3:case 5:case 6:case 4:break;default:A("163")}}U=U.nextEffect}}catch(Wa){f=!0,g=Wa}f&&(null===U?A("178"):void 0,$g(U,g),null!==U&&(U=U.nextEffect))}for(U=e;null!==U;){u=!1;y=void 0;try{for(;null!==U;){var q=U.effectTag;q&16&&Le(U.stateNode,"");if(q&128){var z=U.alternate;if(null!==z){var l=z.ref;null!==l&&("function"===typeof l?l(null):l.current=null)}}switch(q&14){case 2:dh(U);U.effectTag&=-3;break;case 6:dh(U);U.effectTag&=-3;eh(U.alternate,
U);break;case 4:eh(U.alternate,U);break;case 8:D=U,bh(D),D.return=null,D.child=null,D.alternate&&(D.alternate.child=null,D.alternate.return=null)}U=U.nextEffect}}catch(Wa){u=!0,y=Wa}u&&(null===U?A("178"):void 0,$g(U,y),null!==U&&(U=U.nextEffect))}l=cf;z=da();q=l.focusedElem;u=l.selectionRange;if(z!==q&&fa(document.documentElement,q)){null!==u&&Vd(q)&&(z=u.start,l=u.end,void 0===l&&(l=z),"selectionStart"in q?(q.selectionStart=z,q.selectionEnd=Math.min(l,q.value.length)):window.getSelection&&(z=window.getSelection(),
y=q[lb()].length,l=Math.min(u.start,y),u=void 0===u.end?l:Math.min(u.end,y),!z.extend&&l>u&&(y=u,u=l,l=y),y=Ud(q,l),D=Ud(q,u),y&&D&&(1!==z.rangeCount||z.anchorNode!==y.node||z.anchorOffset!==y.offset||z.focusNode!==D.node||z.focusOffset!==D.offset)&&(ja=document.createRange(),ja.setStart(y.node,y.offset),z.removeAllRanges(),l>u?(z.addRange(ja),z.extend(D.node,D.offset)):(ja.setEnd(D.node,D.offset),z.addRange(ja)))));z=[];for(l=q;l=l.parentNode;)1===l.nodeType&&z.push({element:l,left:l.scrollLeft,
top:l.scrollTop});"function"===typeof q.focus&&q.focus();for(q=0;q<z.length;q++)l=z[q],l.element.scrollLeft=l.left,l.element.scrollTop=l.top}cf=null;Kd(bf);bf=null;c.current=b;for(U=e;null!==U;){e=!1;q=void 0;try{for(z=d;null!==U;){var ig=U.effectTag;if(ig&36){var oc=U.alternate;l=U;u=z;switch(l.tag){case 2:var ca=l.stateNode;if(l.effectTag&4)if(null===oc)ca.props=l.memoizedProps,ca.state=l.memoizedState,ca.componentDidMount();else{var xi=oc.memoizedProps,yi=oc.memoizedState;ca.props=l.memoizedProps;
ca.state=l.memoizedState;ca.componentDidUpdate(xi,yi,ca.__reactInternalSnapshotBeforeUpdate)}var Og=l.updateQueue;null!==Og&&(ca.props=l.memoizedProps,ca.state=l.memoizedState,Xf(l,Og,ca,u));break;case 3:var Pg=l.updateQueue;if(null!==Pg){y=null;if(null!==l.child)switch(l.child.tag){case 5:y=l.child.stateNode;break;case 2:y=l.child.stateNode}Xf(l,Pg,y,u)}break;case 5:var zi=l.stateNode;null===oc&&l.effectTag&4&&df(l.type,l.memoizedProps)&&zi.focus();break;case 6:break;case 4:break;case 15:break;case 16:break;
default:A("163")}}if(ig&128){l=void 0;var yc=U.ref;if(null!==yc){var Qg=U.stateNode;switch(U.tag){case 5:l=Qg;break;default:l=Qg}"function"===typeof yc?yc(l):yc.current=l}}var Ai=U.nextEffect;U.nextEffect=null;U=Ai}}catch(Wa){e=!0,q=Wa}e&&(null===U?A("178"):void 0,$g(U,q),null!==U&&(U=U.nextEffect))}qh=uh=!1;"function"===typeof Kf&&Kf(b.stateNode);b=c.current.expirationTime;0===b&&(ih=null);a.remainingExpirationTime=b}function Ah(){return null===Qh||Qh.timeRemaining()>Th?!1:Nh=!0}
function gh(a){null===X?A("246"):void 0;X.remainingExpirationTime=0;Oh||(Oh=!0,Ph=a)}function Ch(a){null===X?A("246"):void 0;X.remainingExpirationTime=a}function ci(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Xh()}}function di(a,b){if(Z&&!Rh){Rh=!0;try{return a(b)}finally{Rh=!1}}return a(b)}function ei(a,b){W?A("187"):void 0;var c=Z;Z=!0;try{return Jh(a,b)}finally{Z=c,Xh()}}
function fi(a,b,c){if(Eh)return a(b,c);Z||W||0===Fh||(Zh(Fh,!1,null),Fh=0);var d=Eh,e=Z;Z=Eh=!0;try{return a(b,c)}finally{Eh=d,(Z=e)||W||Xh()}}function gi(a){var b=Z;Z=!0;try{Jh(a)}finally{(Z=b)||W||Zh(1,!1,null)}}
function hi(a,b,c,d,e){var f=b.current;if(c){c=c._reactInternalFiber;var g;b:{2===kd(c)&&2===c.tag?void 0:A("170");for(g=c;3!==g.tag;){if(rf(g)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}(g=g.return)?void 0:A("171")}g=g.stateNode.context}c=rf(c)?wf(c,g):g}else c=ha;null===b.context?b.context=c:b.pendingContext=c;b=e;e=Pf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);Rf(f,e,d);pg(f,d);return d}
function ii(a){var b=a._reactInternalFiber;void 0===b&&("function"===typeof a.render?A("188"):A("268",Object.keys(a)));a=nd(b);return null===a?null:a.stateNode}function ji(a,b,c,d){var e=b.current,f=ng();e=og(f,e);return hi(a,b,c,e,d)}function ki(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}
function li(a){var b=a.findFiberByHostInstance;return Jf(p({},a,{findHostInstanceByFiber:function(a){a=nd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}
var mi={updateContainerAtExpirationTime:hi,createContainer:function(a,b,c){return Ff(a,b,c)},updateContainer:ji,flushRoot:ai,requestWork:Bh,computeUniqueAsyncExpiration:Dh,batchedUpdates:ci,unbatchedUpdates:di,deferredUpdates:Ih,syncUpdates:Jh,interactiveUpdates:fi,flushInteractiveUpdates:function(){W||0===Fh||(Zh(Fh,!1,null),Fh=0)},flushControlled:gi,flushSync:ei,getPublicRootInstance:ki,findHostInstance:ii,findHostInstanceWithNoPortals:function(a){a=od(a);return null===a?null:a.stateNode},injectIntoDevTools:li};
function oi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:hc,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}Kb.injectFiberControlledHostComponent(af);function pi(a){this._expirationTime=Dh();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}
pi.prototype.render=function(a){this._defer?void 0:A("250");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new qi;hi(a,b,null,c,d._onCommit);return d};pi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};
pi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:A("251");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?A("251"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;ai(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=
null,this._defer=!1};pi.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function qi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}qi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};
qi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];"function"!==typeof c?A("191",c):void 0;c()}}};function ri(a,b,c){this._internalRoot=Ff(a,b,c)}ri.prototype.render=function(a,b){var c=this._internalRoot,d=new qi;b=void 0===b?null:b;null!==b&&d.then(b);ji(a,c,null,d._onCommit);return d};
ri.prototype.unmount=function(a){var b=this._internalRoot,c=new qi;a=void 0===a?null:a;null!==a&&c.then(a);ji(null,b,null,c._onCommit);return c};ri.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new qi;c=void 0===c?null:c;null!==c&&e.then(c);ji(b,d,a,e._onCommit);return e};
ri.prototype.createBatch=function(){var a=new pi(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function si(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}Sb=mi.batchedUpdates;Tb=mi.interactiveUpdates;Ub=mi.flushInteractiveUpdates;
function ti(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new ri(a,!1,b)}
function ui(a,b,c,d,e){si(c)?void 0:A("200");var f=c._reactRootContainer;if(f){if("function"===typeof e){var g=e;e=function(){var a=ki(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=ti(c,d);if("function"===typeof e){var h=e;e=function(){var a=ki(f._internalRoot);h.call(a)}}di(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return ki(f._internalRoot)}
function vi(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;si(b)?void 0:A("200");return oi(a,b,null,c)}
var wi={createPortal:vi,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:ii(a)},hydrate:function(a,b,c){return ui(null,a,b,!0,c)},render:function(a,b,c){return ui(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?A("38"):void 0;return ui(a,b,c,!1,d)},unmountComponentAtNode:function(a){si(a)?void 0:A("40");return a._reactRootContainer?(di(function(){ui(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return vi.apply(void 0,
arguments)},unstable_batchedUpdates:ci,unstable_deferredUpdates:Ih,unstable_interactiveUpdates:fi,flushSync:ei,unstable_flushControlled:gi,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ka,EventPluginRegistry:va,EventPropagators:$a,ReactControlledComponent:Rb,ReactDOMComponentTree:Qa,ReactDOMEventListener:Od},unstable_createRoot:function(a,b){return new ri(a,!0,null!=b&&!0===b.hydrate)}};li({findFiberByHostInstance:Na,bundleType:0,version:"16.4.2",rendererPackageName:"react-dom"});
var Bi={default:wi},Ci=Bi&&wi||Bi;module.exports=Ci.default?Ci.default:Ci;


/***/ }),
/* 304 */
/*!*********************************************!*\
  !*** ./node_modules/fbjs/lib/isTextNode.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var isNode = __webpack_require__(/*! ./isNode */ 305);

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

/***/ }),
/* 305 */
/*!*****************************************!*\
  !*** ./node_modules/fbjs/lib/isNode.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;

/***/ }),
/* 306 */
/*!*************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom.development.js ***!
  \*************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.4.2
 * react-dom.development.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 21);
var React = __webpack_require__(/*! react */ 3);
var warning = __webpack_require__(/*! fbjs/lib/warning */ 70);
var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 107);
var _assign = __webpack_require__(/*! object-assign */ 20);
var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 23);
var checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ 69);
var getActiveElement = __webpack_require__(/*! fbjs/lib/getActiveElement */ 108);
var shallowEqual = __webpack_require__(/*! fbjs/lib/shallowEqual */ 109);
var containsNode = __webpack_require__(/*! fbjs/lib/containsNode */ 110);
var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 22);
var hyphenateStyleName = __webpack_require__(/*! fbjs/lib/hyphenateStyleName */ 307);
var camelizeStyleName = __webpack_require__(/*! fbjs/lib/camelizeStyleName */ 309);

// Relying on the `invariant()` implementation lets us
// have preserve the format and params in the www builds.

!React ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;

var invokeGuardedCallback = function (name, func, context, a, b, c, d, e, f) {
  this._hasCaughtError = false;
  this._caughtError = null;
  var funcArgs = Array.prototype.slice.call(arguments, 3);
  try {
    func.apply(context, funcArgs);
  } catch (error) {
    this._caughtError = error;
    this._hasCaughtError = true;
  }
};

{
  // In DEV mode, we swap out invokeGuardedCallback for a special version
  // that plays more nicely with the browser's DevTools. The idea is to preserve
  // "Pause on exceptions" behavior. Because React wraps all user-provided
  // functions in invokeGuardedCallback, and the production version of
  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
  // like caught exceptions, and the DevTools won't pause unless the developer
  // takes the extra step of enabling pause on caught exceptions. This is
  // untintuitive, though, because even though React has caught the error, from
  // the developer's perspective, the error is uncaught.
  //
  // To preserve the expected "Pause on exceptions" behavior, we don't use a
  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
  // DOM node, and call the user-provided callback from inside an event handler
  // for that fake event. If the callback throws, the error is "captured" using
  // a global event handler. But because the error happens in a different
  // event loop context, it does not interrupt the normal program flow.
  // Effectively, this gives us try-catch behavior without actually using
  // try-catch. Neat!

  // Check that the browser supports the APIs we need to implement our special
  // DEV version of invokeGuardedCallback
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');

    var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
      // If document doesn't exist we know for sure we will crash in this method
      // when we call document.createEvent(). However this can cause confusing
      // errors: https://github.com/facebookincubator/create-react-app/issues/3482
      // So we preemptively throw with a better message instead.
      !(typeof document !== 'undefined') ? invariant(false, 'The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.') : void 0;
      var evt = document.createEvent('Event');

      // Keeps track of whether the user-provided callback threw an error. We
      // set this to true at the beginning, then set it to false right after
      // calling the function. If the function errors, `didError` will never be
      // set to false. This strategy works even if the browser is flaky and
      // fails to call our global error handler, because it doesn't rely on
      // the error event at all.
      var didError = true;

      // Create an event handler for our fake event. We will synchronously
      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
      // call the user-provided callback.
      var funcArgs = Array.prototype.slice.call(arguments, 3);
      function callCallback() {
        // We immediately remove the callback from event listeners so that
        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
        // nested call would trigger the fake event handlers of any call higher
        // in the stack.
        fakeNode.removeEventListener(evtType, callCallback, false);
        func.apply(context, funcArgs);
        didError = false;
      }

      // Create a global error event handler. We use this to capture the value
      // that was thrown. It's possible that this error handler will fire more
      // than once; for example, if non-React code also calls `dispatchEvent`
      // and a handler for that event throws. We should be resilient to most of
      // those cases. Even if our error event handler fires more than once, the
      // last error event is always used. If the callback actually does error,
      // we know that the last error event is the correct one, because it's not
      // possible for anything else to have happened in between our callback
      // erroring and the code that follows the `dispatchEvent` call below. If
      // the callback doesn't error, but the error event was fired, we know to
      // ignore it because `didError` will be false, as described above.
      var error = void 0;
      // Use this to track whether the error event is ever called.
      var didSetError = false;
      var isCrossOriginError = false;

      function onError(event) {
        error = event.error;
        didSetError = true;
        if (error === null && event.colno === 0 && event.lineno === 0) {
          isCrossOriginError = true;
        }
      }

      // Create a fake event type.
      var evtType = 'react-' + (name ? name : 'invokeguardedcallback');

      // Attach our event handlers
      window.addEventListener('error', onError);
      fakeNode.addEventListener(evtType, callCallback, false);

      // Synchronously dispatch our fake event. If the user-provided function
      // errors, it will trigger our global error handler.
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);

      if (didError) {
        if (!didSetError) {
          // The callback errored, but the error event never fired.
          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
        } else if (isCrossOriginError) {
          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
        }
        this._hasCaughtError = true;
        this._caughtError = error;
      } else {
        this._hasCaughtError = false;
        this._caughtError = null;
      }

      // Remove our event listeners
      window.removeEventListener('error', onError);
    };

    invokeGuardedCallback = invokeGuardedCallbackDev;
  }
}

var invokeGuardedCallback$1 = invokeGuardedCallback;

var ReactErrorUtils = {
  // Used by Fiber to simulate a try-catch.
  _caughtError: null,
  _hasCaughtError: false,

  // Used by event system to capture/rethrow the first error.
  _rethrowError: null,
  _hasRethrowError: false,

  /**
   * Call a function while guarding against errors that happens within it.
   * Returns an error if it throws, otherwise null.
   *
   * In production, this is implemented using a try-catch. The reason we don't
   * use a try-catch directly is so that we can swap out a different
   * implementation in DEV mode.
   *
   * @param {String} name of the guard to use for logging or debugging
   * @param {Function} func The function to invoke
   * @param {*} context The context to use when calling the function
   * @param {...*} args Arguments for function
   */
  invokeGuardedCallback: function (name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback$1.apply(ReactErrorUtils, arguments);
  },

  /**
   * Same as invokeGuardedCallback, but instead of returning an error, it stores
   * it in a global so it can be rethrown by `rethrowCaughtError` later.
   * TODO: See if _caughtError and _rethrowError can be unified.
   *
   * @param {String} name of the guard to use for logging or debugging
   * @param {Function} func The function to invoke
   * @param {*} context The context to use when calling the function
   * @param {...*} args Arguments for function
   */
  invokeGuardedCallbackAndCatchFirstError: function (name, func, context, a, b, c, d, e, f) {
    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
    if (ReactErrorUtils.hasCaughtError()) {
      var error = ReactErrorUtils.clearCaughtError();
      if (!ReactErrorUtils._hasRethrowError) {
        ReactErrorUtils._hasRethrowError = true;
        ReactErrorUtils._rethrowError = error;
      }
    }
  },

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    return rethrowCaughtError.apply(ReactErrorUtils, arguments);
  },

  hasCaughtError: function () {
    return ReactErrorUtils._hasCaughtError;
  },

  clearCaughtError: function () {
    if (ReactErrorUtils._hasCaughtError) {
      var error = ReactErrorUtils._caughtError;
      ReactErrorUtils._caughtError = null;
      ReactErrorUtils._hasCaughtError = false;
      return error;
    } else {
      invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');
    }
  }
};

var rethrowCaughtError = function () {
  if (ReactErrorUtils._hasRethrowError) {
    var error = ReactErrorUtils._rethrowError;
    ReactErrorUtils._rethrowError = null;
    ReactErrorUtils._hasRethrowError = false;
    throw error;
  }
};

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;
    if (plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;
    plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;
  eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;
  registrationNameModules[registrationName] = pluginModule;
  registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  {
    var lowerCasedName = registrationName.toLowerCase();
    possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */

/**
 * Ordered list of injected plugins.
 */
var plugins = [];

/**
 * Mapping from event name to dispatch config
 */
var eventNameDispatchConfigs = {};

/**
 * Mapping from registration name to plugin module
 */
var registrationNameModules = {};

/**
 * Mapping from registration name to event name
 */
var registrationNameDependencies = {};

/**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */
var possibleRegistrationNames = {};
// Trust the developer to only use possibleRegistrationNames in true

/**
 * Injects an ordering of plugins (by plugin name). This allows the ordering
 * to be decoupled from injection of the actual plugins so that ordering is
 * always deterministic regardless of packaging, on-the-fly injection, etc.
 *
 * @param {array} InjectedEventPluginOrder
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginOrder}
 */
function injectEventPluginOrder(injectedEventPluginOrder) {
  !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0;
  // Clone the ordering so it cannot be dynamically mutated.
  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
  recomputePluginOrdering();
}

/**
 * Injects plugins to be used by `EventPluginHub`. The plugin names must be
 * in the ordering injected by `injectEventPluginOrder`.
 *
 * Plugins can be injected as part of page initialization or on-the-fly.
 *
 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginsByName}
 */
function injectEventPluginsByName(injectedNamesToPlugins) {
  var isOrderingDirty = false;
  for (var pluginName in injectedNamesToPlugins) {
    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
      continue;
    }
    var pluginModule = injectedNamesToPlugins[pluginName];
    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
      !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;
      namesToPlugins[pluginName] = pluginModule;
      isOrderingDirty = true;
    }
  }
  if (isOrderingDirty) {
    recomputePluginOrdering();
  }
}

var EventPluginRegistry = Object.freeze({
	plugins: plugins,
	eventNameDispatchConfigs: eventNameDispatchConfigs,
	registrationNameModules: registrationNameModules,
	registrationNameDependencies: registrationNameDependencies,
	possibleRegistrationNames: possibleRegistrationNames,
	injectEventPluginOrder: injectEventPluginOrder,
	injectEventPluginsByName: injectEventPluginsByName
});

var getFiberCurrentPropsFromNode = null;
var getInstanceFromNode = null;
var getNodeFromInstance = null;

var injection$1 = {
  injectComponentTree: function (Injected) {
    getFiberCurrentPropsFromNode = Injected.getFiberCurrentPropsFromNode;
    getInstanceFromNode = Injected.getInstanceFromNode;
    getNodeFromInstance = Injected.getNodeFromInstance;

    {
      !(getNodeFromInstance && getInstanceFromNode) ? warning(false, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  }
};

var validateEventDispatches = void 0;
{
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warning(false, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = getNodeFromInstance(inst);
  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */


/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */


/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 * @param {function} cb Callback invoked with each element or a collection.
 * @param {?} [scope] Scope used as `this` in a callback.
 */
function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */

/**
 * Methods for injecting dependencies.
 */
var injection = {
  /**
   * @param {array} InjectedEventPluginOrder
   * @public
   */
  injectEventPluginOrder: injectEventPluginOrder,

  /**
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   */
  injectEventPluginsByName: injectEventPluginsByName
};

/**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */
function getListener(inst, registrationName) {
  var listener = void 0;

  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
  // live here; needs to be moved to a better place soon
  var stateNode = inst.stateNode;
  if (!stateNode) {
    // Work in progress (ex: onload events in incremental mode).
    return null;
  }
  var props = getFiberCurrentPropsFromNode(stateNode);
  if (!props) {
    // Work in progress.
    return null;
  }
  listener = props[registrationName];
  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
    return null;
  }
  !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;
  return listener;
}

/**
 * Allows registered plugins an opportunity to extract events from top-level
 * native browser events.
 *
 * @return {*} An accumulation of synthetic events.
 * @internal
 */
function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var events = null;
  for (var i = 0; i < plugins.length; i++) {
    // Not every plugin in the ordering may be loaded at runtime.
    var possiblePlugin = plugins[i];
    if (possiblePlugin) {
      var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
      if (extractedEvents) {
        events = accumulateInto(events, extractedEvents);
      }
    }
  }
  return events;
}

function runEventsInBatch(events, simulated) {
  if (events !== null) {
    eventQueue = accumulateInto(eventQueue, events);
  }

  // Set `eventQueue` to null before processing it so that we can tell if more
  // events get enqueued while processing.
  var processingEventQueue = eventQueue;
  eventQueue = null;

  if (!processingEventQueue) {
    return;
  }

  if (simulated) {
    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
  } else {
    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
  }
  !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0;
  // This would be a good time to rethrow if any of the event handlers threw.
  ReactErrorUtils.rethrowCaughtError();
}

function runExtractedEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var events = extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
  runEventsInBatch(events, false);
}

var EventPluginHub = Object.freeze({
	injection: injection,
	getListener: getListener,
	runEventsInBatch: runEventsInBatch,
	runExtractedEventsInBatch: runExtractedEventsInBatch
});

var IndeterminateComponent = 0; // Before we know whether it is functional or class
var FunctionalComponent = 1;
var ClassComponent = 2;
var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
var HostComponent = 5;
var HostText = 6;



var Fragment = 10;
var Mode = 11;
var ContextConsumer = 12;
var ContextProvider = 13;
var ForwardRef = 14;
var Profiler = 15;
var TimeoutComponent = 16;

var randomKey = Math.random().toString(36).slice(2);
var internalInstanceKey = '__reactInternalInstance$' + randomKey;
var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;

function precacheFiberNode(hostInst, node) {
  node[internalInstanceKey] = hostInst;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  while (!node[internalInstanceKey]) {
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var inst = node[internalInstanceKey];
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber, this will always be the deepest root.
    return inst;
  }

  return null;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode$1(node) {
  var inst = node[internalInstanceKey];
  if (inst) {
    if (inst.tag === HostComponent || inst.tag === HostText) {
      return inst;
    } else {
      return null;
    }
  }
  return null;
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance$1(inst) {
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber this, is just the state node right now. We assume it will be
    // a host component or host text.
    return inst.stateNode;
  }

  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  invariant(false, 'getNodeFromInstance: Invalid argument.');
}

function getFiberCurrentPropsFromNode$1(node) {
  return node[internalEventHandlersKey] || null;
}

function updateFiberProps(node, props) {
  node[internalEventHandlersKey] = props;
}

var ReactDOMComponentTree = Object.freeze({
	precacheFiberNode: precacheFiberNode,
	getClosestInstanceFromNode: getClosestInstanceFromNode,
	getInstanceFromNode: getInstanceFromNode$1,
	getNodeFromInstance: getNodeFromInstance$1,
	getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode$1,
	updateFiberProps: updateFiberProps
});

function getParent(inst) {
  do {
    inst = inst.return;
    // TODO: If this is a HostRoot we might want to bail out.
    // That is depending on if we want nested subtrees (layers) to bubble
    // events to their parent. We could also go through parentNode on the
    // host node but that wouldn't work for React Native and doesn't let us
    // do the portal feature.
  } while (inst && inst.tag !== HostComponent);
  if (inst) {
    return inst;
  }
  return null;
}

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  var depthA = 0;
  for (var tempA = instA; tempA; tempA = getParent(tempA)) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = getParent(tempB)) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = getParent(instA);
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = getParent(instB);
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB || instA === instB.alternate) {
      return instA;
    }
    instA = getParent(instA);
    instB = getParent(instB);
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */


/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  return getParent(inst);
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = getParent(inst);
  }
  var i = void 0;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (true) {
    if (!from) {
      break;
    }
    if (from === common) {
      break;
    }
    var alternate = from.alternate;
    if (alternate !== null && alternate === common) {
      break;
    }
    pathFrom.push(from);
    from = getParent(from);
  }
  var pathTo = [];
  while (true) {
    if (!to) {
      break;
    }
    if (to === common) {
      break;
    }
    var _alternate = to.alternate;
    if (_alternate !== null && _alternate === common) {
      break;
    }
    pathTo.push(to);
    to = getParent(to);
  }
  for (var i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (var _i = pathTo.length; _i-- > 0;) {
    fn(pathTo[_i], 'captured', argTo);
  }
}

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing even a
 * single one.
 */

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  {
    !inst ? warning(false, 'Dispatching inst must not be null') : void 0;
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? getParentInstance(targetInst) : null;
    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (inst && event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

var EventPropagators = Object.freeze({
	accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches,
	accumulateDirectDispatches: accumulateDirectDispatches
});

// Do not uses the below two methods directly!
// Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.
// (It is the only module that is allowed to access these methods.)

function unsafeCastStringToDOMTopLevelType(topLevelType) {
  return topLevelType;
}

function unsafeCastDOMTopLevelTypeToString(topLevelType) {
  return topLevelType;
}

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return eventName;
}

/**
 * To identify top level events in ReactDOM, we use constants defined by this
 * module. This is the only module that uses the unsafe* methods to express
 * that the constants actually correspond to the browser event names. This lets
 * us save some bundle size by avoiding a top level type -> event name map.
 * The rest of ReactDOM code should import top level types from this file.
 */
var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');
var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));
var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));
var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));
var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');
var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');
var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');
var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');
var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');
var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');
var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');
var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');
var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');
var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');
var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');
var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');
var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');
var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');
var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');
var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');
var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');
var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');
var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');
var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');
var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');
var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');
var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');
var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');
var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');
var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');
var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');
var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');
var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');
var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');
var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');
var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');
var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');
var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');
var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');
var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');
var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');
var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');
var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');
var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');
var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');
var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');
var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');
var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');
var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');
var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');
var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');
var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');
var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');
var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');


var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');
var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');
var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');
var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');
var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');
var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');
var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');
var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');
var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');
var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');
var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');
var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');
var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');
var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');
var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');
var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');
var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');
var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');
var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');
var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');
var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');
var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));
var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');
var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');
var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel');

// List of events that need to be individually attached to media elements.
// Note that events in this list will *not* be listened to at the top level
// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.
var mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];

function getRawEventName(topLevelType) {
  return unsafeCastDOMTopLevelTypeToString(topLevelType);
}

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

/**
 * This helper object stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */
var compositionState = {
  _root: null,
  _startText: null,
  _fallbackText: null
};

function initialize(nativeEventTarget) {
  compositionState._root = nativeEventTarget;
  compositionState._startText = getText();
  return true;
}

function reset() {
  compositionState._root = null;
  compositionState._startText = null;
  compositionState._fallbackText = null;
}

function getData() {
  if (compositionState._fallbackText) {
    return compositionState._fallbackText;
  }

  var start = void 0;
  var startValue = compositionState._startText;
  var startLength = startValue.length;
  var end = void 0;
  var endValue = getText();
  var endLength = endValue.length;

  for (start = 0; start < startLength; start++) {
    if (startValue[start] !== endValue[start]) {
      break;
    }
  }

  var minEnd = startLength - start;
  for (end = 1; end <= minEnd; end++) {
    if (startValue[startLength - end] !== endValue[endLength - end]) {
      break;
    }
  }

  var sliceTail = end > 1 ? 1 - end : undefined;
  compositionState._fallbackText = endValue.slice(start, sliceTail);
  return compositionState._fallbackText;
}

function getText() {
  if ('value' in compositionState._root) {
    return compositionState._root.value;
  }
  return compositionState._root[getTextContentAccessor()];
}

/* eslint valid-typeof: 0 */

var didWarnForAddedNewProperty = false;
var EVENT_POOL_SIZE = 10;

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {
  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }
});

SyntheticEvent.Interface = EventInterface;

/**
 * Helper to reduce boilerplate when creating subclasses.
 */
SyntheticEvent.extend = function (Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  function Class() {
    return Super.apply(this, arguments);
  }
  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.extend = Super.extend;
  addEventPoolingTo(Class);

  return Class;
};

/** Proxying after everything set on SyntheticEvent
 * to resolve Proxy issue on some WebKit browsers
 * in which some Event properties are set to undefined (GH#10010)
 */
{
  var isProxySupported = typeof Proxy === 'function' &&
  // https://github.com/facebook/react/issues/12011
  !Object.isSealed(new Proxy({}, {}));

  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              !(didWarnForAddedNewProperty || target.isPersistent()) ? warning(false, "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}

addEventPoolingTo(SyntheticEvent);

/**
 * Helper to nullify syntheticEvent instance properties when destructing
 *
 * @param {String} propName
 * @param {?object} getVal
 * @return {object} defineProperty object
 */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    !warningCondition ? warning(false, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}

function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
  var EventConstructor = this;
  if (EventConstructor.eventPool.length) {
    var instance = EventConstructor.eventPool.pop();
    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
    return instance;
  }
  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
}

function releasePooledEvent(event) {
  var EventConstructor = this;
  !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance  into a pool of a different type.') : void 0;
  event.destructor();
  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
    EventConstructor.eventPool.push(event);
  }
}

function addEventPoolingTo(EventConstructor) {
  EventConstructor.eventPool = [];
  EventConstructor.getPooled = getPooledEvent;
  EventConstructor.release = releasePooledEvent;
}

var SyntheticEvent$1 = SyntheticEvent;

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var SyntheticCompositionEvent = SyntheticEvent$1.extend({
  data: null
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var SyntheticInputEvent = SyntheticEvent$1.extend({
  data: null
});

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode;

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case TOP_COMPOSITION_START:
      return eventTypes.compositionStart;
    case TOP_COMPOSITION_END:
      return eventTypes.compositionEnd;
    case TOP_COMPOSITION_UPDATE:
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_KEY_UP:
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case TOP_KEY_DOWN:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case TOP_KEY_PRESS:
    case TOP_MOUSE_DOWN:
    case TOP_BLUR:
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition status, if any.
var isComposing = false;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType = void 0;
  var fallbackData = void 0;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!isComposing) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!isComposing && eventType === eventTypes.compositionStart) {
      isComposing = initialize(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (isComposing) {
        fallbackData = getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {TopLevelType} topLevelType Number from `TopLevelType`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_COMPOSITION_END:
      return getDataFromCustomEvent(nativeEvent);
    case TOP_KEY_PRESS:
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case TOP_TEXT_INPUT:
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {number} topLevelType Number from `TopLevelEventTypes`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (isComposing) {
    if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = getData();
      reset();
      isComposing = false;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case TOP_PASTE:
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case TOP_KEY_PRESS:
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (!isKeypressCommand(nativeEvent)) {
        // IE fires the `keypress` event when a user types an emoji via
        // Touch keyboard of Windows.  In such a case, the `char` property
        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
        // is 2, the property `which` does not represent an emoji correctly.
        // In such a case, we directly return the `char` property instead of
        // using `which`.
        if (nativeEvent.char && nativeEvent.char.length > 1) {
          return nativeEvent.char;
        } else if (nativeEvent.which) {
          return String.fromCharCode(nativeEvent.which);
        }
      }
      return null;
    case TOP_COMPOSITION_END:
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars = void 0;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

    var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

    if (composition === null) {
      return beforeInput;
    }

    if (beforeInput === null) {
      return composition;
    }

    return [composition, beforeInput];
  }
};

// Use to restore controlled state after a change event has fired.

var fiberHostComponent = null;

var ReactControlledComponentInjection = {
  injectFiberControlledHostComponent: function (hostComponentImpl) {
    // The fiber implementation doesn't use dynamic dispatch so we need to
    // inject the implementation.
    fiberHostComponent = hostComponentImpl;
  }
};

var restoreTarget = null;
var restoreQueue = null;

function restoreStateOfTarget(target) {
  // We perform this translation at the end of the event loop so that we
  // always receive the correct fiber here
  var internalInstance = getInstanceFromNode(target);
  if (!internalInstance) {
    // Unmounted
    return;
  }
  !(fiberHostComponent && typeof fiberHostComponent.restoreControlledState === 'function') ? invariant(false, 'Fiber needs to be injected to handle a fiber target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
  fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
}

var injection$2 = ReactControlledComponentInjection;

function enqueueStateRestore(target) {
  if (restoreTarget) {
    if (restoreQueue) {
      restoreQueue.push(target);
    } else {
      restoreQueue = [target];
    }
  } else {
    restoreTarget = target;
  }
}

function needsStateRestore() {
  return restoreTarget !== null || restoreQueue !== null;
}

function restoreStateIfNeeded() {
  if (!restoreTarget) {
    return;
  }
  var target = restoreTarget;
  var queuedTargets = restoreQueue;
  restoreTarget = null;
  restoreQueue = null;

  restoreStateOfTarget(target);
  if (queuedTargets) {
    for (var i = 0; i < queuedTargets.length; i++) {
      restoreStateOfTarget(queuedTargets[i]);
    }
  }
}

var ReactControlledComponent = Object.freeze({
	injection: injection$2,
	enqueueStateRestore: enqueueStateRestore,
	needsStateRestore: needsStateRestore,
	restoreStateIfNeeded: restoreStateIfNeeded
});

// Used as a way to call batchedUpdates when we don't have a reference to
// the renderer. Such as when we're dispatching events or if third party
// libraries need to call batchedUpdates. Eventually, this API will go away when
// everything is batched by default. We'll then have a similar API to opt-out of
// scheduled work and instead do synchronous work.

// Defaults
var _batchedUpdates = function (fn, bookkeeping) {
  return fn(bookkeeping);
};
var _interactiveUpdates = function (fn, a, b) {
  return fn(a, b);
};
var _flushInteractiveUpdates = function () {};

var isBatching = false;
function batchedUpdates(fn, bookkeeping) {
  if (isBatching) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(bookkeeping);
  }
  isBatching = true;
  try {
    return _batchedUpdates(fn, bookkeeping);
  } finally {
    // Here we wait until all updates have propagated, which is important
    // when using controlled components within layers:
    // https://github.com/facebook/react/issues/1698
    // Then we restore state of any controlled component.
    isBatching = false;
    var controlledComponentsHavePendingUpdates = needsStateRestore();
    if (controlledComponentsHavePendingUpdates) {
      // If a controlled event was fired, we may need to restore the state of
      // the DOM node back to the controlled value. This is necessary when React
      // bails out of the update without touching the DOM.
      _flushInteractiveUpdates();
      restoreStateIfNeeded();
    }
  }
}

function interactiveUpdates(fn, a, b) {
  return _interactiveUpdates(fn, a, b);
}



var injection$3 = {
  injectRenderer: function (renderer) {
    _batchedUpdates = renderer.batchedUpdates;
    _interactiveUpdates = renderer.interactiveUpdates;
    _flushInteractiveUpdates = renderer.flushInteractiveUpdates;
  }
};

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

/**
 * HTML nodeType values that represent the type of the node
 */

var ELEMENT_NODE = 1;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;
var DOCUMENT_NODE = 9;
var DOCUMENT_FRAGMENT_NODE = 11;

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */
function getEventTarget(nativeEvent) {
  // Fallback to nativeEvent.srcElement for IE9
  // https://github.com/facebook/react/issues/12506
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === TEXT_NODE ? target.parentNode : target;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  return isSupported;
}

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(node) {
  return node._valueTracker;
}

function detachTracker(node) {
  node._valueTracker = null;
}

function getValueFromNode(node) {
  var value = '';
  if (!node) {
    return value;
  }

  if (isCheckable(node)) {
    value = node.checked ? 'true' : 'false';
  } else {
    value = node.value;
  }

  return value;
}

function trackValueOnNode(node) {
  var valueField = isCheckable(node) ? 'checked' : 'value';
  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

  var currentValue = '' + node[valueField];

  // if someone has already defined a value or Safari, then bail
  // and don't track value will cause over reporting of changes,
  // but it's better then a hard failure
  // (needed for certain tests that spyOn input values and Safari)
  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
    return;
  }
  var get = descriptor.get,
      set = descriptor.set;

  Object.defineProperty(node, valueField, {
    configurable: true,
    get: function () {
      return get.call(this);
    },
    set: function (value) {
      currentValue = '' + value;
      set.call(this, value);
    }
  });
  // We could've passed this the first time
  // but it triggers a bug in IE11 and Edge 14/15.
  // Calling defineProperty() again should be equivalent.
  // https://github.com/facebook/react/issues/11768
  Object.defineProperty(node, valueField, {
    enumerable: descriptor.enumerable
  });

  var tracker = {
    getValue: function () {
      return currentValue;
    },
    setValue: function (value) {
      currentValue = '' + value;
    },
    stopTracking: function () {
      detachTracker(node);
      delete node[valueField];
    }
  };
  return tracker;
}

function track(node) {
  if (getTracker(node)) {
    return;
  }

  // TODO: Once it's just Fiber we can move this to node._wrapperState
  node._valueTracker = trackValueOnNode(node);
}

function updateValueIfChanged(node) {
  if (!node) {
    return false;
  }

  var tracker = getTracker(node);
  // if there is no tracker at this point it's unlikely
  // that trying again will succeed
  if (!tracker) {
    return true;
  }

  var lastValue = tracker.getValue();
  var nextValue = getValueFromNode(node);
  if (nextValue !== lastValue) {
    tracker.setValue(nextValue);
    return true;
  }
  return false;
}

var ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

var ReactCurrentOwner = ReactInternals.ReactCurrentOwner;
var ReactDebugCurrentFrame = ReactInternals.ReactDebugCurrentFrame;

var describeComponentFrame = function (name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
};

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_TIMEOUT_TYPE = hasSymbol ? Symbol.for('react.timeout') : 0xead1;

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';

function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable === 'undefined') {
    return null;
  }
  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }
  return null;
}

function getComponentName(fiber) {
  var type = fiber.type;

  if (typeof type === 'function') {
    return type.displayName || type.name;
  }
  if (typeof type === 'string') {
    return type;
  }
  switch (type) {
    case REACT_ASYNC_MODE_TYPE:
      return 'AsyncMode';
    case REACT_CONTEXT_TYPE:
      return 'Context.Consumer';
    case REACT_FRAGMENT_TYPE:
      return 'ReactFragment';
    case REACT_PORTAL_TYPE:
      return 'ReactPortal';
    case REACT_PROFILER_TYPE:
      return 'Profiler(' + fiber.pendingProps.id + ')';
    case REACT_PROVIDER_TYPE:
      return 'Context.Provider';
    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';
    case REACT_TIMEOUT_TYPE:
      return 'Timeout';
  }
  if (typeof type === 'object' && type !== null) {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        var functionName = type.render.displayName || type.render.name || '';
        return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
    }
  }
  return null;
}

function describeFiber(fiber) {
  switch (fiber.tag) {
    case IndeterminateComponent:
    case FunctionalComponent:
    case ClassComponent:
    case HostComponent:
      var owner = fiber._debugOwner;
      var source = fiber._debugSource;
      var name = getComponentName(fiber);
      var ownerName = null;
      if (owner) {
        ownerName = getComponentName(owner);
      }
      return describeComponentFrame(name, source, ownerName);
    default:
      return '';
  }
}

// This function can only be called with a work-in-progress fiber and
// only during begin or complete phase. Do not call it under any other
// circumstances.
function getStackAddendumByWorkInProgressFiber(workInProgress) {
  var info = '';
  var node = workInProgress;
  do {
    info += describeFiber(node);
    // Otherwise this return pointer might point to the wrong tree:
    node = node.return;
  } while (node);
  return info;
}

function getCurrentFiberOwnerName$1() {
  {
    var fiber = ReactDebugCurrentFiber.current;
    if (fiber === null) {
      return null;
    }
    var owner = fiber._debugOwner;
    if (owner !== null && typeof owner !== 'undefined') {
      return getComponentName(owner);
    }
  }
  return null;
}

function getCurrentFiberStackAddendum$1() {
  {
    var fiber = ReactDebugCurrentFiber.current;
    if (fiber === null) {
      return null;
    }
    // Safe because if current fiber exists, we are reconciling,
    // and it is guaranteed to be the work-in-progress version.
    return getStackAddendumByWorkInProgressFiber(fiber);
  }
  return null;
}

function resetCurrentFiber() {
  ReactDebugCurrentFrame.getCurrentStack = null;
  ReactDebugCurrentFiber.current = null;
  ReactDebugCurrentFiber.phase = null;
}

function setCurrentFiber(fiber) {
  ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackAddendum$1;
  ReactDebugCurrentFiber.current = fiber;
  ReactDebugCurrentFiber.phase = null;
}

function setCurrentPhase(phase) {
  ReactDebugCurrentFiber.phase = phase;
}

var ReactDebugCurrentFiber = {
  current: null,
  phase: null,
  resetCurrentFiber: resetCurrentFiber,
  setCurrentFiber: setCurrentFiber,
  setCurrentPhase: setCurrentPhase,
  getCurrentFiberOwnerName: getCurrentFiberOwnerName$1,
  getCurrentFiberStackAddendum: getCurrentFiberStackAddendum$1
};

// A reserved attribute.
// It is handled by React separately and shouldn't be written to the DOM.
var RESERVED = 0;

// A simple string attribute.
// Attributes that aren't in the whitelist are presumed to have this type.
var STRING = 1;

// A string attribute that accepts booleans in React. In HTML, these are called
// "enumerated" attributes with "true" and "false" as possible values.
// When true, it should be set to a "true" string.
// When false, it should be set to a "false" string.
var BOOLEANISH_STRING = 2;

// A real boolean attribute.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
var BOOLEAN = 3;

// An attribute that can be used as a flag as well as with a value.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
// For any other value, should be present with that value.
var OVERLOADED_BOOLEAN = 4;

// An attribute that must be numeric or parse as a numeric.
// When falsy, it should be removed.
var NUMERIC = 5;

// An attribute that must be positive numeric or parse as a positive numeric.
// When falsy, it should be removed.
var POSITIVE_NUMERIC = 6;

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */
var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';


var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');

var hasOwnProperty = Object.prototype.hasOwnProperty;
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
    return true;
  }
  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  {
    warning(false, 'Invalid attribute name: `%s`', attributeName);
  }
  return false;
}

function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null) {
    return propertyInfo.type === RESERVED;
  }
  if (isCustomComponentTag) {
    return false;
  }
  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
    return true;
  }
  return false;
}

function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
    return false;
  }
  switch (typeof value) {
    case 'function':
    // $FlowIssue symbol is perfectly valid here
    case 'symbol':
      // eslint-disable-line
      return true;
    case 'boolean':
      {
        if (isCustomComponentTag) {
          return false;
        }
        if (propertyInfo !== null) {
          return !propertyInfo.acceptsBooleans;
        } else {
          var prefix = name.toLowerCase().slice(0, 5);
          return prefix !== 'data-' && prefix !== 'aria-';
        }
      }
    default:
      return false;
  }
}

function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
  if (value === null || typeof value === 'undefined') {
    return true;
  }
  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
    return true;
  }
  if (isCustomComponentTag) {
    return false;
  }
  if (propertyInfo !== null) {
    switch (propertyInfo.type) {
      case BOOLEAN:
        return !value;
      case OVERLOADED_BOOLEAN:
        return value === false;
      case NUMERIC:
        return isNaN(value);
      case POSITIVE_NUMERIC:
        return isNaN(value) || value < 1;
    }
  }
  return false;
}

function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}

function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace) {
  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
  this.attributeName = attributeName;
  this.attributeNamespace = attributeNamespace;
  this.mustUseProperty = mustUseProperty;
  this.propertyName = name;
  this.type = type;
}

// When adding attributes to this list, be sure to also add them to
// the `possibleStandardNames` module to ensure casing and incorrect
// name warnings.
var properties = {};

// These props are reserved by React. They shouldn't be written to the DOM.
['children', 'dangerouslySetInnerHTML',
// TODO: This prevents the assignment of defaultValue to regular
// elements (not just inputs). Now that ReactDOMInput assigns to the
// defaultValue property -- do we need this?
'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
  name, // attributeName
  null);
} // attributeNamespace
);

// A few React string attributes have a different name.
// This is a mapping from React prop names to the attribute names.
[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
  var name = _ref[0],
      attributeName = _ref[1];

  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, // attributeName
  null);
} // attributeNamespace
);

// These are "enumerated" HTML attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are "enumerated" SVG attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
// Since these are SVG attributes, their attribute names are case-sensitive.
['autoReverse', 'externalResourcesRequired', 'preserveAlpha'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name, // attributeName
  null);
} // attributeNamespace
);

// These are HTML boolean attributes.
['allowFullScreen', 'async',
// Note: there is a special case that prevents it from being written to the DOM
// on the client side because the browsers are inconsistent. Instead we call focus().
'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless',
// Microdata
'itemScope'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are the few React props that we set as DOM properties
// rather than attributes. These are all booleans.
['checked',
// Note: `option.selected` is not updated if `select.multiple` is
// disabled with `removeAttribute`. We have special logic for handling this.
'multiple', 'muted', 'selected'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are HTML attributes that are "overloaded booleans": they behave like
// booleans, but can also accept a string value.
['capture', 'download'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are HTML attributes that must be positive numbers.
['cols', 'rows', 'size', 'span'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are HTML attributes that must be numbers.
['rowSpan', 'start'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

var CAMELIZE = /[\-\:]([a-z])/g;
var capitalize = function (token) {
  return token[1].toUpperCase();
};

// This is a list of all SVG attributes that need special casing, namespacing,
// or boolean value assignment. Regular attributes that just accept strings
// and have the same names are omitted, just like in the HTML whitelist.
// Some of these attributes can be hard to find. This list was created by
// scrapping the MDN documentation.
['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, null);
} // attributeNamespace
);

// String SVG attributes with the xlink namespace.
['xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/1999/xlink');
});

// String SVG attributes with the xml namespace.
['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/XML/1998/namespace');
});

// Special case: this attribute exists both in HTML and SVG.
// Its "tabindex" attribute name is case-sensitive in SVG so we can't just use
// its React `tabIndex` name, like we do for attributes that exist only in HTML.
properties.tabIndex = new PropertyInfoRecord('tabIndex', STRING, false, // mustUseProperty
'tabindex', // attributeName
null);

/**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */
function getValueForProperty(node, name, expected, propertyInfo) {
  {
    if (propertyInfo.mustUseProperty) {
      var propertyName = propertyInfo.propertyName;

      return node[propertyName];
    } else {
      var attributeName = propertyInfo.attributeName;

      var stringValue = null;

      if (propertyInfo.type === OVERLOADED_BOOLEAN) {
        if (node.hasAttribute(attributeName)) {
          var value = node.getAttribute(attributeName);
          if (value === '') {
            return true;
          }
          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
            return value;
          }
          if (value === '' + expected) {
            return expected;
          }
          return value;
        }
      } else if (node.hasAttribute(attributeName)) {
        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
          // We had an attribute but shouldn't have had one, so read it
          // for the error message.
          return node.getAttribute(attributeName);
        }
        if (propertyInfo.type === BOOLEAN) {
          // If this was a boolean, it doesn't matter what the value is
          // the fact that we have it is the same as the expected.
          return expected;
        }
        // Even if this property uses a namespace we use getAttribute
        // because we assume its namespaced name is the same as our config.
        // To use getAttributeNS we need the local name which we don't have
        // in our config atm.
        stringValue = node.getAttribute(attributeName);
      }

      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
        return stringValue === null ? expected : stringValue;
      } else if (stringValue === '' + expected) {
        return expected;
      } else {
        return stringValue;
      }
    }
  }
}

/**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */
function getValueForAttribute(node, name, expected) {
  {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (!node.hasAttribute(name)) {
      return expected === undefined ? undefined : null;
    }
    var value = node.getAttribute(name);
    if (value === '' + expected) {
      return expected;
    }
    return value;
  }
}

/**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */
function setValueForProperty(node, name, value, isCustomComponentTag) {
  var propertyInfo = getPropertyInfo(name);
  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
    return;
  }
  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
    value = null;
  }
  // If the prop isn't in the special list, treat it as a simple attribute.
  if (isCustomComponentTag || propertyInfo === null) {
    if (isAttributeNameSafe(name)) {
      var _attributeName = name;
      if (value === null) {
        node.removeAttribute(_attributeName);
      } else {
        node.setAttribute(_attributeName, '' + value);
      }
    }
    return;
  }
  var mustUseProperty = propertyInfo.mustUseProperty;

  if (mustUseProperty) {
    var propertyName = propertyInfo.propertyName;

    if (value === null) {
      var type = propertyInfo.type;

      node[propertyName] = type === BOOLEAN ? false : '';
    } else {
      // Contrary to `setAttribute`, object properties are properly
      // `toString`ed by IE8/9.
      node[propertyName] = value;
    }
    return;
  }
  // The rest are treated as attributes with special cases.
  var attributeName = propertyInfo.attributeName,
      attributeNamespace = propertyInfo.attributeNamespace;

  if (value === null) {
    node.removeAttribute(attributeName);
  } else {
    var _type = propertyInfo.type;

    var attributeValue = void 0;
    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
      attributeValue = '';
    } else {
      // `setAttribute` with objects becomes only `[object]` in IE8/9,
      // ('' + value) makes it output the correct toString()-value.
      attributeValue = '' + value;
    }
    if (attributeNamespace) {
      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
    } else {
      node.setAttribute(attributeName, attributeValue);
    }
  }
}

var ReactControlledValuePropTypes = {
  checkPropTypes: null
};

{
  var hasReadOnlyValue = {
    button: true,
    checkbox: true,
    image: true,
    hidden: true,
    radio: true,
    reset: true,
    submit: true
  };

  var propTypes = {
    value: function (props, propName, componentName) {
      if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
        return null;
      }
      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    },
    checked: function (props, propName, componentName) {
      if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
        return null;
      }
      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }
  };

  /**
   * Provide a linked `value` attribute for controlled forms. You should not use
   * this outside of the ReactDOM controlled form components.
   */
  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props, getStack) {
    checkPropTypes(propTypes, props, 'prop', tagName, getStack);
  };
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberOwnerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
var getCurrentFiberStackAddendum = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */

function getHostProps(element, props) {
  var node = element;
  var checked = props.checked;

  var hostProps = _assign({}, props, {
    defaultChecked: undefined,
    defaultValue: undefined,
    value: undefined,
    checked: checked != null ? checked : node._wrapperState.initialChecked
  });

  return hostProps;
}

function initWrapperState(element, props) {
  {
    ReactControlledValuePropTypes.checkPropTypes('input', props, getCurrentFiberStackAddendum);

    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
      warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName() || 'A component', props.type);
      didWarnCheckedDefaultChecked = true;
    }
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName() || 'A component', props.type);
      didWarnValueDefaultValue = true;
    }
  }

  var node = element;
  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;

  node._wrapperState = {
    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
    initialValue: getSafeValue(props.value != null ? props.value : defaultValue),
    controlled: isControlled(props)
  };
}

function updateChecked(element, props) {
  var node = element;
  var checked = props.checked;
  if (checked != null) {
    setValueForProperty(node, 'checked', checked, false);
  }
}

function updateWrapper(element, props) {
  var node = element;
  {
    var _controlled = isControlled(props);

    if (!node._wrapperState.controlled && _controlled && !didWarnUncontrolledToControlled) {
      warning(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum());
      didWarnUncontrolledToControlled = true;
    }
    if (node._wrapperState.controlled && !_controlled && !didWarnControlledToUncontrolled) {
      warning(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum());
      didWarnControlledToUncontrolled = true;
    }
  }

  updateChecked(element, props);

  var value = getSafeValue(props.value);

  if (value != null) {
    if (props.type === 'number') {
      if (value === 0 && node.value === '' ||
      // eslint-disable-next-line
      node.value != value) {
        node.value = '' + value;
      }
    } else if (node.value !== '' + value) {
      node.value = '' + value;
    }
  }

  if (props.hasOwnProperty('value')) {
    setDefaultValue(node, props.type, value);
  } else if (props.hasOwnProperty('defaultValue')) {
    setDefaultValue(node, props.type, getSafeValue(props.defaultValue));
  }

  if (props.checked == null && props.defaultChecked != null) {
    node.defaultChecked = !!props.defaultChecked;
  }
}

function postMountWrapper(element, props, isHydrating) {
  var node = element;

  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
    var _initialValue = '' + node._wrapperState.initialValue;
    var currentValue = node.value;

    // Do not assign value if it is already set. This prevents user text input
    // from being lost during SSR hydration.
    if (!isHydrating) {
      // Do not re-assign the value property if there is no change. This
      // potentially avoids a DOM write and prevents Firefox (~60.0.1) from
      // prematurely marking required inputs as invalid
      if (_initialValue !== currentValue) {
        node.value = _initialValue;
      }
    }

    // value must be assigned before defaultValue. This fixes an issue where the
    // visually displayed value of date inputs disappears on mobile Safari and Chrome:
    // https://github.com/facebook/react/issues/7233
    node.defaultValue = _initialValue;
  }

  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
  // this is needed to work around a chrome bug where setting defaultChecked
  // will sometimes influence the value of checked (even after detachment).
  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
  // We need to temporarily unset name to avoid disrupting radio button groups.
  var name = node.name;
  if (name !== '') {
    node.name = '';
  }
  node.defaultChecked = !node.defaultChecked;
  node.defaultChecked = !node.defaultChecked;
  if (name !== '') {
    node.name = name;
  }
}

function restoreControlledState(element, props) {
  var node = element;
  updateWrapper(node, props);
  updateNamedCousins(node, props);
}

function updateNamedCousins(rootNode, props) {
  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form. It might not even be in the
    // document. Let's just use the local `querySelectorAll` to ensure we don't
    // miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
      !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0;

      // We need update the tracked value on the named cousin since the value
      // was changed but the input saw no event or value set
      updateValueIfChanged(otherNode);

      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      updateWrapper(otherNode, otherProps);
    }
  }
}

// In Chrome, assigning defaultValue to certain input types triggers input validation.
// For number inputs, the display value loses trailing decimal points. For email inputs,
// Chrome raises "The specified value <x> is not a valid email address".
//
// Here we check to see if the defaultValue has actually changed, avoiding these problems
// when the user is inputting text
//
// https://github.com/facebook/react/issues/7253
function setDefaultValue(node, type, value) {
  if (
  // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
  type !== 'number' || node.ownerDocument.activeElement !== node) {
    if (value == null) {
      node.defaultValue = '' + node._wrapperState.initialValue;
    } else if (node.defaultValue !== '' + value) {
      node.defaultValue = '' + value;
    }
  }
}

function getSafeValue(value) {
  switch (typeof value) {
    case 'boolean':
    case 'number':
    case 'object':
    case 'string':
    case 'undefined':
      return value;
    default:
      // function, symbol are assigned as empty strings
      return '';
  }
}

var eventTypes$1 = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]
  }
};

function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
  var event = SyntheticEvent$1.getPooled(eventTypes$1.change, inst, nativeEvent, target);
  event.type = 'change';
  // Flag this event loop as needing state restore.
  enqueueStateRestore(target);
  accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  runEventsInBatch(event, false);
}

function getInstIfValueChanged(targetInst) {
  var targetNode = getNodeFromInstance$1(targetInst);
  if (updateValueIfChanged(targetNode)) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_CHANGE) {
    return targetInst;
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
}

/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onpropertychange', handlePropertyChange);
  activeElement = null;
  activeElementInst = null;
}

/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  if (getInstIfValueChanged(activeElementInst)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
  if (topLevelType === TOP_FOCUS) {
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === TOP_BLUR) {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
  if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst);
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_CLICK) {
    return getInstIfValueChanged(targetInst);
  }
}

function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {
    return getInstIfValueChanged(targetInst);
  }
}

function handleControlledInputBlur(node) {
  var state = node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  // If controlled, assign the value attribute to the current value on blur
  setDefaultValue(node, 'number', node.value);
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {
  eventTypes: eventTypes$1,

  _isInputEventSupported: isInputEventSupported,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    var getTargetInstFunc = void 0,
        handleEventFunc = void 0;
    if (shouldUseChangeEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForChangeEvent;
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventPolyfill;
        handleEventFunc = handleEventsForInputEventPolyfill;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }

    // When blurring, set the value attribute for number inputs
    if (topLevelType === TOP_BLUR) {
      handleControlledInputBlur(targetNode);
    }
  }
};

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

var SyntheticUIEvent = SyntheticEvent$1.extend({
  view: null,
  detail: null
});

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticMouseEvent = SyntheticUIEvent.extend({
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  pageX: null,
  pageY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: null,
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  }
});

/**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */
var SyntheticPointerEvent = SyntheticMouseEvent.extend({
  pointerId: null,
  width: null,
  height: null,
  pressure: null,
  tiltX: null,
  tiltY: null,
  pointerType: null,
  isPrimary: null
});

var eventTypes$2 = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
  },
  pointerEnter: {
    registrationName: 'onPointerEnter',
    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
  },
  pointerLeave: {
    registrationName: 'onPointerLeave',
    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
  }
};

var EnterLeaveEventPlugin = {
  eventTypes: eventTypes$2,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;
    var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;

    if (isOverEvent && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }

    if (!isOutEvent && !isOverEvent) {
      // Must not be a mouse or pointer in or out - ignoring.
      return null;
    }

    var win = void 0;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from = void 0;
    var to = void 0;
    if (isOutEvent) {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var eventInterface = void 0,
        leaveEventType = void 0,
        enterEventType = void 0,
        eventTypePrefix = void 0;

    if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {
      eventInterface = SyntheticMouseEvent;
      leaveEventType = eventTypes$2.mouseLeave;
      enterEventType = eventTypes$2.mouseEnter;
      eventTypePrefix = 'mouse';
    } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {
      eventInterface = SyntheticPointerEvent;
      leaveEventType = eventTypes$2.pointerLeave;
      enterEventType = eventTypes$2.pointerEnter;
      eventTypePrefix = 'pointer';
    }

    var fromNode = from == null ? win : getNodeFromInstance$1(from);
    var toNode = to == null ? win : getNodeFromInstance$1(to);

    var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);
    leave.type = eventTypePrefix + 'leave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);
    enter.type = eventTypePrefix + 'enter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }
};

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */

/**
 * This API should be called `delete` but we'd have to make sure to always
 * transform these to strings for IE support. When this transform is fully
 * supported we can rename it.
 */


function get(key) {
  return key._reactInternalFiber;
}

function has(key) {
  return key._reactInternalFiber !== undefined;
}

function set(key, value) {
  key._reactInternalFiber = value;
}

// Don't change these two values. They're used by React Dev Tools.
var NoEffect = /*              */0;
var PerformedWork = /*         */1;

// You can change the rest (and add more).
var Placement = /*             */2;
var Update = /*                */4;
var PlacementAndUpdate = /*    */6;
var Deletion = /*              */8;
var ContentReset = /*          */16;
var Callback = /*              */32;
var DidCapture = /*            */64;
var Ref = /*                   */128;
var Snapshot = /*              */256;

// Union of all host effects
var HostEffectMask = /*        */511;

var Incomplete = /*            */512;
var ShouldCapture = /*         */1024;

var MOUNTING = 1;
var MOUNTED = 2;
var UNMOUNTED = 3;

function isFiberMountedImpl(fiber) {
  var node = fiber;
  if (!fiber.alternate) {
    // If there is no alternate, this might be a new tree that isn't inserted
    // yet. If it is, then it will have a pending insertion effect on it.
    if ((node.effectTag & Placement) !== NoEffect) {
      return MOUNTING;
    }
    while (node.return) {
      node = node.return;
      if ((node.effectTag & Placement) !== NoEffect) {
        return MOUNTING;
      }
    }
  } else {
    while (node.return) {
      node = node.return;
    }
  }
  if (node.tag === HostRoot) {
    // TODO: Check if this was a nested HostRoot when used with
    // renderContainerIntoSubtree.
    return MOUNTED;
  }
  // If we didn't hit the root, that means that we're in an disconnected tree
  // that has been unmounted.
  return UNMOUNTED;
}

function isFiberMounted(fiber) {
  return isFiberMountedImpl(fiber) === MOUNTED;
}

function isMounted(component) {
  {
    var owner = ReactCurrentOwner.current;
    if (owner !== null && owner.tag === ClassComponent) {
      var ownerFiber = owner;
      var instance = ownerFiber.stateNode;
      !instance._warnedAboutRefsInRender ? warning(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber) || 'A component') : void 0;
      instance._warnedAboutRefsInRender = true;
    }
  }

  var fiber = get(component);
  if (!fiber) {
    return false;
  }
  return isFiberMountedImpl(fiber) === MOUNTED;
}

function assertIsMounted(fiber) {
  !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
}

function findCurrentFiberUsingSlowPath(fiber) {
  var alternate = fiber.alternate;
  if (!alternate) {
    // If there is no alternate, then we only need to check if it is mounted.
    var state = isFiberMountedImpl(fiber);
    !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
    if (state === MOUNTING) {
      return null;
    }
    return fiber;
  }
  // If we have two possible branches, we'll walk backwards up to the root
  // to see what path the root points to. On the way we may hit one of the
  // special cases and we'll deal with them.
  var a = fiber;
  var b = alternate;
  while (true) {
    var parentA = a.return;
    var parentB = parentA ? parentA.alternate : null;
    if (!parentA || !parentB) {
      // We're at the root.
      break;
    }

    // If both copies of the parent fiber point to the same child, we can
    // assume that the child is current. This happens when we bailout on low
    // priority: the bailed out fiber's child reuses the current child.
    if (parentA.child === parentB.child) {
      var child = parentA.child;
      while (child) {
        if (child === a) {
          // We've determined that A is the current branch.
          assertIsMounted(parentA);
          return fiber;
        }
        if (child === b) {
          // We've determined that B is the current branch.
          assertIsMounted(parentA);
          return alternate;
        }
        child = child.sibling;
      }
      // We should never have an alternate for any mounting node. So the only
      // way this could possibly happen is if this was unmounted, if at all.
      invariant(false, 'Unable to find node on an unmounted component.');
    }

    if (a.return !== b.return) {
      // The return pointer of A and the return pointer of B point to different
      // fibers. We assume that return pointers never criss-cross, so A must
      // belong to the child set of A.return, and B must belong to the child
      // set of B.return.
      a = parentA;
      b = parentB;
    } else {
      // The return pointers point to the same fiber. We'll have to use the
      // default, slow path: scan the child sets of each parent alternate to see
      // which child belongs to which set.
      //
      // Search parent A's child set
      var didFindChild = false;
      var _child = parentA.child;
      while (_child) {
        if (_child === a) {
          didFindChild = true;
          a = parentA;
          b = parentB;
          break;
        }
        if (_child === b) {
          didFindChild = true;
          b = parentA;
          a = parentB;
          break;
        }
        _child = _child.sibling;
      }
      if (!didFindChild) {
        // Search parent B's child set
        _child = parentB.child;
        while (_child) {
          if (_child === a) {
            didFindChild = true;
            a = parentB;
            b = parentA;
            break;
          }
          if (_child === b) {
            didFindChild = true;
            b = parentB;
            a = parentA;
            break;
          }
          _child = _child.sibling;
        }
        !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;
      }
    }

    !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  }
  // If the root is not a host container, we're in a disconnected tree. I.e.
  // unmounted.
  !(a.tag === HostRoot) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
  if (a.stateNode.current === a) {
    // We've determined that A is the current branch.
    return fiber;
  }
  // Otherwise B has to be current branch.
  return alternate;
}

function findCurrentHostFiber(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  if (!currentParent) {
    return null;
  }

  // Next we'll drill down this component to find the first HostComponent/Text.
  var node = currentParent;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === currentParent) {
      return null;
    }
    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
  // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable
  return null;
}

function findCurrentHostFiberWithNoPortals(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  if (!currentParent) {
    return null;
  }

  // Next we'll drill down this component to find the first HostComponent/Text.
  var node = currentParent;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child && node.tag !== HostPortal) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === currentParent) {
      return null;
    }
    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
  // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable
  return null;
}

function addEventBubbleListener(element, eventType, listener) {
  element.addEventListener(eventType, listener, false);
}

function addEventCaptureListener(element, eventType, listener) {
  element.addEventListener(eventType, listener, true);
}

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var SyntheticAnimationEvent = SyntheticEvent$1.extend({
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var SyntheticClipboardEvent = SyntheticEvent$1.extend({
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
});

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticFocusEvent = SyntheticUIEvent.extend({
  relatedTarget: null
});

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode = void 0;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
  // report Enter as charCode 10 when ctrl is pressed.
  if (charCode === 10) {
    charCode = 13;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  '8': 'Backspace',
  '9': 'Tab',
  '12': 'Clear',
  '13': 'Enter',
  '16': 'Shift',
  '17': 'Control',
  '18': 'Alt',
  '19': 'Pause',
  '20': 'CapsLock',
  '27': 'Escape',
  '32': ' ',
  '33': 'PageUp',
  '34': 'PageDown',
  '35': 'End',
  '36': 'Home',
  '37': 'ArrowLeft',
  '38': 'ArrowUp',
  '39': 'ArrowRight',
  '40': 'ArrowDown',
  '45': 'Insert',
  '46': 'Delete',
  '112': 'F1',
  '113': 'F2',
  '114': 'F3',
  '115': 'F4',
  '116': 'F5',
  '117': 'F6',
  '118': 'F7',
  '119': 'F8',
  '120': 'F9',
  '121': 'F10',
  '122': 'F11',
  '123': 'F12',
  '144': 'NumLock',
  '145': 'ScrollLock',
  '224': 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticKeyboardEvent = SyntheticUIEvent.extend({
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
});

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticDragEvent = SyntheticMouseEvent.extend({
  dataTransfer: null
});

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var SyntheticTouchEvent = SyntheticUIEvent.extend({
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var SyntheticTransitionEvent = SyntheticEvent$1.extend({
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
});

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticWheelEvent = SyntheticMouseEvent.extend({
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },

  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
});

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: [TOP_ABORT],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = new Map([
 *   [TOP_ABORT, { sameConfig }],
 * ]);
 */

var interactiveEventTypeNames = [[TOP_BLUR, 'blur'], [TOP_CANCEL, 'cancel'], [TOP_CLICK, 'click'], [TOP_CLOSE, 'close'], [TOP_CONTEXT_MENU, 'contextMenu'], [TOP_COPY, 'copy'], [TOP_CUT, 'cut'], [TOP_DOUBLE_CLICK, 'doubleClick'], [TOP_DRAG_END, 'dragEnd'], [TOP_DRAG_START, 'dragStart'], [TOP_DROP, 'drop'], [TOP_FOCUS, 'focus'], [TOP_INPUT, 'input'], [TOP_INVALID, 'invalid'], [TOP_KEY_DOWN, 'keyDown'], [TOP_KEY_PRESS, 'keyPress'], [TOP_KEY_UP, 'keyUp'], [TOP_MOUSE_DOWN, 'mouseDown'], [TOP_MOUSE_UP, 'mouseUp'], [TOP_PASTE, 'paste'], [TOP_PAUSE, 'pause'], [TOP_PLAY, 'play'], [TOP_POINTER_CANCEL, 'pointerCancel'], [TOP_POINTER_DOWN, 'pointerDown'], [TOP_POINTER_UP, 'pointerUp'], [TOP_RATE_CHANGE, 'rateChange'], [TOP_RESET, 'reset'], [TOP_SEEKED, 'seeked'], [TOP_SUBMIT, 'submit'], [TOP_TOUCH_CANCEL, 'touchCancel'], [TOP_TOUCH_END, 'touchEnd'], [TOP_TOUCH_START, 'touchStart'], [TOP_VOLUME_CHANGE, 'volumeChange']];
var nonInteractiveEventTypeNames = [[TOP_ABORT, 'abort'], [TOP_ANIMATION_END, 'animationEnd'], [TOP_ANIMATION_ITERATION, 'animationIteration'], [TOP_ANIMATION_START, 'animationStart'], [TOP_CAN_PLAY, 'canPlay'], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough'], [TOP_DRAG, 'drag'], [TOP_DRAG_ENTER, 'dragEnter'], [TOP_DRAG_EXIT, 'dragExit'], [TOP_DRAG_LEAVE, 'dragLeave'], [TOP_DRAG_OVER, 'dragOver'], [TOP_DURATION_CHANGE, 'durationChange'], [TOP_EMPTIED, 'emptied'], [TOP_ENCRYPTED, 'encrypted'], [TOP_ENDED, 'ended'], [TOP_ERROR, 'error'], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture'], [TOP_LOAD, 'load'], [TOP_LOADED_DATA, 'loadedData'], [TOP_LOADED_METADATA, 'loadedMetadata'], [TOP_LOAD_START, 'loadStart'], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture'], [TOP_MOUSE_MOVE, 'mouseMove'], [TOP_MOUSE_OUT, 'mouseOut'], [TOP_MOUSE_OVER, 'mouseOver'], [TOP_PLAYING, 'playing'], [TOP_POINTER_MOVE, 'pointerMove'], [TOP_POINTER_OUT, 'pointerOut'], [TOP_POINTER_OVER, 'pointerOver'], [TOP_PROGRESS, 'progress'], [TOP_SCROLL, 'scroll'], [TOP_SEEKING, 'seeking'], [TOP_STALLED, 'stalled'], [TOP_SUSPEND, 'suspend'], [TOP_TIME_UPDATE, 'timeUpdate'], [TOP_TOGGLE, 'toggle'], [TOP_TOUCH_MOVE, 'touchMove'], [TOP_TRANSITION_END, 'transitionEnd'], [TOP_WAITING, 'waiting'], [TOP_WHEEL, 'wheel']];

var eventTypes$4 = {};
var topLevelEventsToDispatchConfig = {};

function addEventTypeNameToConfig(_ref, isInteractive) {
  var topEvent = _ref[0],
      event = _ref[1];

  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent],
    isInteractive: isInteractive
  };
  eventTypes$4[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
}

interactiveEventTypeNames.forEach(function (eventTuple) {
  addEventTypeNameToConfig(eventTuple, true);
});
nonInteractiveEventTypeNames.forEach(function (eventTuple) {
  addEventTypeNameToConfig(eventTuple, false);
});

// Only used in DEV for exhaustiveness validation.
var knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];

var SimpleEventPlugin = {
  eventTypes: eventTypes$4,

  isInteractiveTopLevelEventType: function (topLevelType) {
    var config = topLevelEventsToDispatchConfig[topLevelType];
    return config !== undefined && config.isInteractive === true;
  },


  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor = void 0;
    switch (topLevelType) {
      case TOP_KEY_PRESS:
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case TOP_KEY_DOWN:
      case TOP_KEY_UP:
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case TOP_BLUR:
      case TOP_FOCUS:
        EventConstructor = SyntheticFocusEvent;
        break;
      case TOP_CLICK:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case TOP_DOUBLE_CLICK:
      case TOP_MOUSE_DOWN:
      case TOP_MOUSE_MOVE:
      case TOP_MOUSE_UP:
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case TOP_MOUSE_OUT:
      case TOP_MOUSE_OVER:
      case TOP_CONTEXT_MENU:
        EventConstructor = SyntheticMouseEvent;
        break;
      case TOP_DRAG:
      case TOP_DRAG_END:
      case TOP_DRAG_ENTER:
      case TOP_DRAG_EXIT:
      case TOP_DRAG_LEAVE:
      case TOP_DRAG_OVER:
      case TOP_DRAG_START:
      case TOP_DROP:
        EventConstructor = SyntheticDragEvent;
        break;
      case TOP_TOUCH_CANCEL:
      case TOP_TOUCH_END:
      case TOP_TOUCH_MOVE:
      case TOP_TOUCH_START:
        EventConstructor = SyntheticTouchEvent;
        break;
      case TOP_ANIMATION_END:
      case TOP_ANIMATION_ITERATION:
      case TOP_ANIMATION_START:
        EventConstructor = SyntheticAnimationEvent;
        break;
      case TOP_TRANSITION_END:
        EventConstructor = SyntheticTransitionEvent;
        break;
      case TOP_SCROLL:
        EventConstructor = SyntheticUIEvent;
        break;
      case TOP_WHEEL:
        EventConstructor = SyntheticWheelEvent;
        break;
      case TOP_COPY:
      case TOP_CUT:
      case TOP_PASTE:
        EventConstructor = SyntheticClipboardEvent;
        break;
      case TOP_GOT_POINTER_CAPTURE:
      case TOP_LOST_POINTER_CAPTURE:
      case TOP_POINTER_CANCEL:
      case TOP_POINTER_DOWN:
      case TOP_POINTER_MOVE:
      case TOP_POINTER_OUT:
      case TOP_POINTER_OVER:
      case TOP_POINTER_UP:
        EventConstructor = SyntheticPointerEvent;
        break;
      default:
        {
          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
            warning(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
          }
        }
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent$1;
        break;
    }
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    accumulateTwoPhaseDispatches(event);
    return event;
  }
};

var isInteractiveTopLevelEventType = SimpleEventPlugin.isInteractiveTopLevelEventType;


var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
var callbackBookkeepingPool = [];

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findRootContainerNode(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst.return) {
    inst = inst.return;
  }
  if (inst.tag !== HostRoot) {
    // This can happen if we're in a detached tree.
    return null;
  }
  return inst.stateNode.containerInfo;
}

// Used to store ancestor hierarchy in top level callback
function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {
  if (callbackBookkeepingPool.length) {
    var instance = callbackBookkeepingPool.pop();
    instance.topLevelType = topLevelType;
    instance.nativeEvent = nativeEvent;
    instance.targetInst = targetInst;
    return instance;
  }
  return {
    topLevelType: topLevelType,
    nativeEvent: nativeEvent,
    targetInst: targetInst,
    ancestors: []
  };
}

function releaseTopLevelCallbackBookKeeping(instance) {
  instance.topLevelType = null;
  instance.nativeEvent = null;
  instance.targetInst = null;
  instance.ancestors.length = 0;
  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
    callbackBookkeepingPool.push(instance);
  }
}

function handleTopLevel(bookKeeping) {
  var targetInst = bookKeeping.targetInst;

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    if (!ancestor) {
      bookKeeping.ancestors.push(ancestor);
      break;
    }
    var root = findRootContainerNode(ancestor);
    if (!root) {
      break;
    }
    bookKeeping.ancestors.push(ancestor);
    ancestor = getClosestInstanceFromNode(root);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    runExtractedEventsInBatch(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

// TODO: can we stop exporting these?
var _enabled = true;

function setEnabled(enabled) {
  _enabled = !!enabled;
}

function isEnabled() {
  return _enabled;
}

/**
 * Traps top-level events by using event bubbling.
 *
 * @param {number} topLevelType Number from `TopLevelEventTypes`.
 * @param {object} element Element on which to attach listener.
 * @return {?object} An object with a remove function which will forcefully
 *                  remove the listener.
 * @internal
 */
function trapBubbledEvent(topLevelType, element) {
  if (!element) {
    return null;
  }
  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;

  addEventBubbleListener(element, getRawEventName(topLevelType),
  // Check if interactive and wrap in interactiveUpdates
  dispatch.bind(null, topLevelType));
}

/**
 * Traps a top-level event by using event capturing.
 *
 * @param {number} topLevelType Number from `TopLevelEventTypes`.
 * @param {object} element Element on which to attach listener.
 * @return {?object} An object with a remove function which will forcefully
 *                  remove the listener.
 * @internal
 */
function trapCapturedEvent(topLevelType, element) {
  if (!element) {
    return null;
  }
  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;

  addEventCaptureListener(element, getRawEventName(topLevelType),
  // Check if interactive and wrap in interactiveUpdates
  dispatch.bind(null, topLevelType));
}

function dispatchInteractiveEvent(topLevelType, nativeEvent) {
  interactiveUpdates(dispatchEvent, topLevelType, nativeEvent);
}

function dispatchEvent(topLevelType, nativeEvent) {
  if (!_enabled) {
    return;
  }

  var nativeEventTarget = getEventTarget(nativeEvent);
  var targetInst = getClosestInstanceFromNode(nativeEventTarget);
  if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {
    // If we get an event (ex: img onload) before committing that
    // component's mount, ignore it for now (that is, treat it as if it was an
    // event on a non-React tree). We might also consider queueing events and
    // dispatching them after the mount.
    targetInst = null;
  }

  var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);

  try {
    // Event queue being processed in the same cycle allows
    // `preventDefault`.
    batchedUpdates(handleTopLevel, bookKeeping);
  } finally {
    releaseTopLevelCallbackBookKeeping(bookKeeping);
  }
}

var ReactDOMEventListener = Object.freeze({
	get _enabled () { return _enabled; },
	setEnabled: setEnabled,
	isEnabled: isEnabled,
	trapBubbledEvent: trapBubbledEvent,
	trapCapturedEvent: trapCapturedEvent,
	dispatchEvent: dispatchEvent
});

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactDOMEventListener, which is injected and can therefore support
 *    pluggable event sources. This is the only work that occurs in the main
 *    thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var alreadyListeningTo = {};
var reactTopListenersCounter = 0;

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * We listen for bubbled touch events on the document object.
 *
 * Firefox v8.01 (and possibly others) exhibited strange behavior when
 * mounting `onmousemove` events at some node that was not the document
 * element. The symptoms were that if your mouse is not moving over something
 * contained within that mount point (for example on the background) the
 * top-level listeners for `onmousemove` won't be called. However, if you
 * register the `mousemove` on the document object, then it will of course
 * catch all `mousemove`s. This along with iOS quirks, justifies restricting
 * top-level listeners to the document object only, at least for these
 * movement types of events and possibly all events.
 *
 * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
 *
 * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
 * they bubble to document.
 *
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @param {object} mountAt Container where to mount the listener
 */
function listenTo(registrationName, mountAt) {
  var isListening = getListeningForDocument(mountAt);
  var dependencies = registrationNameDependencies[registrationName];

  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
      switch (dependency) {
        case TOP_SCROLL:
          trapCapturedEvent(TOP_SCROLL, mountAt);
          break;
        case TOP_FOCUS:
        case TOP_BLUR:
          trapCapturedEvent(TOP_FOCUS, mountAt);
          trapCapturedEvent(TOP_BLUR, mountAt);
          // We set the flag for a single dependency later in this function,
          // but this ensures we mark both as attached rather than just one.
          isListening[TOP_BLUR] = true;
          isListening[TOP_FOCUS] = true;
          break;
        case TOP_CANCEL:
        case TOP_CLOSE:
          if (isEventSupported(getRawEventName(dependency), true)) {
            trapCapturedEvent(dependency, mountAt);
          }
          break;
        case TOP_INVALID:
        case TOP_SUBMIT:
        case TOP_RESET:
          // We listen to them on the target DOM elements.
          // Some of them bubble so we don't want them to fire twice.
          break;
        default:
          // By default, listen on the top level to all non-media events.
          // Media events don't bubble so adding the listener wouldn't do anything.
          var isMediaEvent = mediaEventTypes.indexOf(dependency) !== -1;
          if (!isMediaEvent) {
            trapBubbledEvent(dependency, mountAt);
          }
          break;
      }
      isListening[dependency] = true;
    }
  }
}

function isListeningToAllDependencies(registrationName, mountAt) {
  var isListening = getListeningForDocument(mountAt);
  var dependencies = registrationNameDependencies[registrationName];
  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
      return false;
    }
  }
  return true;
}

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */
function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === TEXT_NODE) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

/**
 * @param {DOMElement} outerNode
 * @return {?object}
 */
function getOffsets(outerNode) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode,
      anchorOffset = selection.anchorOffset,
      focusNode = selection.focusNode,
      focusOffset = selection.focusOffset;

  // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
  // expose properties, triggering a "Permission denied error" if any of its
  // properties are accessed. The only seemingly possible way to avoid erroring
  // is to access a property that typically works for non-anonymous divs and
  // catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

  try {
    /* eslint-disable no-unused-expressions */
    anchorNode.nodeType;
    focusNode.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
}

/**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */
function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
  var length = 0;
  var start = -1;
  var end = -1;
  var indexWithinAnchor = 0;
  var indexWithinFocus = 0;
  var node = outerNode;
  var parentNode = null;

  outer: while (true) {
    var next = null;

    while (true) {
      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
        start = length + anchorOffset;
      }
      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
        end = length + focusOffset;
      }

      if (node.nodeType === TEXT_NODE) {
        length += node.nodeValue.length;
      }

      if ((next = node.firstChild) === null) {
        break;
      }
      // Moving from `node` to its first child `next`.
      parentNode = node;
      node = next;
    }

    while (true) {
      if (node === outerNode) {
        // If `outerNode` has children, this is always the second time visiting
        // it. If it has no children, this is still the first loop, and the only
        // valid selection is anchorNode and focusNode both equal to this node
        // and both offsets 0, in which case we will have handled above.
        break outer;
      }
      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
        start = length;
      }
      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
        end = length;
      }
      if ((next = node.nextSibling) !== null) {
        break;
      }
      node = parentNode;
      parentNode = node.parentNode;
    }

    // Moving from `node` to its next sibling `next`.
    node = next;
  }

  if (start === -1 || end === -1) {
    // This should never happen. (Would happen if the anchor/focus nodes aren't
    // actually inside the passed-in node.)
    return null;
  }

  return {
    start: start,
    end: end
  };
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
      return;
    }
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */

/**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */
function hasSelectionCapabilities(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
}

function getSelectionInformation() {
  var focusedElem = getActiveElement();
  return {
    focusedElem: focusedElem,
    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null
  };
}

/**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */
function restoreSelection(priorSelectionInformation) {
  var curFocusedElem = getActiveElement();
  var priorFocusedElem = priorSelectionInformation.focusedElem;
  var priorSelectionRange = priorSelectionInformation.selectionRange;
  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
      setSelection(priorFocusedElem, priorSelectionRange);
    }

    // Focusing a node can change the scroll position, which is undesirable
    var ancestors = [];
    var ancestor = priorFocusedElem;
    while (ancestor = ancestor.parentNode) {
      if (ancestor.nodeType === ELEMENT_NODE) {
        ancestors.push({
          element: ancestor,
          left: ancestor.scrollLeft,
          top: ancestor.scrollTop
        });
      }
    }

    if (typeof priorFocusedElem.focus === 'function') {
      priorFocusedElem.focus();
    }

    for (var i = 0; i < ancestors.length; i++) {
      var info = ancestors[i];
      info.element.scrollLeft = info.left;
      info.element.scrollTop = info.top;
    }
  }
}

/**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */
function getSelection$1(input) {
  var selection = void 0;

  if ('selectionStart' in input) {
    // Modern browser with input or textarea.
    selection = {
      start: input.selectionStart,
      end: input.selectionEnd
    };
  } else {
    // Content editable or old IE textarea.
    selection = getOffsets(input);
  }

  return selection || { start: 0, end: 0 };
}

/**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */
function setSelection(input, offsets) {
  var start = offsets.start,
      end = offsets.end;

  if (end === undefined) {
    end = start;
  }

  if ('selectionStart' in input) {
    input.selectionStart = start;
    input.selectionEnd = Math.min(end, input.value.length);
  } else {
    setOffsets(input, offsets);
  }
}

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes$3 = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]
  }
};

var activeElement$1 = null;
var activeElementInst$1 = null;
var lastSelection = null;
var mouseDown = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement$1);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent$1.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement$1;

    accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {
  eventTypes: eventTypes$3,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var doc = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget.document : nativeEventTarget.nodeType === DOCUMENT_NODE ? nativeEventTarget : nativeEventTarget.ownerDocument;
    // Track whether all listeners exists for this plugin. If none exist, we do
    // not extract events. See #3639.
    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
      return null;
    }

    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case TOP_FOCUS:
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement$1 = targetNode;
          activeElementInst$1 = targetInst;
          lastSelection = null;
        }
        break;
      case TOP_BLUR:
        activeElement$1 = null;
        activeElementInst$1 = null;
        lastSelection = null;
        break;
      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case TOP_MOUSE_DOWN:
        mouseDown = true;
        break;
      case TOP_CONTEXT_MENU:
      case TOP_MOUSE_UP:
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);
      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case TOP_SELECTION_CHANGE:
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case TOP_KEY_DOWN:
      case TOP_KEY_UP:
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  }
};

/**
 * Inject modules for resolving DOM hierarchy and plugin ordering.
 */
injection.injectEventPluginOrder(DOMEventPluginOrder);
injection$1.injectComponentTree(ReactDOMComponentTree);

/**
 * Some important event plugins included by default (without having to require
 * them).
 */
injection.injectEventPluginsByName({
  SimpleEventPlugin: SimpleEventPlugin,
  EnterLeaveEventPlugin: EnterLeaveEventPlugin,
  ChangeEventPlugin: ChangeEventPlugin,
  SelectEventPlugin: SelectEventPlugin,
  BeforeInputEventPlugin: BeforeInputEventPlugin
});

// We capture a local reference to any global, in case it gets polyfilled after
// this module is initially evaluated.
// We want to be using a consistent implementation.

var localRequestAnimationFrame$1 = typeof requestAnimationFrame === 'function' ? requestAnimationFrame : undefined;

/**
 * A scheduling library to allow scheduling work with more granular priority and
 * control than requestAnimationFrame and requestIdleCallback.
 * Current TODO items:
 * X- Pull out the scheduleWork polyfill built into React
 * X- Initial test coverage
 * X- Support for multiple callbacks
 * - Support for two priorities; serial and deferred
 * - Better test coverage
 * - Better docblock
 * - Polish documentation, API
 */

// This is a built-in polyfill for requestIdleCallback. It works by scheduling
// a requestAnimationFrame, storing the time for the start of the frame, then
// scheduling a postMessage which gets scheduled after paint. Within the
// postMessage handler do as much work as possible until time + frame rate.
// By separating the idle call into a separate event tick we ensure that
// layout, paint and other browser work is counted against the available time.
// The frame rate is dynamically adjusted.

// We capture a local reference to any global, in case it gets polyfilled after
// this module is initially evaluated.
// We want to be using a consistent implementation.
var localDate = Date;
var localSetTimeout = setTimeout;
var localClearTimeout = clearTimeout;

var hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

var now$1 = void 0;
if (hasNativePerformanceNow) {
  var Performance = performance;
  now$1 = function () {
    return Performance.now();
  };
} else {
  now$1 = function () {
    return localDate.now();
  };
}

var scheduleWork = void 0;
var cancelScheduledWork = void 0;

if (!ExecutionEnvironment.canUseDOM) {
  var timeoutIds = new Map();

  scheduleWork = function (callback, options) {
    // keeping return type consistent
    var callbackConfig = {
      scheduledCallback: callback,
      timeoutTime: 0,
      next: null,
      prev: null
    };
    var timeoutId = localSetTimeout(function () {
      callback({
        timeRemaining: function () {
          return Infinity;
        },

        didTimeout: false
      });
    });
    timeoutIds.set(callback, timeoutId);
    return callbackConfig;
  };
  cancelScheduledWork = function (callbackId) {
    var callback = callbackId.scheduledCallback;
    var timeoutId = timeoutIds.get(callback);
    timeoutIds.delete(callbackId);
    localClearTimeout(timeoutId);
  };
} else {
  {
    if (typeof localRequestAnimationFrame$1 !== 'function') {
      warning(false, 'React depends on requestAnimationFrame. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
    }
  }

  var localRequestAnimationFrame = typeof localRequestAnimationFrame$1 === 'function' ? localRequestAnimationFrame$1 : function (callback) {
    invariant(false, 'React depends on requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills');
  };

  var headOfPendingCallbacksLinkedList = null;
  var tailOfPendingCallbacksLinkedList = null;

  // We track what the next soonest timeoutTime is, to be able to quickly tell
  // if none of the scheduled callbacks have timed out.
  var nextSoonestTimeoutTime = -1;

  var isIdleScheduled = false;
  var isAnimationFrameScheduled = false;

  var frameDeadline = 0;
  // We start out assuming that we run at 30fps but then the heuristic tracking
  // will adjust this value to a faster fps if we get more frequent animation
  // frames.
  var previousFrameTime = 33;
  var activeFrameTime = 33;

  var frameDeadlineObject = {
    didTimeout: false,
    timeRemaining: function () {
      var remaining = frameDeadline - now$1();
      return remaining > 0 ? remaining : 0;
    }
  };

  /**
   * Handles the case where a callback errors:
   * - don't catch the error, because this changes debugging behavior
   * - do start a new postMessage callback, to call any remaining callbacks,
   * - but only if there is an error, so there is not extra overhead.
   */
  var callUnsafely = function (callbackConfig, arg) {
    var callback = callbackConfig.scheduledCallback;
    var finishedCalling = false;
    try {
      callback(arg);
      finishedCalling = true;
    } finally {
      // always remove it from linked list
      cancelScheduledWork(callbackConfig);

      if (!finishedCalling) {
        // an error must have been thrown
        isIdleScheduled = true;
        window.postMessage(messageKey, '*');
      }
    }
  };

  /**
   * Checks for timed out callbacks, runs them, and then checks again to see if
   * any more have timed out.
   * Keeps doing this until there are none which have currently timed out.
   */
  var callTimedOutCallbacks = function () {
    if (headOfPendingCallbacksLinkedList === null) {
      return;
    }

    var currentTime = now$1();
    // TODO: this would be more efficient if deferred callbacks are stored in
    // min heap.
    // Or in a linked list with links for both timeoutTime order and insertion
    // order.
    // For now an easy compromise is the current approach:
    // Keep a pointer to the soonest timeoutTime, and check that first.
    // If it has not expired, we can skip traversing the whole list.
    // If it has expired, then we step through all the callbacks.
    if (nextSoonestTimeoutTime === -1 || nextSoonestTimeoutTime > currentTime) {
      // We know that none of them have timed out yet.
      return;
    }
    // NOTE: we intentionally wait to update the nextSoonestTimeoutTime until
    // after successfully calling any timed out callbacks.
    // If a timed out callback throws an error, we could get stuck in a state
    // where the nextSoonestTimeoutTime was set wrong.
    var updatedNextSoonestTimeoutTime = -1; // we will update nextSoonestTimeoutTime below
    var timedOutCallbacks = [];

    // iterate once to find timed out callbacks and find nextSoonestTimeoutTime
    var currentCallbackConfig = headOfPendingCallbacksLinkedList;
    while (currentCallbackConfig !== null) {
      var _timeoutTime = currentCallbackConfig.timeoutTime;
      if (_timeoutTime !== -1 && _timeoutTime <= currentTime) {
        // it has timed out!
        timedOutCallbacks.push(currentCallbackConfig);
      } else {
        if (_timeoutTime !== -1 && (updatedNextSoonestTimeoutTime === -1 || _timeoutTime < updatedNextSoonestTimeoutTime)) {
          updatedNextSoonestTimeoutTime = _timeoutTime;
        }
      }
      currentCallbackConfig = currentCallbackConfig.next;
    }

    if (timedOutCallbacks.length > 0) {
      frameDeadlineObject.didTimeout = true;
      for (var i = 0, len = timedOutCallbacks.length; i < len; i++) {
        callUnsafely(timedOutCallbacks[i], frameDeadlineObject);
      }
    }

    // NOTE: we intentionally wait to update the nextSoonestTimeoutTime until
    // after successfully calling any timed out callbacks.
    nextSoonestTimeoutTime = updatedNextSoonestTimeoutTime;
  };

  // We use the postMessage trick to defer idle work until after the repaint.
  var messageKey = '__reactIdleCallback$' + Math.random().toString(36).slice(2);
  var idleTick = function (event) {
    if (event.source !== window || event.data !== messageKey) {
      return;
    }
    isIdleScheduled = false;

    if (headOfPendingCallbacksLinkedList === null) {
      return;
    }

    // First call anything which has timed out, until we have caught up.
    callTimedOutCallbacks();

    var currentTime = now$1();
    // Next, as long as we have idle time, try calling more callbacks.
    while (frameDeadline - currentTime > 0 && headOfPendingCallbacksLinkedList !== null) {
      var latestCallbackConfig = headOfPendingCallbacksLinkedList;
      frameDeadlineObject.didTimeout = false;
      // callUnsafely will remove it from the head of the linked list
      callUnsafely(latestCallbackConfig, frameDeadlineObject);
      currentTime = now$1();
    }
    if (headOfPendingCallbacksLinkedList !== null) {
      if (!isAnimationFrameScheduled) {
        // Schedule another animation callback so we retry later.
        isAnimationFrameScheduled = true;
        localRequestAnimationFrame(animationTick);
      }
    }
  };
  // Assumes that we have addEventListener in this environment. Might need
  // something better for old IE.
  window.addEventListener('message', idleTick, false);

  var animationTick = function (rafTime) {
    isAnimationFrameScheduled = false;
    var nextFrameTime = rafTime - frameDeadline + activeFrameTime;
    if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {
      if (nextFrameTime < 8) {
        // Defensive coding. We don't support higher frame rates than 120hz.
        // If we get lower than that, it is probably a bug.
        nextFrameTime = 8;
      }
      // If one frame goes long, then the next one can be short to catch up.
      // If two frames are short in a row, then that's an indication that we
      // actually have a higher frame rate than what we're currently optimizing.
      // We adjust our heuristic dynamically accordingly. For example, if we're
      // running on 120hz display or 90hz VR display.
      // Take the max of the two in case one of them was an anomaly due to
      // missed frame deadlines.
      activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;
    } else {
      previousFrameTime = nextFrameTime;
    }
    frameDeadline = rafTime + activeFrameTime;
    if (!isIdleScheduled) {
      isIdleScheduled = true;
      window.postMessage(messageKey, '*');
    }
  };

  scheduleWork = function (callback, options) /* CallbackConfigType */{
    var timeoutTime = -1;
    if (options != null && typeof options.timeout === 'number') {
      timeoutTime = now$1() + options.timeout;
    }
    if (nextSoonestTimeoutTime === -1 || timeoutTime !== -1 && timeoutTime < nextSoonestTimeoutTime) {
      nextSoonestTimeoutTime = timeoutTime;
    }

    var scheduledCallbackConfig = {
      scheduledCallback: callback,
      timeoutTime: timeoutTime,
      prev: null,
      next: null
    };
    if (headOfPendingCallbacksLinkedList === null) {
      // Make this callback the head and tail of our list
      headOfPendingCallbacksLinkedList = scheduledCallbackConfig;
      tailOfPendingCallbacksLinkedList = scheduledCallbackConfig;
    } else {
      // Add latest callback as the new tail of the list
      scheduledCallbackConfig.prev = tailOfPendingCallbacksLinkedList;
      // renaming for clarity
      var oldTailOfPendingCallbacksLinkedList = tailOfPendingCallbacksLinkedList;
      if (oldTailOfPendingCallbacksLinkedList !== null) {
        oldTailOfPendingCallbacksLinkedList.next = scheduledCallbackConfig;
      }
      tailOfPendingCallbacksLinkedList = scheduledCallbackConfig;
    }

    if (!isAnimationFrameScheduled) {
      // If rAF didn't already schedule one, we need to schedule a frame.
      // TODO: If this rAF doesn't materialize because the browser throttles, we
      // might want to still have setTimeout trigger scheduleWork as a backup to ensure
      // that we keep performing work.
      isAnimationFrameScheduled = true;
      localRequestAnimationFrame(animationTick);
    }
    return scheduledCallbackConfig;
  };

  cancelScheduledWork = function (callbackConfig /* CallbackConfigType */
  ) {
    if (callbackConfig.prev === null && headOfPendingCallbacksLinkedList !== callbackConfig) {
      // this callbackConfig has already been cancelled.
      // cancelScheduledWork should be idempotent, a no-op after first call.
      return;
    }

    /**
     * There are four possible cases:
     * - Head/nodeToRemove/Tail -> null
     *   In this case we set Head and Tail to null.
     * - Head -> ... middle nodes... -> Tail/nodeToRemove
     *   In this case we point the middle.next to null and put middle as the new
     *   Tail.
     * - Head/nodeToRemove -> ...middle nodes... -> Tail
     *   In this case we point the middle.prev at null and move the Head to
     *   middle.
     * - Head -> ... ?some nodes ... -> nodeToRemove -> ... ?some nodes ... -> Tail
     *   In this case we point the Head.next to the Tail and the Tail.prev to
     *   the Head.
     */
    var next = callbackConfig.next;
    var prev = callbackConfig.prev;
    callbackConfig.next = null;
    callbackConfig.prev = null;
    if (next !== null) {
      // we have a next

      if (prev !== null) {
        // we have a prev

        // callbackConfig is somewhere in the middle of a list of 3 or more nodes.
        prev.next = next;
        next.prev = prev;
        return;
      } else {
        // there is a next but not a previous one;
        // callbackConfig is the head of a list of 2 or more other nodes.
        next.prev = null;
        headOfPendingCallbacksLinkedList = next;
        return;
      }
    } else {
      // there is no next callback config; this must the tail of the list

      if (prev !== null) {
        // we have a prev

        // callbackConfig is the tail of a list of 2 or more other nodes.
        prev.next = null;
        tailOfPendingCallbacksLinkedList = prev;
        return;
      } else {
        // there is no previous callback config;
        // callbackConfig is the only thing in the linked list,
        // so both head and tail point to it.
        headOfPendingCallbacksLinkedList = null;
        tailOfPendingCallbacksLinkedList = null;
        return;
      }
    }
  };
}

var didWarnSelectedSetOnOption = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  // We can silently skip them because invalid DOM nesting warning
  // catches these cases in Fiber.
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */

function validateProps(element, props) {
  // TODO (yungsters): Remove support for `selected` in <option>.
  {
    if (props.selected != null && !didWarnSelectedSetOnOption) {
      warning(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
      didWarnSelectedSetOnOption = true;
    }
  }
}

function postMountWrapper$1(element, props) {
  // value="" should make a value attribute (#6219)
  if (props.value != null) {
    element.setAttribute('value', props.value);
  }
}

function getHostProps$1(element, props) {
  var hostProps = _assign({ children: undefined }, props);
  var content = flattenChildren(props.children);

  if (content) {
    hostProps.children = content;
  }

  return hostProps;
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberOwnerName$3 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
var getCurrentFiberStackAddendum$3 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


var didWarnValueDefaultValue$1 = void 0;

{
  didWarnValueDefaultValue$1 = false;
}

function getDeclarationErrorAddendum() {
  var ownerName = getCurrentFiberOwnerName$3();
  if (ownerName) {
    return '\n\nCheck the render method of `' + ownerName + '`.';
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 */
function checkSelectPropTypes(props) {
  ReactControlledValuePropTypes.checkPropTypes('select', props, getCurrentFiberStackAddendum$3);

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
    } else if (!props.multiple && isArray) {
      warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
    }
  }
}

function updateOptions(node, multiple, propValue, setDefaultSelected) {
  var options = node.options;

  if (multiple) {
    var selectedValues = propValue;
    var selectedValue = {};
    for (var i = 0; i < selectedValues.length; i++) {
      // Prefix to avoid chaos with special keys.
      selectedValue['$' + selectedValues[i]] = true;
    }
    for (var _i = 0; _i < options.length; _i++) {
      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
      if (options[_i].selected !== selected) {
        options[_i].selected = selected;
      }
      if (selected && setDefaultSelected) {
        options[_i].defaultSelected = true;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    var _selectedValue = '' + propValue;
    var defaultSelected = null;
    for (var _i2 = 0; _i2 < options.length; _i2++) {
      if (options[_i2].value === _selectedValue) {
        options[_i2].selected = true;
        if (setDefaultSelected) {
          options[_i2].defaultSelected = true;
        }
        return;
      }
      if (defaultSelected === null && !options[_i2].disabled) {
        defaultSelected = options[_i2];
      }
    }
    if (defaultSelected !== null) {
      defaultSelected.selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */

function getHostProps$2(element, props) {
  return _assign({}, props, {
    value: undefined
  });
}

function initWrapperState$1(element, props) {
  var node = element;
  {
    checkSelectPropTypes(props);
  }

  var value = props.value;
  node._wrapperState = {
    initialValue: value != null ? value : props.defaultValue,
    wasMultiple: !!props.multiple
  };

  {
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
      warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
      didWarnValueDefaultValue$1 = true;
    }
  }
}

function postMountWrapper$2(element, props) {
  var node = element;
  node.multiple = !!props.multiple;
  var value = props.value;
  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (props.defaultValue != null) {
    updateOptions(node, !!props.multiple, props.defaultValue, true);
  }
}

function postUpdateWrapper(element, props) {
  var node = element;
  // After the initial mount, we control selected-ness manually so don't pass
  // this value down
  node._wrapperState.initialValue = undefined;

  var wasMultiple = node._wrapperState.wasMultiple;
  node._wrapperState.wasMultiple = !!props.multiple;

  var value = props.value;
  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (wasMultiple !== !!props.multiple) {
    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
    if (props.defaultValue != null) {
      updateOptions(node, !!props.multiple, props.defaultValue, true);
    } else {
      // Revert the select back to its default unselected state.
      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
    }
  }
}

function restoreControlledState$2(element, props) {
  var node = element;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  }
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberStackAddendum$4 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var didWarnValDefaultVal = false;

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */

function getHostProps$3(element, props) {
  var node = element;
  !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0;

  // Always set children to the same thing. In IE9, the selection range will
  // get reset if `textContent` is mutated.  We could add a check in setTextContent
  // to only set the value if/when the value differs from the node value (which would
  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
  // solution. The value can be a boolean or object so that's why it's forced
  // to be a string.
  var hostProps = _assign({}, props, {
    value: undefined,
    defaultValue: undefined,
    children: '' + node._wrapperState.initialValue
  });

  return hostProps;
}

function initWrapperState$2(element, props) {
  var node = element;
  {
    ReactControlledValuePropTypes.checkPropTypes('textarea', props, getCurrentFiberStackAddendum$4);
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
      warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
      didWarnValDefaultVal = true;
    }
  }

  var initialValue = props.value;

  // Only bother fetching default value if we're going to use it
  if (initialValue == null) {
    var defaultValue = props.defaultValue;
    // TODO (yungsters): Remove support for children content in <textarea>.
    var children = props.children;
    if (children != null) {
      {
        warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
      }
      !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;
      if (Array.isArray(children)) {
        !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;
        children = children[0];
      }

      defaultValue = '' + children;
    }
    if (defaultValue == null) {
      defaultValue = '';
    }
    initialValue = defaultValue;
  }

  node._wrapperState = {
    initialValue: '' + initialValue
  };
}

function updateWrapper$1(element, props) {
  var node = element;
  var value = props.value;
  if (value != null) {
    // Cast `value` to a string to ensure the value is set correctly. While
    // browsers typically do this as necessary, jsdom doesn't.
    var newValue = '' + value;

    // To avoid side effects (such as losing text selection), only set value if changed
    if (newValue !== node.value) {
      node.value = newValue;
    }
    if (props.defaultValue == null) {
      node.defaultValue = newValue;
    }
  }
  if (props.defaultValue != null) {
    node.defaultValue = props.defaultValue;
  }
}

function postMountWrapper$3(element, props) {
  var node = element;
  // This is in postMount because we need access to the DOM node, which is not
  // available until after the component has mounted.
  var textContent = node.textContent;

  // Only set node.value if textContent is equal to the expected
  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
  // will populate textContent as well.
  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
  if (textContent === node._wrapperState.initialValue) {
    node.value = textContent;
  }
}

function restoreControlledState$3(element, props) {
  // DOM component is still mounted; update
  updateWrapper$1(element, props);
}

var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';

var Namespaces = {
  html: HTML_NAMESPACE$1,
  mathml: MATH_NAMESPACE,
  svg: SVG_NAMESPACE
};

// Assumes there is no parent namespace.
function getIntrinsicNamespace(type) {
  switch (type) {
    case 'svg':
      return SVG_NAMESPACE;
    case 'math':
      return MATH_NAMESPACE;
    default:
      return HTML_NAMESPACE$1;
  }
}

function getChildNamespace(parentNamespace, type) {
  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
    // No (or default) parent namespace: potential entry point.
    return getIntrinsicNamespace(type);
  }
  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
    // We're leaving SVG.
    return HTML_NAMESPACE$1;
  }
  // By default, pass namespace below.
  return parentNamespace;
}

/* globals MSApp */

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */
var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer = void 0;

/**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node

  if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (node.firstChild) {
      node.removeChild(node.firstChild);
    }
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

/**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
  }

  return ('' + value).trim();
}

var warnValidStyle = emptyFunction;

{
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;
  var warnedForInfinityValue = false;

  var warnHyphenatedStyleName = function (name, getStack) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), getStack());
  };

  var warnBadVendoredStyleName = function (name, getStack) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), getStack());
  };

  var warnStyleValueWithSemicolon = function (name, value, getStack) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    warning(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.%s', name, value.replace(badStyleValueWithSemicolonPattern, ''), getStack());
  };

  var warnStyleValueIsNaN = function (name, value, getStack) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, getStack());
  };

  var warnStyleValueIsInfinity = function (name, value, getStack) {
    if (warnedForInfinityValue) {
      return;
    }

    warnedForInfinityValue = true;
    warning(false, '`Infinity` is an invalid value for the `%s` css style property.%s', name, getStack());
  };

  warnValidStyle = function (name, value, getStack) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, getStack);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, getStack);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, getStack);
    }

    if (typeof value === 'number') {
      if (isNaN(value)) {
        warnStyleValueIsNaN(name, value, getStack);
      } else if (!isFinite(value)) {
        warnStyleValueIsInfinity(name, value, getStack);
      }
    }
  };
}

var warnValidStyle$1 = warnValidStyle;

/**
 * Operations for dealing with CSS properties.
 */

/**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */
function createDangerousStringForStyles(styles) {
  {
    var serialized = '';
    var delimiter = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if (styleValue != null) {
        var isCustomProperty = styleName.indexOf('--') === 0;
        serialized += delimiter + hyphenateStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);

        delimiter = ';';
      }
    }
    return serialized || null;
  }
}

/**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */
function setValueForStyles(node, styles, getStack) {
  var style = node.style;
  for (var styleName in styles) {
    if (!styles.hasOwnProperty(styleName)) {
      continue;
    }
    var isCustomProperty = styleName.indexOf('--') === 0;
    {
      if (!isCustomProperty) {
        warnValidStyle$1(styleName, styles[styleName], getStack);
      }
    }
    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
    if (styleName === 'float') {
      styleName = 'cssFloat';
    }
    if (isCustomProperty) {
      style.setProperty(styleName, styleValue);
    } else {
      style[styleName] = styleValue;
    }
  }
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true
  // NOTE: menuitem's close tag should be omitted, but that causes problems.
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

var HTML$1 = '__html';

function assertValidProps(tag, props, getStack) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, getStack()) : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;
  }
  {
    !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.%s', getStack()) : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getStack()) : void 0;
}

function isCustomComponent(tagName, props) {
  if (tagName.indexOf('-') === -1) {
    return typeof props.is === 'string';
  }
  switch (tagName) {
    // These are reserved SVG and MathML elements.
    // We don't mind this whitelist too much because we expect it to never grow.
    // The alternative is to track the namespace in a few places which is convoluted.
    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;
    default:
      return true;
  }
}

// When adding attributes to the HTML or SVG whitelist, be sure to
// also add them to this module to ensure casing and incorrect name
// warnings.
var possibleStandardNames = {
  // HTML
  accept: 'accept',
  acceptcharset: 'acceptCharset',
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  action: 'action',
  allowfullscreen: 'allowFullScreen',
  alt: 'alt',
  as: 'as',
  async: 'async',
  autocapitalize: 'autoCapitalize',
  autocomplete: 'autoComplete',
  autocorrect: 'autoCorrect',
  autofocus: 'autoFocus',
  autoplay: 'autoPlay',
  autosave: 'autoSave',
  capture: 'capture',
  cellpadding: 'cellPadding',
  cellspacing: 'cellSpacing',
  challenge: 'challenge',
  charset: 'charSet',
  checked: 'checked',
  children: 'children',
  cite: 'cite',
  class: 'className',
  classid: 'classID',
  classname: 'className',
  cols: 'cols',
  colspan: 'colSpan',
  content: 'content',
  contenteditable: 'contentEditable',
  contextmenu: 'contextMenu',
  controls: 'controls',
  controlslist: 'controlsList',
  coords: 'coords',
  crossorigin: 'crossOrigin',
  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
  data: 'data',
  datetime: 'dateTime',
  default: 'default',
  defaultchecked: 'defaultChecked',
  defaultvalue: 'defaultValue',
  defer: 'defer',
  dir: 'dir',
  disabled: 'disabled',
  download: 'download',
  draggable: 'draggable',
  enctype: 'encType',
  for: 'htmlFor',
  form: 'form',
  formmethod: 'formMethod',
  formaction: 'formAction',
  formenctype: 'formEncType',
  formnovalidate: 'formNoValidate',
  formtarget: 'formTarget',
  frameborder: 'frameBorder',
  headers: 'headers',
  height: 'height',
  hidden: 'hidden',
  high: 'high',
  href: 'href',
  hreflang: 'hrefLang',
  htmlfor: 'htmlFor',
  httpequiv: 'httpEquiv',
  'http-equiv': 'httpEquiv',
  icon: 'icon',
  id: 'id',
  innerhtml: 'innerHTML',
  inputmode: 'inputMode',
  integrity: 'integrity',
  is: 'is',
  itemid: 'itemID',
  itemprop: 'itemProp',
  itemref: 'itemRef',
  itemscope: 'itemScope',
  itemtype: 'itemType',
  keyparams: 'keyParams',
  keytype: 'keyType',
  kind: 'kind',
  label: 'label',
  lang: 'lang',
  list: 'list',
  loop: 'loop',
  low: 'low',
  manifest: 'manifest',
  marginwidth: 'marginWidth',
  marginheight: 'marginHeight',
  max: 'max',
  maxlength: 'maxLength',
  media: 'media',
  mediagroup: 'mediaGroup',
  method: 'method',
  min: 'min',
  minlength: 'minLength',
  multiple: 'multiple',
  muted: 'muted',
  name: 'name',
  nomodule: 'noModule',
  nonce: 'nonce',
  novalidate: 'noValidate',
  open: 'open',
  optimum: 'optimum',
  pattern: 'pattern',
  placeholder: 'placeholder',
  playsinline: 'playsInline',
  poster: 'poster',
  preload: 'preload',
  profile: 'profile',
  radiogroup: 'radioGroup',
  readonly: 'readOnly',
  referrerpolicy: 'referrerPolicy',
  rel: 'rel',
  required: 'required',
  reversed: 'reversed',
  role: 'role',
  rows: 'rows',
  rowspan: 'rowSpan',
  sandbox: 'sandbox',
  scope: 'scope',
  scoped: 'scoped',
  scrolling: 'scrolling',
  seamless: 'seamless',
  selected: 'selected',
  shape: 'shape',
  size: 'size',
  sizes: 'sizes',
  span: 'span',
  spellcheck: 'spellCheck',
  src: 'src',
  srcdoc: 'srcDoc',
  srclang: 'srcLang',
  srcset: 'srcSet',
  start: 'start',
  step: 'step',
  style: 'style',
  summary: 'summary',
  tabindex: 'tabIndex',
  target: 'target',
  title: 'title',
  type: 'type',
  usemap: 'useMap',
  value: 'value',
  width: 'width',
  wmode: 'wmode',
  wrap: 'wrap',

  // SVG
  about: 'about',
  accentheight: 'accentHeight',
  'accent-height': 'accentHeight',
  accumulate: 'accumulate',
  additive: 'additive',
  alignmentbaseline: 'alignmentBaseline',
  'alignment-baseline': 'alignmentBaseline',
  allowreorder: 'allowReorder',
  alphabetic: 'alphabetic',
  amplitude: 'amplitude',
  arabicform: 'arabicForm',
  'arabic-form': 'arabicForm',
  ascent: 'ascent',
  attributename: 'attributeName',
  attributetype: 'attributeType',
  autoreverse: 'autoReverse',
  azimuth: 'azimuth',
  basefrequency: 'baseFrequency',
  baselineshift: 'baselineShift',
  'baseline-shift': 'baselineShift',
  baseprofile: 'baseProfile',
  bbox: 'bbox',
  begin: 'begin',
  bias: 'bias',
  by: 'by',
  calcmode: 'calcMode',
  capheight: 'capHeight',
  'cap-height': 'capHeight',
  clip: 'clip',
  clippath: 'clipPath',
  'clip-path': 'clipPath',
  clippathunits: 'clipPathUnits',
  cliprule: 'clipRule',
  'clip-rule': 'clipRule',
  color: 'color',
  colorinterpolation: 'colorInterpolation',
  'color-interpolation': 'colorInterpolation',
  colorinterpolationfilters: 'colorInterpolationFilters',
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorprofile: 'colorProfile',
  'color-profile': 'colorProfile',
  colorrendering: 'colorRendering',
  'color-rendering': 'colorRendering',
  contentscripttype: 'contentScriptType',
  contentstyletype: 'contentStyleType',
  cursor: 'cursor',
  cx: 'cx',
  cy: 'cy',
  d: 'd',
  datatype: 'datatype',
  decelerate: 'decelerate',
  descent: 'descent',
  diffuseconstant: 'diffuseConstant',
  direction: 'direction',
  display: 'display',
  divisor: 'divisor',
  dominantbaseline: 'dominantBaseline',
  'dominant-baseline': 'dominantBaseline',
  dur: 'dur',
  dx: 'dx',
  dy: 'dy',
  edgemode: 'edgeMode',
  elevation: 'elevation',
  enablebackground: 'enableBackground',
  'enable-background': 'enableBackground',
  end: 'end',
  exponent: 'exponent',
  externalresourcesrequired: 'externalResourcesRequired',
  fill: 'fill',
  fillopacity: 'fillOpacity',
  'fill-opacity': 'fillOpacity',
  fillrule: 'fillRule',
  'fill-rule': 'fillRule',
  filter: 'filter',
  filterres: 'filterRes',
  filterunits: 'filterUnits',
  floodopacity: 'floodOpacity',
  'flood-opacity': 'floodOpacity',
  floodcolor: 'floodColor',
  'flood-color': 'floodColor',
  focusable: 'focusable',
  fontfamily: 'fontFamily',
  'font-family': 'fontFamily',
  fontsize: 'fontSize',
  'font-size': 'fontSize',
  fontsizeadjust: 'fontSizeAdjust',
  'font-size-adjust': 'fontSizeAdjust',
  fontstretch: 'fontStretch',
  'font-stretch': 'fontStretch',
  fontstyle: 'fontStyle',
  'font-style': 'fontStyle',
  fontvariant: 'fontVariant',
  'font-variant': 'fontVariant',
  fontweight: 'fontWeight',
  'font-weight': 'fontWeight',
  format: 'format',
  from: 'from',
  fx: 'fx',
  fy: 'fy',
  g1: 'g1',
  g2: 'g2',
  glyphname: 'glyphName',
  'glyph-name': 'glyphName',
  glyphorientationhorizontal: 'glyphOrientationHorizontal',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphorientationvertical: 'glyphOrientationVertical',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  hanging: 'hanging',
  horizadvx: 'horizAdvX',
  'horiz-adv-x': 'horizAdvX',
  horizoriginx: 'horizOriginX',
  'horiz-origin-x': 'horizOriginX',
  ideographic: 'ideographic',
  imagerendering: 'imageRendering',
  'image-rendering': 'imageRendering',
  in2: 'in2',
  in: 'in',
  inlist: 'inlist',
  intercept: 'intercept',
  k1: 'k1',
  k2: 'k2',
  k3: 'k3',
  k4: 'k4',
  k: 'k',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  kerning: 'kerning',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  letterspacing: 'letterSpacing',
  'letter-spacing': 'letterSpacing',
  lightingcolor: 'lightingColor',
  'lighting-color': 'lightingColor',
  limitingconeangle: 'limitingConeAngle',
  local: 'local',
  markerend: 'markerEnd',
  'marker-end': 'markerEnd',
  markerheight: 'markerHeight',
  markermid: 'markerMid',
  'marker-mid': 'markerMid',
  markerstart: 'markerStart',
  'marker-start': 'markerStart',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  mask: 'mask',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  mathematical: 'mathematical',
  mode: 'mode',
  numoctaves: 'numOctaves',
  offset: 'offset',
  opacity: 'opacity',
  operator: 'operator',
  order: 'order',
  orient: 'orient',
  orientation: 'orientation',
  origin: 'origin',
  overflow: 'overflow',
  overlineposition: 'overlinePosition',
  'overline-position': 'overlinePosition',
  overlinethickness: 'overlineThickness',
  'overline-thickness': 'overlineThickness',
  paintorder: 'paintOrder',
  'paint-order': 'paintOrder',
  panose1: 'panose1',
  'panose-1': 'panose1',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  pointerevents: 'pointerEvents',
  'pointer-events': 'pointerEvents',
  points: 'points',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  prefix: 'prefix',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  property: 'property',
  r: 'r',
  radius: 'radius',
  refx: 'refX',
  refy: 'refY',
  renderingintent: 'renderingIntent',
  'rendering-intent': 'renderingIntent',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  resource: 'resource',
  restart: 'restart',
  result: 'result',
  results: 'results',
  rotate: 'rotate',
  rx: 'rx',
  ry: 'ry',
  scale: 'scale',
  security: 'security',
  seed: 'seed',
  shaperendering: 'shapeRendering',
  'shape-rendering': 'shapeRendering',
  slope: 'slope',
  spacing: 'spacing',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  speed: 'speed',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stemh: 'stemh',
  stemv: 'stemv',
  stitchtiles: 'stitchTiles',
  stopcolor: 'stopColor',
  'stop-color': 'stopColor',
  stopopacity: 'stopOpacity',
  'stop-opacity': 'stopOpacity',
  strikethroughposition: 'strikethroughPosition',
  'strikethrough-position': 'strikethroughPosition',
  strikethroughthickness: 'strikethroughThickness',
  'strikethrough-thickness': 'strikethroughThickness',
  string: 'string',
  stroke: 'stroke',
  strokedasharray: 'strokeDasharray',
  'stroke-dasharray': 'strokeDasharray',
  strokedashoffset: 'strokeDashoffset',
  'stroke-dashoffset': 'strokeDashoffset',
  strokelinecap: 'strokeLinecap',
  'stroke-linecap': 'strokeLinecap',
  strokelinejoin: 'strokeLinejoin',
  'stroke-linejoin': 'strokeLinejoin',
  strokemiterlimit: 'strokeMiterlimit',
  'stroke-miterlimit': 'strokeMiterlimit',
  strokewidth: 'strokeWidth',
  'stroke-width': 'strokeWidth',
  strokeopacity: 'strokeOpacity',
  'stroke-opacity': 'strokeOpacity',
  suppresscontenteditablewarning: 'suppressContentEditableWarning',
  suppresshydrationwarning: 'suppressHydrationWarning',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  textanchor: 'textAnchor',
  'text-anchor': 'textAnchor',
  textdecoration: 'textDecoration',
  'text-decoration': 'textDecoration',
  textlength: 'textLength',
  textrendering: 'textRendering',
  'text-rendering': 'textRendering',
  to: 'to',
  transform: 'transform',
  typeof: 'typeof',
  u1: 'u1',
  u2: 'u2',
  underlineposition: 'underlinePosition',
  'underline-position': 'underlinePosition',
  underlinethickness: 'underlineThickness',
  'underline-thickness': 'underlineThickness',
  unicode: 'unicode',
  unicodebidi: 'unicodeBidi',
  'unicode-bidi': 'unicodeBidi',
  unicoderange: 'unicodeRange',
  'unicode-range': 'unicodeRange',
  unitsperem: 'unitsPerEm',
  'units-per-em': 'unitsPerEm',
  unselectable: 'unselectable',
  valphabetic: 'vAlphabetic',
  'v-alphabetic': 'vAlphabetic',
  values: 'values',
  vectoreffect: 'vectorEffect',
  'vector-effect': 'vectorEffect',
  version: 'version',
  vertadvy: 'vertAdvY',
  'vert-adv-y': 'vertAdvY',
  vertoriginx: 'vertOriginX',
  'vert-origin-x': 'vertOriginX',
  vertoriginy: 'vertOriginY',
  'vert-origin-y': 'vertOriginY',
  vhanging: 'vHanging',
  'v-hanging': 'vHanging',
  videographic: 'vIdeographic',
  'v-ideographic': 'vIdeographic',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  visibility: 'visibility',
  vmathematical: 'vMathematical',
  'v-mathematical': 'vMathematical',
  vocab: 'vocab',
  widths: 'widths',
  wordspacing: 'wordSpacing',
  'word-spacing': 'wordSpacing',
  writingmode: 'writingMode',
  'writing-mode': 'writingMode',
  x1: 'x1',
  x2: 'x2',
  x: 'x',
  xchannelselector: 'xChannelSelector',
  xheight: 'xHeight',
  'x-height': 'xHeight',
  xlinkactuate: 'xlinkActuate',
  'xlink:actuate': 'xlinkActuate',
  xlinkarcrole: 'xlinkArcrole',
  'xlink:arcrole': 'xlinkArcrole',
  xlinkhref: 'xlinkHref',
  'xlink:href': 'xlinkHref',
  xlinkrole: 'xlinkRole',
  'xlink:role': 'xlinkRole',
  xlinkshow: 'xlinkShow',
  'xlink:show': 'xlinkShow',
  xlinktitle: 'xlinkTitle',
  'xlink:title': 'xlinkTitle',
  xlinktype: 'xlinkType',
  'xlink:type': 'xlinkType',
  xmlbase: 'xmlBase',
  'xml:base': 'xmlBase',
  xmllang: 'xmlLang',
  'xml:lang': 'xmlLang',
  xmlns: 'xmlns',
  'xml:space': 'xmlSpace',
  xmlnsxlink: 'xmlnsXlink',
  'xmlns:xlink': 'xmlnsXlink',
  xmlspace: 'xmlSpace',
  y1: 'y1',
  y2: 'y2',
  y: 'y',
  ychannelselector: 'yChannelSelector',
  z: 'z',
  zoomandpan: 'zoomAndPan'
};

var ariaProperties = {
  'aria-current': 0, // state
  'aria-details': 0,
  'aria-disabled': 0, // state
  'aria-hidden': 0, // state
  'aria-invalid': 0, // state
  'aria-keyshortcuts': 0,
  'aria-label': 0,
  'aria-roledescription': 0,
  // Widget Attributes
  'aria-autocomplete': 0,
  'aria-checked': 0,
  'aria-expanded': 0,
  'aria-haspopup': 0,
  'aria-level': 0,
  'aria-modal': 0,
  'aria-multiline': 0,
  'aria-multiselectable': 0,
  'aria-orientation': 0,
  'aria-placeholder': 0,
  'aria-pressed': 0,
  'aria-readonly': 0,
  'aria-required': 0,
  'aria-selected': 0,
  'aria-sort': 0,
  'aria-valuemax': 0,
  'aria-valuemin': 0,
  'aria-valuenow': 0,
  'aria-valuetext': 0,
  // Live Region Attributes
  'aria-atomic': 0,
  'aria-busy': 0,
  'aria-live': 0,
  'aria-relevant': 0,
  // Drag-and-Drop Attributes
  'aria-dropeffect': 0,
  'aria-grabbed': 0,
  // Relationship Attributes
  'aria-activedescendant': 0,
  'aria-colcount': 0,
  'aria-colindex': 0,
  'aria-colspan': 0,
  'aria-controls': 0,
  'aria-describedby': 0,
  'aria-errormessage': 0,
  'aria-flowto': 0,
  'aria-labelledby': 0,
  'aria-owns': 0,
  'aria-posinset': 0,
  'aria-rowcount': 0,
  'aria-rowindex': 0,
  'aria-rowspan': 0,
  'aria-setsize': 0
};

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

function getStackAddendum() {
  var stack = ReactDebugCurrentFrame.getStackAddendum();
  return stack != null ? stack : '';
}

function validateProperty(tagName, name) {
  if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) {
    return true;
  }

  if (rARIACamel.test(name)) {
    var ariaName = 'aria-' + name.slice(4).toLowerCase();
    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (correctName == null) {
      warning(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.%s', name, getStackAddendum());
      warnedProperties[name] = true;
      return true;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== correctName) {
      warning(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?%s', name, correctName, getStackAddendum());
      warnedProperties[name] = true;
      return true;
    }
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      warning(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum());
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(type, props) {
  var invalidProps = [];

  for (var key in props) {
    var isValid = validateProperty(type, key);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
  } else if (invalidProps.length > 1) {
    warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
  }
}

function validateProperties(type, props) {
  if (isCustomComponent(type, props)) {
    return;
  }
  warnInvalidARIAProps(type, props);
}

var didWarnValueNull = false;

function getStackAddendum$1() {
  var stack = ReactDebugCurrentFrame.getStackAddendum();
  return stack != null ? stack : '';
}

function validateProperties$1(type, props) {
  if (type !== 'input' && type !== 'textarea' && type !== 'select') {
    return;
  }

  if (props != null && props.value === null && !didWarnValueNull) {
    didWarnValueNull = true;
    if (type === 'select' && props.multiple) {
      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.%s', type, getStackAddendum$1());
    } else {
      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', type, getStackAddendum$1());
    }
  }
}

function getStackAddendum$2() {
  var stack = ReactDebugCurrentFrame.getStackAddendum();
  return stack != null ? stack : '';
}

var validateProperty$1 = function () {};

{
  var warnedProperties$1 = {};
  var _hasOwnProperty = Object.prototype.hasOwnProperty;
  var EVENT_NAME_REGEX = /^on./;
  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

  validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
      return true;
    }

    var lowerCasedName = name.toLowerCase();
    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
      warning(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
      warnedProperties$1[name] = true;
      return true;
    }

    // We can't rely on the event system being injected on the server.
    if (canUseEventSystem) {
      if (registrationNameModules.hasOwnProperty(name)) {
        return true;
      }
      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
      if (registrationName != null) {
        warning(false, 'Invalid event handler property `%s`. Did you mean `%s`?%s', name, registrationName, getStackAddendum$2());
        warnedProperties$1[name] = true;
        return true;
      }
      if (EVENT_NAME_REGEX.test(name)) {
        warning(false, 'Unknown event handler property `%s`. It will be ignored.%s', name, getStackAddendum$2());
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (EVENT_NAME_REGEX.test(name)) {
      // If no event plugins have been injected, we are in a server environment.
      // So we can't tell if the event name is correct for sure, but we can filter
      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
      if (INVALID_EVENT_NAME_REGEX.test(name)) {
        warning(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.%s', name, getStackAddendum$2());
      }
      warnedProperties$1[name] = true;
      return true;
    }

    // Let the ARIA attribute hook validate ARIA attributes
    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
      return true;
    }

    if (lowerCasedName === 'innerhtml') {
      warning(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'aria') {
      warning(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
      warning(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.%s', typeof value, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'number' && isNaN(value)) {
      warning(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.%s', name, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    var propertyInfo = getPropertyInfo(name);
    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;

    // Known attributes should match the casing specified in the property config.
    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      var standardName = possibleStandardNames[lowerCasedName];
      if (standardName !== name) {
        warning(false, 'Invalid DOM property `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum$2());
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (!isReserved && name !== lowerCasedName) {
      // Unknown attributes should have lowercase casing since that's how they
      // will be cased anyway with server rendering.
      warning(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.%s', name, lowerCasedName, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      if (value) {
        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.%s', value, name, name, value, name, getStackAddendum$2());
      } else {
        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', value, name, name, value, name, name, name, getStackAddendum$2());
      }
      warnedProperties$1[name] = true;
      return true;
    }

    // Now that we've validated casing, do not validate
    // data types for reserved props
    if (isReserved) {
      return true;
    }

    // Warn when a known attribute is a bad type
    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      warnedProperties$1[name] = true;
      return false;
    }

    return true;
  };
}

var warnUnknownProperties = function (type, props, canUseEventSystem) {
  var unknownProps = [];
  for (var key in props) {
    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');
  if (unknownProps.length === 1) {
    warning(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
  } else if (unknownProps.length > 1) {
    warning(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
  }
};

function validateProperties$2(type, props, canUseEventSystem) {
  if (isCustomComponent(type, props)) {
    return;
  }
  warnUnknownProperties(type, props, canUseEventSystem);
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberOwnerName$2 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
var getCurrentFiberStackAddendum$2 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var didWarnInvalidHydration = false;
var didWarnShadyDOM = false;

var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
var AUTOFOCUS = 'autoFocus';
var CHILDREN = 'children';
var STYLE = 'style';
var HTML = '__html';

var HTML_NAMESPACE = Namespaces.html;


var getStack = emptyFunction.thatReturns('');

var warnedUnknownTags = void 0;
var suppressHydrationWarning = void 0;

var validatePropertiesInDevelopment = void 0;
var warnForTextDifference = void 0;
var warnForPropDifference = void 0;
var warnForExtraAttributes = void 0;
var warnForInvalidEventListener = void 0;

var normalizeMarkupForTextOrAttribute = void 0;
var normalizeHTML = void 0;

{
  getStack = getCurrentFiberStackAddendum$2;

  warnedUnknownTags = {
    // Chrome is the only major browser not shipping <time>. But as of July
    // 2017 it intends to ship it due to widespread usage. We intentionally
    // *don't* warn for <time> even if it's unrecognized by Chrome because
    // it soon will be, and many apps have been using it anyway.
    time: true,
    // There are working polyfills for <dialog>. Let people use it.
    dialog: true
  };

  validatePropertiesInDevelopment = function (type, props) {
    validateProperties(type, props);
    validateProperties$1(type, props);
    validateProperties$2(type, props, /* canUseEventSystem */true);
  };

  // HTML parsing normalizes CR and CRLF to LF.
  // It also can turn \u0000 into \uFFFD inside attributes.
  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
  // If we have a mismatch, it might be caused by that.
  // We will still patch up in this case but not fire the warning.
  var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

  normalizeMarkupForTextOrAttribute = function (markup) {
    var markupString = typeof markup === 'string' ? markup : '' + markup;
    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
  };

  warnForTextDifference = function (serverText, clientText) {
    if (didWarnInvalidHydration) {
      return;
    }
    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
    if (normalizedServerText === normalizedClientText) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
  };

  warnForPropDifference = function (propName, serverValue, clientValue) {
    if (didWarnInvalidHydration) {
      return;
    }
    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
    if (normalizedServerValue === normalizedClientValue) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
  };

  warnForExtraAttributes = function (attributeNames) {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    var names = [];
    attributeNames.forEach(function (name) {
      names.push(name);
    });
    warning(false, 'Extra attributes from the server: %s', names);
  };

  warnForInvalidEventListener = function (registrationName, listener) {
    if (listener === false) {
      warning(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', registrationName, registrationName, registrationName, getCurrentFiberStackAddendum$2());
    } else {
      warning(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.%s', registrationName, typeof listener, getCurrentFiberStackAddendum$2());
    }
  };

  // Parse the HTML and read it back to normalize the HTML string so that it
  // can be used for comparison.
  normalizeHTML = function (parent, html) {
    // We could have created a separate document here to avoid
    // re-initializing custom elements if they exist. But this breaks
    // how <noscript> is being handled. So we use the same document.
    // See the discussion in https://github.com/facebook/react/pull/11157.
    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
    testElement.innerHTML = html;
    return testElement.innerHTML;
  };
}

function ensureListeningTo(rootContainerElement, registrationName) {
  var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
  var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
  listenTo(registrationName, doc);
}

function getOwnerDocumentFromRootContainer(rootContainerElement) {
  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
}

function trapClickOnNonInteractiveElement(node) {
  // Mobile Safari does not fire properly bubble click events on
  // non-interactive elements, which means delegated click listeners do not
  // fire. The workaround for this bug involves attaching an empty click
  // listener on the target node.
  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
  // Just set it using the onclick property so that we don't have to manage any
  // bookkeeping for it. Not sure if we need to clear it when the listener is
  // removed.
  // TODO: Only do this for the relevant Safaris maybe?
  node.onclick = emptyFunction;
}

function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
  for (var propKey in nextProps) {
    if (!nextProps.hasOwnProperty(propKey)) {
      continue;
    }
    var nextProp = nextProps[propKey];
    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }
      // Relies on `updateStylesByID` not mutating `styleUpdates`.
      setValueForStyles(domElement, nextProp, getStack);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      if (nextHtml != null) {
        setInnerHTML(domElement, nextHtml);
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string') {
        // Avoid setting initial textContent when the text is empty. In IE11 setting
        // textContent on a <textarea> will cause the placeholder to not
        // show within the <textarea> until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        var canSetTextContent = tag !== 'textarea' || nextProp !== '';
        if (canSetTextContent) {
          setTextContent(domElement, nextProp);
        }
      } else if (typeof nextProp === 'number') {
        setTextContent(domElement, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (propKey === AUTOFOCUS) {
      // We polyfill it separately on the client during commit.
      // We blacklist it here rather than in the property list because we emit it in SSR.
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if (nextProp != null) {
      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
    }
  }
}

function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
  // TODO: Handle wasCustomComponentTag
  for (var i = 0; i < updatePayload.length; i += 2) {
    var propKey = updatePayload[i];
    var propValue = updatePayload[i + 1];
    if (propKey === STYLE) {
      setValueForStyles(domElement, propValue, getStack);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      setInnerHTML(domElement, propValue);
    } else if (propKey === CHILDREN) {
      setTextContent(domElement, propValue);
    } else {
      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
    }
  }
}

function createElement$1(type, props, rootContainerElement, parentNamespace) {
  var isCustomComponentTag = void 0;

  // We create tags in the namespace of their parent container, except HTML
  // tags get no namespace.
  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
  var domElement = void 0;
  var namespaceURI = parentNamespace;
  if (namespaceURI === HTML_NAMESPACE) {
    namespaceURI = getIntrinsicNamespace(type);
  }
  if (namespaceURI === HTML_NAMESPACE) {
    {
      isCustomComponentTag = isCustomComponent(type, props);
      // Should this check be gated by parent namespace? Not sure we want to
      // allow <SVG> or <mATH>.
      !(isCustomComponentTag || type === type.toLowerCase()) ? warning(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;
    }

    if (type === 'script') {
      // Create the script via .innerHTML so its "parser-inserted" flag is
      // set to true and it does not execute
      var div = ownerDocument.createElement('div');
      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
      // This is guaranteed to yield a script element.
      var firstChild = div.firstChild;
      domElement = div.removeChild(firstChild);
    } else if (typeof props.is === 'string') {
      // $FlowIssue `createElement` should be updated for Web Components
      domElement = ownerDocument.createElement(type, { is: props.is });
    } else {
      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
      // See discussion in https://github.com/facebook/react/pull/6896
      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
      domElement = ownerDocument.createElement(type);
    }
  } else {
    domElement = ownerDocument.createElementNS(namespaceURI, type);
  }

  {
    if (namespaceURI === HTML_NAMESPACE) {
      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
        warnedUnknownTags[type] = true;
        warning(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
      }
    }
  }

  return domElement;
}

function createTextNode$1(text, rootContainerElement) {
  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
}

function setInitialProperties$1(domElement, tag, rawProps, rootContainerElement) {
  var isCustomComponentTag = isCustomComponent(tag, rawProps);
  {
    validatePropertiesInDevelopment(tag, rawProps);
    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$2() || 'A component');
      didWarnShadyDOM = true;
    }
  }

  // TODO: Make sure that we check isMounted before firing any of these events.
  var props = void 0;
  switch (tag) {
    case 'iframe':
    case 'object':
      trapBubbledEvent(TOP_LOAD, domElement);
      props = rawProps;
      break;
    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var i = 0; i < mediaEventTypes.length; i++) {
        trapBubbledEvent(mediaEventTypes[i], domElement);
      }
      props = rawProps;
      break;
    case 'source':
      trapBubbledEvent(TOP_ERROR, domElement);
      props = rawProps;
      break;
    case 'img':
    case 'image':
    case 'link':
      trapBubbledEvent(TOP_ERROR, domElement);
      trapBubbledEvent(TOP_LOAD, domElement);
      props = rawProps;
      break;
    case 'form':
      trapBubbledEvent(TOP_RESET, domElement);
      trapBubbledEvent(TOP_SUBMIT, domElement);
      props = rawProps;
      break;
    case 'details':
      trapBubbledEvent(TOP_TOGGLE, domElement);
      props = rawProps;
      break;
    case 'input':
      initWrapperState(domElement, rawProps);
      props = getHostProps(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'option':
      validateProps(domElement, rawProps);
      props = getHostProps$1(domElement, rawProps);
      break;
    case 'select':
      initWrapperState$1(domElement, rawProps);
      props = getHostProps$2(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      props = getHostProps$3(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    default:
      props = rawProps;
  }

  assertValidProps(tag, props, getStack);

  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, false);
      break;
    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;
    case 'option':
      postMountWrapper$1(domElement, rawProps);
      break;
    case 'select':
      postMountWrapper$2(domElement, rawProps);
      break;
    default:
      if (typeof props.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }
}

// Calculate the diff between the two objects.
function diffProperties$1(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
  {
    validatePropertiesInDevelopment(tag, nextRawProps);
  }

  var updatePayload = null;

  var lastProps = void 0;
  var nextProps = void 0;
  switch (tag) {
    case 'input':
      lastProps = getHostProps(domElement, lastRawProps);
      nextProps = getHostProps(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'option':
      lastProps = getHostProps$1(domElement, lastRawProps);
      nextProps = getHostProps$1(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'select':
      lastProps = getHostProps$2(domElement, lastRawProps);
      nextProps = getHostProps$2(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'textarea':
      lastProps = getHostProps$3(domElement, lastRawProps);
      nextProps = getHostProps$3(domElement, nextRawProps);
      updatePayload = [];
      break;
    default:
      lastProps = lastRawProps;
      nextProps = nextRawProps;
      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }

  assertValidProps(tag, nextProps, getStack);

  var propKey = void 0;
  var styleName = void 0;
  var styleUpdates = null;
  for (propKey in lastProps) {
    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
      continue;
    }
    if (propKey === STYLE) {
      var lastStyle = lastProps[propKey];
      for (styleName in lastStyle) {
        if (lastStyle.hasOwnProperty(styleName)) {
          if (!styleUpdates) {
            styleUpdates = {};
          }
          styleUpdates[styleName] = '';
        }
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {
      // Noop. This is handled by the clear text mechanism.
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (propKey === AUTOFOCUS) {
      // Noop. It doesn't work on updates anyway.
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      // This is a special case. If any listener updates we need to ensure
      // that the "current" fiber pointer gets updated so we need a commit
      // to update this element.
      if (!updatePayload) {
        updatePayload = [];
      }
    } else {
      // For all other deleted properties we add it to the queue. We use
      // the whitelist in the commit phase instead.
      (updatePayload = updatePayload || []).push(propKey, null);
    }
  }
  for (propKey in nextProps) {
    var nextProp = nextProps[propKey];
    var lastProp = lastProps != null ? lastProps[propKey] : undefined;
    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
      continue;
    }
    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }
      if (lastProp) {
        // Unset styles on `lastProp` but not on `nextProp`.
        for (styleName in lastProp) {
          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
            if (!styleUpdates) {
              styleUpdates = {};
            }
            styleUpdates[styleName] = '';
          }
        }
        // Update styles that changed since `lastProp`.
        for (styleName in nextProp) {
          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
            if (!styleUpdates) {
              styleUpdates = {};
            }
            styleUpdates[styleName] = nextProp[styleName];
          }
        }
      } else {
        // Relies on `updateStylesByID` not mutating `styleUpdates`.
        if (!styleUpdates) {
          if (!updatePayload) {
            updatePayload = [];
          }
          updatePayload.push(propKey, styleUpdates);
        }
        styleUpdates = nextProp;
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      var lastHtml = lastProp ? lastProp[HTML] : undefined;
      if (nextHtml != null) {
        if (lastHtml !== nextHtml) {
          (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);
        }
      } else {
        // TODO: It might be too late to clear this if we have children
        // inserted already.
      }
    } else if (propKey === CHILDREN) {
      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        // We eagerly listen to this even though we haven't committed yet.
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
      if (!updatePayload && lastProp !== nextProp) {
        // This is a special case. If any listener updates we need to ensure
        // that the "current" props pointer gets updated so we need a commit
        // to update this element.
        updatePayload = [];
      }
    } else {
      // For any other property we always add it to the queue and then we
      // filter it out using the whitelist during the commit.
      (updatePayload = updatePayload || []).push(propKey, nextProp);
    }
  }
  if (styleUpdates) {
    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
  }
  return updatePayload;
}

// Apply the diff.
function updateProperties$1(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
  // Update checked *before* name.
  // In the middle of an update, it is possible to have multiple checked.
  // When a checked radio tries to change name, browser makes another radio's checked false.
  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
    updateChecked(domElement, nextRawProps);
  }

  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
  var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
  // Apply the diff.
  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);

  // TODO: Ensure that an update gets scheduled if any of the special props
  // changed.
  switch (tag) {
    case 'input':
      // Update the wrapper around inputs *after* updating props. This has to
      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
      // raise warnings and prevent the new value from being assigned.
      updateWrapper(domElement, nextRawProps);
      break;
    case 'textarea':
      updateWrapper$1(domElement, nextRawProps);
      break;
    case 'select':
      // <select> value update needs to occur after <option> children
      // reconciliation
      postUpdateWrapper(domElement, nextRawProps);
      break;
  }
}

function getPossibleStandardName(propName) {
  {
    var lowerCasedName = propName.toLowerCase();
    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      return null;
    }
    return possibleStandardNames[lowerCasedName] || null;
  }
  return null;
}

function diffHydratedProperties$1(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
  var isCustomComponentTag = void 0;
  var extraAttributeNames = void 0;

  {
    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
    isCustomComponentTag = isCustomComponent(tag, rawProps);
    validatePropertiesInDevelopment(tag, rawProps);
    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$2() || 'A component');
      didWarnShadyDOM = true;
    }
  }

  // TODO: Make sure that we check isMounted before firing any of these events.
  switch (tag) {
    case 'iframe':
    case 'object':
      trapBubbledEvent(TOP_LOAD, domElement);
      break;
    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var i = 0; i < mediaEventTypes.length; i++) {
        trapBubbledEvent(mediaEventTypes[i], domElement);
      }
      break;
    case 'source':
      trapBubbledEvent(TOP_ERROR, domElement);
      break;
    case 'img':
    case 'image':
    case 'link':
      trapBubbledEvent(TOP_ERROR, domElement);
      trapBubbledEvent(TOP_LOAD, domElement);
      break;
    case 'form':
      trapBubbledEvent(TOP_RESET, domElement);
      trapBubbledEvent(TOP_SUBMIT, domElement);
      break;
    case 'details':
      trapBubbledEvent(TOP_TOGGLE, domElement);
      break;
    case 'input':
      initWrapperState(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'option':
      validateProps(domElement, rawProps);
      break;
    case 'select':
      initWrapperState$1(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
  }

  assertValidProps(tag, rawProps, getStack);

  {
    extraAttributeNames = new Set();
    var attributes = domElement.attributes;
    for (var _i = 0; _i < attributes.length; _i++) {
      var name = attributes[_i].name.toLowerCase();
      switch (name) {
        // Built-in SSR attribute is whitelisted
        case 'data-reactroot':
          break;
        // Controlled attributes are not validated
        // TODO: Only ignore them on controlled tags.
        case 'value':
          break;
        case 'checked':
          break;
        case 'selected':
          break;
        default:
          // Intentionally use the original name.
          // See discussion in https://github.com/facebook/react/pull/10676.
          extraAttributeNames.add(attributes[_i].name);
      }
    }
  }

  var updatePayload = null;
  for (var propKey in rawProps) {
    if (!rawProps.hasOwnProperty(propKey)) {
      continue;
    }
    var nextProp = rawProps[propKey];
    if (propKey === CHILDREN) {
      // For text content children we compare against textContent. This
      // might match additional HTML that is hidden when we read it using
      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
      // satisfies our requirement. Our requirement is not to produce perfect
      // HTML and attributes. Ideally we should preserve structure but it's
      // ok not to if the visible content is still enough to indicate what
      // even listeners these nodes might be wired up to.
      // TODO: Warn if there is more than a single textNode as a child.
      // TODO: Should we use domElement.firstChild.nodeValue to compare?
      if (typeof nextProp === 'string') {
        if (domElement.textContent !== nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }
          updatePayload = [CHILDREN, nextProp];
        }
      } else if (typeof nextProp === 'number') {
        if (domElement.textContent !== '' + nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }
          updatePayload = [CHILDREN, '' + nextProp];
        }
      }
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if (true &&
    // Convince Flow we've calculated it (it's DEV-only in this method.)
    typeof isCustomComponentTag === 'boolean') {
      // Validate that the properties correspond to their expected values.
      var serverValue = void 0;
      var propertyInfo = getPropertyInfo(propKey);
      if (suppressHydrationWarning) {
        // Don't bother comparing. We're ignoring all these warnings.
      } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 ||
      // Controlled attributes are not validated
      // TODO: Only ignore them on controlled tags.
      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {
        // Noop
      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
        var rawHtml = nextProp ? nextProp[HTML] || '' : '';
        var serverHTML = domElement.innerHTML;
        var expectedHTML = normalizeHTML(domElement, rawHtml);
        if (expectedHTML !== serverHTML) {
          warnForPropDifference(propKey, serverHTML, expectedHTML);
        }
      } else if (propKey === STYLE) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey);
        var expectedStyle = createDangerousStringForStyles(nextProp);
        serverValue = domElement.getAttribute('style');
        if (expectedStyle !== serverValue) {
          warnForPropDifference(propKey, serverValue, expectedStyle);
        }
      } else if (isCustomComponentTag) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey.toLowerCase());
        serverValue = getValueForAttribute(domElement, propKey, nextProp);

        if (nextProp !== serverValue) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
        var isMismatchDueToBadCasing = false;
        if (propertyInfo !== null) {
          // $FlowFixMe - Should be inferred as not undefined.
          extraAttributeNames.delete(propertyInfo.attributeName);
          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
        } else {
          var ownNamespace = parentNamespace;
          if (ownNamespace === HTML_NAMESPACE) {
            ownNamespace = getIntrinsicNamespace(tag);
          }
          if (ownNamespace === HTML_NAMESPACE) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey.toLowerCase());
          } else {
            var standardName = getPossibleStandardName(propKey);
            if (standardName !== null && standardName !== propKey) {
              // If an SVG prop is supplied with bad casing, it will
              // be successfully parsed from HTML, but will produce a mismatch
              // (and would be incorrectly rendered on the client).
              // However, we already warn about bad casing elsewhere.
              // So we'll skip the misleading extra mismatch warning in this case.
              isMismatchDueToBadCasing = true;
              // $FlowFixMe - Should be inferred as not undefined.
              extraAttributeNames.delete(standardName);
            }
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey);
          }
          serverValue = getValueForAttribute(domElement, propKey, nextProp);
        }

        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      }
    }
  }

  {
    // $FlowFixMe - Should be inferred as not undefined.
    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
      // $FlowFixMe - Should be inferred as not undefined.
      warnForExtraAttributes(extraAttributeNames);
    }
  }

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, true);
      break;
    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;
    case 'select':
    case 'option':
      // For input and textarea we current always set the value property at
      // post mount to force it to diverge from attributes. However, for
      // option and select we don't quite do the same thing and select
      // is not resilient to the DOM state changing so we don't do that here.
      // TODO: Consider not doing this for input and textarea.
      break;
    default:
      if (typeof rawProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }

  return updatePayload;
}

function diffHydratedText$1(textNode, text) {
  var isDifferent = textNode.nodeValue !== text;
  return isDifferent;
}

function warnForUnmatchedText$1(textNode, text) {
  {
    warnForTextDifference(textNode.nodeValue, text);
  }
}

function warnForDeletedHydratableElement$1(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
  }
}

function warnForDeletedHydratableText$1(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
  }
}

function warnForInsertedHydratedElement$1(parentNode, tag, props) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
  }
}

function warnForInsertedHydratedText$1(parentNode, text) {
  {
    if (text === '') {
      // We expect to insert empty text nodes since they're not represented in
      // the HTML.
      // TODO: Remove this special case if we can just avoid inserting empty
      // text nodes.
      return;
    }
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
  }
}

function restoreControlledState$1(domElement, tag, props) {
  switch (tag) {
    case 'input':
      restoreControlledState(domElement, props);
      return;
    case 'textarea':
      restoreControlledState$3(domElement, props);
      return;
    case 'select':
      restoreControlledState$2(domElement, props);
      return;
  }
}

var ReactDOMFiberComponent = Object.freeze({
	createElement: createElement$1,
	createTextNode: createTextNode$1,
	setInitialProperties: setInitialProperties$1,
	diffProperties: diffProperties$1,
	updateProperties: updateProperties$1,
	diffHydratedProperties: diffHydratedProperties$1,
	diffHydratedText: diffHydratedText$1,
	warnForUnmatchedText: warnForUnmatchedText$1,
	warnForDeletedHydratableElement: warnForDeletedHydratableElement$1,
	warnForDeletedHydratableText: warnForDeletedHydratableText$1,
	warnForInsertedHydratedElement: warnForInsertedHydratedElement$1,
	warnForInsertedHydratedText: warnForInsertedHydratedText$1,
	restoreControlledState: restoreControlledState$1
});

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberStackAddendum$5 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var validateDOMNesting = emptyFunction;

{
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo$1 = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childText, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      !(childTag == null) ? warning(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var invalidParentOrAncestor = invalidParent || invalidAncestor;
    if (!invalidParentOrAncestor) {
      return;
    }

    var ancestorTag = invalidParentOrAncestor.tag;
    var addendum = getCurrentFiberStackAddendum$5();

    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;
    if (didWarn[warnKey]) {
      return;
    }
    didWarn[warnKey] = true;

    var tagDisplayName = childTag;
    var whitespaceInfo = '';
    if (childTag === '#text') {
      if (/\S/.test(childText)) {
        tagDisplayName = 'Text nodes';
      } else {
        tagDisplayName = 'Whitespace text nodes';
        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
      }
    } else {
      tagDisplayName = '<' + childTag + '>';
    }

    if (invalidParent) {
      var info = '';
      if (ancestorTag === 'table' && childTag === 'tr') {
        info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
      }
      warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
    } else {
      warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
    }
  };

  // TODO: turn this into a named export
  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo$1;
}

var validateDOMNesting$1 = validateDOMNesting;

// Renderers that don't support persistence
// can re-export everything from this module.

function shim() {
  invariant(false, 'The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.');
}

// Persistence (when unsupported)
var supportsPersistence = false;
var cloneInstance = shim;
var createContainerChildSet = shim;
var appendChildToContainerChildSet = shim;
var finalizeContainerChildren = shim;
var replaceContainerChildren = shim;

// Unused

var createElement = createElement$1;
var createTextNode = createTextNode$1;
var setInitialProperties = setInitialProperties$1;
var diffProperties = diffProperties$1;
var updateProperties = updateProperties$1;
var diffHydratedProperties = diffHydratedProperties$1;
var diffHydratedText = diffHydratedText$1;
var warnForUnmatchedText = warnForUnmatchedText$1;
var warnForDeletedHydratableElement = warnForDeletedHydratableElement$1;
var warnForDeletedHydratableText = warnForDeletedHydratableText$1;
var warnForInsertedHydratedElement = warnForInsertedHydratedElement$1;
var warnForInsertedHydratedText = warnForInsertedHydratedText$1;
var updatedAncestorInfo = validateDOMNesting$1.updatedAncestorInfo;
var precacheFiberNode$1 = precacheFiberNode;
var updateFiberProps$1 = updateFiberProps;


var SUPPRESS_HYDRATION_WARNING = void 0;
{
  SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
}

var eventsEnabled = null;
var selectionInformation = null;

function shouldAutoFocusHostComponent(type, props) {
  switch (type) {
    case 'button':
    case 'input':
    case 'select':
    case 'textarea':
      return !!props.autoFocus;
  }
  return false;
}

function getRootHostContext(rootContainerInstance) {
  var type = void 0;
  var namespace = void 0;
  var nodeType = rootContainerInstance.nodeType;
  switch (nodeType) {
    case DOCUMENT_NODE:
    case DOCUMENT_FRAGMENT_NODE:
      {
        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
        var root = rootContainerInstance.documentElement;
        namespace = root ? root.namespaceURI : getChildNamespace(null, '');
        break;
      }
    default:
      {
        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
        var ownNamespace = container.namespaceURI || null;
        type = container.tagName;
        namespace = getChildNamespace(ownNamespace, type);
        break;
      }
  }
  {
    var validatedTag = type.toLowerCase();
    var _ancestorInfo = updatedAncestorInfo(null, validatedTag, null);
    return { namespace: namespace, ancestorInfo: _ancestorInfo };
  }
  return namespace;
}

function getChildHostContext(parentHostContext, type, rootContainerInstance) {
  {
    var parentHostContextDev = parentHostContext;
    var _namespace = getChildNamespace(parentHostContextDev.namespace, type);
    var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type, null);
    return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };
  }
  var parentNamespace = parentHostContext;
  return getChildNamespace(parentNamespace, type);
}

function getPublicInstance(instance) {
  return instance;
}

function prepareForCommit(containerInfo) {
  eventsEnabled = isEnabled();
  selectionInformation = getSelectionInformation();
  setEnabled(false);
}

function resetAfterCommit(containerInfo) {
  restoreSelection(selectionInformation);
  selectionInformation = null;
  setEnabled(eventsEnabled);
  eventsEnabled = null;
}

function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  var parentNamespace = void 0;
  {
    // TODO: take namespace into account when validating.
    var hostContextDev = hostContext;
    validateDOMNesting$1(type, null, hostContextDev.ancestorInfo);
    if (typeof props.children === 'string' || typeof props.children === 'number') {
      var string = '' + props.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
      validateDOMNesting$1(null, string, ownAncestorInfo);
    }
    parentNamespace = hostContextDev.namespace;
  }
  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
  precacheFiberNode$1(internalInstanceHandle, domElement);
  updateFiberProps$1(domElement, props);
  return domElement;
}

function appendInitialChild(parentInstance, child) {
  parentInstance.appendChild(child);
}

function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
  setInitialProperties(domElement, type, props, rootContainerInstance);
  return shouldAutoFocusHostComponent(type, props);
}

function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
  {
    var hostContextDev = hostContext;
    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
      var string = '' + newProps.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
      validateDOMNesting$1(null, string, ownAncestorInfo);
    }
  }
  return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
}

function shouldSetTextContent(type, props) {
  return type === 'textarea' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && typeof props.dangerouslySetInnerHTML.__html === 'string';
}

function shouldDeprioritizeSubtree(type, props) {
  return !!props.hidden;
}

function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
  {
    var hostContextDev = hostContext;
    validateDOMNesting$1(null, text, hostContextDev.ancestorInfo);
  }
  var textNode = createTextNode(text, rootContainerInstance);
  precacheFiberNode$1(internalInstanceHandle, textNode);
  return textNode;
}

var now = now$1;
var isPrimaryRenderer = true;
var scheduleDeferredCallback = scheduleWork;
var cancelDeferredCallback = cancelScheduledWork;

// -------------------
//     Mutation
// -------------------

var supportsMutation = true;

function commitMount(domElement, type, newProps, internalInstanceHandle) {
  // Despite the naming that might imply otherwise, this method only
  // fires if there is an `Update` effect scheduled during mounting.
  // This happens if `finalizeInitialChildren` returns `true` (which it
  // does to implement the `autoFocus` attribute on the client). But
  // there are also other cases when this might happen (such as patching
  // up text content during hydration mismatch). So we'll check this again.
  if (shouldAutoFocusHostComponent(type, newProps)) {
    domElement.focus();
  }
}

function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
  // Update the props handle so that we know which props are the ones with
  // with current event handlers.
  updateFiberProps$1(domElement, newProps);
  // Apply the diff to the DOM node.
  updateProperties(domElement, updatePayload, type, oldProps, newProps);
}

function resetTextContent(domElement) {
  setTextContent(domElement, '');
}

function commitTextUpdate(textInstance, oldText, newText) {
  textInstance.nodeValue = newText;
}

function appendChild(parentInstance, child) {
  parentInstance.appendChild(child);
}

function appendChildToContainer(container, child) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.insertBefore(child, container);
  } else {
    container.appendChild(child);
  }
}

function insertBefore(parentInstance, child, beforeChild) {
  parentInstance.insertBefore(child, beforeChild);
}

function insertInContainerBefore(container, child, beforeChild) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.insertBefore(child, beforeChild);
  } else {
    container.insertBefore(child, beforeChild);
  }
}

function removeChild(parentInstance, child) {
  parentInstance.removeChild(child);
}

function removeChildFromContainer(container, child) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.removeChild(child);
  } else {
    container.removeChild(child);
  }
}

// -------------------
//     Hydration
// -------------------

var supportsHydration = true;

function canHydrateInstance(instance, type, props) {
  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
    return null;
  }
  // This has now been refined to an element node.
  return instance;
}

function canHydrateTextInstance(instance, text) {
  if (text === '' || instance.nodeType !== TEXT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  }
  // This has now been refined to a text node.
  return instance;
}

function getNextHydratableSibling(instance) {
  var node = instance.nextSibling;
  // Skip non-hydratable nodes.
  while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE) {
    node = node.nextSibling;
  }
  return node;
}

function getFirstHydratableChild(parentInstance) {
  var next = parentInstance.firstChild;
  // Skip non-hydratable nodes.
  while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE) {
    next = next.nextSibling;
  }
  return next;
}

function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  precacheFiberNode$1(internalInstanceHandle, instance);
  // TODO: Possibly defer this until the commit phase where all the events
  // get attached.
  updateFiberProps$1(instance, props);
  var parentNamespace = void 0;
  {
    var hostContextDev = hostContext;
    parentNamespace = hostContextDev.namespace;
  }
  return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
}

function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
  precacheFiberNode$1(internalInstanceHandle, textInstance);
  return diffHydratedText(textInstance, text);
}

function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
  {
    warnForUnmatchedText(textInstance, text);
  }
}

function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForUnmatchedText(textInstance, text);
  }
}

function didNotHydrateContainerInstance(parentContainer, instance) {
  {
    if (instance.nodeType === 1) {
      warnForDeletedHydratableElement(parentContainer, instance);
    } else {
      warnForDeletedHydratableText(parentContainer, instance);
    }
  }
}

function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    if (instance.nodeType === 1) {
      warnForDeletedHydratableElement(parentInstance, instance);
    } else {
      warnForDeletedHydratableText(parentInstance, instance);
    }
  }
}

function didNotFindHydratableContainerInstance(parentContainer, type, props) {
  {
    warnForInsertedHydratedElement(parentContainer, type, props);
  }
}

function didNotFindHydratableContainerTextInstance(parentContainer, text) {
  {
    warnForInsertedHydratedText(parentContainer, text);
  }
}

function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForInsertedHydratedElement(parentInstance, type, props);
  }
}

function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForInsertedHydratedText(parentInstance, text);
  }
}

// Exports ReactDOM.createRoot
var enableUserTimingAPI = true;

// Experimental error-boundary API that can recover from errors within a single
// render phase
var enableGetDerivedStateFromCatch = false;
// Suspense
var enableSuspense = false;
// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
var debugRenderPhaseSideEffects = false;

// In some cases, StrictMode should also double-render lifecycles.
// This can be confusing for tests though,
// And it can be bad for performance in production.
// This feature flag can be used to control the behavior:
var debugRenderPhaseSideEffectsForStrictMode = true;

// To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.
var replayFailedUnitOfWorkWithInvokeGuardedCallback = true;

// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
var warnAboutDeprecatedLifecycles = false;

// Warn about legacy context API
var warnAboutLegacyContextAPI = false;

// Gather advanced timing metrics for Profiler subtrees.
var enableProfilerTimer = true;

// Only used in www builds.

// Prefix measurements so that it's possible to filter them.
// Longer prefixes are hard to read in DevTools.
var reactEmoji = '\u269B';
var warningEmoji = '\u26D4';
var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

// Keep track of current fiber so that we know the path to unwind on pause.
// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?
var currentFiber = null;
// If we're in the middle of user code, which fiber and method is it?
// Reusing `currentFiber` would be confusing for this because user code fiber
// can change during commit phase too, but we don't need to unwind it (since
// lifecycles in the commit phase don't resemble a tree).
var currentPhase = null;
var currentPhaseFiber = null;
// Did lifecycle hook schedule an update? This is often a performance problem,
// so we will keep track of it, and include it in the report.
// Track commits caused by cascading updates.
var isCommitting = false;
var hasScheduledUpdateInCurrentCommit = false;
var hasScheduledUpdateInCurrentPhase = false;
var commitCountInCurrentWorkLoop = 0;
var effectCountInCurrentCommit = 0;
var isWaitingForCallback = false;
// During commits, we only show a measurement once per method name
// to avoid stretch the commit phase with measurement overhead.
var labelsInCurrentCommit = new Set();

var formatMarkName = function (markName) {
  return reactEmoji + ' ' + markName;
};

var formatLabel = function (label, warning$$1) {
  var prefix = warning$$1 ? warningEmoji + ' ' : reactEmoji + ' ';
  var suffix = warning$$1 ? ' Warning: ' + warning$$1 : '';
  return '' + prefix + label + suffix;
};

var beginMark = function (markName) {
  performance.mark(formatMarkName(markName));
};

var clearMark = function (markName) {
  performance.clearMarks(formatMarkName(markName));
};

var endMark = function (label, markName, warning$$1) {
  var formattedMarkName = formatMarkName(markName);
  var formattedLabel = formatLabel(label, warning$$1);
  try {
    performance.measure(formattedLabel, formattedMarkName);
  } catch (err) {}
  // If previous mark was missing for some reason, this will throw.
  // This could only happen if React crashed in an unexpected place earlier.
  // Don't pile on with more errors.

  // Clear marks immediately to avoid growing buffer.
  performance.clearMarks(formattedMarkName);
  performance.clearMeasures(formattedLabel);
};

var getFiberMarkName = function (label, debugID) {
  return label + ' (#' + debugID + ')';
};

var getFiberLabel = function (componentName, isMounted, phase) {
  if (phase === null) {
    // These are composite component total time measurements.
    return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';
  } else {
    // Composite component methods.
    return componentName + '.' + phase;
  }
};

var beginFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);

  if (isCommitting && labelsInCurrentCommit.has(label)) {
    // During the commit phase, we don't show duplicate labels because
    // there is a fixed overhead for every measurement, and we don't
    // want to stretch the commit phase beyond necessary.
    return false;
  }
  labelsInCurrentCommit.add(label);

  var markName = getFiberMarkName(label, debugID);
  beginMark(markName);
  return true;
};

var clearFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  clearMark(markName);
};

var endFiberMark = function (fiber, phase, warning$$1) {
  var componentName = getComponentName(fiber) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  endMark(label, markName, warning$$1);
};

var shouldIgnoreFiber = function (fiber) {
  // Host components should be skipped in the timeline.
  // We could check typeof fiber.type, but does this work with RN?
  switch (fiber.tag) {
    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
    case Fragment:
    case ContextProvider:
    case ContextConsumer:
    case Mode:
      return true;
    default:
      return false;
  }
};

var clearPendingPhaseMeasurement = function () {
  if (currentPhase !== null && currentPhaseFiber !== null) {
    clearFiberMark(currentPhaseFiber, currentPhase);
  }
  currentPhaseFiber = null;
  currentPhase = null;
  hasScheduledUpdateInCurrentPhase = false;
};

var pauseTimers = function () {
  // Stops all currently active measurements so that they can be resumed
  // if we continue in a later deferred loop from the same unit of work.
  var fiber = currentFiber;
  while (fiber) {
    if (fiber._debugIsCurrentlyTiming) {
      endFiberMark(fiber, null, null);
    }
    fiber = fiber.return;
  }
};

var resumeTimersRecursively = function (fiber) {
  if (fiber.return !== null) {
    resumeTimersRecursively(fiber.return);
  }
  if (fiber._debugIsCurrentlyTiming) {
    beginFiberMark(fiber, null);
  }
};

var resumeTimers = function () {
  // Resumes all measurements that were active during the last deferred loop.
  if (currentFiber !== null) {
    resumeTimersRecursively(currentFiber);
  }
};

function recordEffect() {
  if (enableUserTimingAPI) {
    effectCountInCurrentCommit++;
  }
}

function recordScheduleUpdate() {
  if (enableUserTimingAPI) {
    if (isCommitting) {
      hasScheduledUpdateInCurrentCommit = true;
    }
    if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
      hasScheduledUpdateInCurrentPhase = true;
    }
  }
}

function startRequestCallbackTimer() {
  if (enableUserTimingAPI) {
    if (supportsUserTiming && !isWaitingForCallback) {
      isWaitingForCallback = true;
      beginMark('(Waiting for async callback...)');
    }
  }
}

function stopRequestCallbackTimer(didExpire, expirationTime) {
  if (enableUserTimingAPI) {
    if (supportsUserTiming) {
      isWaitingForCallback = false;
      var warning$$1 = didExpire ? 'React was blocked by main thread' : null;
      endMark('(Waiting for async callback... will force flush in ' + expirationTime + ' ms)', '(Waiting for async callback...)', warning$$1);
    }
  }
}

function startWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, this is the fiber to unwind from.
    currentFiber = fiber;
    if (!beginFiberMark(fiber, null)) {
      return;
    }
    fiber._debugIsCurrentlyTiming = true;
  }
}

function cancelWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // Remember we shouldn't complete measurement for this fiber.
    // Otherwise flamechart will be deep even for small updates.
    fiber._debugIsCurrentlyTiming = false;
    clearFiberMark(fiber, null);
  }
}

function stopWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, its parent is the fiber to unwind from.
    currentFiber = fiber.return;
    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }
    fiber._debugIsCurrentlyTiming = false;
    endFiberMark(fiber, null, null);
  }
}

function stopFailedWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, its parent is the fiber to unwind from.
    currentFiber = fiber.return;
    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }
    fiber._debugIsCurrentlyTiming = false;
    var warning$$1 = 'An error was thrown inside this error boundary';
    endFiberMark(fiber, null, warning$$1);
  }
}

function startPhaseTimer(fiber, phase) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    clearPendingPhaseMeasurement();
    if (!beginFiberMark(fiber, phase)) {
      return;
    }
    currentPhaseFiber = fiber;
    currentPhase = phase;
  }
}

function stopPhaseTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    if (currentPhase !== null && currentPhaseFiber !== null) {
      var warning$$1 = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
      endFiberMark(currentPhaseFiber, currentPhase, warning$$1);
    }
    currentPhase = null;
    currentPhaseFiber = null;
  }
}

function startWorkLoopTimer(nextUnitOfWork) {
  if (enableUserTimingAPI) {
    currentFiber = nextUnitOfWork;
    if (!supportsUserTiming) {
      return;
    }
    commitCountInCurrentWorkLoop = 0;
    // This is top level call.
    // Any other measurements are performed within.
    beginMark('(React Tree Reconciliation)');
    // Resume any measurements that were in progress during the last loop.
    resumeTimers();
  }
}

function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var warning$$1 = null;
    if (interruptedBy !== null) {
      if (interruptedBy.tag === HostRoot) {
        warning$$1 = 'A top-level update interrupted the previous render';
      } else {
        var componentName = getComponentName(interruptedBy) || 'Unknown';
        warning$$1 = 'An update to ' + componentName + ' interrupted the previous render';
      }
    } else if (commitCountInCurrentWorkLoop > 1) {
      warning$$1 = 'There were cascading updates';
    }
    commitCountInCurrentWorkLoop = 0;
    var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)';
    // Pause any measurements until the next loop.
    pauseTimers();
    endMark(label, '(React Tree Reconciliation)', warning$$1);
  }
}

function startCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    isCommitting = true;
    hasScheduledUpdateInCurrentCommit = false;
    labelsInCurrentCommit.clear();
    beginMark('(Committing Changes)');
  }
}

function stopCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var warning$$1 = null;
    if (hasScheduledUpdateInCurrentCommit) {
      warning$$1 = 'Lifecycle hook scheduled a cascading update';
    } else if (commitCountInCurrentWorkLoop > 0) {
      warning$$1 = 'Caused by a cascading update in earlier commit';
    }
    hasScheduledUpdateInCurrentCommit = false;
    commitCountInCurrentWorkLoop++;
    isCommitting = false;
    labelsInCurrentCommit.clear();

    endMark('(Committing Changes)', '(Committing Changes)', warning$$1);
  }
}

function startCommitSnapshotEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Committing Snapshot Effects)');
  }
}

function stopCommitSnapshotEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Committing Snapshot Effects: ' + count + ' Total)', '(Committing Snapshot Effects)', null);
  }
}

function startCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Committing Host Effects)');
  }
}

function stopCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);
  }
}

function startCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Calling Lifecycle Methods)');
  }
}

function stopCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);
  }
}

var valueStack = [];

var fiberStack = void 0;

{
  fiberStack = [];
}

var index = -1;

function createCursor(defaultValue) {
  return {
    current: defaultValue
  };
}

function pop(cursor, fiber) {
  if (index < 0) {
    {
      warning(false, 'Unexpected pop.');
    }
    return;
  }

  {
    if (fiber !== fiberStack[index]) {
      warning(false, 'Unexpected Fiber popped.');
    }
  }

  cursor.current = valueStack[index];

  valueStack[index] = null;

  {
    fiberStack[index] = null;
  }

  index--;
}

function push(cursor, value, fiber) {
  index++;

  valueStack[index] = cursor.current;

  {
    fiberStack[index] = fiber;
  }

  cursor.current = value;
}

function checkThatStackIsEmpty() {
  {
    if (index !== -1) {
      warning(false, 'Expected an empty stack. Something was not reset properly.');
    }
  }
}

function resetStackAfterFatalErrorInDev() {
  {
    index = -1;
    valueStack.length = 0;
    fiberStack.length = 0;
  }
}

var warnedAboutMissingGetChildContext = void 0;

{
  warnedAboutMissingGetChildContext = {};
}

// A cursor to the current merged context object on the stack.
var contextStackCursor = createCursor(emptyObject);
// A cursor to a boolean indicating whether the context has changed.
var didPerformWorkStackCursor = createCursor(false);
// Keep track of the previous context object that was on the stack.
// We use this to get access to the parent context after we have already
// pushed the next context provider, and now need to merge their contexts.
var previousContext = emptyObject;

function getUnmaskedContext(workInProgress) {
  var hasOwnContext = isContextProvider(workInProgress);
  if (hasOwnContext) {
    // If the fiber is a context provider itself, when we read its context
    // we have already pushed its own child context on the stack. A context
    // provider should not "see" its own child context. Therefore we read the
    // previous (parent) context instead for a context provider.
    return previousContext;
  }
  return contextStackCursor.current;
}

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
  var instance = workInProgress.stateNode;
  instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
  instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
}

function getMaskedContext(workInProgress, unmaskedContext) {
  var type = workInProgress.type;
  var contextTypes = type.contextTypes;
  if (!contextTypes) {
    return emptyObject;
  }

  // Avoid recreating masked context unless unmasked context has changed.
  // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
  // This may trigger infinite loops if componentWillReceiveProps calls setState.
  var instance = workInProgress.stateNode;
  if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
    return instance.__reactInternalMemoizedMaskedChildContext;
  }

  var context = {};
  for (var key in contextTypes) {
    context[key] = unmaskedContext[key];
  }

  {
    var name = getComponentName(workInProgress) || 'Unknown';
    checkPropTypes(contextTypes, context, 'context', name, ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
  }

  // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // Context is created before the class component is instantiated so check for instance.
  if (instance) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return context;
}

function hasContextChanged() {
  return didPerformWorkStackCursor.current;
}

function isContextConsumer(fiber) {
  return fiber.tag === ClassComponent && fiber.type.contextTypes != null;
}

function isContextProvider(fiber) {
  return fiber.tag === ClassComponent && fiber.type.childContextTypes != null;
}

function popContextProvider(fiber) {
  if (!isContextProvider(fiber)) {
    return;
  }

  pop(didPerformWorkStackCursor, fiber);
  pop(contextStackCursor, fiber);
}

function popTopLevelContextObject(fiber) {
  pop(didPerformWorkStackCursor, fiber);
  pop(contextStackCursor, fiber);
}

function pushTopLevelContextObject(fiber, context, didChange) {
  !(contextStackCursor.current === emptyObject) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  push(contextStackCursor, context, fiber);
  push(didPerformWorkStackCursor, didChange, fiber);
}

function processChildContext(fiber, parentContext) {
  var instance = fiber.stateNode;
  var childContextTypes = fiber.type.childContextTypes;

  // TODO (bvaughn) Replace this behavior with an invariant() in the future.
  // It has only been added in Fiber to match the (unintentional) behavior in Stack.
  if (typeof instance.getChildContext !== 'function') {
    {
      var componentName = getComponentName(fiber) || 'Unknown';

      if (!warnedAboutMissingGetChildContext[componentName]) {
        warnedAboutMissingGetChildContext[componentName] = true;
        warning(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
      }
    }
    return parentContext;
  }

  var childContext = void 0;
  {
    ReactDebugCurrentFiber.setCurrentPhase('getChildContext');
  }
  startPhaseTimer(fiber, 'getChildContext');
  childContext = instance.getChildContext();
  stopPhaseTimer();
  {
    ReactDebugCurrentFiber.setCurrentPhase(null);
  }
  for (var contextKey in childContext) {
    !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(fiber) || 'Unknown', contextKey) : void 0;
  }
  {
    var name = getComponentName(fiber) || 'Unknown';
    checkPropTypes(childContextTypes, childContext, 'child context', name,
    // In practice, there is one case in which we won't get a stack. It's when
    // somebody calls unstable_renderSubtreeIntoContainer() and we process
    // context from the parent component instance. The stack will be missing
    // because it's outside of the reconciliation, and so the pointer has not
    // been set. This is rare and doesn't matter. We'll also remove that API.
    ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
  }

  return _assign({}, parentContext, childContext);
}

function pushContextProvider(workInProgress) {
  if (!isContextProvider(workInProgress)) {
    return false;
  }

  var instance = workInProgress.stateNode;
  // We push the context as early as possible to ensure stack integrity.
  // If the instance does not exist yet, we will push null at first,
  // and replace it on the stack later when invalidating the context.
  var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;

  // Remember the parent context so we can merge with it later.
  // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
  previousContext = contextStackCursor.current;
  push(contextStackCursor, memoizedMergedChildContext, workInProgress);
  push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);

  return true;
}

function invalidateContextProvider(workInProgress, didChange) {
  var instance = workInProgress.stateNode;
  !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  if (didChange) {
    // Merge parent and own context.
    // Skip this if we're not updating due to sCU.
    // This avoids unnecessarily recomputing memoized values.
    var mergedContext = processChildContext(workInProgress, previousContext);
    instance.__reactInternalMemoizedMergedChildContext = mergedContext;

    // Replace the old (or empty) context with the new one.
    // It is important to unwind the context in the reverse order.
    pop(didPerformWorkStackCursor, workInProgress);
    pop(contextStackCursor, workInProgress);
    // Now push the new context and mark that it has changed.
    push(contextStackCursor, mergedContext, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  } else {
    pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }
}

function findCurrentUnmaskedContext(fiber) {
  // Currently this is only used with renderSubtreeIntoContainer; not sure if it
  // makes sense elsewhere
  !(isFiberMounted(fiber) && fiber.tag === ClassComponent) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  var node = fiber;
  while (node.tag !== HostRoot) {
    if (isContextProvider(node)) {
      return node.stateNode.__reactInternalMemoizedMergedChildContext;
    }
    var parent = node.return;
    !parent ? invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    node = parent;
  }
  return node.stateNode.context;
}

// Max 31 bit integer. The max integer size in V8 for 32-bit systems.
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111
var MAX_SIGNED_31_BIT_INT = 1073741823;

// TODO: Use an opaque type once ESLint et al support the syntax


var NoWork = 0;
var Sync = 1;
var Never = MAX_SIGNED_31_BIT_INT;

var UNIT_SIZE = 10;
var MAGIC_NUMBER_OFFSET = 2;

// 1 unit of expiration time represents 10ms.
function msToExpirationTime(ms) {
  // Always add an offset so that we don't clash with the magic number for NoWork.
  return (ms / UNIT_SIZE | 0) + MAGIC_NUMBER_OFFSET;
}

function expirationTimeToMs(expirationTime) {
  return (expirationTime - MAGIC_NUMBER_OFFSET) * UNIT_SIZE;
}

function ceiling(num, precision) {
  return ((num / precision | 0) + 1) * precision;
}

function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
  return MAGIC_NUMBER_OFFSET + ceiling(currentTime - MAGIC_NUMBER_OFFSET + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
}

var NoContext = 0;
var AsyncMode = 1;
var StrictMode = 2;
var ProfileMode = 4;

var hasBadMapPolyfill = void 0;

{
  hasBadMapPolyfill = false;
  try {
    var nonExtensibleObject = Object.preventExtensions({});
    var testMap = new Map([[nonExtensibleObject, null]]);
    var testSet = new Set([nonExtensibleObject]);
    // This is necessary for Rollup to not consider these unused.
    // https://github.com/rollup/rollup/issues/1771
    // TODO: we can remove these if Rollup fixes the bug.
    testMap.set(0, 0);
    testSet.add(0);
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

// A Fiber is work on a Component that needs to be done or was done. There can
// be more than one per component.


var debugCounter = void 0;

{
  debugCounter = 1;
}

function FiberNode(tag, pendingProps, key, mode) {
  // Instance
  this.tag = tag;
  this.key = key;
  this.type = null;
  this.stateNode = null;

  // Fiber
  this.return = null;
  this.child = null;
  this.sibling = null;
  this.index = 0;

  this.ref = null;

  this.pendingProps = pendingProps;
  this.memoizedProps = null;
  this.updateQueue = null;
  this.memoizedState = null;

  this.mode = mode;

  // Effects
  this.effectTag = NoEffect;
  this.nextEffect = null;

  this.firstEffect = null;
  this.lastEffect = null;

  this.expirationTime = NoWork;

  this.alternate = null;

  if (enableProfilerTimer) {
    this.actualDuration = 0;
    this.actualStartTime = 0;
    this.selfBaseTime = 0;
    this.treeBaseTime = 0;
  }

  {
    this._debugID = debugCounter++;
    this._debugSource = null;
    this._debugOwner = null;
    this._debugIsCurrentlyTiming = false;
    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
      Object.preventExtensions(this);
    }
  }
}

// This is a constructor function, rather than a POJO constructor, still
// please ensure we do the following:
// 1) Nobody should add any instance methods on this. Instance methods can be
//    more difficult to predict when they get optimized and they are almost
//    never inlined properly in static compilers.
// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
//    always know when it is a fiber.
// 3) We might want to experiment with using numeric keys since they are easier
//    to optimize in a non-JIT environment.
// 4) We can easily go from a constructor to a createFiber object literal if that
//    is faster.
// 5) It should be easy to port this to a C struct and keep a C implementation
//    compatible.
var createFiber = function (tag, pendingProps, key, mode) {
  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
  return new FiberNode(tag, pendingProps, key, mode);
};

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

// This is used to create an alternate fiber to do work on.
function createWorkInProgress(current, pendingProps, expirationTime) {
  var workInProgress = current.alternate;
  if (workInProgress === null) {
    // We use a double buffering pooling technique because we know that we'll
    // only ever need at most two versions of a tree. We pool the "other" unused
    // node that we're free to reuse. This is lazily created to avoid allocating
    // extra objects for things that are never updated. It also allow us to
    // reclaim the extra memory if needed.
    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
    workInProgress.type = current.type;
    workInProgress.stateNode = current.stateNode;

    {
      // DEV-only fields
      workInProgress._debugID = current._debugID;
      workInProgress._debugSource = current._debugSource;
      workInProgress._debugOwner = current._debugOwner;
    }

    workInProgress.alternate = current;
    current.alternate = workInProgress;
  } else {
    workInProgress.pendingProps = pendingProps;

    // We already have an alternate.
    // Reset the effect tag.
    workInProgress.effectTag = NoEffect;

    // The effect list is no longer valid.
    workInProgress.nextEffect = null;
    workInProgress.firstEffect = null;
    workInProgress.lastEffect = null;

    if (enableProfilerTimer) {
      // We intentionally reset, rather than copy, actualDuration & actualStartTime.
      // This prevents time from endlessly accumulating in new commits.
      // This has the downside of resetting values for different priority renders,
      // But works for yielding (the common case) and should support resuming.
      workInProgress.actualDuration = 0;
      workInProgress.actualStartTime = 0;
    }
  }

  workInProgress.expirationTime = expirationTime;

  workInProgress.child = current.child;
  workInProgress.memoizedProps = current.memoizedProps;
  workInProgress.memoizedState = current.memoizedState;
  workInProgress.updateQueue = current.updateQueue;

  // These will be overridden during the parent's reconciliation
  workInProgress.sibling = current.sibling;
  workInProgress.index = current.index;
  workInProgress.ref = current.ref;

  if (enableProfilerTimer) {
    workInProgress.selfBaseTime = current.selfBaseTime;
    workInProgress.treeBaseTime = current.treeBaseTime;
  }

  return workInProgress;
}

function createHostRootFiber(isAsync) {
  var mode = isAsync ? AsyncMode | StrictMode : NoContext;
  return createFiber(HostRoot, null, null, mode);
}

function createFiberFromElement(element, mode, expirationTime) {
  var owner = null;
  {
    owner = element._owner;
  }

  var fiber = void 0;
  var type = element.type;
  var key = element.key;
  var pendingProps = element.props;

  var fiberTag = void 0;
  if (typeof type === 'function') {
    fiberTag = shouldConstruct(type) ? ClassComponent : IndeterminateComponent;
  } else if (typeof type === 'string') {
    fiberTag = HostComponent;
  } else {
    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);
      case REACT_ASYNC_MODE_TYPE:
        fiberTag = Mode;
        mode |= AsyncMode | StrictMode;
        break;
      case REACT_STRICT_MODE_TYPE:
        fiberTag = Mode;
        mode |= StrictMode;
        break;
      case REACT_PROFILER_TYPE:
        return createFiberFromProfiler(pendingProps, mode, expirationTime, key);
      case REACT_TIMEOUT_TYPE:
        fiberTag = TimeoutComponent;
        // Suspense does not require async, but its children should be strict
        // mode compatible.
        mode |= StrictMode;
        break;
      default:
        fiberTag = getFiberTagFromObjectType(type, owner);
        break;
    }
  }

  fiber = createFiber(fiberTag, pendingProps, key, mode);
  fiber.type = type;
  fiber.expirationTime = expirationTime;

  {
    fiber._debugSource = element._source;
    fiber._debugOwner = element._owner;
  }

  return fiber;
}

function getFiberTagFromObjectType(type, owner) {
  var $$typeof = typeof type === 'object' && type !== null ? type.$$typeof : null;

  switch ($$typeof) {
    case REACT_PROVIDER_TYPE:
      return ContextProvider;
    case REACT_CONTEXT_TYPE:
      // This is a consumer
      return ContextConsumer;
    case REACT_FORWARD_REF_TYPE:
      return ForwardRef;
    default:
      {
        var info = '';
        {
          if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
            info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
          }
          var ownerName = owner ? getComponentName(owner) : null;
          if (ownerName) {
            info += '\n\nCheck the render method of `' + ownerName + '`.';
          }
        }
        invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);
      }
  }
}

function createFiberFromFragment(elements, mode, expirationTime, key) {
  var fiber = createFiber(Fragment, elements, key, mode);
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromProfiler(pendingProps, mode, expirationTime, key) {
  {
    if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {
      invariant(false, 'Profiler must specify an "id" string and "onRender" function as props');
    }
  }

  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
  fiber.type = REACT_PROFILER_TYPE;
  fiber.expirationTime = expirationTime;

  return fiber;
}

function createFiberFromText(content, mode, expirationTime) {
  var fiber = createFiber(HostText, content, null, mode);
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromHostInstanceForDeletion() {
  var fiber = createFiber(HostComponent, null, null, NoContext);
  fiber.type = 'DELETED';
  return fiber;
}

function createFiberFromPortal(portal, mode, expirationTime) {
  var pendingProps = portal.children !== null ? portal.children : [];
  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
  fiber.expirationTime = expirationTime;
  fiber.stateNode = {
    containerInfo: portal.containerInfo,
    pendingChildren: null, // Used by persistent updates
    implementation: portal.implementation
  };
  return fiber;
}

// Used for stashing WIP properties to replay failed work in DEV.
function assignFiberPropertiesInDEV(target, source) {
  if (target === null) {
    // This Fiber's initial properties will always be overwritten.
    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
    target = createFiber(IndeterminateComponent, null, null, NoContext);
  }

  // This is intentionally written as a list of all properties.
  // We tried to use Object.assign() instead but this is called in
  // the hottest path, and Object.assign() was too slow:
  // https://github.com/facebook/react/issues/12502
  // This code is DEV-only so size is not a concern.

  target.tag = source.tag;
  target.key = source.key;
  target.type = source.type;
  target.stateNode = source.stateNode;
  target.return = source.return;
  target.child = source.child;
  target.sibling = source.sibling;
  target.index = source.index;
  target.ref = source.ref;
  target.pendingProps = source.pendingProps;
  target.memoizedProps = source.memoizedProps;
  target.updateQueue = source.updateQueue;
  target.memoizedState = source.memoizedState;
  target.mode = source.mode;
  target.effectTag = source.effectTag;
  target.nextEffect = source.nextEffect;
  target.firstEffect = source.firstEffect;
  target.lastEffect = source.lastEffect;
  target.expirationTime = source.expirationTime;
  target.alternate = source.alternate;
  if (enableProfilerTimer) {
    target.actualDuration = source.actualDuration;
    target.actualStartTime = source.actualStartTime;
    target.selfBaseTime = source.selfBaseTime;
    target.treeBaseTime = source.treeBaseTime;
  }
  target._debugID = source._debugID;
  target._debugSource = source._debugSource;
  target._debugOwner = source._debugOwner;
  target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
  return target;
}

// TODO: This should be lifted into the renderer.


function createFiberRoot(containerInfo, isAsync, hydrate) {
  // Cyclic construction. This cheats the type system right now because
  // stateNode is any.
  var uninitializedFiber = createHostRootFiber(isAsync);
  var root = {
    current: uninitializedFiber,
    containerInfo: containerInfo,
    pendingChildren: null,

    earliestPendingTime: NoWork,
    latestPendingTime: NoWork,
    earliestSuspendedTime: NoWork,
    latestSuspendedTime: NoWork,
    latestPingedTime: NoWork,

    pendingCommitExpirationTime: NoWork,
    finishedWork: null,
    context: null,
    pendingContext: null,
    hydrate: hydrate,
    remainingExpirationTime: NoWork,
    firstBatch: null,
    nextScheduledRoot: null
  };
  uninitializedFiber.stateNode = root;
  return root;
}

var onCommitFiberRoot = null;
var onCommitFiberUnmount = null;
var hasLoggedError = false;

function catchErrors(fn) {
  return function (arg) {
    try {
      return fn(arg);
    } catch (err) {
      if (true && !hasLoggedError) {
        hasLoggedError = true;
        warning(false, 'React DevTools encountered an error: %s', err);
      }
    }
  };
}

function injectInternals(internals) {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
    // No DevTools
    return false;
  }
  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (hook.isDisabled) {
    // This isn't a real property on the hook, but it can be set to opt out
    // of DevTools integration and associated warnings and logs.
    // https://github.com/facebook/react/issues/3877
    return true;
  }
  if (!hook.supportsFiber) {
    {
      warning(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
    }
    // DevTools exists, even though it doesn't support Fiber.
    return true;
  }
  try {
    var rendererID = hook.inject(internals);
    // We have successfully injected, so now it is safe to set up hooks.
    onCommitFiberRoot = catchErrors(function (root) {
      return hook.onCommitFiberRoot(rendererID, root);
    });
    onCommitFiberUnmount = catchErrors(function (fiber) {
      return hook.onCommitFiberUnmount(rendererID, fiber);
    });
  } catch (err) {
    // Catch all errors because it is unsafe to throw during initialization.
    {
      warning(false, 'React DevTools encountered an error: %s.', err);
    }
  }
  // DevTools exists
  return true;
}

function onCommitRoot(root) {
  if (typeof onCommitFiberRoot === 'function') {
    onCommitFiberRoot(root);
  }
}

function onCommitUnmount(fiber) {
  if (typeof onCommitFiberUnmount === 'function') {
    onCommitFiberUnmount(fiber);
  }
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

var ReactStrictModeWarnings = {
  discardPendingWarnings: function () {},
  flushPendingDeprecationWarnings: function () {},
  flushPendingUnsafeLifecycleWarnings: function () {},
  recordDeprecationWarnings: function (fiber, instance) {},
  recordUnsafeLifecycleWarnings: function (fiber, instance) {},
  recordLegacyContextWarning: function (fiber, instance) {},
  flushLegacyContextWarning: function () {}
};

{
  var LIFECYCLE_SUGGESTIONS = {
    UNSAFE_componentWillMount: 'componentDidMount',
    UNSAFE_componentWillReceiveProps: 'static getDerivedStateFromProps',
    UNSAFE_componentWillUpdate: 'componentDidUpdate'
  };

  var pendingComponentWillMountWarnings = [];
  var pendingComponentWillReceivePropsWarnings = [];
  var pendingComponentWillUpdateWarnings = [];
  var pendingUnsafeLifecycleWarnings = new Map();
  var pendingLegacyContextWarning = new Map();

  // Tracks components we have already warned about.
  var didWarnAboutDeprecatedLifecycles = new Set();
  var didWarnAboutUnsafeLifecycles = new Set();
  var didWarnAboutLegacyContext = new Set();

  var setToSortedString = function (set) {
    var array = [];
    set.forEach(function (value) {
      array.push(value);
    });
    return array.sort().join(', ');
  };

  ReactStrictModeWarnings.discardPendingWarnings = function () {
    pendingComponentWillMountWarnings = [];
    pendingComponentWillReceivePropsWarnings = [];
    pendingComponentWillUpdateWarnings = [];
    pendingUnsafeLifecycleWarnings = new Map();
    pendingLegacyContextWarning = new Map();
  };

  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
    pendingUnsafeLifecycleWarnings.forEach(function (lifecycleWarningsMap, strictRoot) {
      var lifecyclesWarningMesages = [];

      Object.keys(lifecycleWarningsMap).forEach(function (lifecycle) {
        var lifecycleWarnings = lifecycleWarningsMap[lifecycle];
        if (lifecycleWarnings.length > 0) {
          var componentNames = new Set();
          lifecycleWarnings.forEach(function (fiber) {
            componentNames.add(getComponentName(fiber) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });

          var formatted = lifecycle.replace('UNSAFE_', '');
          var suggestion = LIFECYCLE_SUGGESTIONS[lifecycle];
          var sortedComponentNames = setToSortedString(componentNames);

          lifecyclesWarningMesages.push(formatted + ': Please update the following components to use ' + (suggestion + ' instead: ' + sortedComponentNames));
        }
      });

      if (lifecyclesWarningMesages.length > 0) {
        var strictRootComponentStack = getStackAddendumByWorkInProgressFiber(strictRoot);

        warning(false, 'Unsafe lifecycle methods were found within a strict-mode tree:%s' + '\n\n%s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, lifecyclesWarningMesages.join('\n\n'));
      }
    });

    pendingUnsafeLifecycleWarnings = new Map();
  };

  var findStrictRoot = function (fiber) {
    var maybeStrictRoot = null;

    var node = fiber;
    while (node !== null) {
      if (node.mode & StrictMode) {
        maybeStrictRoot = node;
      }
      node = node.return;
    }

    return maybeStrictRoot;
  };

  ReactStrictModeWarnings.flushPendingDeprecationWarnings = function () {
    if (pendingComponentWillMountWarnings.length > 0) {
      var uniqueNames = new Set();
      pendingComponentWillMountWarnings.forEach(function (fiber) {
        uniqueNames.add(getComponentName(fiber) || 'Component');
        didWarnAboutDeprecatedLifecycles.add(fiber.type);
      });

      var sortedNames = setToSortedString(uniqueNames);

      lowPriorityWarning$1(false, 'componentWillMount is deprecated and will be removed in the next major version. ' + 'Use componentDidMount instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillMount.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', sortedNames);

      pendingComponentWillMountWarnings = [];
    }

    if (pendingComponentWillReceivePropsWarnings.length > 0) {
      var _uniqueNames = new Set();
      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
        _uniqueNames.add(getComponentName(fiber) || 'Component');
        didWarnAboutDeprecatedLifecycles.add(fiber.type);
      });

      var _sortedNames = setToSortedString(_uniqueNames);

      lowPriorityWarning$1(false, 'componentWillReceiveProps is deprecated and will be removed in the next major version. ' + 'Use static getDerivedStateFromProps instead.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames);

      pendingComponentWillReceivePropsWarnings = [];
    }

    if (pendingComponentWillUpdateWarnings.length > 0) {
      var _uniqueNames2 = new Set();
      pendingComponentWillUpdateWarnings.forEach(function (fiber) {
        _uniqueNames2.add(getComponentName(fiber) || 'Component');
        didWarnAboutDeprecatedLifecycles.add(fiber.type);
      });

      var _sortedNames2 = setToSortedString(_uniqueNames2);

      lowPriorityWarning$1(false, 'componentWillUpdate is deprecated and will be removed in the next major version. ' + 'Use componentDidUpdate instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillUpdate.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames2);

      pendingComponentWillUpdateWarnings = [];
    }
  };

  ReactStrictModeWarnings.recordDeprecationWarnings = function (fiber, instance) {
    // Dedup strategy: Warn once per component.
    if (didWarnAboutDeprecatedLifecycles.has(fiber.type)) {
      return;
    }

    // Don't warn about react-lifecycles-compat polyfilled components.
    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
      pendingComponentWillMountWarnings.push(fiber);
    }
    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
      pendingComponentWillReceivePropsWarnings.push(fiber);
    }
    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
      pendingComponentWillUpdateWarnings.push(fiber);
    }
  };

  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
    var strictRoot = findStrictRoot(fiber);
    if (strictRoot === null) {
      warning(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
      return;
    }

    // Dedup strategy: Warn once per component.
    // This is difficult to track any other way since component names
    // are often vague and are likely to collide between 3rd party libraries.
    // An expand property is probably okay to use here since it's DEV-only,
    // and will only be set in the event of serious warnings.
    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
      return;
    }

    var warningsForRoot = void 0;
    if (!pendingUnsafeLifecycleWarnings.has(strictRoot)) {
      warningsForRoot = {
        UNSAFE_componentWillMount: [],
        UNSAFE_componentWillReceiveProps: [],
        UNSAFE_componentWillUpdate: []
      };

      pendingUnsafeLifecycleWarnings.set(strictRoot, warningsForRoot);
    } else {
      warningsForRoot = pendingUnsafeLifecycleWarnings.get(strictRoot);
    }

    var unsafeLifecycles = [];
    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillMount === 'function') {
      unsafeLifecycles.push('UNSAFE_componentWillMount');
    }
    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
      unsafeLifecycles.push('UNSAFE_componentWillReceiveProps');
    }
    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillUpdate === 'function') {
      unsafeLifecycles.push('UNSAFE_componentWillUpdate');
    }

    if (unsafeLifecycles.length > 0) {
      unsafeLifecycles.forEach(function (lifecycle) {
        warningsForRoot[lifecycle].push(fiber);
      });
    }
  };

  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
    var strictRoot = findStrictRoot(fiber);
    if (strictRoot === null) {
      warning(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
      return;
    }

    // Dedup strategy: Warn once per component.
    if (didWarnAboutLegacyContext.has(fiber.type)) {
      return;
    }

    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
      if (warningsForRoot === undefined) {
        warningsForRoot = [];
        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
      }
      warningsForRoot.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushLegacyContextWarning = function () {
    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
      var uniqueNames = new Set();
      fiberArray.forEach(function (fiber) {
        uniqueNames.add(getComponentName(fiber) || 'Component');
        didWarnAboutLegacyContext.add(fiber.type);
      });

      var sortedNames = setToSortedString(uniqueNames);
      var strictRootComponentStack = getStackAddendumByWorkInProgressFiber(strictRoot);

      warning(false, 'Legacy context API has been detected within a strict-mode tree: %s' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, sortedNames);
    });
  };
}

// This lets us hook into Fiber to debug what it's doing.
// See https://github.com/facebook/react/pull/8033.
// This is not part of the public API, not even for React DevTools.
// You may only inject a debugTool if you work on React Fiber itself.
var ReactFiberInstrumentation = {
  debugTool: null
};

var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

// TODO: Offscreen updates

function markPendingPriorityLevel(root, expirationTime) {
  if (enableSuspense) {
    // Update the latest and earliest pending times
    var earliestPendingTime = root.earliestPendingTime;
    if (earliestPendingTime === NoWork) {
      // No other pending updates.
      root.earliestPendingTime = root.latestPendingTime = expirationTime;
    } else {
      if (earliestPendingTime > expirationTime) {
        // This is the earliest pending update.
        root.earliestPendingTime = expirationTime;
      } else {
        var latestPendingTime = root.latestPendingTime;
        if (latestPendingTime < expirationTime) {
          // This is the latest pending update
          root.latestPendingTime = expirationTime;
        }
      }
    }
  }
}

function markCommittedPriorityLevels(root, currentTime, earliestRemainingTime) {
  if (enableSuspense) {
    if (earliestRemainingTime === NoWork) {
      // Fast path. There's no remaining work. Clear everything.
      root.earliestPendingTime = NoWork;
      root.latestPendingTime = NoWork;
      root.earliestSuspendedTime = NoWork;
      root.latestSuspendedTime = NoWork;
      root.latestPingedTime = NoWork;
      return;
    }

    // Let's see if the previous latest known pending level was just flushed.
    var latestPendingTime = root.latestPendingTime;
    if (latestPendingTime !== NoWork) {
      if (latestPendingTime < earliestRemainingTime) {
        // We've flushed all the known pending levels.
        root.earliestPendingTime = root.latestPendingTime = NoWork;
      } else {
        var earliestPendingTime = root.earliestPendingTime;
        if (earliestPendingTime < earliestRemainingTime) {
          // We've flushed the earliest known pending level. Set this to the
          // latest pending time.
          root.earliestPendingTime = root.latestPendingTime;
        }
      }
    }

    // Now let's handle the earliest remaining level in the whole tree. We need to
    // decide whether to treat it as a pending level or as suspended. Check
    // it falls within the range of known suspended levels.

    var earliestSuspendedTime = root.earliestSuspendedTime;
    if (earliestSuspendedTime === NoWork) {
      // There's no suspended work. Treat the earliest remaining level as a
      // pending level.
      markPendingPriorityLevel(root, earliestRemainingTime);
      return;
    }

    var latestSuspendedTime = root.latestSuspendedTime;
    if (earliestRemainingTime > latestSuspendedTime) {
      // The earliest remaining level is later than all the suspended work. That
      // means we've flushed all the suspended work.
      root.earliestSuspendedTime = NoWork;
      root.latestSuspendedTime = NoWork;
      root.latestPingedTime = NoWork;

      // There's no suspended work. Treat the earliest remaining level as a
      // pending level.
      markPendingPriorityLevel(root, earliestRemainingTime);
      return;
    }

    if (earliestRemainingTime < earliestSuspendedTime) {
      // The earliest remaining time is earlier than all the suspended work.
      // Treat it as a pending update.
      markPendingPriorityLevel(root, earliestRemainingTime);
      return;
    }

    // The earliest remaining time falls within the range of known suspended
    // levels. We should treat this as suspended work.
  }
}

function markSuspendedPriorityLevel(root, suspendedTime) {
  if (enableSuspense) {
    // First, check the known pending levels and update them if needed.
    var earliestPendingTime = root.earliestPendingTime;
    var latestPendingTime = root.latestPendingTime;
    if (earliestPendingTime === suspendedTime) {
      if (latestPendingTime === suspendedTime) {
        // Both known pending levels were suspended. Clear them.
        root.earliestPendingTime = root.latestPendingTime = NoWork;
      } else {
        // The earliest pending level was suspended. Clear by setting it to the
        // latest pending level.
        root.earliestPendingTime = latestPendingTime;
      }
    } else if (latestPendingTime === suspendedTime) {
      // The latest pending level was suspended. Clear by setting it to the
      // latest pending level.
      root.latestPendingTime = earliestPendingTime;
    }

    // Next, if we're working on the lowest known suspended level, clear the ping.
    // TODO: What if a promise suspends and pings before the root completes?
    var latestSuspendedTime = root.latestSuspendedTime;
    if (latestSuspendedTime === suspendedTime) {
      root.latestPingedTime = NoWork;
    }

    // Finally, update the known suspended levels.
    var earliestSuspendedTime = root.earliestSuspendedTime;
    if (earliestSuspendedTime === NoWork) {
      // No other suspended levels.
      root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime;
    } else {
      if (earliestSuspendedTime > suspendedTime) {
        // This is the earliest suspended level.
        root.earliestSuspendedTime = suspendedTime;
      } else if (latestSuspendedTime < suspendedTime) {
        // This is the latest suspended level
        root.latestSuspendedTime = suspendedTime;
      }
    }
  }
}

function markPingedPriorityLevel(root, pingedTime) {
  if (enableSuspense) {
    var latestSuspendedTime = root.latestSuspendedTime;
    if (latestSuspendedTime !== NoWork && latestSuspendedTime <= pingedTime) {
      var latestPingedTime = root.latestPingedTime;
      if (latestPingedTime === NoWork || latestPingedTime < pingedTime) {
        root.latestPingedTime = pingedTime;
      }
    }
  }
}

function findNextPendingPriorityLevel(root) {
  if (enableSuspense) {
    var earliestSuspendedTime = root.earliestSuspendedTime;
    var earliestPendingTime = root.earliestPendingTime;
    if (earliestSuspendedTime === NoWork) {
      // Fast path. There's no suspended work.
      return earliestPendingTime;
    }

    // First, check if there's known pending work.
    if (earliestPendingTime !== NoWork) {
      return earliestPendingTime;
    }

    // Finally, if a suspended level was pinged, work on that. Otherwise there's
    // nothing to work on.
    return root.latestPingedTime;
  } else {
    return root.current.expirationTime;
  }
}

// UpdateQueue is a linked list of prioritized updates.
//
// Like fibers, update queues come in pairs: a current queue, which represents
// the visible state of the screen, and a work-in-progress queue, which is
// can be mutated and processed asynchronously before it is committed — a form
// of double buffering. If a work-in-progress render is discarded before
// finishing, we create a new work-in-progress by cloning the current queue.
//
// Both queues share a persistent, singly-linked list structure. To schedule an
// update, we append it to the end of both queues. Each queue maintains a
// pointer to first update in the persistent list that hasn't been processed.
// The work-in-progress pointer always has a position equal to or greater than
// the current queue, since we always work on that one. The current queue's
// pointer is only updated during the commit phase, when we swap in the
// work-in-progress.
//
// For example:
//
//   Current pointer:           A - B - C - D - E - F
//   Work-in-progress pointer:              D - E - F
//                                          ^
//                                          The work-in-progress queue has
//                                          processed more updates than current.
//
// The reason we append to both queues is because otherwise we might drop
// updates without ever processing them. For example, if we only add updates to
// the work-in-progress queue, some updates could be lost whenever a work-in
// -progress render restarts by cloning from current. Similarly, if we only add
// updates to the current queue, the updates will be lost whenever an already
// in-progress queue commits and swaps with the current queue. However, by
// adding to both queues, we guarantee that the update will be part of the next
// work-in-progress. (And because the work-in-progress queue becomes the
// current queue once it commits, there's no danger of applying the same
// update twice.)
//
// Prioritization
// --------------
//
// Updates are not sorted by priority, but by insertion; new updates are always
// appended to the end of the list.
//
// The priority is still important, though. When processing the update queue
// during the render phase, only the updates with sufficient priority are
// included in the result. If we skip an update because it has insufficient
// priority, it remains in the queue to be processed later, during a lower
// priority render. Crucially, all updates subsequent to a skipped update also
// remain in the queue *regardless of their priority*. That means high priority
// updates are sometimes processed twice, at two separate priorities. We also
// keep track of a base state, that represents the state before the first
// update in the queue is applied.
//
// For example:
//
//   Given a base state of '', and the following queue of updates
//
//     A1 - B2 - C1 - D2
//
//   where the number indicates the priority, and the update is applied to the
//   previous state by appending a letter, React will process these updates as
//   two separate renders, one per distinct priority level:
//
//   First render, at priority 1:
//     Base state: ''
//     Updates: [A1, C1]
//     Result state: 'AC'
//
//   Second render, at priority 2:
//     Base state: 'A'            <-  The base state does not include C1,
//                                    because B2 was skipped.
//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2
//     Result state: 'ABCD'
//
// Because we process updates in insertion order, and rebase high priority
// updates when preceding updates are skipped, the final result is deterministic
// regardless of priority. Intermediate state may vary according to system
// resources, but the final state is always the same.

var UpdateState = 0;
var ReplaceState = 1;
var ForceUpdate = 2;
var CaptureUpdate = 3;

// Global state that is reset at the beginning of calling `processUpdateQueue`.
// It should only be read right after calling `processUpdateQueue`, via
// `checkHasForceUpdateAfterProcessing`.
var hasForceUpdate = false;

var didWarnUpdateInsideUpdate = void 0;
var currentlyProcessingQueue = void 0;
var resetCurrentlyProcessingQueue = void 0;
{
  didWarnUpdateInsideUpdate = false;
  currentlyProcessingQueue = null;
  resetCurrentlyProcessingQueue = function () {
    currentlyProcessingQueue = null;
  };
}

function createUpdateQueue(baseState) {
  var queue = {
    expirationTime: NoWork,
    baseState: baseState,
    firstUpdate: null,
    lastUpdate: null,
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,
    firstEffect: null,
    lastEffect: null,
    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
  return queue;
}

function cloneUpdateQueue(currentQueue) {
  var queue = {
    expirationTime: currentQueue.expirationTime,
    baseState: currentQueue.baseState,
    firstUpdate: currentQueue.firstUpdate,
    lastUpdate: currentQueue.lastUpdate,

    // TODO: With resuming, if we bail out and resuse the child tree, we should
    // keep these effects.
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,

    firstEffect: null,
    lastEffect: null,

    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
  return queue;
}

function createUpdate(expirationTime) {
  return {
    expirationTime: expirationTime,

    tag: UpdateState,
    payload: null,
    callback: null,

    next: null,
    nextEffect: null
  };
}

function appendUpdateToQueue(queue, update, expirationTime) {
  // Append the update to the end of the list.
  if (queue.lastUpdate === null) {
    // Queue is empty
    queue.firstUpdate = queue.lastUpdate = update;
  } else {
    queue.lastUpdate.next = update;
    queue.lastUpdate = update;
  }
  if (queue.expirationTime === NoWork || queue.expirationTime > expirationTime) {
    // The incoming update has the earliest expiration of any update in the
    // queue. Update the queue's expiration time.
    queue.expirationTime = expirationTime;
  }
}

function enqueueUpdate(fiber, update, expirationTime) {
  // Update queues are created lazily.
  var alternate = fiber.alternate;
  var queue1 = void 0;
  var queue2 = void 0;
  if (alternate === null) {
    // There's only one fiber.
    queue1 = fiber.updateQueue;
    queue2 = null;
    if (queue1 === null) {
      queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
    }
  } else {
    // There are two owners.
    queue1 = fiber.updateQueue;
    queue2 = alternate.updateQueue;
    if (queue1 === null) {
      if (queue2 === null) {
        // Neither fiber has an update queue. Create new ones.
        queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
        queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);
      } else {
        // Only one fiber has an update queue. Clone to create a new one.
        queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
      }
    } else {
      if (queue2 === null) {
        // Only one fiber has an update queue. Clone to create a new one.
        queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
      } else {
        // Both owners have an update queue.
      }
    }
  }
  if (queue2 === null || queue1 === queue2) {
    // There's only a single queue.
    appendUpdateToQueue(queue1, update, expirationTime);
  } else {
    // There are two queues. We need to append the update to both queues,
    // while accounting for the persistent structure of the list — we don't
    // want the same update to be added multiple times.
    if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
      // One of the queues is not empty. We must add the update to both queues.
      appendUpdateToQueue(queue1, update, expirationTime);
      appendUpdateToQueue(queue2, update, expirationTime);
    } else {
      // Both queues are non-empty. The last update is the same in both lists,
      // because of structural sharing. So, only append to one of the lists.
      appendUpdateToQueue(queue1, update, expirationTime);
      // But we still need to update the `lastUpdate` pointer of queue2.
      queue2.lastUpdate = update;
    }
  }

  {
    if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {
      warning(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
      didWarnUpdateInsideUpdate = true;
    }
  }
}

function enqueueCapturedUpdate(workInProgress, update, renderExpirationTime) {
  // Captured updates go into a separate list, and only on the work-in-
  // progress queue.
  var workInProgressQueue = workInProgress.updateQueue;
  if (workInProgressQueue === null) {
    workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);
  } else {
    // TODO: I put this here rather than createWorkInProgress so that we don't
    // clone the queue unnecessarily. There's probably a better way to
    // structure this.
    workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
  }

  // Append the update to the end of the list.
  if (workInProgressQueue.lastCapturedUpdate === null) {
    // This is the first render phase update
    workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
  } else {
    workInProgressQueue.lastCapturedUpdate.next = update;
    workInProgressQueue.lastCapturedUpdate = update;
  }
  if (workInProgressQueue.expirationTime === NoWork || workInProgressQueue.expirationTime > renderExpirationTime) {
    // The incoming update has the earliest expiration of any update in the
    // queue. Update the queue's expiration time.
    workInProgressQueue.expirationTime = renderExpirationTime;
  }
}

function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
  var current = workInProgress.alternate;
  if (current !== null) {
    // If the work-in-progress queue is equal to the current queue,
    // we need to clone it first.
    if (queue === current.updateQueue) {
      queue = workInProgress.updateQueue = cloneUpdateQueue(queue);
    }
  }
  return queue;
}

function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
  switch (update.tag) {
    case ReplaceState:
      {
        var _payload = update.payload;
        if (typeof _payload === 'function') {
          // Updater function
          {
            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              _payload.call(instance, prevState, nextProps);
            }
          }
          return _payload.call(instance, prevState, nextProps);
        }
        // State object
        return _payload;
      }
    case CaptureUpdate:
      {
        workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;
      }
    // Intentional fallthrough
    case UpdateState:
      {
        var _payload2 = update.payload;
        var partialState = void 0;
        if (typeof _payload2 === 'function') {
          // Updater function
          {
            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              _payload2.call(instance, prevState, nextProps);
            }
          }
          partialState = _payload2.call(instance, prevState, nextProps);
        } else {
          // Partial state object
          partialState = _payload2;
        }
        if (partialState === null || partialState === undefined) {
          // Null and undefined are treated as no-ops.
          return prevState;
        }
        // Merge the partial state and the previous state.
        return _assign({}, prevState, partialState);
      }
    case ForceUpdate:
      {
        hasForceUpdate = true;
        return prevState;
      }
  }
  return prevState;
}

function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
  hasForceUpdate = false;

  if (queue.expirationTime === NoWork || queue.expirationTime > renderExpirationTime) {
    // Insufficient priority. Bailout.
    return;
  }

  queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

  {
    currentlyProcessingQueue = queue;
  }

  // These values may change as we process the queue.
  var newBaseState = queue.baseState;
  var newFirstUpdate = null;
  var newExpirationTime = NoWork;

  // Iterate through the list of updates to compute the result.
  var update = queue.firstUpdate;
  var resultState = newBaseState;
  while (update !== null) {
    var updateExpirationTime = update.expirationTime;
    if (updateExpirationTime > renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      if (newFirstUpdate === null) {
        // This is the first skipped update. It will be the first update in
        // the new list.
        newFirstUpdate = update;
        // Since this is the first update that was skipped, the current result
        // is the new base state.
        newBaseState = resultState;
      }
      // Since this update will remain in the list, update the remaining
      // expiration time.
      if (newExpirationTime === NoWork || newExpirationTime > updateExpirationTime) {
        newExpirationTime = updateExpirationTime;
      }
    } else {
      // This update does have sufficient priority. Process it and compute
      // a new result.
      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
      var _callback = update.callback;
      if (_callback !== null) {
        workInProgress.effectTag |= Callback;
        // Set this to null, in case it was mutated during an aborted render.
        update.nextEffect = null;
        if (queue.lastEffect === null) {
          queue.firstEffect = queue.lastEffect = update;
        } else {
          queue.lastEffect.nextEffect = update;
          queue.lastEffect = update;
        }
      }
    }
    // Continue to the next update.
    update = update.next;
  }

  // Separately, iterate though the list of captured updates.
  var newFirstCapturedUpdate = null;
  update = queue.firstCapturedUpdate;
  while (update !== null) {
    var _updateExpirationTime = update.expirationTime;
    if (_updateExpirationTime > renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      if (newFirstCapturedUpdate === null) {
        // This is the first skipped captured update. It will be the first
        // update in the new list.
        newFirstCapturedUpdate = update;
        // If this is the first update that was skipped, the current result is
        // the new base state.
        if (newFirstUpdate === null) {
          newBaseState = resultState;
        }
      }
      // Since this update will remain in the list, update the remaining
      // expiration time.
      if (newExpirationTime === NoWork || newExpirationTime > _updateExpirationTime) {
        newExpirationTime = _updateExpirationTime;
      }
    } else {
      // This update does have sufficient priority. Process it and compute
      // a new result.
      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
      var _callback2 = update.callback;
      if (_callback2 !== null) {
        workInProgress.effectTag |= Callback;
        // Set this to null, in case it was mutated during an aborted render.
        update.nextEffect = null;
        if (queue.lastCapturedEffect === null) {
          queue.firstCapturedEffect = queue.lastCapturedEffect = update;
        } else {
          queue.lastCapturedEffect.nextEffect = update;
          queue.lastCapturedEffect = update;
        }
      }
    }
    update = update.next;
  }

  if (newFirstUpdate === null) {
    queue.lastUpdate = null;
  }
  if (newFirstCapturedUpdate === null) {
    queue.lastCapturedUpdate = null;
  } else {
    workInProgress.effectTag |= Callback;
  }
  if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
    // We processed every update, without skipping. That means the new base
    // state is the same as the result state.
    newBaseState = resultState;
  }

  queue.baseState = newBaseState;
  queue.firstUpdate = newFirstUpdate;
  queue.firstCapturedUpdate = newFirstCapturedUpdate;
  queue.expirationTime = newExpirationTime;

  workInProgress.memoizedState = resultState;

  {
    currentlyProcessingQueue = null;
  }
}

function callCallback(callback, context) {
  !(typeof callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', callback) : void 0;
  callback.call(context);
}

function resetHasForceUpdateBeforeProcessing() {
  hasForceUpdate = false;
}

function checkHasForceUpdateAfterProcessing() {
  return hasForceUpdate;
}

function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {
  // If the finished render included captured updates, and there are still
  // lower priority updates left over, we need to keep the captured updates
  // in the queue so that they are rebased and not dropped once we process the
  // queue again at the lower priority.
  if (finishedQueue.firstCapturedUpdate !== null) {
    // Join the captured update list to the end of the normal list.
    if (finishedQueue.lastUpdate !== null) {
      finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;
      finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
    }
    // Clear the list of captured updates.
    finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
  }

  // Commit the effects
  var effect = finishedQueue.firstEffect;
  finishedQueue.firstEffect = finishedQueue.lastEffect = null;
  while (effect !== null) {
    var _callback3 = effect.callback;
    if (_callback3 !== null) {
      effect.callback = null;
      callCallback(_callback3, instance);
    }
    effect = effect.nextEffect;
  }

  effect = finishedQueue.firstCapturedEffect;
  finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  while (effect !== null) {
    var _callback4 = effect.callback;
    if (_callback4 !== null) {
      effect.callback = null;
      callCallback(_callback4, instance);
    }
    effect = effect.nextEffect;
  }
}

function createCapturedValue(value, source) {
  // If the value is an error, call this function immediately after it is thrown
  // so the stack is accurate.
  return {
    value: value,
    source: source,
    stack: getStackAddendumByWorkInProgressFiber(source)
  };
}

var providerCursor = createCursor(null);
var valueCursor = createCursor(null);
var changedBitsCursor = createCursor(0);

var rendererSigil = void 0;
{
  // Use this to detect multiple renderers using the same context
  rendererSigil = {};
}

function pushProvider(providerFiber) {
  var context = providerFiber.type._context;

  if (isPrimaryRenderer) {
    push(changedBitsCursor, context._changedBits, providerFiber);
    push(valueCursor, context._currentValue, providerFiber);
    push(providerCursor, providerFiber, providerFiber);

    context._currentValue = providerFiber.pendingProps.value;
    context._changedBits = providerFiber.stateNode;
    {
      !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warning(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
      context._currentRenderer = rendererSigil;
    }
  } else {
    push(changedBitsCursor, context._changedBits2, providerFiber);
    push(valueCursor, context._currentValue2, providerFiber);
    push(providerCursor, providerFiber, providerFiber);

    context._currentValue2 = providerFiber.pendingProps.value;
    context._changedBits2 = providerFiber.stateNode;
    {
      !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warning(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
      context._currentRenderer2 = rendererSigil;
    }
  }
}

function popProvider(providerFiber) {
  var changedBits = changedBitsCursor.current;
  var currentValue = valueCursor.current;

  pop(providerCursor, providerFiber);
  pop(valueCursor, providerFiber);
  pop(changedBitsCursor, providerFiber);

  var context = providerFiber.type._context;
  if (isPrimaryRenderer) {
    context._currentValue = currentValue;
    context._changedBits = changedBits;
  } else {
    context._currentValue2 = currentValue;
    context._changedBits2 = changedBits;
  }
}

function getContextCurrentValue(context) {
  return isPrimaryRenderer ? context._currentValue : context._currentValue2;
}

function getContextChangedBits(context) {
  return isPrimaryRenderer ? context._changedBits : context._changedBits2;
}

var NO_CONTEXT = {};

var contextStackCursor$1 = createCursor(NO_CONTEXT);
var contextFiberStackCursor = createCursor(NO_CONTEXT);
var rootInstanceStackCursor = createCursor(NO_CONTEXT);

function requiredContext(c) {
  !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  return c;
}

function getRootHostContainer() {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  return rootInstance;
}

function pushHostContainer(fiber, nextRootInstance) {
  // Push current root instance onto the stack;
  // This allows us to reset root when portals are popped.
  push(rootInstanceStackCursor, nextRootInstance, fiber);
  // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.
  push(contextFiberStackCursor, fiber, fiber);

  // Finally, we need to push the host context to the stack.
  // However, we can't just call getRootHostContext() and push it because
  // we'd have a different number of entries on the stack depending on
  // whether getRootHostContext() throws somewhere in renderer code or not.
  // So we push an empty value first. This lets us safely unwind on errors.
  push(contextStackCursor$1, NO_CONTEXT, fiber);
  var nextRootContext = getRootHostContext(nextRootInstance);
  // Now that we know this function doesn't throw, replace it.
  pop(contextStackCursor$1, fiber);
  push(contextStackCursor$1, nextRootContext, fiber);
}

function popHostContainer(fiber) {
  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
  pop(rootInstanceStackCursor, fiber);
}

function getHostContext() {
  var context = requiredContext(contextStackCursor$1.current);
  return context;
}

function pushHostContext(fiber) {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  var context = requiredContext(contextStackCursor$1.current);
  var nextContext = getChildHostContext(context, fiber.type, rootInstance);

  // Don't push this Fiber's context unless it's unique.
  if (context === nextContext) {
    return;
  }

  // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.
  push(contextFiberStackCursor, fiber, fiber);
  push(contextStackCursor$1, nextContext, fiber);
}

function popHostContext(fiber) {
  // Do not pop unless this Fiber provided the current context.
  // pushHostContext() only pushes Fibers that provide unique contexts.
  if (contextFiberStackCursor.current !== fiber) {
    return;
  }

  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
}

var commitTime = 0;

function getCommitTime() {
  return commitTime;
}

function recordCommitTime() {
  if (!enableProfilerTimer) {
    return;
  }
  commitTime = now();
}

/**
 * The "actual" render time is total time required to render the descendants of a Profiler component.
 * This time is stored as a stack, since Profilers can be nested.
 * This time is started during the "begin" phase and stopped during the "complete" phase.
 * It is paused (and accumulated) in the event of an interruption or an aborted render.
 */

var fiberStack$1 = void 0;

{
  fiberStack$1 = [];
}

var timerPausedAt = 0;
var totalElapsedPauseTime = 0;

function checkActualRenderTimeStackEmpty() {
  if (!enableProfilerTimer) {
    return;
  }
  {
    !(fiberStack$1.length === 0) ? warning(false, 'Expected an empty stack. Something was not reset properly.') : void 0;
  }
}

function markActualRenderTimeStarted(fiber) {
  if (!enableProfilerTimer) {
    return;
  }
  {
    fiberStack$1.push(fiber);
  }

  fiber.actualDuration = now() - fiber.actualDuration - totalElapsedPauseTime;
  fiber.actualStartTime = now();
}

function pauseActualRenderTimerIfRunning() {
  if (!enableProfilerTimer) {
    return;
  }
  if (timerPausedAt === 0) {
    timerPausedAt = now();
  }
}

function recordElapsedActualRenderTime(fiber) {
  if (!enableProfilerTimer) {
    return;
  }
  {
    !(fiber === fiberStack$1.pop()) ? warning(false, 'Unexpected Fiber (%s) popped.', getComponentName(fiber)) : void 0;
  }

  fiber.actualDuration = now() - totalElapsedPauseTime - fiber.actualDuration;
}

function resetActualRenderTimer() {
  if (!enableProfilerTimer) {
    return;
  }
  totalElapsedPauseTime = 0;
}

function resumeActualRenderTimerIfPaused() {
  if (!enableProfilerTimer) {
    return;
  }
  if (timerPausedAt > 0) {
    totalElapsedPauseTime += now() - timerPausedAt;
    timerPausedAt = 0;
  }
}

/**
 * The "base" render time is the duration of the “begin” phase of work for a particular fiber.
 * This time is measured and stored on each fiber.
 * The time for all sibling fibers are accumulated and stored on their parent during the "complete" phase.
 * If a fiber bails out (sCU false) then its "base" timer is cancelled and the fiber is not updated.
 */

var baseStartTime = -1;

function recordElapsedBaseRenderTimeIfRunning(fiber) {
  if (!enableProfilerTimer) {
    return;
  }
  if (baseStartTime !== -1) {
    fiber.selfBaseTime = now() - baseStartTime;
  }
}

function startBaseRenderTimer() {
  if (!enableProfilerTimer) {
    return;
  }
  {
    if (baseStartTime !== -1) {
      warning(false, 'Cannot start base timer that is already running. ' + 'This error is likely caused by a bug in React. ' + 'Please file an issue.');
    }
  }
  baseStartTime = now();
}

function stopBaseRenderTimerIfRunning() {
  if (!enableProfilerTimer) {
    return;
  }
  baseStartTime = -1;
}

var fakeInternalInstance = {};
var isArray = Array.isArray;

var didWarnAboutStateAssignmentForComponent = void 0;
var didWarnAboutUninitializedState = void 0;
var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = void 0;
var didWarnAboutLegacyLifecyclesAndDerivedState = void 0;
var didWarnAboutUndefinedDerivedState = void 0;
var warnOnUndefinedDerivedState = void 0;
var warnOnInvalidCallback$1 = void 0;

{
  didWarnAboutStateAssignmentForComponent = new Set();
  didWarnAboutUninitializedState = new Set();
  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
  didWarnAboutUndefinedDerivedState = new Set();

  var didWarnOnInvalidCallback = new Set();

  warnOnInvalidCallback$1 = function (callback, callerName) {
    if (callback === null || typeof callback === 'function') {
      return;
    }
    var key = callerName + '_' + callback;
    if (!didWarnOnInvalidCallback.has(key)) {
      didWarnOnInvalidCallback.add(key);
      warning(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
    }
  };

  warnOnUndefinedDerivedState = function (workInProgress, partialState) {
    if (partialState === undefined) {
      var componentName = getComponentName(workInProgress) || 'Component';
      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
        didWarnAboutUndefinedDerivedState.add(componentName);
        warning(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
      }
    }
  };

  // This is so gross but it's at least non-critical and can be removed if
  // it causes problems. This is meant to give a nicer error message for
  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
  // ...)) which otherwise throws a "_processChildContext is not a function"
  // exception.
  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
    enumerable: false,
    value: function () {
      invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');
    }
  });
  Object.freeze(fakeInternalInstance);
}

function applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, nextProps) {
  var prevState = workInProgress.memoizedState;

  {
    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      // Invoke the function an extra time to help detect side-effects.
      getDerivedStateFromProps(nextProps, prevState);
    }
  }

  var partialState = getDerivedStateFromProps(nextProps, prevState);

  {
    warnOnUndefinedDerivedState(workInProgress, partialState);
  }
  // Merge the partial state and the previous state.
  var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
  workInProgress.memoizedState = memoizedState;

  // Once the update queue is empty, persist the derived state onto the
  // base state.
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null && updateQueue.expirationTime === NoWork) {
    updateQueue.baseState = memoizedState;
  }
}

var classComponentUpdater = {
  isMounted: isMounted,
  enqueueSetState: function (inst, payload, callback) {
    var fiber = get(inst);
    var currentTime = recalculateCurrentTime();
    var expirationTime = computeExpirationForFiber(currentTime, fiber);

    var update = createUpdate(expirationTime);
    update.payload = payload;
    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'setState');
      }
      update.callback = callback;
    }

    enqueueUpdate(fiber, update, expirationTime);
    scheduleWork$1(fiber, expirationTime);
  },
  enqueueReplaceState: function (inst, payload, callback) {
    var fiber = get(inst);
    var currentTime = recalculateCurrentTime();
    var expirationTime = computeExpirationForFiber(currentTime, fiber);

    var update = createUpdate(expirationTime);
    update.tag = ReplaceState;
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'replaceState');
      }
      update.callback = callback;
    }

    enqueueUpdate(fiber, update, expirationTime);
    scheduleWork$1(fiber, expirationTime);
  },
  enqueueForceUpdate: function (inst, callback) {
    var fiber = get(inst);
    var currentTime = recalculateCurrentTime();
    var expirationTime = computeExpirationForFiber(currentTime, fiber);

    var update = createUpdate(expirationTime);
    update.tag = ForceUpdate;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'forceUpdate');
      }
      update.callback = callback;
    }

    enqueueUpdate(fiber, update, expirationTime);
    scheduleWork$1(fiber, expirationTime);
  }
};

function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
  var instance = workInProgress.stateNode;
  var ctor = workInProgress.type;
  if (typeof instance.shouldComponentUpdate === 'function') {
    startPhaseTimer(workInProgress, 'shouldComponentUpdate');
    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, newContext);
    stopPhaseTimer();

    {
      !(shouldUpdate !== undefined) ? warning(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(workInProgress) || 'Component') : void 0;
    }

    return shouldUpdate;
  }

  if (ctor.prototype && ctor.prototype.isPureReactComponent) {
    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
  }

  return true;
}

function checkClassInstance(workInProgress) {
  var instance = workInProgress.stateNode;
  var type = workInProgress.type;
  {
    var name = getComponentName(workInProgress) || 'Component';
    var renderPresent = instance.render;

    if (!renderPresent) {
      if (type.prototype && typeof type.prototype.render === 'function') {
        warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
      } else {
        warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
      }
    }

    var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
    !noGetInitialStateOnES6 ? warning(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;
    var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
    !noGetDefaultPropsOnES6 ? warning(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;
    var noInstancePropTypes = !instance.propTypes;
    !noInstancePropTypes ? warning(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;
    var noInstanceContextTypes = !instance.contextTypes;
    !noInstanceContextTypes ? warning(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;
    var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
    !noComponentShouldUpdate ? warning(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;
    if (type.prototype && type.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
      warning(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(workInProgress) || 'A pure component');
    }
    var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
    !noComponentDidUnmount ? warning(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;
    var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
    !noComponentDidReceiveProps ? warning(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;
    var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
    !noComponentWillRecieveProps ? warning(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;
    var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';
    !noUnsafeComponentWillRecieveProps ? warning(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;
    var hasMutatedProps = instance.props !== workInProgress.pendingProps;
    !(instance.props === undefined || !hasMutatedProps) ? warning(false, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name) : void 0;
    var noInstanceDefaultProps = !instance.defaultProps;
    !noInstanceDefaultProps ? warning(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;

    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(type)) {
      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(type);
      warning(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(workInProgress));
    }

    var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';
    !noInstanceGetDerivedStateFromProps ? warning(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
    var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromCatch !== 'function';
    !noInstanceGetDerivedStateFromCatch ? warning(false, '%s: getDerivedStateFromCatch() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
    var noStaticGetSnapshotBeforeUpdate = typeof type.getSnapshotBeforeUpdate !== 'function';
    !noStaticGetSnapshotBeforeUpdate ? warning(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;
    var _state = instance.state;
    if (_state && (typeof _state !== 'object' || isArray(_state))) {
      warning(false, '%s.state: must be set to an object or null', name);
    }
    if (typeof instance.getChildContext === 'function') {
      !(typeof type.childContextTypes === 'object') ? warning(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;
    }
  }
}

function adoptClassInstance(workInProgress, instance) {
  instance.updater = classComponentUpdater;
  workInProgress.stateNode = instance;
  // The instance needs access to the fiber so that it can schedule updates
  set(instance, workInProgress);
  {
    instance._reactInternalInstance = fakeInternalInstance;
  }
}

function constructClassInstance(workInProgress, props, renderExpirationTime) {
  var ctor = workInProgress.type;
  var unmaskedContext = getUnmaskedContext(workInProgress);
  var needsContext = isContextConsumer(workInProgress);
  var context = needsContext ? getMaskedContext(workInProgress, unmaskedContext) : emptyObject;

  // Instantiate twice to help detect side-effects.
  {
    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      new ctor(props, context); // eslint-disable-line no-new
    }
  }

  var instance = new ctor(props, context);
  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
  adoptClassInstance(workInProgress, instance);

  {
    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
      var componentName = getComponentName(workInProgress) || 'Component';
      if (!didWarnAboutUninitializedState.has(componentName)) {
        didWarnAboutUninitializedState.add(componentName);
        warning(false, '%s: Did not properly initialize state during construction. ' + 'Expected state to be an object, but it was %s.', componentName, instance.state === null ? 'null' : 'undefined');
      }
    }

    // If new component APIs are defined, "unsafe" lifecycles won't be called.
    // Warn about these lifecycles if they are present.
    // Don't warn about react-lifecycles-compat polyfilled methods though.
    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
      var foundWillMountName = null;
      var foundWillReceivePropsName = null;
      var foundWillUpdateName = null;
      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
        foundWillMountName = 'componentWillMount';
      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
        foundWillMountName = 'UNSAFE_componentWillMount';
      }
      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
        foundWillReceivePropsName = 'componentWillReceiveProps';
      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
      }
      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
        foundWillUpdateName = 'componentWillUpdate';
      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        foundWillUpdateName = 'UNSAFE_componentWillUpdate';
      }
      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
        var _componentName = getComponentName(workInProgress) || 'Component';
        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
          warning(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks', _componentName, newApiName, foundWillMountName !== null ? '\n  ' + foundWillMountName : '', foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '', foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '');
        }
      }
    }
  }

  // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // ReactFiberContext usually updates this cache but can't for newly-created instances.
  if (needsContext) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return instance;
}

function callComponentWillMount(workInProgress, instance) {
  startPhaseTimer(workInProgress, 'componentWillMount');
  var oldState = instance.state;

  if (typeof instance.componentWillMount === 'function') {
    instance.componentWillMount();
  }
  if (typeof instance.UNSAFE_componentWillMount === 'function') {
    instance.UNSAFE_componentWillMount();
  }

  stopPhaseTimer();

  if (oldState !== instance.state) {
    {
      warning(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress) || 'Component');
    }
    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

function callComponentWillReceiveProps(workInProgress, instance, newProps, newContext) {
  var oldState = instance.state;
  startPhaseTimer(workInProgress, 'componentWillReceiveProps');
  if (typeof instance.componentWillReceiveProps === 'function') {
    instance.componentWillReceiveProps(newProps, newContext);
  }
  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
    instance.UNSAFE_componentWillReceiveProps(newProps, newContext);
  }
  stopPhaseTimer();

  if (instance.state !== oldState) {
    {
      var componentName = getComponentName(workInProgress) || 'Component';
      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
        didWarnAboutStateAssignmentForComponent.add(componentName);
        warning(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
      }
    }
    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

// Invokes the mount life-cycles on a previously never rendered instance.
function mountClassInstance(workInProgress, renderExpirationTime) {
  var ctor = workInProgress.type;

  {
    checkClassInstance(workInProgress);
  }

  var instance = workInProgress.stateNode;
  var props = workInProgress.pendingProps;
  var unmaskedContext = getUnmaskedContext(workInProgress);

  instance.props = props;
  instance.state = workInProgress.memoizedState;
  instance.refs = emptyObject;
  instance.context = getMaskedContext(workInProgress, unmaskedContext);

  {
    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);

      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
    }

    if (warnAboutDeprecatedLifecycles) {
      ReactStrictModeWarnings.recordDeprecationWarnings(workInProgress, instance);
    }
  }

  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, props, instance, renderExpirationTime);
    instance.state = workInProgress.memoizedState;
  }

  var getDerivedStateFromProps = workInProgress.type.getDerivedStateFromProps;
  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, props);
    instance.state = workInProgress.memoizedState;
  }

  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.
  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
    callComponentWillMount(workInProgress, instance);
    // If we had additional state updates during this life-cycle, let's
    // process them now.
    updateQueue = workInProgress.updateQueue;
    if (updateQueue !== null) {
      processUpdateQueue(workInProgress, updateQueue, props, instance, renderExpirationTime);
      instance.state = workInProgress.memoizedState;
    }
  }

  if (typeof instance.componentDidMount === 'function') {
    workInProgress.effectTag |= Update;
  }
}

function resumeMountClassInstance(workInProgress, renderExpirationTime) {
  var ctor = workInProgress.type;
  var instance = workInProgress.stateNode;

  var oldProps = workInProgress.memoizedProps;
  var newProps = workInProgress.pendingProps;
  instance.props = oldProps;

  var oldContext = instance.context;
  var newUnmaskedContext = getUnmaskedContext(workInProgress);
  var newContext = getMaskedContext(workInProgress, newUnmaskedContext);

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

  // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.

  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.
  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== newContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();

  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    newState = workInProgress.memoizedState;
  }
  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
      startPhaseTimer(workInProgress, 'componentWillMount');
      if (typeof instance.componentWillMount === 'function') {
        instance.componentWillMount();
      }
      if (typeof instance.UNSAFE_componentWillMount === 'function') {
        instance.UNSAFE_componentWillMount();
      }
      stopPhaseTimer();
    }
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }

    // If shouldComponentUpdate returned false, we should still update the
    // memoized state to indicate that this work can be reused.
    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  }

  // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.
  instance.props = newProps;
  instance.state = newState;
  instance.context = newContext;

  return shouldUpdate;
}

// Invokes the update life-cycles and returns false if it shouldn't rerender.
function updateClassInstance(current, workInProgress, renderExpirationTime) {
  var ctor = workInProgress.type;
  var instance = workInProgress.stateNode;

  var oldProps = workInProgress.memoizedProps;
  var newProps = workInProgress.pendingProps;
  instance.props = oldProps;

  var oldContext = instance.context;
  var newUnmaskedContext = getUnmaskedContext(workInProgress);
  var newContext = getMaskedContext(workInProgress, newUnmaskedContext);

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

  // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.

  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.
  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== newContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();

  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    newState = workInProgress.memoizedState;
  }

  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Update;
      }
    }
    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Snapshot;
      }
    }
    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
      startPhaseTimer(workInProgress, 'componentWillUpdate');
      if (typeof instance.componentWillUpdate === 'function') {
        instance.componentWillUpdate(newProps, newState, newContext);
      }
      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        instance.UNSAFE_componentWillUpdate(newProps, newState, newContext);
      }
      stopPhaseTimer();
    }
    if (typeof instance.componentDidUpdate === 'function') {
      workInProgress.effectTag |= Update;
    }
    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      workInProgress.effectTag |= Snapshot;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Update;
      }
    }
    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Snapshot;
      }
    }

    // If shouldComponentUpdate returned false, we should still update the
    // memoized props/state to indicate that this work can be reused.
    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  }

  // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.
  instance.props = newProps;
  instance.state = newState;
  instance.context = newContext;

  return shouldUpdate;
}

var getCurrentFiberStackAddendum$7 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


var didWarnAboutMaps = void 0;
var didWarnAboutStringRefInStrictMode = void 0;
var ownerHasKeyUseWarning = void 0;
var ownerHasFunctionTypeWarning = void 0;
var warnForMissingKey = function (child) {};

{
  didWarnAboutMaps = false;
  didWarnAboutStringRefInStrictMode = {};

  /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */
  ownerHasKeyUseWarning = {};
  ownerHasFunctionTypeWarning = {};

  warnForMissingKey = function (child) {
    if (child === null || typeof child !== 'object') {
      return;
    }
    if (!child._store || child._store.validated || child.key != null) {
      return;
    }
    !(typeof child._store === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    child._store.validated = true;

    var currentComponentErrorInfo = 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + (getCurrentFiberStackAddendum$7() || '');
    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }
    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

    warning(false, 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.%s', getCurrentFiberStackAddendum$7());
  };
}

var isArray$1 = Array.isArray;

function coerceRef(returnFiber, current, element) {
  var mixedRef = element.ref;
  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
    {
      if (returnFiber.mode & StrictMode) {
        var componentName = getComponentName(returnFiber) || 'Component';
        if (!didWarnAboutStringRefInStrictMode[componentName]) {
          warning(false, 'A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using createRef() instead.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-string-ref', mixedRef, getStackAddendumByWorkInProgressFiber(returnFiber));
          didWarnAboutStringRefInStrictMode[componentName] = true;
        }
      }
    }

    if (element._owner) {
      var owner = element._owner;
      var inst = void 0;
      if (owner) {
        var ownerFiber = owner;
        !(ownerFiber.tag === ClassComponent) ? invariant(false, 'Stateless function components cannot have refs.') : void 0;
        inst = ownerFiber.stateNode;
      }
      !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;
      var stringRef = '' + mixedRef;
      // Check if previous string ref matches new string ref
      if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) {
        return current.ref;
      }
      var ref = function (value) {
        var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
        if (value === null) {
          delete refs[stringRef];
        } else {
          refs[stringRef] = value;
        }
      };
      ref._stringRef = stringRef;
      return ref;
    } else {
      !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function or a string.') : void 0;
      !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a functional component\n2. You may be adding a ref to a component that was not created inside a component\'s render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.', mixedRef) : void 0;
    }
  }
  return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
  if (returnFiber.type !== 'textarea') {
    var addendum = '';
    {
      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + (getCurrentFiberStackAddendum$7() || '');
    }
    invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);
  }
}

function warnOnFunctionType() {
  var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + (getCurrentFiberStackAddendum$7() || '');

  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
    return;
  }
  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;

  warning(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.%s', getCurrentFiberStackAddendum$7() || '');
}

// This wrapper function exists because I expect to clone the code in each path
// to be able to optimize each path individually by branching early. This needs
// a compiler or we can do it manually. Helpers that don't need this branching
// live outside of this function.
function ChildReconciler(shouldTrackSideEffects) {
  function deleteChild(returnFiber, childToDelete) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return;
    }
    // Deletions are added in reversed order so we add it to the front.
    // At this point, the return fiber's effect list is empty except for
    // deletions, so we can just append the deletion to the list. The remaining
    // effects aren't added until the complete phase. Once we implement
    // resuming, this may not be true.
    var last = returnFiber.lastEffect;
    if (last !== null) {
      last.nextEffect = childToDelete;
      returnFiber.lastEffect = childToDelete;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }
    childToDelete.nextEffect = null;
    childToDelete.effectTag = Deletion;
  }

  function deleteRemainingChildren(returnFiber, currentFirstChild) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return null;
    }

    // TODO: For the shouldClone case, this could be micro-optimized a bit by
    // assuming that after the first child we've already added everything.
    var childToDelete = currentFirstChild;
    while (childToDelete !== null) {
      deleteChild(returnFiber, childToDelete);
      childToDelete = childToDelete.sibling;
    }
    return null;
  }

  function mapRemainingChildren(returnFiber, currentFirstChild) {
    // Add the remaining children to a temporary map so that we can find them by
    // keys quickly. Implicit (null) keys get added to this set with their index
    var existingChildren = new Map();

    var existingChild = currentFirstChild;
    while (existingChild !== null) {
      if (existingChild.key !== null) {
        existingChildren.set(existingChild.key, existingChild);
      } else {
        existingChildren.set(existingChild.index, existingChild);
      }
      existingChild = existingChild.sibling;
    }
    return existingChildren;
  }

  function useFiber(fiber, pendingProps, expirationTime) {
    // We currently set sibling to null and index to 0 here because it is easy
    // to forget to do before returning it. E.g. for the single child case.
    var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
    clone.index = 0;
    clone.sibling = null;
    return clone;
  }

  function placeChild(newFiber, lastPlacedIndex, newIndex) {
    newFiber.index = newIndex;
    if (!shouldTrackSideEffects) {
      // Noop.
      return lastPlacedIndex;
    }
    var current = newFiber.alternate;
    if (current !== null) {
      var oldIndex = current.index;
      if (oldIndex < lastPlacedIndex) {
        // This is a move.
        newFiber.effectTag = Placement;
        return lastPlacedIndex;
      } else {
        // This item can stay in place.
        return oldIndex;
      }
    } else {
      // This is an insertion.
      newFiber.effectTag = Placement;
      return lastPlacedIndex;
    }
  }

  function placeSingleChild(newFiber) {
    // This is simpler for the single child case. We only need to do a
    // placement for inserting new children.
    if (shouldTrackSideEffects && newFiber.alternate === null) {
      newFiber.effectTag = Placement;
    }
    return newFiber;
  }

  function updateTextNode(returnFiber, current, textContent, expirationTime) {
    if (current === null || current.tag !== HostText) {
      // Insert
      var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, textContent, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateElement(returnFiber, current, element, expirationTime) {
    if (current !== null && current.type === element.type) {
      // Move based on index
      var existing = useFiber(current, element.props, expirationTime);
      existing.ref = coerceRef(returnFiber, current, element);
      existing.return = returnFiber;
      {
        existing._debugSource = element._source;
        existing._debugOwner = element._owner;
      }
      return existing;
    } else {
      // Insert
      var created = createFiberFromElement(element, returnFiber.mode, expirationTime);
      created.ref = coerceRef(returnFiber, current, element);
      created.return = returnFiber;
      return created;
    }
  }

  function updatePortal(returnFiber, current, portal, expirationTime) {
    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
      // Insert
      var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, portal.children || [], expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateFragment(returnFiber, current, fragment, expirationTime, key) {
    if (current === null || current.tag !== Fragment) {
      // Insert
      var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, fragment, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function createChild(returnFiber, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);
            _created.ref = coerceRef(returnFiber, null, newChild);
            _created.return = returnFiber;
            return _created;
          }
        case REACT_PORTAL_TYPE:
          {
            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            _created2.return = returnFiber;
            return _created2;
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);
        _created3.return = returnFiber;
        return _created3;
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
    // Update the fiber if the keys match, otherwise return null.

    var key = oldFiber !== null ? oldFiber.key : null;

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      if (key !== null) {
        return null;
      }
      return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.key === key) {
              if (newChild.type === REACT_FRAGMENT_TYPE) {
                return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
              }
              return updateElement(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }
        case REACT_PORTAL_TYPE:
          {
            if (newChild.key === key) {
              return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        if (key !== null) {
          return null;
        }

        return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys, so we neither have to check the old nor
      // new node for the key. If both are text nodes, they match.
      var matchedFiber = existingChildren.get(newIdx) || null;
      return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            if (newChild.type === REACT_FRAGMENT_TYPE) {
              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
            }
            return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
          }
        case REACT_PORTAL_TYPE:
          {
            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        var _matchedFiber3 = existingChildren.get(newIdx) || null;
        return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  /**
   * Warns if there is a duplicate or missing key
   */
  function warnOnInvalidKey(child, knownKeys) {
    {
      if (typeof child !== 'object' || child === null) {
        return knownKeys;
      }
      switch (child.$$typeof) {
        case REACT_ELEMENT_TYPE:
        case REACT_PORTAL_TYPE:
          warnForMissingKey(child);
          var key = child.key;
          if (typeof key !== 'string') {
            break;
          }
          if (knownKeys === null) {
            knownKeys = new Set();
            knownKeys.add(key);
            break;
          }
          if (!knownKeys.has(key)) {
            knownKeys.add(key);
            break;
          }
          warning(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.%s', key, getCurrentFiberStackAddendum$7());
          break;
        default:
          break;
      }
    }
    return knownKeys;
  }

  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
    // This algorithm can't optimize by searching from boths ends since we
    // don't have backpointers on fibers. I'm trying to see how far we can get
    // with that model. If it ends up not being worth the tradeoffs, we can
    // add it later.

    // Even with a two ended optimization, we'd want to optimize for the case
    // where there are few changes and brute force the comparison instead of
    // going for the Map. It'd like to explore hitting that path first in
    // forward-only mode and only go for the Map once we notice that we need
    // lots of look ahead. This doesn't handle reversal as well as two ended
    // search but that's unusual. Besides, for the two ended optimization to
    // work on Iterables, we'd need to copy the whole set.

    // In this first iteration, we'll just live with hitting the bad case
    // (adding everything to a Map) in for every insert/move.

    // If you change this code, also update reconcileChildrenIterator() which
    // uses the same algorithm.

    {
      // First, validate keys.
      var knownKeys = null;
      for (var i = 0; i < newChildren.length; i++) {
        var child = newChildren[i];
        knownKeys = warnOnInvalidKey(child, knownKeys);
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;
    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);
      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (newIdx === newChildren.length) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; newIdx < newChildren.length; newIdx++) {
        var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);
        if (!_newFiber) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber;
        } else {
          previousNewFiber.sibling = _newFiber;
        }
        previousNewFiber = _newFiber;
      }
      return resultingFirstChild;
    }

    // Add all children to a key map for quick lookups.
    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    // Keep scanning and use the map to restore deleted items as moves.
    for (; newIdx < newChildren.length; newIdx++) {
      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);
      if (_newFiber2) {
        if (shouldTrackSideEffects) {
          if (_newFiber2.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber2;
        } else {
          previousNewFiber.sibling = _newFiber2;
        }
        previousNewFiber = _newFiber2;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
    // This is the same implementation as reconcileChildrenArray(),
    // but using the iterator instead.

    var iteratorFn = getIteratorFn(newChildrenIterable);
    !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;

    {
      // Warn about using Maps as children
      if (newChildrenIterable.entries === iteratorFn) {
        !didWarnAboutMaps ? warning(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', getCurrentFiberStackAddendum$7()) : void 0;
        didWarnAboutMaps = true;
      }

      // First, validate keys.
      // We'll get a different iterator later for the main pass.
      var _newChildren = iteratorFn.call(newChildrenIterable);
      if (_newChildren) {
        var knownKeys = null;
        var _step = _newChildren.next();
        for (; !_step.done; _step = _newChildren.next()) {
          var child = _step.value;
          knownKeys = warnOnInvalidKey(child, knownKeys);
        }
      }
    }

    var newChildren = iteratorFn.call(newChildrenIterable);
    !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;

    var step = newChildren.next();
    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);
      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (!oldFiber) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (step.done) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; !step.done; newIdx++, step = newChildren.next()) {
        var _newFiber3 = createChild(returnFiber, step.value, expirationTime);
        if (_newFiber3 === null) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber3;
        } else {
          previousNewFiber.sibling = _newFiber3;
        }
        previousNewFiber = _newFiber3;
      }
      return resultingFirstChild;
    }

    // Add all children to a key map for quick lookups.
    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    // Keep scanning and use the map to restore deleted items as moves.
    for (; !step.done; newIdx++, step = newChildren.next()) {
      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);
      if (_newFiber4 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber4.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber4;
        } else {
          previousNewFiber.sibling = _newFiber4;
        }
        previousNewFiber = _newFiber4;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
    // There's no need to check for keys on text nodes since we don't have a
    // way to define them.
    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
      // We already have an existing node so let's just update it and delete
      // the rest.
      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
      var existing = useFiber(currentFirstChild, textContent, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
    // The existing first child is not a text node so we need to create one
    // and delete the existing ones.
    deleteRemainingChildren(returnFiber, currentFirstChild);
    var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
    created.return = returnFiber;
    return created;
  }

  function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
    var key = element.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.type === element.type) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
          existing.ref = coerceRef(returnFiber, child, element);
          existing.return = returnFiber;
          {
            existing._debugSource = element._source;
            existing._debugOwner = element._owner;
          }
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    if (element.type === REACT_FRAGMENT_TYPE) {
      var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);
      created.return = returnFiber;
      return created;
    } else {
      var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);
      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
      _created4.return = returnFiber;
      return _created4;
    }
  }

  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
    var key = portal.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, portal.children || [], expirationTime);
          existing.return = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
    created.return = returnFiber;
    return created;
  }

  // This API will tag the children with the side-effect of the reconciliation
  // itself. They will be added to the side-effect list as we pass through the
  // children and the parent.
  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
    // This function is not recursive.
    // If the top level item is an array, we treat it as a set of children,
    // not as a fragment. Nested arrays on the other hand will be treated as
    // fragment nodes. Recursion happens at the normal flow.

    // Handle top level unkeyed fragments as if they were arrays.
    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
    // We treat the ambiguous cases above the same.
    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
    if (isUnkeyedTopLevelFragment) {
      newChild = newChild.props.children;
    }

    // Handle object types
    var isObject = typeof newChild === 'object' && newChild !== null;

    if (isObject) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));
        case REACT_PORTAL_TYPE:
          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
      }
    }

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
    }

    if (isArray$1(newChild)) {
      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (getIteratorFn(newChild)) {
      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (isObject) {
      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }
    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {
      // If the new child is undefined, and the return fiber is a composite
      // component, throw an error. If Fiber return types are disabled,
      // we already threw above.
      switch (returnFiber.tag) {
        case ClassComponent:
          {
            {
              var instance = returnFiber.stateNode;
              if (instance.render._isMockFunction) {
                // We allow auto-mocks to proceed as if they're returning null.
                break;
              }
            }
          }
        // Intentionally fall through to the next case, which handles both
        // functions and classes
        // eslint-disable-next-lined no-fallthrough
        case FunctionalComponent:
          {
            var Component = returnFiber.type;
            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');
          }
      }
    }

    // Remaining cases are all treated as empty.
    return deleteRemainingChildren(returnFiber, currentFirstChild);
  }

  return reconcileChildFibers;
}

var reconcileChildFibers = ChildReconciler(true);
var mountChildFibers = ChildReconciler(false);

function cloneChildFibers(current, workInProgress) {
  !(current === null || workInProgress.child === current.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;

  if (workInProgress.child === null) {
    return;
  }

  var currentChild = workInProgress.child;
  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
  workInProgress.child = newChild;

  newChild.return = workInProgress;
  while (currentChild.sibling !== null) {
    currentChild = currentChild.sibling;
    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
    newChild.return = workInProgress;
  }
  newChild.sibling = null;
}

// The deepest Fiber on the stack involved in a hydration context.
// This may have been an insertion or a hydration.
var hydrationParentFiber = null;
var nextHydratableInstance = null;
var isHydrating = false;

function enterHydrationState(fiber) {
  if (!supportsHydration) {
    return false;
  }

  var parentInstance = fiber.stateNode.containerInfo;
  nextHydratableInstance = getFirstHydratableChild(parentInstance);
  hydrationParentFiber = fiber;
  isHydrating = true;
  return true;
}

function deleteHydratableInstance(returnFiber, instance) {
  {
    switch (returnFiber.tag) {
      case HostRoot:
        didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
        break;
      case HostComponent:
        didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
        break;
    }
  }

  var childToDelete = createFiberFromHostInstanceForDeletion();
  childToDelete.stateNode = instance;
  childToDelete.return = returnFiber;
  childToDelete.effectTag = Deletion;

  // This might seem like it belongs on progressedFirstDeletion. However,
  // these children are not part of the reconciliation list of children.
  // Even if we abort and rereconcile the children, that will try to hydrate
  // again and the nodes are still in the host tree so these will be
  // recreated.
  if (returnFiber.lastEffect !== null) {
    returnFiber.lastEffect.nextEffect = childToDelete;
    returnFiber.lastEffect = childToDelete;
  } else {
    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
  }
}

function insertNonHydratedInstance(returnFiber, fiber) {
  fiber.effectTag |= Placement;
  {
    switch (returnFiber.tag) {
      case HostRoot:
        {
          var parentContainer = returnFiber.stateNode.containerInfo;
          switch (fiber.tag) {
            case HostComponent:
              var type = fiber.type;
              var props = fiber.pendingProps;
              didNotFindHydratableContainerInstance(parentContainer, type, props);
              break;
            case HostText:
              var text = fiber.pendingProps;
              didNotFindHydratableContainerTextInstance(parentContainer, text);
              break;
          }
          break;
        }
      case HostComponent:
        {
          var parentType = returnFiber.type;
          var parentProps = returnFiber.memoizedProps;
          var parentInstance = returnFiber.stateNode;
          switch (fiber.tag) {
            case HostComponent:
              var _type = fiber.type;
              var _props = fiber.pendingProps;
              didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
              break;
            case HostText:
              var _text = fiber.pendingProps;
              didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
              break;
          }
          break;
        }
      default:
        return;
    }
  }
}

function tryHydrate(fiber, nextInstance) {
  switch (fiber.tag) {
    case HostComponent:
      {
        var type = fiber.type;
        var props = fiber.pendingProps;
        var instance = canHydrateInstance(nextInstance, type, props);
        if (instance !== null) {
          fiber.stateNode = instance;
          return true;
        }
        return false;
      }
    case HostText:
      {
        var text = fiber.pendingProps;
        var textInstance = canHydrateTextInstance(nextInstance, text);
        if (textInstance !== null) {
          fiber.stateNode = textInstance;
          return true;
        }
        return false;
      }
    default:
      return false;
  }
}

function tryToClaimNextHydratableInstance(fiber) {
  if (!isHydrating) {
    return;
  }
  var nextInstance = nextHydratableInstance;
  if (!nextInstance) {
    // Nothing to hydrate. Make it an insertion.
    insertNonHydratedInstance(hydrationParentFiber, fiber);
    isHydrating = false;
    hydrationParentFiber = fiber;
    return;
  }
  var firstAttemptedInstance = nextInstance;
  if (!tryHydrate(fiber, nextInstance)) {
    // If we can't hydrate this instance let's try the next one.
    // We use this as a heuristic. It's based on intuition and not data so it
    // might be flawed or unnecessary.
    nextInstance = getNextHydratableSibling(firstAttemptedInstance);
    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
      // Nothing to hydrate. Make it an insertion.
      insertNonHydratedInstance(hydrationParentFiber, fiber);
      isHydrating = false;
      hydrationParentFiber = fiber;
      return;
    }
    // We matched the next one, we'll now assume that the first one was
    // superfluous and we'll delete it. Since we can't eagerly delete it
    // we'll have to schedule a deletion. To do that, this node needs a dummy
    // fiber associated with it.
    deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
  }
  hydrationParentFiber = fiber;
  nextHydratableInstance = getFirstHydratableChild(nextInstance);
}

function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
  if (!supportsHydration) {
    invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
  }

  var instance = fiber.stateNode;
  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
  // TODO: Type this specific to this type of component.
  fiber.updateQueue = updatePayload;
  // If the update payload indicates that there is a change or if there
  // is a new ref we mark this as an update.
  if (updatePayload !== null) {
    return true;
  }
  return false;
}

function prepareToHydrateHostTextInstance(fiber) {
  if (!supportsHydration) {
    invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
  }

  var textInstance = fiber.stateNode;
  var textContent = fiber.memoizedProps;
  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
  {
    if (shouldUpdate) {
      // We assume that prepareToHydrateHostTextInstance is called in a context where the
      // hydration parent is the parent host component of this host text.
      var returnFiber = hydrationParentFiber;
      if (returnFiber !== null) {
        switch (returnFiber.tag) {
          case HostRoot:
            {
              var parentContainer = returnFiber.stateNode.containerInfo;
              didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
              break;
            }
          case HostComponent:
            {
              var parentType = returnFiber.type;
              var parentProps = returnFiber.memoizedProps;
              var parentInstance = returnFiber.stateNode;
              didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
              break;
            }
        }
      }
    }
  }
  return shouldUpdate;
}

function popToNextHostParent(fiber) {
  var parent = fiber.return;
  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot) {
    parent = parent.return;
  }
  hydrationParentFiber = parent;
}

function popHydrationState(fiber) {
  if (!supportsHydration) {
    return false;
  }
  if (fiber !== hydrationParentFiber) {
    // We're deeper than the current hydration context, inside an inserted
    // tree.
    return false;
  }
  if (!isHydrating) {
    // If we're not currently hydrating but we're in a hydration context, then
    // we were an insertion and now need to pop up reenter hydration of our
    // siblings.
    popToNextHostParent(fiber);
    isHydrating = true;
    return false;
  }

  var type = fiber.type;

  // If we have any remaining hydratable nodes, we need to delete them now.
  // We only do this deeper than head and body since they tend to have random
  // other nodes in them. We also ignore components with pure text content in
  // side of them.
  // TODO: Better heuristic.
  if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
    var nextInstance = nextHydratableInstance;
    while (nextInstance) {
      deleteHydratableInstance(fiber, nextInstance);
      nextInstance = getNextHydratableSibling(nextInstance);
    }
  }

  popToNextHostParent(fiber);
  nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
  return true;
}

function resetHydrationState() {
  if (!supportsHydration) {
    return;
  }

  hydrationParentFiber = null;
  nextHydratableInstance = null;
  isHydrating = false;
}

var getCurrentFiberStackAddendum$6 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


var didWarnAboutBadClass = void 0;
var didWarnAboutGetDerivedStateOnFunctionalComponent = void 0;
var didWarnAboutStatelessRefs = void 0;

{
  didWarnAboutBadClass = {};
  didWarnAboutGetDerivedStateOnFunctionalComponent = {};
  didWarnAboutStatelessRefs = {};
}

// TODO: Remove this and use reconcileChildrenAtExpirationTime directly.
function reconcileChildren(current, workInProgress, nextChildren) {
  reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, workInProgress.expirationTime);
}

function reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime) {
  if (current === null) {
    // If this is a fresh new component that hasn't been rendered yet, we
    // won't update its child set by applying minimal side-effects. Instead,
    // we will add them all to the child before it gets rendered. That means
    // we can optimize this reconciliation pass by not tracking side-effects.
    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
  } else {
    // If the current child is the same as the work in progress, it means that
    // we haven't yet started any work on these children. Therefore, we use
    // the clone algorithm to create a copy of all the current children.

    // If we had any progressed work already, that is invalid at this point so
    // let's throw it out.
    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderExpirationTime);
  }
}

function updateForwardRef(current, workInProgress) {
  var render = workInProgress.type.render;
  var nextProps = workInProgress.pendingProps;
  var ref = workInProgress.ref;
  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (workInProgress.memoizedProps === nextProps) {
    var currentRef = current !== null ? current.ref : null;
    if (ref === currentRef) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
  }

  var nextChildren = void 0;
  {
    ReactCurrentOwner.current = workInProgress;
    ReactDebugCurrentFiber.setCurrentPhase('render');
    nextChildren = render(nextProps, ref);
    ReactDebugCurrentFiber.setCurrentPhase(null);
  }

  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextProps);
  return workInProgress.child;
}

function updateFragment(current, workInProgress) {
  var nextChildren = workInProgress.pendingProps;
  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (workInProgress.memoizedProps === nextChildren) {
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }
  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextChildren);
  return workInProgress.child;
}

function updateMode(current, workInProgress) {
  var nextChildren = workInProgress.pendingProps.children;
  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (nextChildren === null || workInProgress.memoizedProps === nextChildren) {
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }
  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextChildren);
  return workInProgress.child;
}

function updateProfiler(current, workInProgress) {
  var nextProps = workInProgress.pendingProps;
  if (enableProfilerTimer) {
    workInProgress.effectTag |= Update;
  }
  if (workInProgress.memoizedProps === nextProps) {
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }
  var nextChildren = nextProps.children;
  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextProps);
  return workInProgress.child;
}

function markRef(current, workInProgress) {
  var ref = workInProgress.ref;
  if (current === null && ref !== null || current !== null && current.ref !== ref) {
    // Schedule a Ref effect
    workInProgress.effectTag |= Ref;
  }
}

function updateFunctionalComponent(current, workInProgress) {
  var fn = workInProgress.type;
  var nextProps = workInProgress.pendingProps;

  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else {
    if (workInProgress.memoizedProps === nextProps) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    // TODO: consider bringing fn.shouldComponentUpdate() back.
    // It used to be here.
  }

  var unmaskedContext = getUnmaskedContext(workInProgress);
  var context = getMaskedContext(workInProgress, unmaskedContext);

  var nextChildren = void 0;

  {
    ReactCurrentOwner.current = workInProgress;
    ReactDebugCurrentFiber.setCurrentPhase('render');
    nextChildren = fn(nextProps, context);
    ReactDebugCurrentFiber.setCurrentPhase(null);
  }
  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextProps);
  return workInProgress.child;
}

function updateClassComponent(current, workInProgress, renderExpirationTime) {
  // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.
  var hasContext = pushContextProvider(workInProgress);
  var shouldUpdate = void 0;
  if (current === null) {
    if (workInProgress.stateNode === null) {
      // In the initial pass we might need to construct the instance.
      constructClassInstance(workInProgress, workInProgress.pendingProps, renderExpirationTime);
      mountClassInstance(workInProgress, renderExpirationTime);

      shouldUpdate = true;
    } else {
      // In a resume, we'll already have an instance we can reuse.
      shouldUpdate = resumeMountClassInstance(workInProgress, renderExpirationTime);
    }
  } else {
    shouldUpdate = updateClassInstance(current, workInProgress, renderExpirationTime);
  }
  return finishClassComponent(current, workInProgress, shouldUpdate, hasContext, renderExpirationTime);
}

function finishClassComponent(current, workInProgress, shouldUpdate, hasContext, renderExpirationTime) {
  // Refs should update even if shouldComponentUpdate returns false
  markRef(current, workInProgress);

  var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;

  if (!shouldUpdate && !didCaptureError) {
    // Context providers should defer to sCU for rendering
    if (hasContext) {
      invalidateContextProvider(workInProgress, false);
    }

    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }

  var ctor = workInProgress.type;
  var instance = workInProgress.stateNode;

  // Rerender
  ReactCurrentOwner.current = workInProgress;
  var nextChildren = void 0;
  if (didCaptureError && (!enableGetDerivedStateFromCatch || typeof ctor.getDerivedStateFromCatch !== 'function')) {
    // If we captured an error, but getDerivedStateFrom catch is not defined,
    // unmount all the children. componentDidCatch will schedule an update to
    // re-render a fallback. This is temporary until we migrate everyone to
    // the new API.
    // TODO: Warn in a future release.
    nextChildren = null;

    if (enableProfilerTimer) {
      stopBaseRenderTimerIfRunning();
    }
  } else {
    {
      ReactDebugCurrentFiber.setCurrentPhase('render');
      nextChildren = instance.render();
      if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
        instance.render();
      }
      ReactDebugCurrentFiber.setCurrentPhase(null);
    }
  }

  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  if (didCaptureError) {
    // If we're recovering from an error, reconcile twice: first to delete
    // all the existing children.
    reconcileChildrenAtExpirationTime(current, workInProgress, null, renderExpirationTime);
    workInProgress.child = null;
    // Now we can continue reconciling like normal. This has the effect of
    // remounting all children regardless of whether their their
    // identity matches.
  }
  reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime);
  // Memoize props and state using the values we just used to render.
  // TODO: Restructure so we never read values from the instance.
  memoizeState(workInProgress, instance.state);
  memoizeProps(workInProgress, instance.props);

  // The context might have changed so we need to recalculate it.
  if (hasContext) {
    invalidateContextProvider(workInProgress, true);
  }

  return workInProgress.child;
}

function pushHostRootContext(workInProgress) {
  var root = workInProgress.stateNode;
  if (root.pendingContext) {
    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
  } else if (root.context) {
    // Should always be set
    pushTopLevelContextObject(workInProgress, root.context, false);
  }
  pushHostContainer(workInProgress, root.containerInfo);
}

function updateHostRoot(current, workInProgress, renderExpirationTime) {
  pushHostRootContext(workInProgress);
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    var nextProps = workInProgress.pendingProps;
    var prevState = workInProgress.memoizedState;
    var prevChildren = prevState !== null ? prevState.element : null;
    processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);
    var nextState = workInProgress.memoizedState;
    // Caution: React DevTools currently depends on this property
    // being called "element".
    var nextChildren = nextState.element;

    if (nextChildren === prevChildren) {
      // If the state is the same as before, that's a bailout because we had
      // no work that expires at this time.
      resetHydrationState();
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    var root = workInProgress.stateNode;
    if ((current === null || current.child === null) && root.hydrate && enterHydrationState(workInProgress)) {
      // If we don't have any current children this might be the first pass.
      // We always try to hydrate. If this isn't a hydration pass there won't
      // be any children to hydrate which is effectively the same thing as
      // not hydrating.

      // This is a bit of a hack. We track the host root as a placement to
      // know that we're currently in a mounting state. That way isMounted
      // works as expected. We must reset this before committing.
      // TODO: Delete this when we delete isMounted and findDOMNode.
      workInProgress.effectTag |= Placement;

      // Ensure that children mount into this root without tracking
      // side-effects. This ensures that we don't store Placement effects on
      // nodes that will be hydrated.
      workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    } else {
      // Otherwise reset hydration state in case we aborted and resumed another
      // root.
      resetHydrationState();
      reconcileChildren(current, workInProgress, nextChildren);
    }
    return workInProgress.child;
  }
  resetHydrationState();
  // If there is no update queue, that's a bailout because the root has no props.
  return bailoutOnAlreadyFinishedWork(current, workInProgress);
}

function updateHostComponent(current, workInProgress, renderExpirationTime) {
  pushHostContext(workInProgress);

  if (current === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }

  var type = workInProgress.type;
  var memoizedProps = workInProgress.memoizedProps;
  var nextProps = workInProgress.pendingProps;
  var prevProps = current !== null ? current.memoizedProps : null;

  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (memoizedProps === nextProps) {
    var isHidden = workInProgress.mode & AsyncMode && shouldDeprioritizeSubtree(type, nextProps);
    if (isHidden) {
      // Before bailing out, make sure we've deprioritized a hidden component.
      workInProgress.expirationTime = Never;
    }
    if (!isHidden || renderExpirationTime !== Never) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    // If we're rendering a hidden node at hidden priority, don't bailout. The
    // parent is complete, but the children may not be.
  }

  var nextChildren = nextProps.children;
  var isDirectTextChild = shouldSetTextContent(type, nextProps);

  if (isDirectTextChild) {
    // We special case a direct text child of a host node. This is a common
    // case. We won't handle it as a reified child. We will instead handle
    // this in the host environment that also have access to this prop. That
    // avoids allocating another HostText fiber and traversing it.
    nextChildren = null;
  } else if (prevProps && shouldSetTextContent(type, prevProps)) {
    // If we're switching from a direct text child to a normal child, or to
    // empty, we need to schedule the text content to be reset.
    workInProgress.effectTag |= ContentReset;
  }

  markRef(current, workInProgress);

  // Check the host config to see if the children are offscreen/hidden.
  if (renderExpirationTime !== Never && workInProgress.mode & AsyncMode && shouldDeprioritizeSubtree(type, nextProps)) {
    // Down-prioritize the children.
    workInProgress.expirationTime = Never;
    // Bailout and come back to this fiber later.
    workInProgress.memoizedProps = nextProps;
    return null;
  }

  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextProps);
  return workInProgress.child;
}

function updateHostText(current, workInProgress) {
  if (current === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }
  var nextProps = workInProgress.pendingProps;
  memoizeProps(workInProgress, nextProps);
  // Nothing to do here. This is terminal. We'll do the completion step
  // immediately after.
  return null;
}

function mountIndeterminateComponent(current, workInProgress, renderExpirationTime) {
  !(current === null) ? invariant(false, 'An indeterminate component should never have mounted. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  var fn = workInProgress.type;
  var props = workInProgress.pendingProps;
  var unmaskedContext = getUnmaskedContext(workInProgress);
  var context = getMaskedContext(workInProgress, unmaskedContext);

  var value = void 0;

  {
    if (fn.prototype && typeof fn.prototype.render === 'function') {
      var componentName = getComponentName(workInProgress) || 'Unknown';

      if (!didWarnAboutBadClass[componentName]) {
        warning(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
        didWarnAboutBadClass[componentName] = true;
      }
    }

    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
    }

    ReactCurrentOwner.current = workInProgress;
    value = fn(props, context);
  }
  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;

  if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
    var Component = workInProgress.type;

    // Proceed under the assumption that this is a class instance
    workInProgress.tag = ClassComponent;

    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;

    var getDerivedStateFromProps = Component.getDerivedStateFromProps;
    if (typeof getDerivedStateFromProps === 'function') {
      applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, props);
    }

    // Push context providers early to prevent context stack mismatches.
    // During mounting we don't know the child context yet as the instance doesn't exist.
    // We will invalidate the child context in finishClassComponent() right after rendering.
    var hasContext = pushContextProvider(workInProgress);
    adoptClassInstance(workInProgress, value);
    mountClassInstance(workInProgress, renderExpirationTime);
    return finishClassComponent(current, workInProgress, true, hasContext, renderExpirationTime);
  } else {
    // Proceed under the assumption that this is a functional component
    workInProgress.tag = FunctionalComponent;
    {
      var _Component = workInProgress.type;

      if (_Component) {
        !!_Component.childContextTypes ? warning(false, '%s(...): childContextTypes cannot be defined on a functional component.', _Component.displayName || _Component.name || 'Component') : void 0;
      }
      if (workInProgress.ref !== null) {
        var info = '';
        var ownerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName();
        if (ownerName) {
          info += '\n\nCheck the render method of `' + ownerName + '`.';
        }

        var warningKey = ownerName || workInProgress._debugID || '';
        var debugSource = workInProgress._debugSource;
        if (debugSource) {
          warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
        }
        if (!didWarnAboutStatelessRefs[warningKey]) {
          didWarnAboutStatelessRefs[warningKey] = true;
          warning(false, 'Stateless function components cannot be given refs. ' + 'Attempts to access this ref will fail.%s%s', info, ReactDebugCurrentFiber.getCurrentFiberStackAddendum());
        }
      }

      if (typeof fn.getDerivedStateFromProps === 'function') {
        var _componentName = getComponentName(workInProgress) || 'Unknown';

        if (!didWarnAboutGetDerivedStateOnFunctionalComponent[_componentName]) {
          warning(false, '%s: Stateless functional components do not support getDerivedStateFromProps.', _componentName);
          didWarnAboutGetDerivedStateOnFunctionalComponent[_componentName] = true;
        }
      }
    }
    reconcileChildren(current, workInProgress, value);
    memoizeProps(workInProgress, props);
    return workInProgress.child;
  }
}

function updateTimeoutComponent(current, workInProgress, renderExpirationTime) {
  if (enableSuspense) {
    var nextProps = workInProgress.pendingProps;
    var prevProps = workInProgress.memoizedProps;

    var prevDidTimeout = workInProgress.memoizedState;

    // Check if we already attempted to render the normal state. If we did,
    // and we timed out, render the placeholder state.
    var alreadyCaptured = (workInProgress.effectTag & DidCapture) === NoEffect;
    var nextDidTimeout = !alreadyCaptured;

    if (hasContextChanged()) {
      // Normally we can bail out on props equality but if context has changed
      // we don't do the bailout and we have to reuse existing props instead.
    } else if (nextProps === prevProps && nextDidTimeout === prevDidTimeout) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }

    var render = nextProps.children;
    var nextChildren = render(nextDidTimeout);
    workInProgress.memoizedProps = nextProps;
    workInProgress.memoizedState = nextDidTimeout;
    reconcileChildren(current, workInProgress, nextChildren);
    return workInProgress.child;
  } else {
    return null;
  }
}

function updatePortalComponent(current, workInProgress, renderExpirationTime) {
  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
  var nextChildren = workInProgress.pendingProps;
  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (workInProgress.memoizedProps === nextChildren) {
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }

  if (current === null) {
    // Portals are special because we don't append the children during mount
    // but at commit. Therefore we need to track insertions which the normal
    // flow doesn't do during mount. This doesn't happen at the root because
    // the root always starts with a "current" with a null child.
    // TODO: Consider unifying this with how the root works.
    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    memoizeProps(workInProgress, nextChildren);
  } else {
    reconcileChildren(current, workInProgress, nextChildren);
    memoizeProps(workInProgress, nextChildren);
  }
  return workInProgress.child;
}

function propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {
  var fiber = workInProgress.child;
  if (fiber !== null) {
    // Set the return pointer of the child to the work-in-progress fiber.
    fiber.return = workInProgress;
  }
  while (fiber !== null) {
    var nextFiber = void 0;
    // Visit this fiber.
    switch (fiber.tag) {
      case ContextConsumer:
        // Check if the context matches.
        var observedBits = fiber.stateNode | 0;
        if (fiber.type === context && (observedBits & changedBits) !== 0) {
          // Update the expiration time of all the ancestors, including
          // the alternates.
          var node = fiber;
          while (node !== null) {
            var alternate = node.alternate;
            if (node.expirationTime === NoWork || node.expirationTime > renderExpirationTime) {
              node.expirationTime = renderExpirationTime;
              if (alternate !== null && (alternate.expirationTime === NoWork || alternate.expirationTime > renderExpirationTime)) {
                alternate.expirationTime = renderExpirationTime;
              }
            } else if (alternate !== null && (alternate.expirationTime === NoWork || alternate.expirationTime > renderExpirationTime)) {
              alternate.expirationTime = renderExpirationTime;
            } else {
              // Neither alternate was updated, which means the rest of the
              // ancestor path already has sufficient priority.
              break;
            }
            node = node.return;
          }
          // Don't scan deeper than a matching consumer. When we render the
          // consumer, we'll continue scanning from that point. This way the
          // scanning work is time-sliced.
          nextFiber = null;
        } else {
          // Traverse down.
          nextFiber = fiber.child;
        }
        break;
      case ContextProvider:
        // Don't scan deeper if this is a matching provider
        nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
        break;
      default:
        // Traverse down.
        nextFiber = fiber.child;
        break;
    }
    if (nextFiber !== null) {
      // Set the return pointer of the child to the work-in-progress fiber.
      nextFiber.return = fiber;
    } else {
      // No child. Traverse to next sibling.
      nextFiber = fiber;
      while (nextFiber !== null) {
        if (nextFiber === workInProgress) {
          // We're back to the root of this subtree. Exit.
          nextFiber = null;
          break;
        }
        var sibling = nextFiber.sibling;
        if (sibling !== null) {
          // Set the return pointer of the sibling to the work-in-progress fiber.
          sibling.return = nextFiber.return;
          nextFiber = sibling;
          break;
        }
        // No more siblings. Traverse up.
        nextFiber = nextFiber.return;
      }
    }
    fiber = nextFiber;
  }
}

function updateContextProvider(current, workInProgress, renderExpirationTime) {
  var providerType = workInProgress.type;
  var context = providerType._context;

  var newProps = workInProgress.pendingProps;
  var oldProps = workInProgress.memoizedProps;
  var canBailOnProps = true;

  if (hasContextChanged()) {
    canBailOnProps = false;
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (oldProps === newProps) {
    workInProgress.stateNode = 0;
    pushProvider(workInProgress);
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }

  var newValue = newProps.value;
  workInProgress.memoizedProps = newProps;

  {
    var providerPropTypes = workInProgress.type.propTypes;

    if (providerPropTypes) {
      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackAddendum$6);
    }
  }

  var changedBits = void 0;
  if (oldProps === null) {
    // Initial render
    changedBits = MAX_SIGNED_31_BIT_INT;
  } else {
    if (oldProps.value === newProps.value) {
      // No change. Bailout early if children are the same.
      if (oldProps.children === newProps.children && canBailOnProps) {
        workInProgress.stateNode = 0;
        pushProvider(workInProgress);
        return bailoutOnAlreadyFinishedWork(current, workInProgress);
      }
      changedBits = 0;
    } else {
      var oldValue = oldProps.value;
      // Use Object.is to compare the new context value to the old value.
      // Inlined Object.is polyfill.
      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
      if (oldValue === newValue && (oldValue !== 0 || 1 / oldValue === 1 / newValue) || oldValue !== oldValue && newValue !== newValue // eslint-disable-line no-self-compare
      ) {
          // No change. Bailout early if children are the same.
          if (oldProps.children === newProps.children && canBailOnProps) {
            workInProgress.stateNode = 0;
            pushProvider(workInProgress);
            return bailoutOnAlreadyFinishedWork(current, workInProgress);
          }
          changedBits = 0;
        } else {
        changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
        {
          !((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits) ? warning(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;
        }
        changedBits |= 0;

        if (changedBits === 0) {
          // No change. Bailout early if children are the same.
          if (oldProps.children === newProps.children && canBailOnProps) {
            workInProgress.stateNode = 0;
            pushProvider(workInProgress);
            return bailoutOnAlreadyFinishedWork(current, workInProgress);
          }
        } else {
          propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
        }
      }
    }
  }

  workInProgress.stateNode = changedBits;
  pushProvider(workInProgress);

  var newChildren = newProps.children;
  reconcileChildren(current, workInProgress, newChildren);
  return workInProgress.child;
}

function updateContextConsumer(current, workInProgress, renderExpirationTime) {
  var context = workInProgress.type;
  var newProps = workInProgress.pendingProps;
  var oldProps = workInProgress.memoizedProps;

  var newValue = getContextCurrentValue(context);
  var changedBits = getContextChangedBits(context);

  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (changedBits === 0 && oldProps === newProps) {
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }
  workInProgress.memoizedProps = newProps;

  var observedBits = newProps.unstable_observedBits;
  if (observedBits === undefined || observedBits === null) {
    // Subscribe to all changes by default
    observedBits = MAX_SIGNED_31_BIT_INT;
  }
  // Store the observedBits on the fiber's stateNode for quick access.
  workInProgress.stateNode = observedBits;

  if ((changedBits & observedBits) !== 0) {
    // Context change propagation stops at matching consumers, for time-
    // slicing. Continue the propagation here.
    propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
  } else if (oldProps === newProps) {
    // Skip over a memoized parent with a bitmask bailout even
    // if we began working on it because of a deeper matching child.
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }
  // There is no bailout on `children` equality because we expect people
  // to often pass a bound method as a child, but it may reference
  // `this.state` or `this.props` (and thus needs to re-render on `setState`).

  var render = newProps.children;

  {
    !(typeof render === 'function') ? warning(false, 'A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;
  }

  var newChildren = void 0;
  {
    ReactCurrentOwner.current = workInProgress;
    ReactDebugCurrentFiber.setCurrentPhase('render');
    newChildren = render(newValue);
    ReactDebugCurrentFiber.setCurrentPhase(null);
  }

  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current, workInProgress, newChildren);
  return workInProgress.child;
}

/*
  function reuseChildrenEffects(returnFiber : Fiber, firstChild : Fiber) {
    let child = firstChild;
    do {
      // Ensure that the first and last effect of the parent corresponds
      // to the children's first and last effect.
      if (!returnFiber.firstEffect) {
        returnFiber.firstEffect = child.firstEffect;
      }
      if (child.lastEffect) {
        if (returnFiber.lastEffect) {
          returnFiber.lastEffect.nextEffect = child.firstEffect;
        }
        returnFiber.lastEffect = child.lastEffect;
      }
    } while (child = child.sibling);
  }
  */

function bailoutOnAlreadyFinishedWork(current, workInProgress) {
  cancelWorkTimer(workInProgress);

  if (enableProfilerTimer) {
    // Don't update "base" render times for bailouts.
    stopBaseRenderTimerIfRunning();
  }

  // TODO: We should ideally be able to bail out early if the children have no
  // more work to do. However, since we don't have a separation of this
  // Fiber's priority and its children yet - we don't know without doing lots
  // of the same work we do anyway. Once we have that separation we can just
  // bail out here if the children has no more work at this priority level.
  // if (workInProgress.priorityOfChildren <= priorityLevel) {
  //   // If there are side-effects in these children that have not yet been
  //   // committed we need to ensure that they get properly transferred up.
  //   if (current && current.child !== workInProgress.child) {
  //     reuseChildrenEffects(workInProgress, child);
  //   }
  //   return null;
  // }

  cloneChildFibers(current, workInProgress);
  return workInProgress.child;
}

function bailoutOnLowPriority(current, workInProgress) {
  cancelWorkTimer(workInProgress);

  if (enableProfilerTimer) {
    // Don't update "base" render times for bailouts.
    stopBaseRenderTimerIfRunning();
  }

  // TODO: Handle HostComponent tags here as well and call pushHostContext()?
  // See PR 8590 discussion for context
  switch (workInProgress.tag) {
    case HostRoot:
      pushHostRootContext(workInProgress);
      break;
    case ClassComponent:
      pushContextProvider(workInProgress);
      break;
    case HostPortal:
      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
      break;
    case ContextProvider:
      pushProvider(workInProgress);
      break;
  }
  // TODO: What if this is currently in progress?
  // How can that happen? How is this not being cloned?
  return null;
}

// TODO: Delete memoizeProps/State and move to reconcile/bailout instead
function memoizeProps(workInProgress, nextProps) {
  workInProgress.memoizedProps = nextProps;
}

function memoizeState(workInProgress, nextState) {
  workInProgress.memoizedState = nextState;
  // Don't reset the updateQueue, in case there are pending updates. Resetting
  // is handled by processUpdateQueue.
}

function beginWork(current, workInProgress, renderExpirationTime) {
  if (enableProfilerTimer) {
    if (workInProgress.mode & ProfileMode) {
      markActualRenderTimeStarted(workInProgress);
    }
  }

  if (workInProgress.expirationTime === NoWork || workInProgress.expirationTime > renderExpirationTime) {
    return bailoutOnLowPriority(current, workInProgress);
  }

  switch (workInProgress.tag) {
    case IndeterminateComponent:
      return mountIndeterminateComponent(current, workInProgress, renderExpirationTime);
    case FunctionalComponent:
      return updateFunctionalComponent(current, workInProgress);
    case ClassComponent:
      return updateClassComponent(current, workInProgress, renderExpirationTime);
    case HostRoot:
      return updateHostRoot(current, workInProgress, renderExpirationTime);
    case HostComponent:
      return updateHostComponent(current, workInProgress, renderExpirationTime);
    case HostText:
      return updateHostText(current, workInProgress);
    case TimeoutComponent:
      return updateTimeoutComponent(current, workInProgress, renderExpirationTime);
    case HostPortal:
      return updatePortalComponent(current, workInProgress, renderExpirationTime);
    case ForwardRef:
      return updateForwardRef(current, workInProgress);
    case Fragment:
      return updateFragment(current, workInProgress);
    case Mode:
      return updateMode(current, workInProgress);
    case Profiler:
      return updateProfiler(current, workInProgress);
    case ContextProvider:
      return updateContextProvider(current, workInProgress, renderExpirationTime);
    case ContextConsumer:
      return updateContextConsumer(current, workInProgress, renderExpirationTime);
    default:
      invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
  }
}

function markUpdate(workInProgress) {
  // Tag the fiber with an update effect. This turns a Placement into
  // a PlacementAndUpdate.
  workInProgress.effectTag |= Update;
}

function markRef$1(workInProgress) {
  workInProgress.effectTag |= Ref;
}

function appendAllChildren(parent, workInProgress) {
  // We only have the top Fiber that was created but we need recurse down its
  // children to find all the terminal nodes.
  var node = workInProgress.child;
  while (node !== null) {
    if (node.tag === HostComponent || node.tag === HostText) {
      appendInitialChild(parent, node.stateNode);
    } else if (node.tag === HostPortal) {
      // If we have a portal child, then we don't want to traverse
      // down its children. Instead, we'll get insertions from each child in
      // the portal directly.
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === workInProgress) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === workInProgress) {
        return;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

var updateHostContainer = void 0;
var updateHostComponent$1 = void 0;
var updateHostText$1 = void 0;
if (supportsMutation) {
  // Mutation mode

  updateHostContainer = function (workInProgress) {
    // Noop
  };
  updateHostComponent$1 = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext) {
    // TODO: Type this specific to this type of component.
    workInProgress.updateQueue = updatePayload;
    // If the update payload indicates that there is a change or if there
    // is a new ref we mark this as an update. All the work is done in commitWork.
    if (updatePayload) {
      markUpdate(workInProgress);
    }
  };
  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // If the text differs, mark it as an update. All the work in done in commitWork.
    if (oldText !== newText) {
      markUpdate(workInProgress);
    }
  };
} else if (supportsPersistence) {
  // Persistent host tree mode

  // An unfortunate fork of appendAllChildren because we have two different parent types.
  var appendAllChildrenToContainer = function (containerChildSet, workInProgress) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;
    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText) {
        appendChildToContainerChildSet(containerChildSet, node.stateNode);
      } else if (node.tag === HostPortal) {
        // If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) {
        return;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  };
  updateHostContainer = function (workInProgress) {
    var portalOrRoot = workInProgress.stateNode;
    var childrenUnchanged = workInProgress.firstEffect === null;
    if (childrenUnchanged) {
      // No changes, just reuse the existing instance.
    } else {
      var container = portalOrRoot.containerInfo;
      var newChildSet = createContainerChildSet(container);
      // If children might have changed, we have to add them all to the set.
      appendAllChildrenToContainer(newChildSet, workInProgress);
      portalOrRoot.pendingChildren = newChildSet;
      // Schedule an update on the container to swap out the container.
      markUpdate(workInProgress);
      finalizeContainerChildren(container, newChildSet);
    }
  };
  updateHostComponent$1 = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext) {
    // If there are no effects associated with this node, then none of our children had any updates.
    // This guarantees that we can reuse all of them.
    var childrenUnchanged = workInProgress.firstEffect === null;
    var currentInstance = current.stateNode;
    if (childrenUnchanged && updatePayload === null) {
      // No changes, just reuse the existing instance.
      // Note that this might release a previous clone.
      workInProgress.stateNode = currentInstance;
    } else {
      var recyclableInstance = workInProgress.stateNode;
      var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);
      if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {
        markUpdate(workInProgress);
      }
      workInProgress.stateNode = newInstance;
      if (childrenUnchanged) {
        // If there are no other effects in this tree, we need to flag this node as having one.
        // Even though we're not going to use it for anything.
        // Otherwise parents won't know that there are new children to propagate upwards.
        markUpdate(workInProgress);
      } else {
        // If children might have changed, we have to add them all to the set.
        appendAllChildren(newInstance, workInProgress);
      }
    }
  };
  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    if (oldText !== newText) {
      // If the text content differs, we'll create a new text instance for it.
      var rootContainerInstance = getRootHostContainer();
      var currentHostContext = getHostContext();
      workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);
      // We'll have to mark it as having an effect, even though we won't use the effect for anything.
      // This lets the parents know that at least one of their children has changed.
      markUpdate(workInProgress);
    }
  };
} else {
  // No host operations
  updateHostContainer = function (workInProgress) {
    // Noop
  };
  updateHostComponent$1 = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext) {
    // Noop
  };
  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // Noop
  };
}

function completeWork(current, workInProgress, renderExpirationTime) {
  var newProps = workInProgress.pendingProps;

  if (enableProfilerTimer) {
    if (workInProgress.mode & ProfileMode) {
      recordElapsedActualRenderTime(workInProgress);
    }
  }

  switch (workInProgress.tag) {
    case FunctionalComponent:
      return null;
    case ClassComponent:
      {
        // We are leaving this subtree, so pop context if any.
        popContextProvider(workInProgress);
        return null;
      }
    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        var fiberRoot = workInProgress.stateNode;
        if (fiberRoot.pendingContext) {
          fiberRoot.context = fiberRoot.pendingContext;
          fiberRoot.pendingContext = null;
        }
        if (current === null || current.child === null) {
          // If we hydrated, pop so that we can delete any remaining children
          // that weren't hydrated.
          popHydrationState(workInProgress);
          // This resets the hacky state to fix isMounted before committing.
          // TODO: Delete this when we delete isMounted and findDOMNode.
          workInProgress.effectTag &= ~Placement;
        }
        updateHostContainer(workInProgress);
        return null;
      }
    case HostComponent:
      {
        popHostContext(workInProgress);
        var rootContainerInstance = getRootHostContainer();
        var type = workInProgress.type;
        if (current !== null && workInProgress.stateNode != null) {
          // If we have an alternate, that means this is an update and we need to
          // schedule a side-effect to do the updates.
          var oldProps = current.memoizedProps;
          // If we get updated because one of our children updated, we don't
          // have newProps so we'll have to reuse them.
          // TODO: Split the update API as separate for the props vs. children.
          // Even better would be if children weren't special cased at all tho.
          var instance = workInProgress.stateNode;
          var currentHostContext = getHostContext();
          // TODO: Experiencing an error where oldProps is null. Suggests a host
          // component is hitting the resume path. Figure out why. Possibly
          // related to `hidden`.
          var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);

          updateHostComponent$1(current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext);

          if (current.ref !== workInProgress.ref) {
            markRef$1(workInProgress);
          }
        } else {
          if (!newProps) {
            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            // This can happen when we abort work.
            return null;
          }

          var _currentHostContext = getHostContext();
          // TODO: Move createInstance to beginWork and keep it on a context
          // "stack" as the parent. Then append children as we go in beginWork
          // or completeWork depending on we want to add then top->down or
          // bottom->up. Top->down is faster in IE11.
          var wasHydrated = popHydrationState(workInProgress);
          if (wasHydrated) {
            // TODO: Move this and createInstance step into the beginPhase
            // to consolidate.
            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, _currentHostContext)) {
              // If changes to the hydrated node needs to be applied at the
              // commit-phase we mark this as such.
              markUpdate(workInProgress);
            }
          } else {
            var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);

            appendAllChildren(_instance, workInProgress);

            // Certain renderers require commit-time effects for initial mount.
            // (eg DOM renderer supports auto-focus for certain elements).
            // Make sure such renderers get scheduled for later work.
            if (finalizeInitialChildren(_instance, type, newProps, rootContainerInstance, _currentHostContext)) {
              markUpdate(workInProgress);
            }
            workInProgress.stateNode = _instance;
          }

          if (workInProgress.ref !== null) {
            // If there is a ref on a host node we need to schedule a callback
            markRef$1(workInProgress);
          }
        }
        return null;
      }
    case HostText:
      {
        var newText = newProps;
        if (current && workInProgress.stateNode != null) {
          var oldText = current.memoizedProps;
          // If we have an alternate, that means this is an update and we need
          // to schedule a side-effect to do the updates.
          updateHostText$1(current, workInProgress, oldText, newText);
        } else {
          if (typeof newText !== 'string') {
            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            // This can happen when we abort work.
            return null;
          }
          var _rootContainerInstance = getRootHostContainer();
          var _currentHostContext2 = getHostContext();
          var _wasHydrated = popHydrationState(workInProgress);
          if (_wasHydrated) {
            if (prepareToHydrateHostTextInstance(workInProgress)) {
              markUpdate(workInProgress);
            }
          } else {
            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
          }
        }
        return null;
      }
    case ForwardRef:
      return null;
    case TimeoutComponent:
      return null;
    case Fragment:
      return null;
    case Mode:
      return null;
    case Profiler:
      return null;
    case HostPortal:
      popHostContainer(workInProgress);
      updateHostContainer(workInProgress);
      return null;
    case ContextProvider:
      // Pop provider fiber
      popProvider(workInProgress);
      return null;
    case ContextConsumer:
      return null;
    // Error cases
    case IndeterminateComponent:
      invariant(false, 'An indeterminate component should have become determinate before completing. This error is likely caused by a bug in React. Please file an issue.');
    // eslint-disable-next-line no-fallthrough
    default:
      invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
  }
}

// This module is forked in different environments.
// By default, return `true` to log errors to the console.
// Forks can return `false` if this isn't desirable.
function showErrorDialog(capturedError) {
  return true;
}

function logCapturedError(capturedError) {
  var logError = showErrorDialog(capturedError);

  // Allow injected showErrorDialog() to prevent default console.error logging.
  // This enables renderers like ReactNative to better manage redbox behavior.
  if (logError === false) {
    return;
  }

  var error = capturedError.error;
  var suppressLogging = error && error.suppressReactErrorLogging;
  if (suppressLogging) {
    return;
  }

  {
    var componentName = capturedError.componentName,
        componentStack = capturedError.componentStack,
        errorBoundaryName = capturedError.errorBoundaryName,
        errorBoundaryFound = capturedError.errorBoundaryFound,
        willRetry = capturedError.willRetry;


    var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';

    var errorBoundaryMessage = void 0;
    // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.
    if (errorBoundaryFound && errorBoundaryName) {
      if (willRetry) {
        errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');
      } else {
        errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';
      }
    } else {
      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
    }
    var combinedMessage = '' + componentNameMessage + componentStack + '\n\n' + ('' + errorBoundaryMessage);

    // In development, we provide our own message with just the component stack.
    // We don't include the original error message and JS stack because the browser
    // has already printed it. Even if the application swallows the error, it is still
    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
    console.error(combinedMessage);
  }
}

var invokeGuardedCallback$3 = ReactErrorUtils.invokeGuardedCallback;
var hasCaughtError$1 = ReactErrorUtils.hasCaughtError;
var clearCaughtError$1 = ReactErrorUtils.clearCaughtError;


var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
{
  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
}

function logError(boundary, errorInfo) {
  var source = errorInfo.source;
  var stack = errorInfo.stack;
  if (stack === null && source !== null) {
    stack = getStackAddendumByWorkInProgressFiber(source);
  }

  var capturedError = {
    componentName: source !== null ? getComponentName(source) : null,
    componentStack: stack !== null ? stack : '',
    error: errorInfo.value,
    errorBoundary: null,
    errorBoundaryName: null,
    errorBoundaryFound: false,
    willRetry: false
  };

  if (boundary !== null && boundary.tag === ClassComponent) {
    capturedError.errorBoundary = boundary.stateNode;
    capturedError.errorBoundaryName = getComponentName(boundary);
    capturedError.errorBoundaryFound = true;
    capturedError.willRetry = true;
  }

  try {
    logCapturedError(capturedError);
  } catch (e) {
    // Prevent cycle if logCapturedError() throws.
    // A cycle may still occur if logCapturedError renders a component that throws.
    var suppressLogging = e && e.suppressReactErrorLogging;
    if (!suppressLogging) {
      console.error(e);
    }
  }
}

var callComponentWillUnmountWithTimer = function (current, instance) {
  startPhaseTimer(current, 'componentWillUnmount');
  instance.props = current.memoizedProps;
  instance.state = current.memoizedState;
  instance.componentWillUnmount();
  stopPhaseTimer();
};

// Capture errors so they don't interrupt unmounting.
function safelyCallComponentWillUnmount(current, instance) {
  {
    invokeGuardedCallback$3(null, callComponentWillUnmountWithTimer, null, current, instance);
    if (hasCaughtError$1()) {
      var unmountError = clearCaughtError$1();
      captureCommitPhaseError(current, unmountError);
    }
  }
}

function safelyDetachRef(current) {
  var ref = current.ref;
  if (ref !== null) {
    if (typeof ref === 'function') {
      {
        invokeGuardedCallback$3(null, ref, null, null);
        if (hasCaughtError$1()) {
          var refError = clearCaughtError$1();
          captureCommitPhaseError(current, refError);
        }
      }
    } else {
      ref.current = null;
    }
  }
}

function commitBeforeMutationLifeCycles(current, finishedWork) {
  switch (finishedWork.tag) {
    case ClassComponent:
      {
        if (finishedWork.effectTag & Snapshot) {
          if (current !== null) {
            var prevProps = current.memoizedProps;
            var prevState = current.memoizedState;
            startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');
            var instance = finishedWork.stateNode;
            instance.props = finishedWork.memoizedProps;
            instance.state = finishedWork.memoizedState;
            var snapshot = instance.getSnapshotBeforeUpdate(prevProps, prevState);
            {
              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                didWarnSet.add(finishedWork.type);
                warning(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork));
              }
            }
            instance.__reactInternalSnapshotBeforeUpdate = snapshot;
            stopPhaseTimer();
          }
        }
        return;
      }
    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
      // Nothing to do for these component types
      return;
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function commitLifeCycles(finishedRoot, current, finishedWork, currentTime, committedExpirationTime) {
  switch (finishedWork.tag) {
    case ClassComponent:
      {
        var instance = finishedWork.stateNode;
        if (finishedWork.effectTag & Update) {
          if (current === null) {
            startPhaseTimer(finishedWork, 'componentDidMount');
            instance.props = finishedWork.memoizedProps;
            instance.state = finishedWork.memoizedState;
            instance.componentDidMount();
            stopPhaseTimer();
          } else {
            var prevProps = current.memoizedProps;
            var prevState = current.memoizedState;
            startPhaseTimer(finishedWork, 'componentDidUpdate');
            instance.props = finishedWork.memoizedProps;
            instance.state = finishedWork.memoizedState;
            instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
            stopPhaseTimer();
          }
        }
        var updateQueue = finishedWork.updateQueue;
        if (updateQueue !== null) {
          instance.props = finishedWork.memoizedProps;
          instance.state = finishedWork.memoizedState;
          commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);
        }
        return;
      }
    case HostRoot:
      {
        var _updateQueue = finishedWork.updateQueue;
        if (_updateQueue !== null) {
          var _instance = null;
          if (finishedWork.child !== null) {
            switch (finishedWork.child.tag) {
              case HostComponent:
                _instance = getPublicInstance(finishedWork.child.stateNode);
                break;
              case ClassComponent:
                _instance = finishedWork.child.stateNode;
                break;
            }
          }
          commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);
        }
        return;
      }
    case HostComponent:
      {
        var _instance2 = finishedWork.stateNode;

        // Renderers may schedule work to be done after host components are mounted
        // (eg DOM renderer may schedule auto-focus for inputs and form controls).
        // These effects should only be committed when components are first mounted,
        // aka when there is no current/alternate.
        if (current === null && finishedWork.effectTag & Update) {
          var type = finishedWork.type;
          var props = finishedWork.memoizedProps;
          commitMount(_instance2, type, props, finishedWork);
        }

        return;
      }
    case HostText:
      {
        // We have no life-cycles associated with text.
        return;
      }
    case HostPortal:
      {
        // We have no life-cycles associated with portals.
        return;
      }
    case Profiler:
      {
        // We have no life-cycles associated with Profiler.
        return;
      }
    case TimeoutComponent:
      {
        // We have no life-cycles associated with Timeouts.
        return;
      }
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function commitAttachRef(finishedWork) {
  var ref = finishedWork.ref;
  if (ref !== null) {
    var instance = finishedWork.stateNode;
    var instanceToUse = void 0;
    switch (finishedWork.tag) {
      case HostComponent:
        instanceToUse = getPublicInstance(instance);
        break;
      default:
        instanceToUse = instance;
    }
    if (typeof ref === 'function') {
      ref(instanceToUse);
    } else {
      {
        if (!ref.hasOwnProperty('current')) {
          warning(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork), getStackAddendumByWorkInProgressFiber(finishedWork));
        }
      }

      ref.current = instanceToUse;
    }
  }
}

function commitDetachRef(current) {
  var currentRef = current.ref;
  if (currentRef !== null) {
    if (typeof currentRef === 'function') {
      currentRef(null);
    } else {
      currentRef.current = null;
    }
  }
}

// User-originating errors (lifecycles and refs) should not interrupt
// deletion, so don't let them throw. Host-originating errors should
// interrupt deletion, so it's okay
function commitUnmount(current) {
  if (typeof onCommitUnmount === 'function') {
    onCommitUnmount(current);
  }

  switch (current.tag) {
    case ClassComponent:
      {
        safelyDetachRef(current);
        var instance = current.stateNode;
        if (typeof instance.componentWillUnmount === 'function') {
          safelyCallComponentWillUnmount(current, instance);
        }
        return;
      }
    case HostComponent:
      {
        safelyDetachRef(current);
        return;
      }
    case HostPortal:
      {
        // TODO: this is recursive.
        // We are also not using this parent because
        // the portal will get pushed immediately.
        if (supportsMutation) {
          unmountHostComponents(current);
        } else if (supportsPersistence) {
          emptyPortalContainer(current);
        }
        return;
      }
  }
}

function commitNestedUnmounts(root) {
  // While we're inside a removed host node we don't want to call
  // removeChild on the inner nodes because they're removed by the top
  // call anyway. We also want to call componentWillUnmount on all
  // composites before this host node is removed from the tree. Therefore
  var node = root;
  while (true) {
    commitUnmount(node);
    // Visit children because they may contain more composite or host nodes.
    // Skip portals because commitUnmount() currently visits them recursively.
    if (node.child !== null && (
    // If we use mutation we drill down into portals using commitUnmount above.
    // If we don't use mutation we drill down into portals here instead.
    !supportsMutation || node.tag !== HostPortal)) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === root) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === root) {
        return;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function detachFiber(current) {
  // Cut off the return pointers to disconnect it from the tree. Ideally, we
  // should clear the child pointer of the parent alternate to let this
  // get GC:ed but we don't know which for sure which parent is the current
  // one so we'll settle for GC:ing the subtree of this child. This child
  // itself will be GC:ed when the parent updates the next time.
  current.return = null;
  current.child = null;
  if (current.alternate) {
    current.alternate.child = null;
    current.alternate.return = null;
  }
}

function emptyPortalContainer(current) {
  if (!supportsPersistence) {
    return;
  }

  var portal = current.stateNode;
  var containerInfo = portal.containerInfo;

  var emptyChildSet = createContainerChildSet(containerInfo);
  replaceContainerChildren(containerInfo, emptyChildSet);
}

function commitContainer(finishedWork) {
  if (!supportsPersistence) {
    return;
  }

  switch (finishedWork.tag) {
    case ClassComponent:
      {
        return;
      }
    case HostComponent:
      {
        return;
      }
    case HostText:
      {
        return;
      }
    case HostRoot:
    case HostPortal:
      {
        var portalOrRoot = finishedWork.stateNode;
        var containerInfo = portalOrRoot.containerInfo,
            _pendingChildren = portalOrRoot.pendingChildren;

        replaceContainerChildren(containerInfo, _pendingChildren);
        return;
      }
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function getHostParentFiber(fiber) {
  var parent = fiber.return;
  while (parent !== null) {
    if (isHostParent(parent)) {
      return parent;
    }
    parent = parent.return;
  }
  invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');
}

function isHostParent(fiber) {
  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
}

function getHostSibling(fiber) {
  // We're going to search forward into the tree until we find a sibling host
  // node. Unfortunately, if multiple insertions are done in a row we have to
  // search past them. This leads to exponential search for the next sibling.
  var node = fiber;
  siblings: while (true) {
    // If we didn't find anything, let's try the next sibling.
    while (node.sibling === null) {
      if (node.return === null || isHostParent(node.return)) {
        // If we pop out of the root or hit the parent the fiber we are the
        // last sibling.
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
    while (node.tag !== HostComponent && node.tag !== HostText) {
      // If it is not host node and, we might have a host node inside it.
      // Try to search down until we find one.
      if (node.effectTag & Placement) {
        // If we don't have a child, try the siblings instead.
        continue siblings;
      }
      // If we don't have a child, try the siblings instead.
      // We also skip portals because they are not part of this host tree.
      if (node.child === null || node.tag === HostPortal) {
        continue siblings;
      } else {
        node.child.return = node;
        node = node.child;
      }
    }
    // Check if this host node is stable or about to be placed.
    if (!(node.effectTag & Placement)) {
      // Found it!
      return node.stateNode;
    }
  }
}

function commitPlacement(finishedWork) {
  if (!supportsMutation) {
    return;
  }

  // Recursively insert all host nodes into the parent.
  var parentFiber = getHostParentFiber(finishedWork);
  var parent = void 0;
  var isContainer = void 0;
  switch (parentFiber.tag) {
    case HostComponent:
      parent = parentFiber.stateNode;
      isContainer = false;
      break;
    case HostRoot:
      parent = parentFiber.stateNode.containerInfo;
      isContainer = true;
      break;
    case HostPortal:
      parent = parentFiber.stateNode.containerInfo;
      isContainer = true;
      break;
    default:
      invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');
  }
  if (parentFiber.effectTag & ContentReset) {
    // Reset the text content of the parent before doing any insertions
    resetTextContent(parent);
    // Clear ContentReset from the effect tag
    parentFiber.effectTag &= ~ContentReset;
  }

  var before = getHostSibling(finishedWork);
  // We only have the top Fiber that was inserted but we need recurse down its
  // children to find all the terminal nodes.
  var node = finishedWork;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      if (before) {
        if (isContainer) {
          insertInContainerBefore(parent, node.stateNode, before);
        } else {
          insertBefore(parent, node.stateNode, before);
        }
      } else {
        if (isContainer) {
          appendChildToContainer(parent, node.stateNode);
        } else {
          appendChild(parent, node.stateNode);
        }
      }
    } else if (node.tag === HostPortal) {
      // If the insertion itself is a portal, then we don't want to traverse
      // down its children. Instead, we'll get insertions from each child in
      // the portal directly.
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === finishedWork) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === finishedWork) {
        return;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function unmountHostComponents(current) {
  // We only have the top Fiber that was inserted but we need recurse down its
  var node = current;

  // Each iteration, currentParent is populated with node's host parent if not
  // currentParentIsValid.
  var currentParentIsValid = false;
  var currentParent = void 0;
  var currentParentIsContainer = void 0;

  while (true) {
    if (!currentParentIsValid) {
      var parent = node.return;
      findParent: while (true) {
        !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        switch (parent.tag) {
          case HostComponent:
            currentParent = parent.stateNode;
            currentParentIsContainer = false;
            break findParent;
          case HostRoot:
            currentParent = parent.stateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;
          case HostPortal:
            currentParent = parent.stateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;
        }
        parent = parent.return;
      }
      currentParentIsValid = true;
    }

    if (node.tag === HostComponent || node.tag === HostText) {
      commitNestedUnmounts(node);
      // After all the children have unmounted, it is now safe to remove the
      // node from the tree.
      if (currentParentIsContainer) {
        removeChildFromContainer(currentParent, node.stateNode);
      } else {
        removeChild(currentParent, node.stateNode);
      }
      // Don't visit children because we already visited them.
    } else if (node.tag === HostPortal) {
      // When we go into a portal, it becomes the parent to remove from.
      // We will reassign it back when we pop the portal on the way up.
      currentParent = node.stateNode.containerInfo;
      // Visit children because portals might contain host components.
      if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
    } else {
      commitUnmount(node);
      // Visit children because we may find more host components below.
      if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
    }
    if (node === current) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === current) {
        return;
      }
      node = node.return;
      if (node.tag === HostPortal) {
        // When we go out of the portal, we need to restore the parent.
        // Since we don't keep a stack of them, we will search for it.
        currentParentIsValid = false;
      }
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function commitDeletion(current) {
  if (supportsMutation) {
    // Recursively delete all host nodes from the parent.
    // Detach refs and call componentWillUnmount() on the whole subtree.
    unmountHostComponents(current);
  } else {
    // Detach refs and call componentWillUnmount() on the whole subtree.
    commitNestedUnmounts(current);
  }
  detachFiber(current);
}

function commitWork(current, finishedWork) {
  if (!supportsMutation) {
    commitContainer(finishedWork);
    return;
  }

  switch (finishedWork.tag) {
    case ClassComponent:
      {
        return;
      }
    case HostComponent:
      {
        var instance = finishedWork.stateNode;
        if (instance != null) {
          // Commit the work prepared earlier.
          var newProps = finishedWork.memoizedProps;
          // For hydration we reuse the update path but we treat the oldProps
          // as the newProps. The updatePayload will contain the real change in
          // this case.
          var oldProps = current !== null ? current.memoizedProps : newProps;
          var type = finishedWork.type;
          // TODO: Type the updateQueue to be specific to host components.
          var updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;
          if (updatePayload !== null) {
            commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
          }
        }
        return;
      }
    case HostText:
      {
        !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        var textInstance = finishedWork.stateNode;
        var newText = finishedWork.memoizedProps;
        // For hydration we reuse the update path but we treat the oldProps
        // as the newProps. The updatePayload will contain the real change in
        // this case.
        var oldText = current !== null ? current.memoizedProps : newText;
        commitTextUpdate(textInstance, oldText, newText);
        return;
      }
    case HostRoot:
      {
        return;
      }
    case Profiler:
      {
        if (enableProfilerTimer) {
          var onRender = finishedWork.memoizedProps.onRender;
          onRender(finishedWork.memoizedProps.id, current === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseTime, finishedWork.actualStartTime, getCommitTime());
        }
        return;
      }
    case TimeoutComponent:
      {
        return;
      }
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function commitResetTextContent(current) {
  if (!supportsMutation) {
    return;
  }
  resetTextContent(current.stateNode);
}

function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
  var update = createUpdate(expirationTime);
  // Unmount the root by rendering null.
  update.tag = CaptureUpdate;
  // Caution: React DevTools currently depends on this property
  // being called "element".
  update.payload = { element: null };
  var error = errorInfo.value;
  update.callback = function () {
    onUncaughtError(error);
    logError(fiber, errorInfo);
  };
  return update;
}

function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
  var update = createUpdate(expirationTime);
  update.tag = CaptureUpdate;
  var getDerivedStateFromCatch = fiber.type.getDerivedStateFromCatch;
  if (enableGetDerivedStateFromCatch && typeof getDerivedStateFromCatch === 'function') {
    var error = errorInfo.value;
    update.payload = function () {
      return getDerivedStateFromCatch(error);
    };
  }

  var inst = fiber.stateNode;
  if (inst !== null && typeof inst.componentDidCatch === 'function') {
    update.callback = function callback() {
      if (!enableGetDerivedStateFromCatch || getDerivedStateFromCatch !== 'function') {
        // To preserve the preexisting retry behavior of error boundaries,
        // we keep track of which ones already failed during this batch.
        // This gets reset before we yield back to the browser.
        // TODO: Warn in strict mode if getDerivedStateFromCatch is
        // not defined.
        markLegacyErrorBoundaryAsFailed(this);
      }
      var error = errorInfo.value;
      var stack = errorInfo.stack;
      logError(fiber, errorInfo);
      this.componentDidCatch(error, {
        componentStack: stack !== null ? stack : ''
      });
    };
  }
  return update;
}

function schedulePing(finishedWork) {
  // Once the promise resolves, we should try rendering the non-
  // placeholder state again.
  var currentTime = recalculateCurrentTime();
  var expirationTime = computeExpirationForFiber(currentTime, finishedWork);
  var recoveryUpdate = createUpdate(expirationTime);
  enqueueUpdate(finishedWork, recoveryUpdate, expirationTime);
  scheduleWork$1(finishedWork, expirationTime);
}

function throwException(root, returnFiber, sourceFiber, value, renderIsExpired, renderExpirationTime, currentTimeMs) {
  // The source fiber did not complete.
  sourceFiber.effectTag |= Incomplete;
  // Its effect list is no longer valid.
  sourceFiber.firstEffect = sourceFiber.lastEffect = null;

  if (enableSuspense && value !== null && typeof value === 'object' && typeof value.then === 'function') {
    // This is a thenable.
    var thenable = value;

    var expirationTimeMs = expirationTimeToMs(renderExpirationTime);
    var startTimeMs = expirationTimeMs - 5000;
    var elapsedMs = currentTimeMs - startTimeMs;
    if (elapsedMs < 0) {
      elapsedMs = 0;
    }
    var remainingTimeMs = expirationTimeMs - currentTimeMs;

    // Find the earliest timeout of all the timeouts in the ancestor path.
    // TODO: Alternatively, we could store the earliest timeout on the context
    // stack, rather than searching on every suspend.
    var _workInProgress = returnFiber;
    var earliestTimeoutMs = -1;
    searchForEarliestTimeout: do {
      if (_workInProgress.tag === TimeoutComponent) {
        var current = _workInProgress.alternate;
        if (current !== null && current.memoizedState === true) {
          // A parent Timeout already committed in a placeholder state. We
          // need to handle this promise immediately. In other words, we
          // should never suspend inside a tree that already expired.
          earliestTimeoutMs = 0;
          break searchForEarliestTimeout;
        }
        var timeoutPropMs = _workInProgress.pendingProps.ms;
        if (typeof timeoutPropMs === 'number') {
          if (timeoutPropMs <= 0) {
            earliestTimeoutMs = 0;
            break searchForEarliestTimeout;
          } else if (earliestTimeoutMs === -1 || timeoutPropMs < earliestTimeoutMs) {
            earliestTimeoutMs = timeoutPropMs;
          }
        } else if (earliestTimeoutMs === -1) {
          earliestTimeoutMs = remainingTimeMs;
        }
      }
      _workInProgress = _workInProgress.return;
    } while (_workInProgress !== null);

    // Compute the remaining time until the timeout.
    var msUntilTimeout = earliestTimeoutMs - elapsedMs;

    if (renderExpirationTime === Never || msUntilTimeout > 0) {
      // There's still time remaining.
      suspendRoot(root, thenable, msUntilTimeout, renderExpirationTime);
      var onResolveOrReject = function () {
        retrySuspendedRoot(root, renderExpirationTime);
      };
      thenable.then(onResolveOrReject, onResolveOrReject);
      return;
    } else {
      // No time remaining. Need to fallback to placeholder.
      // Find the nearest timeout that can be retried.
      _workInProgress = returnFiber;
      do {
        switch (_workInProgress.tag) {
          case HostRoot:
            {
              // The root expired, but no fallback was provided. Throw a
              // helpful error.
              var message = renderExpirationTime === Sync ? 'A synchronous update was suspended, but no fallback UI ' + 'was provided.' : 'An update was suspended for longer than the timeout, ' + 'but no fallback UI was provided.';
              value = new Error(message);
              break;
            }
          case TimeoutComponent:
            {
              if ((_workInProgress.effectTag & DidCapture) === NoEffect) {
                _workInProgress.effectTag |= ShouldCapture;
                var _onResolveOrReject = schedulePing.bind(null, _workInProgress);
                thenable.then(_onResolveOrReject, _onResolveOrReject);
                return;
              }
              // Already captured during this render. Continue to the next
              // Timeout ancestor.
              break;
            }
        }
        _workInProgress = _workInProgress.return;
      } while (_workInProgress !== null);
    }
  }

  // We didn't find a boundary that could handle this type of exception. Start
  // over and traverse parent path again, this time treating the exception
  // as an error.
  value = createCapturedValue(value, sourceFiber);
  var workInProgress = returnFiber;
  do {
    switch (workInProgress.tag) {
      case HostRoot:
        {
          var _errorInfo = value;
          workInProgress.effectTag |= ShouldCapture;
          var update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);
          enqueueCapturedUpdate(workInProgress, update, renderExpirationTime);
          return;
        }
      case ClassComponent:
        // Capture and retry
        var errorInfo = value;
        var ctor = workInProgress.type;
        var instance = workInProgress.stateNode;
        if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromCatch === 'function' && enableGetDerivedStateFromCatch || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
          workInProgress.effectTag |= ShouldCapture;
          // Schedule the error boundary to re-render using updated state
          var _update = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);
          enqueueCapturedUpdate(workInProgress, _update, renderExpirationTime);
          return;
        }
        break;
      default:
        break;
    }
    workInProgress = workInProgress.return;
  } while (workInProgress !== null);
}

function unwindWork(workInProgress, renderIsExpired, renderExpirationTime) {
  if (enableProfilerTimer) {
    if (workInProgress.mode & ProfileMode) {
      recordElapsedActualRenderTime(workInProgress);
    }
  }

  switch (workInProgress.tag) {
    case ClassComponent:
      {
        popContextProvider(workInProgress);
        var effectTag = workInProgress.effectTag;
        if (effectTag & ShouldCapture) {
          workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;
          return workInProgress;
        }
        return null;
      }
    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        var _effectTag = workInProgress.effectTag;
        if (_effectTag & ShouldCapture) {
          workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;
          return workInProgress;
        }
        return null;
      }
    case HostComponent:
      {
        popHostContext(workInProgress);
        return null;
      }
    case TimeoutComponent:
      {
        var _effectTag2 = workInProgress.effectTag;
        if (_effectTag2 & ShouldCapture) {
          workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture;
          return workInProgress;
        }
        return null;
      }
    case HostPortal:
      popHostContainer(workInProgress);
      return null;
    case ContextProvider:
      popProvider(workInProgress);
      return null;
    default:
      return null;
  }
}

function unwindInterruptedWork(interruptedWork) {
  if (enableProfilerTimer) {
    if (interruptedWork.mode & ProfileMode) {
      // Resume in case we're picking up on work that was paused.
      resumeActualRenderTimerIfPaused();
      recordElapsedActualRenderTime(interruptedWork);
    }
  }

  switch (interruptedWork.tag) {
    case ClassComponent:
      {
        popContextProvider(interruptedWork);
        break;
      }
    case HostRoot:
      {
        popHostContainer(interruptedWork);
        popTopLevelContextObject(interruptedWork);
        break;
      }
    case HostComponent:
      {
        popHostContext(interruptedWork);
        break;
      }
    case HostPortal:
      popHostContainer(interruptedWork);
      break;
    case ContextProvider:
      popProvider(interruptedWork);
      break;
    default:
      break;
  }
}

var invokeGuardedCallback$2 = ReactErrorUtils.invokeGuardedCallback;
var hasCaughtError = ReactErrorUtils.hasCaughtError;
var clearCaughtError = ReactErrorUtils.clearCaughtError;


var didWarnAboutStateTransition = void 0;
var didWarnSetStateChildContext = void 0;
var warnAboutUpdateOnUnmounted = void 0;
var warnAboutInvalidUpdates = void 0;

{
  didWarnAboutStateTransition = false;
  didWarnSetStateChildContext = false;
  var didWarnStateUpdateForUnmountedComponent = {};

  warnAboutUpdateOnUnmounted = function (fiber) {
    // We show the whole stack but dedupe on the top component's name because
    // the problematic code almost always lies inside that component.
    var componentName = getComponentName(fiber) || 'ReactClass';
    if (didWarnStateUpdateForUnmountedComponent[componentName]) {
      return;
    }
    warning(false, "Can't call setState (or forceUpdate) on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in the ' + 'componentWillUnmount method.%s', getStackAddendumByWorkInProgressFiber(fiber));
    didWarnStateUpdateForUnmountedComponent[componentName] = true;
  };

  warnAboutInvalidUpdates = function (instance) {
    switch (ReactDebugCurrentFiber.phase) {
      case 'getChildContext':
        if (didWarnSetStateChildContext) {
          return;
        }
        warning(false, 'setState(...): Cannot call setState() inside getChildContext()');
        didWarnSetStateChildContext = true;
        break;
      case 'render':
        if (didWarnAboutStateTransition) {
          return;
        }
        warning(false, 'Cannot update during an existing state transition (such as within ' + "`render` or another component's constructor). Render methods should " + 'be a pure function of props and state; constructor side-effects are ' + 'an anti-pattern, but can be moved to `componentWillMount`.');
        didWarnAboutStateTransition = true;
        break;
    }
  };
}

// Represents the current time in ms.
var originalStartTimeMs = now();
var mostRecentCurrentTime = msToExpirationTime(0);
var mostRecentCurrentTimeMs = originalStartTimeMs;

// Used to ensure computeUniqueAsyncExpiration is monotonically increases.
var lastUniqueAsyncExpiration = 0;

// Represents the expiration time that incoming updates should use. (If this
// is NoWork, use the default strategy: async updates in async mode, sync
// updates in sync mode.)
var expirationContext = NoWork;

var isWorking = false;

// The next work in progress fiber that we're currently working on.
var nextUnitOfWork = null;
var nextRoot = null;
// The time at which we're currently rendering work.
var nextRenderExpirationTime = NoWork;
var nextLatestTimeoutMs = -1;
var nextRenderIsExpired = false;

// The next fiber with an effect that we're currently committing.
var nextEffect = null;

var isCommitting$1 = false;

var isRootReadyForCommit = false;

var legacyErrorBoundariesThatAlreadyFailed = null;

// Used for performance tracking.
var interruptedBy = null;

var stashedWorkInProgressProperties = void 0;
var replayUnitOfWork = void 0;
var isReplayingFailedUnitOfWork = void 0;
var originalReplayError = void 0;
var rethrowOriginalError = void 0;
if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
  stashedWorkInProgressProperties = null;
  isReplayingFailedUnitOfWork = false;
  originalReplayError = null;
  replayUnitOfWork = function (failedUnitOfWork, thrownValue, isAsync) {
    if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {
      // Don't replay promises. Treat everything else like an error.
      // TODO: Need to figure out a different strategy if/when we add
      // support for catching other types.
      return;
    }

    // Restore the original state of the work-in-progress
    if (stashedWorkInProgressProperties === null) {
      // This should never happen. Don't throw because this code is DEV-only.
      warning(false, 'Could not replay rendering after an error. This is likely a bug in React. ' + 'Please file an issue.');
      return;
    }
    assignFiberPropertiesInDEV(failedUnitOfWork, stashedWorkInProgressProperties);

    switch (failedUnitOfWork.tag) {
      case HostRoot:
        popHostContainer(failedUnitOfWork);
        popTopLevelContextObject(failedUnitOfWork);
        break;
      case HostComponent:
        popHostContext(failedUnitOfWork);
        break;
      case ClassComponent:
        popContextProvider(failedUnitOfWork);
        break;
      case HostPortal:
        popHostContainer(failedUnitOfWork);
        break;
      case ContextProvider:
        popProvider(failedUnitOfWork);
        break;
    }
    // Replay the begin phase.
    isReplayingFailedUnitOfWork = true;
    originalReplayError = thrownValue;
    invokeGuardedCallback$2(null, workLoop, null, isAsync);
    isReplayingFailedUnitOfWork = false;
    originalReplayError = null;
    if (hasCaughtError()) {
      clearCaughtError();

      if (enableProfilerTimer) {
        if (failedUnitOfWork.mode & ProfileMode) {
          recordElapsedActualRenderTime(failedUnitOfWork);
        }

        // Stop "base" render timer again (after the re-thrown error).
        stopBaseRenderTimerIfRunning();
      }
    } else {
      // If the begin phase did not fail the second time, set this pointer
      // back to the original value.
      nextUnitOfWork = failedUnitOfWork;
    }
  };
  rethrowOriginalError = function () {
    throw originalReplayError;
  };
}

function resetStack() {
  if (nextUnitOfWork !== null) {
    var interruptedWork = nextUnitOfWork.return;
    while (interruptedWork !== null) {
      unwindInterruptedWork(interruptedWork);
      interruptedWork = interruptedWork.return;
    }
  }

  {
    ReactStrictModeWarnings.discardPendingWarnings();
    checkThatStackIsEmpty();
  }

  nextRoot = null;
  nextRenderExpirationTime = NoWork;
  nextLatestTimeoutMs = -1;
  nextRenderIsExpired = false;
  nextUnitOfWork = null;

  isRootReadyForCommit = false;
}

function commitAllHostEffects() {
  while (nextEffect !== null) {
    {
      ReactDebugCurrentFiber.setCurrentFiber(nextEffect);
    }
    recordEffect();

    var effectTag = nextEffect.effectTag;

    if (effectTag & ContentReset) {
      commitResetTextContent(nextEffect);
    }

    if (effectTag & Ref) {
      var current = nextEffect.alternate;
      if (current !== null) {
        commitDetachRef(current);
      }
    }

    // The following switch statement is only concerned about placement,
    // updates, and deletions. To avoid needing to add a case for every
    // possible bitmap value, we remove the secondary effects from the
    // effect tag and switch on that value.
    var primaryEffectTag = effectTag & (Placement | Update | Deletion);
    switch (primaryEffectTag) {
      case Placement:
        {
          commitPlacement(nextEffect);
          // Clear the "placement" from effect tag so that we know that this is inserted, before
          // any life-cycles like componentDidMount gets called.
          // TODO: findDOMNode doesn't rely on this any more but isMounted
          // does and isMounted is deprecated anyway so we should be able
          // to kill this.
          nextEffect.effectTag &= ~Placement;
          break;
        }
      case PlacementAndUpdate:
        {
          // Placement
          commitPlacement(nextEffect);
          // Clear the "placement" from effect tag so that we know that this is inserted, before
          // any life-cycles like componentDidMount gets called.
          nextEffect.effectTag &= ~Placement;

          // Update
          var _current = nextEffect.alternate;
          commitWork(_current, nextEffect);
          break;
        }
      case Update:
        {
          var _current2 = nextEffect.alternate;
          commitWork(_current2, nextEffect);
          break;
        }
      case Deletion:
        {
          commitDeletion(nextEffect);
          break;
        }
    }
    nextEffect = nextEffect.nextEffect;
  }

  {
    ReactDebugCurrentFiber.resetCurrentFiber();
  }
}

function commitBeforeMutationLifecycles() {
  while (nextEffect !== null) {
    var effectTag = nextEffect.effectTag;

    if (effectTag & Snapshot) {
      recordEffect();
      var current = nextEffect.alternate;
      commitBeforeMutationLifeCycles(current, nextEffect);
    }

    // Don't cleanup effects yet;
    // This will be done by commitAllLifeCycles()
    nextEffect = nextEffect.nextEffect;
  }
}

function commitAllLifeCycles(finishedRoot, currentTime, committedExpirationTime) {
  {
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();

    if (warnAboutDeprecatedLifecycles) {
      ReactStrictModeWarnings.flushPendingDeprecationWarnings();
    }

    if (warnAboutLegacyContextAPI) {
      ReactStrictModeWarnings.flushLegacyContextWarning();
    }
  }
  while (nextEffect !== null) {
    var effectTag = nextEffect.effectTag;

    if (effectTag & (Update | Callback)) {
      recordEffect();
      var current = nextEffect.alternate;
      commitLifeCycles(finishedRoot, current, nextEffect, currentTime, committedExpirationTime);
    }

    if (effectTag & Ref) {
      recordEffect();
      commitAttachRef(nextEffect);
    }

    var next = nextEffect.nextEffect;
    // Ensure that we clean these up so that we don't accidentally keep them.
    // I'm not actually sure this matters because we can't reset firstEffect
    // and lastEffect since they're on every node, not just the effectful
    // ones. So we have to clean everything as we reuse nodes anyway.
    nextEffect.nextEffect = null;
    // Ensure that we reset the effectTag here so that we can rely on effect
    // tags to reason about the current life-cycle.
    nextEffect = next;
  }
}

function isAlreadyFailedLegacyErrorBoundary(instance) {
  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
}

function markLegacyErrorBoundaryAsFailed(instance) {
  if (legacyErrorBoundariesThatAlreadyFailed === null) {
    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
  } else {
    legacyErrorBoundariesThatAlreadyFailed.add(instance);
  }
}

function commitRoot(finishedWork) {
  isWorking = true;
  isCommitting$1 = true;
  startCommitTimer();

  var root = finishedWork.stateNode;
  !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  var committedExpirationTime = root.pendingCommitExpirationTime;
  !(committedExpirationTime !== NoWork) ? invariant(false, 'Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  root.pendingCommitExpirationTime = NoWork;

  var currentTime = recalculateCurrentTime();

  // Reset this to null before calling lifecycles
  ReactCurrentOwner.current = null;

  var firstEffect = void 0;
  if (finishedWork.effectTag > PerformedWork) {
    // A fiber's effect list consists only of its children, not itself. So if
    // the root has an effect, we need to add it to the end of the list. The
    // resulting list is the set that would belong to the root's parent, if
    // it had one; that is, all the effects in the tree including the root.
    if (finishedWork.lastEffect !== null) {
      finishedWork.lastEffect.nextEffect = finishedWork;
      firstEffect = finishedWork.firstEffect;
    } else {
      firstEffect = finishedWork;
    }
  } else {
    // There is no effect on the root.
    firstEffect = finishedWork.firstEffect;
  }

  prepareForCommit(root.containerInfo);

  // Invoke instances of getSnapshotBeforeUpdate before mutation.
  nextEffect = firstEffect;
  startCommitSnapshotEffectsTimer();
  while (nextEffect !== null) {
    var didError = false;
    var error = void 0;
    {
      invokeGuardedCallback$2(null, commitBeforeMutationLifecycles, null);
      if (hasCaughtError()) {
        didError = true;
        error = clearCaughtError();
      }
    }
    if (didError) {
      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      captureCommitPhaseError(nextEffect, error);
      // Clean-up
      if (nextEffect !== null) {
        nextEffect = nextEffect.nextEffect;
      }
    }
  }
  stopCommitSnapshotEffectsTimer();

  if (enableProfilerTimer) {
    // Mark the current commit time to be shared by all Profilers in this batch.
    // This enables them to be grouped later.
    recordCommitTime();
  }

  // Commit all the side-effects within a tree. We'll do this in two passes.
  // The first pass performs all the host insertions, updates, deletions and
  // ref unmounts.
  nextEffect = firstEffect;
  startCommitHostEffectsTimer();
  while (nextEffect !== null) {
    var _didError = false;
    var _error = void 0;
    {
      invokeGuardedCallback$2(null, commitAllHostEffects, null);
      if (hasCaughtError()) {
        _didError = true;
        _error = clearCaughtError();
      }
    }
    if (_didError) {
      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      captureCommitPhaseError(nextEffect, _error);
      // Clean-up
      if (nextEffect !== null) {
        nextEffect = nextEffect.nextEffect;
      }
    }
  }
  stopCommitHostEffectsTimer();

  resetAfterCommit(root.containerInfo);

  // The work-in-progress tree is now the current tree. This must come after
  // the first pass of the commit phase, so that the previous tree is still
  // current during componentWillUnmount, but before the second pass, so that
  // the finished work is current during componentDidMount/Update.
  root.current = finishedWork;

  // In the second pass we'll perform all life-cycles and ref callbacks.
  // Life-cycles happen as a separate pass so that all placements, updates,
  // and deletions in the entire tree have already been invoked.
  // This pass also triggers any renderer-specific initial effects.
  nextEffect = firstEffect;
  startCommitLifeCyclesTimer();
  while (nextEffect !== null) {
    var _didError2 = false;
    var _error2 = void 0;
    {
      invokeGuardedCallback$2(null, commitAllLifeCycles, null, root, currentTime, committedExpirationTime);
      if (hasCaughtError()) {
        _didError2 = true;
        _error2 = clearCaughtError();
      }
    }
    if (_didError2) {
      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      captureCommitPhaseError(nextEffect, _error2);
      if (nextEffect !== null) {
        nextEffect = nextEffect.nextEffect;
      }
    }
  }

  if (enableProfilerTimer) {
    {
      checkActualRenderTimeStackEmpty();
    }
    resetActualRenderTimer();
  }

  isCommitting$1 = false;
  isWorking = false;
  stopCommitLifeCyclesTimer();
  stopCommitTimer();
  if (typeof onCommitRoot === 'function') {
    onCommitRoot(finishedWork.stateNode);
  }
  if (true && ReactFiberInstrumentation_1.debugTool) {
    ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);
  }

  markCommittedPriorityLevels(root, currentTime, root.current.expirationTime);
  var remainingTime = findNextPendingPriorityLevel(root);
  if (remainingTime === NoWork) {
    // If there's no remaining work, we can clear the set of already failed
    // error boundaries.
    legacyErrorBoundariesThatAlreadyFailed = null;
  }
  return remainingTime;
}

function resetExpirationTime(workInProgress, renderTime) {
  if (renderTime !== Never && workInProgress.expirationTime === Never) {
    // The children of this component are hidden. Don't bubble their
    // expiration times.
    return;
  }

  // Check for pending updates.
  var newExpirationTime = NoWork;
  switch (workInProgress.tag) {
    case HostRoot:
    case ClassComponent:
      {
        var updateQueue = workInProgress.updateQueue;
        if (updateQueue !== null) {
          newExpirationTime = updateQueue.expirationTime;
        }
      }
  }

  // TODO: Calls need to visit stateNode

  // Bubble up the earliest expiration time.
  // (And "base" render timers if that feature flag is enabled)
  if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
    var treeBaseTime = workInProgress.selfBaseTime;
    var child = workInProgress.child;
    while (child !== null) {
      treeBaseTime += child.treeBaseTime;
      if (child.expirationTime !== NoWork && (newExpirationTime === NoWork || newExpirationTime > child.expirationTime)) {
        newExpirationTime = child.expirationTime;
      }
      child = child.sibling;
    }
    workInProgress.treeBaseTime = treeBaseTime;
  } else {
    var _child = workInProgress.child;
    while (_child !== null) {
      if (_child.expirationTime !== NoWork && (newExpirationTime === NoWork || newExpirationTime > _child.expirationTime)) {
        newExpirationTime = _child.expirationTime;
      }
      _child = _child.sibling;
    }
  }

  workInProgress.expirationTime = newExpirationTime;
}

function completeUnitOfWork(workInProgress) {
  // Attempt to complete the current unit of work, then move to the
  // next sibling. If there are no more siblings, return to the
  // parent fiber.
  while (true) {
    // The current, flushed, state of this fiber is the alternate.
    // Ideally nothing should rely on this, but relying on it here
    // means that we don't need an additional field on the work in
    // progress.
    var current = workInProgress.alternate;
    {
      ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
    }

    var returnFiber = workInProgress.return;
    var siblingFiber = workInProgress.sibling;

    if ((workInProgress.effectTag & Incomplete) === NoEffect) {
      // This fiber completed.
      var next = completeWork(current, workInProgress, nextRenderExpirationTime);
      stopWorkTimer(workInProgress);
      resetExpirationTime(workInProgress, nextRenderExpirationTime);
      {
        ReactDebugCurrentFiber.resetCurrentFiber();
      }

      if (next !== null) {
        stopWorkTimer(workInProgress);
        if (true && ReactFiberInstrumentation_1.debugTool) {
          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
        }
        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        return next;
      }

      if (returnFiber !== null &&
      // Do not append effects to parents if a sibling failed to complete
      (returnFiber.effectTag & Incomplete) === NoEffect) {
        // Append all the effects of the subtree and this fiber onto the effect
        // list of the parent. The completion order of the children affects the
        // side-effect order.
        if (returnFiber.firstEffect === null) {
          returnFiber.firstEffect = workInProgress.firstEffect;
        }
        if (workInProgress.lastEffect !== null) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
          }
          returnFiber.lastEffect = workInProgress.lastEffect;
        }

        // If this fiber had side-effects, we append it AFTER the children's
        // side-effects. We can perform certain side-effects earlier if
        // needed, by doing multiple passes over the effect list. We don't want
        // to schedule our own side-effect on our own list because if end up
        // reusing children we'll schedule this effect onto itself since we're
        // at the end.
        var effectTag = workInProgress.effectTag;
        // Skip both NoWork and PerformedWork tags when creating the effect list.
        // PerformedWork effect is read by React DevTools but shouldn't be committed.
        if (effectTag > PerformedWork) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress;
          } else {
            returnFiber.firstEffect = workInProgress;
          }
          returnFiber.lastEffect = workInProgress;
        }
      }

      if (true && ReactFiberInstrumentation_1.debugTool) {
        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
      }

      if (siblingFiber !== null) {
        // If there is more work to do in this returnFiber, do that next.
        return siblingFiber;
      } else if (returnFiber !== null) {
        // If there's no more work in this returnFiber. Complete the returnFiber.
        workInProgress = returnFiber;
        continue;
      } else {
        // We've reached the root.
        isRootReadyForCommit = true;
        return null;
      }
    } else {
      // This fiber did not complete because something threw. Pop values off
      // the stack without entering the complete phase. If this is a boundary,
      // capture values if possible.
      var _next = unwindWork(workInProgress, nextRenderIsExpired, nextRenderExpirationTime);
      // Because this fiber did not complete, don't reset its expiration time.
      if (workInProgress.effectTag & DidCapture) {
        // Restarting an error boundary
        stopFailedWorkTimer(workInProgress);
      } else {
        stopWorkTimer(workInProgress);
      }

      {
        ReactDebugCurrentFiber.resetCurrentFiber();
      }

      if (_next !== null) {
        stopWorkTimer(workInProgress);
        if (true && ReactFiberInstrumentation_1.debugTool) {
          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
        }
        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        // Since we're restarting, remove anything that is not a host effect
        // from the effect tag.
        _next.effectTag &= HostEffectMask;
        return _next;
      }

      if (returnFiber !== null) {
        // Mark the parent fiber as incomplete and clear its effect list.
        returnFiber.firstEffect = returnFiber.lastEffect = null;
        returnFiber.effectTag |= Incomplete;
      }

      if (true && ReactFiberInstrumentation_1.debugTool) {
        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
      }

      if (siblingFiber !== null) {
        // If there is more work to do in this returnFiber, do that next.
        return siblingFiber;
      } else if (returnFiber !== null) {
        // If there's no more work in this returnFiber. Complete the returnFiber.
        workInProgress = returnFiber;
        continue;
      } else {
        return null;
      }
    }
  }

  // Without this explicit null return Flow complains of invalid return type
  // TODO Remove the above while(true) loop
  // eslint-disable-next-line no-unreachable
  return null;
}

function performUnitOfWork(workInProgress) {
  // The current, flushed, state of this fiber is the alternate.
  // Ideally nothing should rely on this, but relying on it here
  // means that we don't need an additional field on the work in
  // progress.
  var current = workInProgress.alternate;

  // See if beginning this work spawns more work.
  startWorkTimer(workInProgress);
  {
    ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
  }

  if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
    stashedWorkInProgressProperties = assignFiberPropertiesInDEV(stashedWorkInProgressProperties, workInProgress);
  }

  var next = void 0;
  if (enableProfilerTimer) {
    if (workInProgress.mode & ProfileMode) {
      startBaseRenderTimer();
    }

    next = beginWork(current, workInProgress, nextRenderExpirationTime);

    if (workInProgress.mode & ProfileMode) {
      // Update "base" time if the render wasn't bailed out on.
      recordElapsedBaseRenderTimeIfRunning(workInProgress);
      stopBaseRenderTimerIfRunning();
    }
  } else {
    next = beginWork(current, workInProgress, nextRenderExpirationTime);
  }

  {
    ReactDebugCurrentFiber.resetCurrentFiber();
    if (isReplayingFailedUnitOfWork) {
      // Currently replaying a failed unit of work. This should be unreachable,
      // because the render phase is meant to be idempotent, and it should
      // have thrown again. Since it didn't, rethrow the original error, so
      // React's internal stack is not misaligned.
      rethrowOriginalError();
    }
  }
  if (true && ReactFiberInstrumentation_1.debugTool) {
    ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
  }

  if (next === null) {
    // If this doesn't spawn new work, complete the current work.
    next = completeUnitOfWork(workInProgress);
  }

  ReactCurrentOwner.current = null;

  return next;
}

function workLoop(isAsync) {
  if (!isAsync) {
    // Flush all expired work.
    while (nextUnitOfWork !== null) {
      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
    }
  } else {
    // Flush asynchronous work until the deadline runs out of time.
    while (nextUnitOfWork !== null && !shouldYield()) {
      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
    }

    if (enableProfilerTimer) {
      // If we didn't finish, pause the "actual" render timer.
      // We'll restart it when we resume work.
      pauseActualRenderTimerIfRunning();
    }
  }
}

function renderRoot(root, expirationTime, isAsync) {
  !!isWorking ? invariant(false, 'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  isWorking = true;

  // Check if we're starting from a fresh stack, or if we're resuming from
  // previously yielded work.
  if (expirationTime !== nextRenderExpirationTime || root !== nextRoot || nextUnitOfWork === null) {
    // Reset the stack and start working from the root.
    resetStack();
    nextRoot = root;
    nextRenderExpirationTime = expirationTime;
    nextLatestTimeoutMs = -1;
    nextUnitOfWork = createWorkInProgress(nextRoot.current, null, nextRenderExpirationTime);
    root.pendingCommitExpirationTime = NoWork;
  }

  var didFatal = false;

  nextRenderIsExpired = !isAsync || nextRenderExpirationTime <= mostRecentCurrentTime;

  startWorkLoopTimer(nextUnitOfWork);

  do {
    try {
      workLoop(isAsync);
    } catch (thrownValue) {
      if (enableProfilerTimer) {
        // Stop "base" render timer in the event of an error.
        stopBaseRenderTimerIfRunning();
      }

      if (nextUnitOfWork === null) {
        // This is a fatal error.
        didFatal = true;
        onUncaughtError(thrownValue);
      } else {
        {
          // Reset global debug state
          // We assume this is defined in DEV
          resetCurrentlyProcessingQueue();
        }

        var failedUnitOfWork = nextUnitOfWork;
        if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
          replayUnitOfWork(failedUnitOfWork, thrownValue, isAsync);
        }

        // TODO: we already know this isn't true in some cases.
        // At least this shows a nicer error message until we figure out the cause.
        // https://github.com/facebook/react/issues/12449#issuecomment-386727431
        !(nextUnitOfWork !== null) ? invariant(false, 'Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.') : void 0;

        var sourceFiber = nextUnitOfWork;
        var returnFiber = sourceFiber.return;
        if (returnFiber === null) {
          // This is the root. The root could capture its own errors. However,
          // we don't know if it errors before or after we pushed the host
          // context. This information is needed to avoid a stack mismatch.
          // Because we're not sure, treat this as a fatal error. We could track
          // which phase it fails in, but doesn't seem worth it. At least
          // for now.
          didFatal = true;
          onUncaughtError(thrownValue);
          break;
        }
        throwException(root, returnFiber, sourceFiber, thrownValue, nextRenderIsExpired, nextRenderExpirationTime, mostRecentCurrentTimeMs);
        nextUnitOfWork = completeUnitOfWork(sourceFiber);
      }
    }
    break;
  } while (true);

  // We're done performing work. Time to clean up.
  var didCompleteRoot = false;
  isWorking = false;

  // Yield back to main thread.
  if (didFatal) {
    stopWorkLoopTimer(interruptedBy, didCompleteRoot);
    interruptedBy = null;
    // There was a fatal error.
    {
      resetStackAfterFatalErrorInDev();
    }
    return null;
  } else if (nextUnitOfWork === null) {
    // We reached the root.
    if (isRootReadyForCommit) {
      didCompleteRoot = true;
      stopWorkLoopTimer(interruptedBy, didCompleteRoot);
      interruptedBy = null;
      // The root successfully completed. It's ready for commit.
      root.pendingCommitExpirationTime = expirationTime;
      var finishedWork = root.current.alternate;
      return finishedWork;
    } else {
      // The root did not complete.
      stopWorkLoopTimer(interruptedBy, didCompleteRoot);
      interruptedBy = null;
      !!nextRenderIsExpired ? invariant(false, 'Expired work should have completed. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      markSuspendedPriorityLevel(root, expirationTime);
      if (nextLatestTimeoutMs >= 0) {
        setTimeout(function () {
          retrySuspendedRoot(root, expirationTime);
        }, nextLatestTimeoutMs);
      }
      var firstUnblockedExpirationTime = findNextPendingPriorityLevel(root);
      onBlock(firstUnblockedExpirationTime);
      return null;
    }
  } else {
    stopWorkLoopTimer(interruptedBy, didCompleteRoot);
    interruptedBy = null;
    // There's more work to do, but we ran out of time. Yield back to
    // the renderer.
    return null;
  }
}

function dispatch(sourceFiber, value, expirationTime) {
  !(!isWorking || isCommitting$1) ? invariant(false, 'dispatch: Cannot dispatch during the render phase.') : void 0;

  var fiber = sourceFiber.return;
  while (fiber !== null) {
    switch (fiber.tag) {
      case ClassComponent:
        var ctor = fiber.type;
        var instance = fiber.stateNode;
        if (typeof ctor.getDerivedStateFromCatch === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
          var errorInfo = createCapturedValue(value, sourceFiber);
          var update = createClassErrorUpdate(fiber, errorInfo, expirationTime);
          enqueueUpdate(fiber, update, expirationTime);
          scheduleWork$1(fiber, expirationTime);
          return;
        }
        break;
      case HostRoot:
        {
          var _errorInfo = createCapturedValue(value, sourceFiber);
          var _update = createRootErrorUpdate(fiber, _errorInfo, expirationTime);
          enqueueUpdate(fiber, _update, expirationTime);
          scheduleWork$1(fiber, expirationTime);
          return;
        }
    }
    fiber = fiber.return;
  }

  if (sourceFiber.tag === HostRoot) {
    // Error was thrown at the root. There is no parent, so the root
    // itself should capture it.
    var rootFiber = sourceFiber;
    var _errorInfo2 = createCapturedValue(value, rootFiber);
    var _update2 = createRootErrorUpdate(rootFiber, _errorInfo2, expirationTime);
    enqueueUpdate(rootFiber, _update2, expirationTime);
    scheduleWork$1(rootFiber, expirationTime);
  }
}

function captureCommitPhaseError(fiber, error) {
  return dispatch(fiber, error, Sync);
}

function computeAsyncExpiration(currentTime) {
  // Given the current clock time, returns an expiration time. We use rounding
  // to batch like updates together.
  // Should complete within ~5000ms. 5250ms max.
  var expirationMs = 5000;
  var bucketSizeMs = 250;
  return computeExpirationBucket(currentTime, expirationMs, bucketSizeMs);
}

function computeInteractiveExpiration(currentTime) {
  var expirationMs = void 0;
  // We intentionally set a higher expiration time for interactive updates in
  // dev than in production.
  // If the main thread is being blocked so long that you hit the expiration,
  // it's a problem that could be solved with better scheduling.
  // People will be more likely to notice this and fix it with the long
  // expiration time in development.
  // In production we opt for better UX at the risk of masking scheduling
  // problems, by expiring fast.
  {
    // Should complete within ~500ms. 600ms max.
    expirationMs = 500;
  }
  var bucketSizeMs = 100;
  return computeExpirationBucket(currentTime, expirationMs, bucketSizeMs);
}

// Creates a unique async expiration time.
function computeUniqueAsyncExpiration() {
  var currentTime = recalculateCurrentTime();
  var result = computeAsyncExpiration(currentTime);
  if (result <= lastUniqueAsyncExpiration) {
    // Since we assume the current time monotonically increases, we only hit
    // this branch when computeUniqueAsyncExpiration is fired multiple times
    // within a 200ms window (or whatever the async bucket size is).
    result = lastUniqueAsyncExpiration + 1;
  }
  lastUniqueAsyncExpiration = result;
  return lastUniqueAsyncExpiration;
}

function computeExpirationForFiber(currentTime, fiber) {
  var expirationTime = void 0;
  if (expirationContext !== NoWork) {
    // An explicit expiration context was set;
    expirationTime = expirationContext;
  } else if (isWorking) {
    if (isCommitting$1) {
      // Updates that occur during the commit phase should have sync priority
      // by default.
      expirationTime = Sync;
    } else {
      // Updates during the render phase should expire at the same time as
      // the work that is being rendered.
      expirationTime = nextRenderExpirationTime;
    }
  } else {
    // No explicit expiration context was set, and we're not currently
    // performing work. Calculate a new expiration time.
    if (fiber.mode & AsyncMode) {
      if (isBatchingInteractiveUpdates) {
        // This is an interactive update
        expirationTime = computeInteractiveExpiration(currentTime);
      } else {
        // This is an async update
        expirationTime = computeAsyncExpiration(currentTime);
      }
    } else {
      // This is a sync update
      expirationTime = Sync;
    }
  }
  if (isBatchingInteractiveUpdates) {
    // This is an interactive update. Keep track of the lowest pending
    // interactive expiration time. This allows us to synchronously flush
    // all interactive updates when needed.
    if (lowestPendingInteractiveExpirationTime === NoWork || expirationTime > lowestPendingInteractiveExpirationTime) {
      lowestPendingInteractiveExpirationTime = expirationTime;
    }
  }
  return expirationTime;
}

// TODO: Rename this to scheduleTimeout or something
function suspendRoot(root, thenable, timeoutMs, suspendedTime) {
  // Schedule the timeout.
  if (timeoutMs >= 0 && nextLatestTimeoutMs < timeoutMs) {
    nextLatestTimeoutMs = timeoutMs;
  }
}

function retrySuspendedRoot(root, suspendedTime) {
  markPingedPriorityLevel(root, suspendedTime);
  var retryTime = findNextPendingPriorityLevel(root);
  if (retryTime !== NoWork) {
    requestRetry(root, retryTime);
  }
}

function scheduleWork$1(fiber, expirationTime) {
  recordScheduleUpdate();

  {
    if (fiber.tag === ClassComponent) {
      var instance = fiber.stateNode;
      warnAboutInvalidUpdates(instance);
    }
  }

  var node = fiber;
  while (node !== null) {
    // Walk the parent path to the root and update each node's
    // expiration time.
    if (node.expirationTime === NoWork || node.expirationTime > expirationTime) {
      node.expirationTime = expirationTime;
    }
    if (node.alternate !== null) {
      if (node.alternate.expirationTime === NoWork || node.alternate.expirationTime > expirationTime) {
        node.alternate.expirationTime = expirationTime;
      }
    }
    if (node.return === null) {
      if (node.tag === HostRoot) {
        var root = node.stateNode;
        if (!isWorking && nextRenderExpirationTime !== NoWork && expirationTime < nextRenderExpirationTime) {
          // This is an interruption. (Used for performance tracking.)
          interruptedBy = fiber;
          resetStack();
        }
        markPendingPriorityLevel(root, expirationTime);
        var nextExpirationTimeToWorkOn = findNextPendingPriorityLevel(root);
        if (
        // If we're in the render phase, we don't need to schedule this root
        // for an update, because we'll do it before we exit...
        !isWorking || isCommitting$1 ||
        // ...unless this is a different root than the one we're rendering.
        nextRoot !== root) {
          requestWork(root, nextExpirationTimeToWorkOn);
        }
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
          invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');
        }
      } else {
        {
          if (fiber.tag === ClassComponent) {
            warnAboutUpdateOnUnmounted(fiber);
          }
        }
        return;
      }
    }
    node = node.return;
  }
}

function recalculateCurrentTime() {
  // Subtract initial time so it fits inside 32bits
  mostRecentCurrentTimeMs = now() - originalStartTimeMs;
  mostRecentCurrentTime = msToExpirationTime(mostRecentCurrentTimeMs);
  return mostRecentCurrentTime;
}

function deferredUpdates(fn) {
  var previousExpirationContext = expirationContext;
  var currentTime = recalculateCurrentTime();
  expirationContext = computeAsyncExpiration(currentTime);
  try {
    return fn();
  } finally {
    expirationContext = previousExpirationContext;
  }
}
function syncUpdates(fn, a, b, c, d) {
  var previousExpirationContext = expirationContext;
  expirationContext = Sync;
  try {
    return fn(a, b, c, d);
  } finally {
    expirationContext = previousExpirationContext;
  }
}

// TODO: Everything below this is written as if it has been lifted to the
// renderers. I'll do this in a follow-up.

// Linked-list of roots
var firstScheduledRoot = null;
var lastScheduledRoot = null;

var callbackExpirationTime = NoWork;
var callbackID = void 0;
var isRendering = false;
var nextFlushedRoot = null;
var nextFlushedExpirationTime = NoWork;
var lowestPendingInteractiveExpirationTime = NoWork;
var deadlineDidExpire = false;
var hasUnhandledError = false;
var unhandledError = null;
var deadline = null;

var isBatchingUpdates = false;
var isUnbatchingUpdates = false;
var isBatchingInteractiveUpdates = false;

var completedBatches = null;

// Use these to prevent an infinite loop of nested updates
var NESTED_UPDATE_LIMIT = 1000;
var nestedUpdateCount = 0;

var timeHeuristicForUnitOfWork = 1;

function scheduleCallbackWithExpiration(expirationTime) {
  if (callbackExpirationTime !== NoWork) {
    // A callback is already scheduled. Check its expiration time (timeout).
    if (expirationTime > callbackExpirationTime) {
      // Existing callback has sufficient timeout. Exit.
      return;
    } else {
      if (callbackID !== null) {
        // Existing callback has insufficient timeout. Cancel and schedule a
        // new one.
        cancelDeferredCallback(callbackID);
      }
    }
    // The request callback timer is already running. Don't start a new one.
  } else {
    startRequestCallbackTimer();
  }

  // Compute a timeout for the given expiration time.
  var currentMs = now() - originalStartTimeMs;
  var expirationMs = expirationTimeToMs(expirationTime);
  var timeout = expirationMs - currentMs;

  callbackExpirationTime = expirationTime;
  callbackID = scheduleDeferredCallback(performAsyncWork, { timeout: timeout });
}

function requestRetry(root, expirationTime) {
  if (root.remainingExpirationTime === NoWork || root.remainingExpirationTime < expirationTime) {
    // For a retry, only update the remaining expiration time if it has a
    // *lower priority* than the existing value. This is because, on a retry,
    // we should attempt to coalesce as much as possible.
    requestWork(root, expirationTime);
  }
}

// requestWork is called by the scheduler whenever a root receives an update.
// It's up to the renderer to call renderRoot at some point in the future.
function requestWork(root, expirationTime) {
  addRootToSchedule(root, expirationTime);

  if (isRendering) {
    // Prevent reentrancy. Remaining work will be scheduled at the end of
    // the currently rendering batch.
    return;
  }

  if (isBatchingUpdates) {
    // Flush work at the end of the batch.
    if (isUnbatchingUpdates) {
      // ...unless we're inside unbatchedUpdates, in which case we should
      // flush it now.
      nextFlushedRoot = root;
      nextFlushedExpirationTime = Sync;
      performWorkOnRoot(root, Sync, false);
    }
    return;
  }

  // TODO: Get rid of Sync and use current time?
  if (expirationTime === Sync) {
    performSyncWork();
  } else {
    scheduleCallbackWithExpiration(expirationTime);
  }
}

function addRootToSchedule(root, expirationTime) {
  // Add the root to the schedule.
  // Check if this root is already part of the schedule.
  if (root.nextScheduledRoot === null) {
    // This root is not already scheduled. Add it.
    root.remainingExpirationTime = expirationTime;
    if (lastScheduledRoot === null) {
      firstScheduledRoot = lastScheduledRoot = root;
      root.nextScheduledRoot = root;
    } else {
      lastScheduledRoot.nextScheduledRoot = root;
      lastScheduledRoot = root;
      lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
    }
  } else {
    // This root is already scheduled, but its priority may have increased.
    var remainingExpirationTime = root.remainingExpirationTime;
    if (remainingExpirationTime === NoWork || expirationTime < remainingExpirationTime) {
      // Update the priority.
      root.remainingExpirationTime = expirationTime;
    }
  }
}

function findHighestPriorityRoot() {
  var highestPriorityWork = NoWork;
  var highestPriorityRoot = null;
  if (lastScheduledRoot !== null) {
    var previousScheduledRoot = lastScheduledRoot;
    var root = firstScheduledRoot;
    while (root !== null) {
      var remainingExpirationTime = root.remainingExpirationTime;
      if (remainingExpirationTime === NoWork) {
        // This root no longer has work. Remove it from the scheduler.

        // TODO: This check is redudant, but Flow is confused by the branch
        // below where we set lastScheduledRoot to null, even though we break
        // from the loop right after.
        !(previousScheduledRoot !== null && lastScheduledRoot !== null) ? invariant(false, 'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        if (root === root.nextScheduledRoot) {
          // This is the only root in the list.
          root.nextScheduledRoot = null;
          firstScheduledRoot = lastScheduledRoot = null;
          break;
        } else if (root === firstScheduledRoot) {
          // This is the first root in the list.
          var next = root.nextScheduledRoot;
          firstScheduledRoot = next;
          lastScheduledRoot.nextScheduledRoot = next;
          root.nextScheduledRoot = null;
        } else if (root === lastScheduledRoot) {
          // This is the last root in the list.
          lastScheduledRoot = previousScheduledRoot;
          lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
          root.nextScheduledRoot = null;
          break;
        } else {
          previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;
          root.nextScheduledRoot = null;
        }
        root = previousScheduledRoot.nextScheduledRoot;
      } else {
        if (highestPriorityWork === NoWork || remainingExpirationTime < highestPriorityWork) {
          // Update the priority, if it's higher
          highestPriorityWork = remainingExpirationTime;
          highestPriorityRoot = root;
        }
        if (root === lastScheduledRoot) {
          break;
        }
        previousScheduledRoot = root;
        root = root.nextScheduledRoot;
      }
    }
  }

  // If the next root is the same as the previous root, this is a nested
  // update. To prevent an infinite loop, increment the nested update count.
  var previousFlushedRoot = nextFlushedRoot;
  if (previousFlushedRoot !== null && previousFlushedRoot === highestPriorityRoot && highestPriorityWork === Sync) {
    nestedUpdateCount++;
  } else {
    // Reset whenever we switch roots.
    nestedUpdateCount = 0;
  }
  nextFlushedRoot = highestPriorityRoot;
  nextFlushedExpirationTime = highestPriorityWork;
}

function performAsyncWork(dl) {
  performWork(NoWork, true, dl);
}

function performSyncWork() {
  performWork(Sync, false, null);
}

function performWork(minExpirationTime, isAsync, dl) {
  deadline = dl;

  // Keep working on roots until there's no more work, or until the we reach
  // the deadline.
  findHighestPriorityRoot();

  if (enableProfilerTimer) {
    resumeActualRenderTimerIfPaused();
  }

  if (enableUserTimingAPI && deadline !== null) {
    var didExpire = nextFlushedExpirationTime < recalculateCurrentTime();
    var timeout = expirationTimeToMs(nextFlushedExpirationTime);
    stopRequestCallbackTimer(didExpire, timeout);
  }

  if (isAsync) {
    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && (minExpirationTime === NoWork || minExpirationTime >= nextFlushedExpirationTime) && (!deadlineDidExpire || recalculateCurrentTime() >= nextFlushedExpirationTime)) {
      recalculateCurrentTime();
      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, !deadlineDidExpire);
      findHighestPriorityRoot();
    }
  } else {
    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && (minExpirationTime === NoWork || minExpirationTime >= nextFlushedExpirationTime)) {
      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, false);
      findHighestPriorityRoot();
    }
  }

  // We're done flushing work. Either we ran out of time in this callback,
  // or there's no more work left with sufficient priority.

  // If we're inside a callback, set this to false since we just completed it.
  if (deadline !== null) {
    callbackExpirationTime = NoWork;
    callbackID = null;
  }
  // If there's work left over, schedule a new callback.
  if (nextFlushedExpirationTime !== NoWork) {
    scheduleCallbackWithExpiration(nextFlushedExpirationTime);
  }

  // Clean-up.
  deadline = null;
  deadlineDidExpire = false;

  finishRendering();
}

function flushRoot(root, expirationTime) {
  !!isRendering ? invariant(false, 'work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.') : void 0;
  // Perform work on root as if the given expiration time is the current time.
  // This has the effect of synchronously flushing all work up to and
  // including the given time.
  nextFlushedRoot = root;
  nextFlushedExpirationTime = expirationTime;
  performWorkOnRoot(root, expirationTime, false);
  // Flush any sync work that was scheduled by lifecycles
  performSyncWork();
  finishRendering();
}

function finishRendering() {
  nestedUpdateCount = 0;

  if (completedBatches !== null) {
    var batches = completedBatches;
    completedBatches = null;
    for (var i = 0; i < batches.length; i++) {
      var batch = batches[i];
      try {
        batch._onComplete();
      } catch (error) {
        if (!hasUnhandledError) {
          hasUnhandledError = true;
          unhandledError = error;
        }
      }
    }
  }

  if (hasUnhandledError) {
    var error = unhandledError;
    unhandledError = null;
    hasUnhandledError = false;
    throw error;
  }
}

function performWorkOnRoot(root, expirationTime, isAsync) {
  !!isRendering ? invariant(false, 'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  isRendering = true;

  // Check if this is async work or sync/expired work.
  if (!isAsync) {
    // Flush sync work.
    var finishedWork = root.finishedWork;
    if (finishedWork !== null) {
      // This root is already complete. We can commit it.
      completeRoot(root, finishedWork, expirationTime);
    } else {
      finishedWork = renderRoot(root, expirationTime, false);
      if (finishedWork !== null) {
        // We've completed the root. Commit it.
        completeRoot(root, finishedWork, expirationTime);
      }
    }
  } else {
    // Flush async work.
    var _finishedWork = root.finishedWork;
    if (_finishedWork !== null) {
      // This root is already complete. We can commit it.
      completeRoot(root, _finishedWork, expirationTime);
    } else {
      _finishedWork = renderRoot(root, expirationTime, true);
      if (_finishedWork !== null) {
        // We've completed the root. Check the deadline one more time
        // before committing.
        if (!shouldYield()) {
          // Still time left. Commit the root.
          completeRoot(root, _finishedWork, expirationTime);
        } else {
          // There's no time left. Mark this root as complete. We'll come
          // back and commit it later.
          root.finishedWork = _finishedWork;

          if (enableProfilerTimer) {
            // If we didn't finish, pause the "actual" render timer.
            // We'll restart it when we resume work.
            pauseActualRenderTimerIfRunning();
          }
        }
      }
    }
  }

  isRendering = false;
}

function completeRoot(root, finishedWork, expirationTime) {
  // Check if there's a batch that matches this expiration time.
  var firstBatch = root.firstBatch;
  if (firstBatch !== null && firstBatch._expirationTime <= expirationTime) {
    if (completedBatches === null) {
      completedBatches = [firstBatch];
    } else {
      completedBatches.push(firstBatch);
    }
    if (firstBatch._defer) {
      // This root is blocked from committing by a batch. Unschedule it until
      // we receive another update.
      root.finishedWork = finishedWork;
      root.remainingExpirationTime = NoWork;
      return;
    }
  }

  // Commit the root.
  root.finishedWork = null;
  root.remainingExpirationTime = commitRoot(finishedWork);
}

// When working on async work, the reconciler asks the renderer if it should
// yield execution. For DOM, we implement this with requestIdleCallback.
function shouldYield() {
  if (deadline === null) {
    return false;
  }
  if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
    // Disregard deadline.didTimeout. Only expired work should be flushed
    // during a timeout. This path is only hit for non-expired work.
    return false;
  }
  deadlineDidExpire = true;
  return true;
}

function onUncaughtError(error) {
  !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  // Unschedule this root so we don't work on it again until there's
  // another update.
  nextFlushedRoot.remainingExpirationTime = NoWork;
  if (!hasUnhandledError) {
    hasUnhandledError = true;
    unhandledError = error;
  }
}

function onBlock(remainingExpirationTime) {
  !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  // This root was blocked. Unschedule it until there's another update.
  nextFlushedRoot.remainingExpirationTime = remainingExpirationTime;
}

// TODO: Batching should be implemented at the renderer level, not inside
// the reconciler.
function batchedUpdates$1(fn, a) {
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingUpdates = true;
  try {
    return fn(a);
  } finally {
    isBatchingUpdates = previousIsBatchingUpdates;
    if (!isBatchingUpdates && !isRendering) {
      performSyncWork();
    }
  }
}

// TODO: Batching should be implemented at the renderer level, not inside
// the reconciler.
function unbatchedUpdates(fn, a) {
  if (isBatchingUpdates && !isUnbatchingUpdates) {
    isUnbatchingUpdates = true;
    try {
      return fn(a);
    } finally {
      isUnbatchingUpdates = false;
    }
  }
  return fn(a);
}

// TODO: Batching should be implemented at the renderer level, not within
// the reconciler.
function flushSync(fn, a) {
  !!isRendering ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingUpdates = true;
  try {
    return syncUpdates(fn, a);
  } finally {
    isBatchingUpdates = previousIsBatchingUpdates;
    performSyncWork();
  }
}

function interactiveUpdates$1(fn, a, b) {
  if (isBatchingInteractiveUpdates) {
    return fn(a, b);
  }
  // If there are any pending interactive updates, synchronously flush them.
  // This needs to happen before we read any handlers, because the effect of
  // the previous event may influence which handlers are called during
  // this event.
  if (!isBatchingUpdates && !isRendering && lowestPendingInteractiveExpirationTime !== NoWork) {
    // Synchronously flush pending interactive updates.
    performWork(lowestPendingInteractiveExpirationTime, false, null);
    lowestPendingInteractiveExpirationTime = NoWork;
  }
  var previousIsBatchingInteractiveUpdates = isBatchingInteractiveUpdates;
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingInteractiveUpdates = true;
  isBatchingUpdates = true;
  try {
    return fn(a, b);
  } finally {
    isBatchingInteractiveUpdates = previousIsBatchingInteractiveUpdates;
    isBatchingUpdates = previousIsBatchingUpdates;
    if (!isBatchingUpdates && !isRendering) {
      performSyncWork();
    }
  }
}

function flushInteractiveUpdates$1() {
  if (!isRendering && lowestPendingInteractiveExpirationTime !== NoWork) {
    // Synchronously flush pending interactive updates.
    performWork(lowestPendingInteractiveExpirationTime, false, null);
    lowestPendingInteractiveExpirationTime = NoWork;
  }
}

function flushControlled(fn) {
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingUpdates = true;
  try {
    syncUpdates(fn);
  } finally {
    isBatchingUpdates = previousIsBatchingUpdates;
    if (!isBatchingUpdates && !isRendering) {
      performWork(Sync, false, null);
    }
  }
}

// 0 is PROD, 1 is DEV.
// Might add PROFILE later.


var didWarnAboutNestedUpdates = void 0;

{
  didWarnAboutNestedUpdates = false;
}

function getContextForSubtree(parentComponent) {
  if (!parentComponent) {
    return emptyObject;
  }

  var fiber = get(parentComponent);
  var parentContext = findCurrentUnmaskedContext(fiber);
  return isContextProvider(fiber) ? processChildContext(fiber, parentContext) : parentContext;
}

function scheduleRootUpdate(current, element, expirationTime, callback) {
  {
    if (ReactDebugCurrentFiber.phase === 'render' && ReactDebugCurrentFiber.current !== null && !didWarnAboutNestedUpdates) {
      didWarnAboutNestedUpdates = true;
      warning(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(ReactDebugCurrentFiber.current) || 'Unknown');
    }
  }

  var update = createUpdate(expirationTime);
  // Caution: React DevTools currently depends on this property
  // being called "element".
  update.payload = { element: element };

  callback = callback === undefined ? null : callback;
  if (callback !== null) {
    !(typeof callback === 'function') ? warning(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;
    update.callback = callback;
  }
  enqueueUpdate(current, update, expirationTime);

  scheduleWork$1(current, expirationTime);
  return expirationTime;
}

function updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback) {
  // TODO: If this is a nested container, this won't be the root.
  var current = container.current;

  {
    if (ReactFiberInstrumentation_1.debugTool) {
      if (current.alternate === null) {
        ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
      } else if (element === null) {
        ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
      } else {
        ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
      }
    }
  }

  var context = getContextForSubtree(parentComponent);
  if (container.context === null) {
    container.context = context;
  } else {
    container.pendingContext = context;
  }

  return scheduleRootUpdate(current, element, expirationTime, callback);
}

function findHostInstance(component) {
  var fiber = get(component);
  if (fiber === undefined) {
    if (typeof component.render === 'function') {
      invariant(false, 'Unable to find node on an unmounted component.');
    } else {
      invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));
    }
  }
  var hostFiber = findCurrentHostFiber(fiber);
  if (hostFiber === null) {
    return null;
  }
  return hostFiber.stateNode;
}

function createContainer(containerInfo, isAsync, hydrate) {
  return createFiberRoot(containerInfo, isAsync, hydrate);
}

function updateContainer(element, container, parentComponent, callback) {
  var current = container.current;
  var currentTime = recalculateCurrentTime();
  var expirationTime = computeExpirationForFiber(currentTime, current);
  return updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback);
}

function getPublicRootInstance(container) {
  var containerFiber = container.current;
  if (!containerFiber.child) {
    return null;
  }
  switch (containerFiber.child.tag) {
    case HostComponent:
      return getPublicInstance(containerFiber.child.stateNode);
    default:
      return containerFiber.child.stateNode;
  }
}

function findHostInstanceWithNoPortals(fiber) {
  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
  if (hostFiber === null) {
    return null;
  }
  return hostFiber.stateNode;
}

function injectIntoDevTools(devToolsConfig) {
  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;

  return injectInternals(_assign({}, devToolsConfig, {
    findHostInstanceByFiber: function (fiber) {
      var hostFiber = findCurrentHostFiber(fiber);
      if (hostFiber === null) {
        return null;
      }
      return hostFiber.stateNode;
    },
    findFiberByHostInstance: function (instance) {
      if (!findFiberByHostInstance) {
        // Might not be implemented by the renderer.
        return null;
      }
      return findFiberByHostInstance(instance);
    }
  }));
}

// This file intentionally does *not* have the Flow annotation.
// Don't add it. See `./inline-typed.js` for an explanation.



var DOMRenderer = Object.freeze({
	updateContainerAtExpirationTime: updateContainerAtExpirationTime,
	createContainer: createContainer,
	updateContainer: updateContainer,
	flushRoot: flushRoot,
	requestWork: requestWork,
	computeUniqueAsyncExpiration: computeUniqueAsyncExpiration,
	batchedUpdates: batchedUpdates$1,
	unbatchedUpdates: unbatchedUpdates,
	deferredUpdates: deferredUpdates,
	syncUpdates: syncUpdates,
	interactiveUpdates: interactiveUpdates$1,
	flushInteractiveUpdates: flushInteractiveUpdates$1,
	flushControlled: flushControlled,
	flushSync: flushSync,
	getPublicRootInstance: getPublicRootInstance,
	findHostInstance: findHostInstance,
	findHostInstanceWithNoPortals: findHostInstanceWithNoPortals,
	injectIntoDevTools: injectIntoDevTools
});

function createPortal$1(children, containerInfo,
// TODO: figure out the API for cross-renderer implementation.
implementation) {
  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  return {
    // This tag allow us to uniquely identify this as a React Portal
    $$typeof: REACT_PORTAL_TYPE,
    key: key == null ? null : '' + key,
    children: children,
    containerInfo: containerInfo,
    implementation: implementation
  };
}

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.4.2';

// TODO: This type is shared between the reconciler and ReactDOM, but will
// eventually be lifted out to the renderer.
var topLevelUpdateWarnings = void 0;
var warnOnInvalidCallback = void 0;
var didWarnAboutUnstableCreatePortal = false;

{
  if (typeof Map !== 'function' ||
  // $FlowIssue Flow incorrectly thinks Map has no prototype
  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' ||
  // $FlowIssue Flow incorrectly thinks Set has no prototype
  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
    warning(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
  }

  topLevelUpdateWarnings = function (container) {
    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);
      if (hostInstance) {
        !(hostInstance.parentNode === container) ? warning(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;
      }
    }

    var isRootRenderedBySomeReact = !!container._reactRootContainer;
    var rootEl = getReactRootElementInContainer(container);
    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));

    !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warning(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

    !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warning(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
  };

  warnOnInvalidCallback = function (callback, callerName) {
    !(callback === null || typeof callback === 'function') ? warning(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;
  };
}

injection$2.injectFiberControlledHostComponent(ReactDOMFiberComponent);

function ReactBatch(root) {
  var expirationTime = computeUniqueAsyncExpiration();
  this._expirationTime = expirationTime;
  this._root = root;
  this._next = null;
  this._callbacks = null;
  this._didComplete = false;
  this._hasChildren = false;
  this._children = null;
  this._defer = true;
}
ReactBatch.prototype.render = function (children) {
  !this._defer ? invariant(false, 'batch.render: Cannot render a batch that already committed.') : void 0;
  this._hasChildren = true;
  this._children = children;
  var internalRoot = this._root._internalRoot;
  var expirationTime = this._expirationTime;
  var work = new ReactWork();
  updateContainerAtExpirationTime(children, internalRoot, null, expirationTime, work._onCommit);
  return work;
};
ReactBatch.prototype.then = function (onComplete) {
  if (this._didComplete) {
    onComplete();
    return;
  }
  var callbacks = this._callbacks;
  if (callbacks === null) {
    callbacks = this._callbacks = [];
  }
  callbacks.push(onComplete);
};
ReactBatch.prototype.commit = function () {
  var internalRoot = this._root._internalRoot;
  var firstBatch = internalRoot.firstBatch;
  !(this._defer && firstBatch !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;

  if (!this._hasChildren) {
    // This batch is empty. Return.
    this._next = null;
    this._defer = false;
    return;
  }

  var expirationTime = this._expirationTime;

  // Ensure this is the first batch in the list.
  if (firstBatch !== this) {
    // This batch is not the earliest batch. We need to move it to the front.
    // Update its expiration time to be the expiration time of the earliest
    // batch, so that we can flush it without flushing the other batches.
    if (this._hasChildren) {
      expirationTime = this._expirationTime = firstBatch._expirationTime;
      // Rendering this batch again ensures its children will be the final state
      // when we flush (updates are processed in insertion order: last
      // update wins).
      // TODO: This forces a restart. Should we print a warning?
      this.render(this._children);
    }

    // Remove the batch from the list.
    var previous = null;
    var batch = firstBatch;
    while (batch !== this) {
      previous = batch;
      batch = batch._next;
    }
    !(previous !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;
    previous._next = batch._next;

    // Add it to the front.
    this._next = firstBatch;
    firstBatch = internalRoot.firstBatch = this;
  }

  // Synchronously flush all the work up to this batch's expiration time.
  this._defer = false;
  flushRoot(internalRoot, expirationTime);

  // Pop the batch from the list.
  var next = this._next;
  this._next = null;
  firstBatch = internalRoot.firstBatch = next;

  // Append the next earliest batch's children to the update queue.
  if (firstBatch !== null && firstBatch._hasChildren) {
    firstBatch.render(firstBatch._children);
  }
};
ReactBatch.prototype._onComplete = function () {
  if (this._didComplete) {
    return;
  }
  this._didComplete = true;
  var callbacks = this._callbacks;
  if (callbacks === null) {
    return;
  }
  // TODO: Error handling.
  for (var i = 0; i < callbacks.length; i++) {
    var _callback = callbacks[i];
    _callback();
  }
};

function ReactWork() {
  this._callbacks = null;
  this._didCommit = false;
  // TODO: Avoid need to bind by replacing callbacks in the update queue with
  // list of Work objects.
  this._onCommit = this._onCommit.bind(this);
}
ReactWork.prototype.then = function (onCommit) {
  if (this._didCommit) {
    onCommit();
    return;
  }
  var callbacks = this._callbacks;
  if (callbacks === null) {
    callbacks = this._callbacks = [];
  }
  callbacks.push(onCommit);
};
ReactWork.prototype._onCommit = function () {
  if (this._didCommit) {
    return;
  }
  this._didCommit = true;
  var callbacks = this._callbacks;
  if (callbacks === null) {
    return;
  }
  // TODO: Error handling.
  for (var i = 0; i < callbacks.length; i++) {
    var _callback2 = callbacks[i];
    !(typeof _callback2 === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback2) : void 0;
    _callback2();
  }
};

function ReactRoot(container, isAsync, hydrate) {
  var root = createContainer(container, isAsync, hydrate);
  this._internalRoot = root;
}
ReactRoot.prototype.render = function (children, callback) {
  var root = this._internalRoot;
  var work = new ReactWork();
  callback = callback === undefined ? null : callback;
  {
    warnOnInvalidCallback(callback, 'render');
  }
  if (callback !== null) {
    work.then(callback);
  }
  updateContainer(children, root, null, work._onCommit);
  return work;
};
ReactRoot.prototype.unmount = function (callback) {
  var root = this._internalRoot;
  var work = new ReactWork();
  callback = callback === undefined ? null : callback;
  {
    warnOnInvalidCallback(callback, 'render');
  }
  if (callback !== null) {
    work.then(callback);
  }
  updateContainer(null, root, null, work._onCommit);
  return work;
};
ReactRoot.prototype.legacy_renderSubtreeIntoContainer = function (parentComponent, children, callback) {
  var root = this._internalRoot;
  var work = new ReactWork();
  callback = callback === undefined ? null : callback;
  {
    warnOnInvalidCallback(callback, 'render');
  }
  if (callback !== null) {
    work.then(callback);
  }
  updateContainer(children, root, parentComponent, work._onCommit);
  return work;
};
ReactRoot.prototype.createBatch = function () {
  var batch = new ReactBatch(this);
  var expirationTime = batch._expirationTime;

  var internalRoot = this._internalRoot;
  var firstBatch = internalRoot.firstBatch;
  if (firstBatch === null) {
    internalRoot.firstBatch = batch;
    batch._next = null;
  } else {
    // Insert sorted by expiration time then insertion order
    var insertAfter = null;
    var insertBefore = firstBatch;
    while (insertBefore !== null && insertBefore._expirationTime <= expirationTime) {
      insertAfter = insertBefore;
      insertBefore = insertBefore._next;
    }
    batch._next = insertBefore;
    if (insertAfter !== null) {
      insertAfter._next = batch;
    }
  }

  return batch;
};

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
}

function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOCUMENT_NODE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function shouldHydrateDueToLegacyHeuristic(container) {
  var rootElement = getReactRootElementInContainer(container);
  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
}

injection$3.injectRenderer(DOMRenderer);

var warnedAboutHydrateAPI = false;

function legacyCreateRootFromDOMContainer(container, forceHydrate) {
  var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
  // First clear any existing content.
  if (!shouldHydrate) {
    var warned = false;
    var rootSibling = void 0;
    while (rootSibling = container.lastChild) {
      {
        if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
          warned = true;
          warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
        }
      }
      container.removeChild(rootSibling);
    }
  }
  {
    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
      warnedAboutHydrateAPI = true;
      lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
    }
  }
  // Legacy roots are not async by default.
  var isAsync = false;
  return new ReactRoot(container, isAsync, shouldHydrate);
}

function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
  // TODO: Ensure all entry points contain this check
  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;

  {
    topLevelUpdateWarnings(container);
  }

  // TODO: Without `any` type, Flow says "Property cannot be accessed on any
  // member of intersection type." Whyyyyyy.
  var root = container._reactRootContainer;
  if (!root) {
    // Initial mount
    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
    if (typeof callback === 'function') {
      var originalCallback = callback;
      callback = function () {
        var instance = getPublicRootInstance(root._internalRoot);
        originalCallback.call(instance);
      };
    }
    // Initial mount should not be batched.
    unbatchedUpdates(function () {
      if (parentComponent != null) {
        root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
      } else {
        root.render(children, callback);
      }
    });
  } else {
    if (typeof callback === 'function') {
      var _originalCallback = callback;
      callback = function () {
        var instance = getPublicRootInstance(root._internalRoot);
        _originalCallback.call(instance);
      };
    }
    // Update
    if (parentComponent != null) {
      root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
    } else {
      root.render(children, callback);
    }
  }
  return getPublicRootInstance(root._internalRoot);
}

function createPortal(children, container) {
  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
  // TODO: pass ReactDOM portal implementation as third argument
  return createPortal$1(children, container, null, key);
}

var ReactDOM = {
  createPortal: createPortal,

  findDOMNode: function (componentOrElement) {
    {
      var owner = ReactCurrentOwner.current;
      if (owner !== null && owner.stateNode !== null) {
        var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
        !warnedAboutRefsInRender ? warning(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner) || 'A component') : void 0;
        owner.stateNode._warnedAboutRefsInRender = true;
      }
    }
    if (componentOrElement == null) {
      return null;
    }
    if (componentOrElement.nodeType === ELEMENT_NODE) {
      return componentOrElement;
    }

    return findHostInstance(componentOrElement);
  },
  hydrate: function (element, container, callback) {
    // TODO: throw or warn if we couldn't hydrate?
    return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
  },
  render: function (element, container, callback) {
    return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
  },
  unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {
    !(parentComponent != null && has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;
    return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
  },
  unmountComponentAtNode: function (container) {
    !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;

    if (container._reactRootContainer) {
      {
        var rootEl = getReactRootElementInContainer(container);
        var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
        !!renderedByDifferentReact ? warning(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
      }

      // Unmount should not be batched.
      unbatchedUpdates(function () {
        legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
          container._reactRootContainer = null;
        });
      });
      // If you call unmountComponentAtNode twice in quick succession, you'll
      // get `true` twice. That's probably fine?
      return true;
    } else {
      {
        var _rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl));

        // Check if the container itself is a React root node.
        var isContainerReactRoot = container.nodeType === 1 && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;

        !!hasNonRootReactChild ? warning(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
  },


  // Temporary alias since we already shipped React 16 RC with it.
  // TODO: remove in React 17.
  unstable_createPortal: function () {
    if (!didWarnAboutUnstableCreatePortal) {
      didWarnAboutUnstableCreatePortal = true;
      lowPriorityWarning$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
    }
    return createPortal.apply(undefined, arguments);
  },


  unstable_batchedUpdates: batchedUpdates$1,

  unstable_deferredUpdates: deferredUpdates,

  unstable_interactiveUpdates: interactiveUpdates$1,

  flushSync: flushSync,

  unstable_flushControlled: flushControlled,

  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    // For TapEventPlugin which is popular in open source
    EventPluginHub: EventPluginHub,
    // Used by test-utils
    EventPluginRegistry: EventPluginRegistry,
    EventPropagators: EventPropagators,
    ReactControlledComponent: ReactControlledComponent,
    ReactDOMComponentTree: ReactDOMComponentTree,
    ReactDOMEventListener: ReactDOMEventListener
  }
};

ReactDOM.unstable_createRoot = function createRoot(container, options) {
  var hydrate = options != null && options.hydrate === true;
  return new ReactRoot(container, true, hydrate);
};

var foundDevTools = injectIntoDevTools({
  findFiberByHostInstance: getClosestInstanceFromNode,
  bundleType: 1,
  version: ReactVersion,
  rendererPackageName: 'react-dom'
});

{
  if (!foundDevTools && ExecutionEnvironment.canUseDOM && window.top === window.self) {
    // If we're in Chrome or Firefox, provide a download link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
      var protocol = window.location.protocol;
      // Don't warn in exotic cases like chrome-extension://.
      if (/^(https?|file):$/.test(protocol)) {
        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
      }
    }
  }
}



var ReactDOM$2 = Object.freeze({
	default: ReactDOM
});

var ReactDOM$3 = ( ReactDOM$2 && ReactDOM ) || ReactDOM$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var reactDom = ReactDOM$3.default ? ReactDOM$3.default : ReactDOM$3;

module.exports = reactDom;
  })();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 2)))

/***/ }),
/* 307 */
/*!*****************************************************!*\
  !*** ./node_modules/fbjs/lib/hyphenateStyleName.js ***!
  \*****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */



var hyphenate = __webpack_require__(/*! ./hyphenate */ 308);

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;

/***/ }),
/* 308 */
/*!********************************************!*\
  !*** ./node_modules/fbjs/lib/hyphenate.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

/***/ }),
/* 309 */
/*!****************************************************!*\
  !*** ./node_modules/fbjs/lib/camelizeStyleName.js ***!
  \****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */



var camelize = __webpack_require__(/*! ./camelize */ 310);

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;

/***/ }),
/* 310 */
/*!*******************************************!*\
  !*** ./node_modules/fbjs/lib/camelize.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;

/***/ }),
/* 311 */
/*!*******************************************************!*\
  !*** ./node_modules/react-slick/lib/initial-state.js ***!
  \*******************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
var initialState = {
  animating: false,
  autoplaying: null,
  currentDirection: 0,
  currentLeft: null,
  currentSlide: 0,
  direction: 1,
  dragging: false,
  edgeDragged: false,
  initialized: false,
  lazyLoadedList: [],
  listHeight: null,
  listWidth: null,
  scrolling: false,
  slideCount: null,
  slideHeight: null,
  slideWidth: null,
  swipeLeft: null,
  swiped: false, // used by swipeEvent. differentites between touch and swipe.
  swiping: false,
  touchObject: { startX: 0, startY: 0, curX: 0, curY: 0 },
  trackStyle: {},
  trackWidth: 0
};

exports.default = initialState;

/***/ }),
/* 312 */
/*!***********************************************!*\
  !*** ./node_modules/lodash.debounce/index.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;

    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = debounce;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/global.js */ 45)))

/***/ }),
/* 313 */
/*!***********************************************!*\
  !*** ./node_modules/react-slick/lib/track.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.Track = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(/*! react */ 3);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(/*! classnames */ 0);

var _classnames2 = _interopRequireDefault(_classnames);

var _innerSliderUtils = __webpack_require__(/*! ./utils/innerSliderUtils */ 42);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// given specifications/props for a slide, fetch all the classes that need to be applied to the slide
var getSlideClasses = function getSlideClasses(spec) {
  var slickActive, slickCenter, slickCloned;
  var centerOffset, index;

  if (spec.rtl) {
    index = spec.slideCount - 1 - spec.index;
  } else {
    index = spec.index;
  }
  slickCloned = index < 0 || index >= spec.slideCount;
  if (spec.centerMode) {
    centerOffset = Math.floor(spec.slidesToShow / 2);
    slickCenter = (index - spec.currentSlide) % spec.slideCount === 0;
    if (index > spec.currentSlide - centerOffset - 1 && index <= spec.currentSlide + centerOffset) {
      slickActive = true;
    }
  } else {
    slickActive = spec.currentSlide <= index && index < spec.currentSlide + spec.slidesToShow;
  }
  var slickCurrent = index === spec.currentSlide;
  return {
    "slick-slide": true,
    "slick-active": slickActive,
    "slick-center": slickCenter,
    "slick-cloned": slickCloned,
    "slick-current": slickCurrent // dubious in case of RTL
  };
};

var getSlideStyle = function getSlideStyle(spec) {
  var style = {};

  if (spec.variableWidth === undefined || spec.variableWidth === false) {
    style.width = spec.slideWidth;
  }

  if (spec.fade) {
    style.position = "relative";
    if (spec.vertical) {
      style.top = -spec.index * parseInt(spec.slideHeight);
    } else {
      style.left = -spec.index * parseInt(spec.slideWidth);
    }
    style.opacity = spec.currentSlide === spec.index ? 1 : 0;
    style.transition = "opacity " + spec.speed + "ms " + spec.cssEase + ", " + "visibility " + spec.speed + "ms " + spec.cssEase;
    style.WebkitTransition = "opacity " + spec.speed + "ms " + spec.cssEase + ", " + "visibility " + spec.speed + "ms " + spec.cssEase;
  }

  return style;
};

var getKey = function getKey(child, fallbackKey) {
  return child.key || fallbackKey;
};

var renderSlides = function renderSlides(spec) {
  var key;
  var slides = [];
  var preCloneSlides = [];
  var postCloneSlides = [];
  var childrenCount = _react2.default.Children.count(spec.children);
  var startIndex = (0, _innerSliderUtils.lazyStartIndex)(spec);
  var endIndex = (0, _innerSliderUtils.lazyEndIndex)(spec);

  _react2.default.Children.forEach(spec.children, function (elem, index) {
    var child = void 0;
    var childOnClickOptions = {
      message: "children",
      index: index,
      slidesToScroll: spec.slidesToScroll,
      currentSlide: spec.currentSlide
    };

    // in case of lazyLoad, whether or not we want to fetch the slide
    if (!spec.lazyLoad || spec.lazyLoad && spec.lazyLoadedList.indexOf(index) >= 0) {
      child = elem;
    } else {
      child = _react2.default.createElement("div", null);
    }
    var childStyle = getSlideStyle(_extends({}, spec, { index: index }));
    var slideClass = child.props.className || "";
    var slideClasses = getSlideClasses(_extends({}, spec, { index: index }));
    // push a cloned element of the desired slide
    slides.push(_react2.default.cloneElement(child, {
      key: "original" + getKey(child, index),
      "data-index": index,
      className: (0, _classnames2.default)(slideClasses, slideClass),
      tabIndex: "-1",
      "aria-hidden": !slideClasses["slick-active"],
      style: _extends({ outline: "none" }, child.props.style || {}, childStyle),
      onClick: function onClick(e) {
        child.props && child.props.onClick && child.props.onClick(e);
        if (spec.focusOnSelect) {
          spec.focusOnSelect(childOnClickOptions);
        }
      }
    }));

    // if slide needs to be precloned or postcloned
    if (spec.infinite && spec.fade === false) {
      var preCloneNo = childrenCount - index;
      if (preCloneNo <= (0, _innerSliderUtils.getPreClones)(spec) && childrenCount !== spec.slidesToShow) {
        key = -preCloneNo;
        if (key >= startIndex) {
          child = elem;
        }
        slideClasses = getSlideClasses(_extends({}, spec, { index: key }));
        preCloneSlides.push(_react2.default.cloneElement(child, {
          key: "precloned" + getKey(child, key),
          "data-index": key,
          tabIndex: "-1",
          className: (0, _classnames2.default)(slideClasses, slideClass),
          "aria-hidden": !slideClasses["slick-active"],
          style: _extends({}, child.props.style || {}, childStyle),
          onClick: function onClick(e) {
            child.props && child.props.onClick && child.props.onClick(e);
            if (spec.focusOnSelect) {
              spec.focusOnSelect(childOnClickOptions);
            }
          }
        }));
      }

      if (childrenCount !== spec.slidesToShow) {
        key = childrenCount + index;
        if (key < endIndex) {
          child = elem;
        }
        slideClasses = getSlideClasses(_extends({}, spec, { index: key }));
        postCloneSlides.push(_react2.default.cloneElement(child, {
          key: "postcloned" + getKey(child, key),
          "data-index": key,
          tabIndex: "-1",
          className: (0, _classnames2.default)(slideClasses, slideClass),
          "aria-hidden": !slideClasses["slick-active"],
          style: _extends({}, child.props.style || {}, childStyle),
          onClick: function onClick(e) {
            child.props && child.props.onClick && child.props.onClick(e);
            if (spec.focusOnSelect) {
              spec.focusOnSelect(childOnClickOptions);
            }
          }
        }));
      }
    }
  });

  if (spec.rtl) {
    return preCloneSlides.concat(slides, postCloneSlides).reverse();
  } else {
    return preCloneSlides.concat(slides, postCloneSlides);
  }
};

var Track = exports.Track = function (_React$PureComponent) {
  _inherits(Track, _React$PureComponent);

  function Track() {
    _classCallCheck(this, Track);

    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
  }

  Track.prototype.render = function render() {
    var slides = renderSlides(this.props);
    var _props = this.props,
        onMouseEnter = _props.onMouseEnter,
        onMouseOver = _props.onMouseOver,
        onMouseLeave = _props.onMouseLeave;

    var mouseEvents = { onMouseEnter: onMouseEnter, onMouseOver: onMouseOver, onMouseLeave: onMouseLeave };
    return _react2.default.createElement(
      "div",
      _extends({
        className: "slick-track",
        style: this.props.trackStyle
      }, mouseEvents),
      slides
    );
  };

  return Track;
}(_react2.default.PureComponent);

/***/ }),
/* 314 */
/*!**********************************************!*\
  !*** ./node_modules/react-slick/lib/dots.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.Dots = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(/*! react */ 3);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(/*! classnames */ 0);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var getDotCount = function getDotCount(spec) {
  var dots;

  if (spec.infinite) {
    dots = Math.ceil(spec.slideCount / spec.slidesToScroll);
  } else {
    dots = Math.ceil((spec.slideCount - spec.slidesToShow) / spec.slidesToScroll) + 1;
  }

  return dots;
};

var Dots = exports.Dots = function (_React$PureComponent) {
  _inherits(Dots, _React$PureComponent);

  function Dots() {
    _classCallCheck(this, Dots);

    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
  }

  Dots.prototype.clickHandler = function clickHandler(options, e) {
    // In Autoplay the focus stays on clicked button even after transition
    // to next slide. That only goes away by click somewhere outside
    e.preventDefault();
    this.props.clickHandler(options);
  };

  Dots.prototype.render = function render() {
    var _this2 = this;

    var dotCount = getDotCount({
      slideCount: this.props.slideCount,
      slidesToScroll: this.props.slidesToScroll,
      slidesToShow: this.props.slidesToShow,
      infinite: this.props.infinite
    });

    // Apply join & split to Array to pre-fill it for IE8
    //
    // Credit: http://stackoverflow.com/a/13735425/1849458
    var _props = this.props,
        onMouseEnter = _props.onMouseEnter,
        onMouseOver = _props.onMouseOver,
        onMouseLeave = _props.onMouseLeave;

    var mouseEvents = { onMouseEnter: onMouseEnter, onMouseOver: onMouseOver, onMouseLeave: onMouseLeave };
    var dots = Array.apply(null, Array(dotCount + 1).join("0").split("")).map(function (x, i) {
      var leftBound = i * _this2.props.slidesToScroll;
      var rightBound = i * _this2.props.slidesToScroll + (_this2.props.slidesToScroll - 1);
      var className = (0, _classnames2.default)({
        "slick-active": _this2.props.currentSlide >= leftBound && _this2.props.currentSlide <= rightBound
      });

      var dotOptions = {
        message: "dots",
        index: i,
        slidesToScroll: _this2.props.slidesToScroll,
        currentSlide: _this2.props.currentSlide
      };

      var onClick = _this2.clickHandler.bind(_this2, dotOptions);
      return _react2.default.createElement(
        "li",
        { key: i, className: className },
        _react2.default.cloneElement(_this2.props.customPaging(i), { onClick: onClick })
      );
    });

    return _react2.default.cloneElement(this.props.appendDots(dots), _extends({
      className: this.props.dotsClass
    }, mouseEvents));
  };

  return Dots;
}(_react2.default.PureComponent);

/***/ }),
/* 315 */
/*!************************************************!*\
  !*** ./node_modules/react-slick/lib/arrows.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.NextArrow = exports.PrevArrow = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(/*! react */ 3);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(/*! classnames */ 0);

var _classnames2 = _interopRequireDefault(_classnames);

var _innerSliderUtils = __webpack_require__(/*! ./utils/innerSliderUtils */ 42);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PrevArrow = exports.PrevArrow = function (_React$PureComponent) {
  _inherits(PrevArrow, _React$PureComponent);

  function PrevArrow() {
    _classCallCheck(this, PrevArrow);

    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
  }

  PrevArrow.prototype.clickHandler = function clickHandler(options, e) {
    if (e) {
      e.preventDefault();
    }
    this.props.clickHandler(options, e);
  };

  PrevArrow.prototype.render = function render() {
    var prevClasses = { "slick-arrow": true, "slick-prev": true };
    var prevHandler = this.clickHandler.bind(this, { message: "previous" });

    if (!this.props.infinite && (this.props.currentSlide === 0 || this.props.slideCount <= this.props.slidesToShow)) {
      prevClasses["slick-disabled"] = true;
      prevHandler = null;
    }

    var prevArrowProps = {
      key: "0",
      "data-role": "none",
      className: (0, _classnames2.default)(prevClasses),
      style: { display: "block" },
      onClick: prevHandler
    };
    var customProps = {
      currentSlide: this.props.currentSlide,
      slideCount: this.props.slideCount
    };
    var prevArrow = void 0;

    if (this.props.prevArrow) {
      prevArrow = _react2.default.cloneElement(this.props.prevArrow, _extends({}, prevArrowProps, customProps));
    } else {
      prevArrow = _react2.default.createElement(
        "button",
        _extends({ key: "0", type: "button" }, prevArrowProps),
        " ",
        "Previous"
      );
    }

    return prevArrow;
  };

  return PrevArrow;
}(_react2.default.PureComponent);

var NextArrow = exports.NextArrow = function (_React$PureComponent2) {
  _inherits(NextArrow, _React$PureComponent2);

  function NextArrow() {
    _classCallCheck(this, NextArrow);

    return _possibleConstructorReturn(this, _React$PureComponent2.apply(this, arguments));
  }

  NextArrow.prototype.clickHandler = function clickHandler(options, e) {
    if (e) {
      e.preventDefault();
    }
    this.props.clickHandler(options, e);
  };

  NextArrow.prototype.render = function render() {
    var nextClasses = { "slick-arrow": true, "slick-next": true };
    var nextHandler = this.clickHandler.bind(this, { message: "next" });

    if (!(0, _innerSliderUtils.canGoNext)(this.props)) {
      nextClasses["slick-disabled"] = true;
      nextHandler = null;
    }

    var nextArrowProps = {
      key: "1",
      "data-role": "none",
      className: (0, _classnames2.default)(nextClasses),
      style: { display: "block" },
      onClick: nextHandler
    };
    var customProps = {
      currentSlide: this.props.currentSlide,
      slideCount: this.props.slideCount
    };
    var nextArrow = void 0;

    if (this.props.nextArrow) {
      nextArrow = _react2.default.cloneElement(this.props.nextArrow, _extends({}, nextArrowProps, customProps));
    } else {
      nextArrow = _react2.default.createElement(
        "button",
        _extends({ key: "1", type: "button" }, nextArrowProps),
        " ",
        "Next"
      );
    }

    return nextArrow;
  };

  return NextArrow;
}(_react2.default.PureComponent);

/***/ }),
/* 316 */
/*!*************************************************************************!*\
  !*** ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js ***!
  \*************************************************************************/
/*! exports provided: default */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(global) {/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */
/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = (function () {
    if (typeof Map !== 'undefined') {
        return Map;
    }

    /**
     * Returns index in provided array that matches the specified key.
     *
     * @param {Array<Array>} arr
     * @param {*} key
     * @returns {number}
     */
    function getIndex(arr, key) {
        var result = -1;

        arr.some(function (entry, index) {
            if (entry[0] === key) {
                result = index;

                return true;
            }

            return false;
        });

        return result;
    }

    return (function () {
        function anonymous() {
            this.__entries__ = [];
        }

        var prototypeAccessors = { size: { configurable: true } };

        /**
         * @returns {boolean}
         */
        prototypeAccessors.size.get = function () {
            return this.__entries__.length;
        };

        /**
         * @param {*} key
         * @returns {*}
         */
        anonymous.prototype.get = function (key) {
            var index = getIndex(this.__entries__, key);
            var entry = this.__entries__[index];

            return entry && entry[1];
        };

        /**
         * @param {*} key
         * @param {*} value
         * @returns {void}
         */
        anonymous.prototype.set = function (key, value) {
            var index = getIndex(this.__entries__, key);

            if (~index) {
                this.__entries__[index][1] = value;
            } else {
                this.__entries__.push([key, value]);
            }
        };

        /**
         * @param {*} key
         * @returns {void}
         */
        anonymous.prototype.delete = function (key) {
            var entries = this.__entries__;
            var index = getIndex(entries, key);

            if (~index) {
                entries.splice(index, 1);
            }
        };

        /**
         * @param {*} key
         * @returns {void}
         */
        anonymous.prototype.has = function (key) {
            return !!~getIndex(this.__entries__, key);
        };

        /**
         * @returns {void}
         */
        anonymous.prototype.clear = function () {
            this.__entries__.splice(0);
        };

        /**
         * @param {Function} callback
         * @param {*} [ctx=null]
         * @returns {void}
         */
        anonymous.prototype.forEach = function (callback, ctx) {
            var this$1 = this;
            if ( ctx === void 0 ) ctx = null;

            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {
                var entry = list[i];

                callback.call(ctx, entry[1], entry[0]);
            }
        };

        Object.defineProperties( anonymous.prototype, prototypeAccessors );

        return anonymous;
    }());
})();

/**
 * Detects whether window and document objects are available in current environment.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

// Returns global object of a current environment.
var global$1 = (function () {
    if (typeof global !== 'undefined' && global.Math === Math) {
        return global;
    }

    if (typeof self !== 'undefined' && self.Math === Math) {
        return self;
    }

    if (typeof window !== 'undefined' && window.Math === Math) {
        return window;
    }

    // eslint-disable-next-line no-new-func
    return Function('return this')();
})();

/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */
var requestAnimationFrame$1 = (function () {
    if (typeof requestAnimationFrame === 'function') {
        // It's required to use a bounded function because IE sometimes throws
        // an "Invalid calling object" error if rAF is invoked without the global
        // object on the left hand side.
        return requestAnimationFrame.bind(global$1);
    }

    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
})();

// Defines minimum timeout before adding a trailing call.
var trailingTimeout = 2;

/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */
var throttle = function (callback, delay) {
    var leadingCall = false,
        trailingCall = false,
        lastCallTime = 0;

    /**
     * Invokes the original callback function and schedules new invocation if
     * the "proxy" was called during current request.
     *
     * @returns {void}
     */
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;

            callback();
        }

        if (trailingCall) {
            proxy();
        }
    }

    /**
     * Callback invoked after the specified delay. It will further postpone
     * invocation of the original function delegating it to the
     * requestAnimationFrame.
     *
     * @returns {void}
     */
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }

    /**
     * Schedules invocation of the original function.
     *
     * @returns {void}
     */
    function proxy() {
        var timeStamp = Date.now();

        if (leadingCall) {
            // Reject immediately following calls.
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }

            // Schedule new call to be in invoked when the pending one is resolved.
            // This is important for "transitions" which never actually start
            // immediately so there is a chance that we might miss one if change
            // happens amids the pending invocation.
            trailingCall = true;
        } else {
            leadingCall = true;
            trailingCall = false;

            setTimeout(timeoutCallback, delay);
        }

        lastCallTime = timeStamp;
    }

    return proxy;
};

// Minimum delay before invoking the update of observers.
var REFRESH_DELAY = 20;

// A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.
var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];

// Check if MutationObserver is available.
var mutationObserverSupported = typeof MutationObserver !== 'undefined';

/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */
var ResizeObserverController = function() {
    this.connected_ = false;
    this.mutationEventsAdded_ = false;
    this.mutationsObserver_ = null;
    this.observers_ = [];

    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
};

/**
 * Adds observer to observers list.
 *
 * @param {ResizeObserverSPI} observer - Observer to be added.
 * @returns {void}
 */


/**
 * Holds reference to the controller's instance.
 *
 * @private {ResizeObserverController}
 */


/**
 * Keeps reference to the instance of MutationObserver.
 *
 * @private {MutationObserver}
 */

/**
 * Indicates whether DOM listeners have been added.
 *
 * @private {boolean}
 */
ResizeObserverController.prototype.addObserver = function (observer) {
    if (!~this.observers_.indexOf(observer)) {
        this.observers_.push(observer);
    }

    // Add listeners if they haven't been added yet.
    if (!this.connected_) {
        this.connect_();
    }
};

/**
 * Removes observer from observers list.
 *
 * @param {ResizeObserverSPI} observer - Observer to be removed.
 * @returns {void}
 */
ResizeObserverController.prototype.removeObserver = function (observer) {
    var observers = this.observers_;
    var index = observers.indexOf(observer);

    // Remove observer if it's present in registry.
    if (~index) {
        observers.splice(index, 1);
    }

    // Remove listeners if controller has no connected observers.
    if (!observers.length && this.connected_) {
        this.disconnect_();
    }
};

/**
 * Invokes the update of observers. It will continue running updates insofar
 * it detects changes.
 *
 * @returns {void}
 */
ResizeObserverController.prototype.refresh = function () {
    var changesDetected = this.updateObservers_();

    // Continue running updates if changes have been detected as there might
    // be future ones caused by CSS transitions.
    if (changesDetected) {
        this.refresh();
    }
};

/**
 * Updates every observer from observers list and notifies them of queued
 * entries.
 *
 * @private
 * @returns {boolean} Returns "true" if any observer has detected changes in
 *  dimensions of it's elements.
 */
ResizeObserverController.prototype.updateObservers_ = function () {
    // Collect observers that have active observations.
    var activeObservers = this.observers_.filter(function (observer) {
        return observer.gatherActive(), observer.hasActive();
    });

    // Deliver notifications in a separate cycle in order to avoid any
    // collisions between observers, e.g. when multiple instances of
    // ResizeObserver are tracking the same element and the callback of one
    // of them changes content dimensions of the observed target. Sometimes
    // this may result in notifications being blocked for the rest of observers.
    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });

    return activeObservers.length > 0;
};

/**
 * Initializes DOM listeners.
 *
 * @private
 * @returns {void}
 */
ResizeObserverController.prototype.connect_ = function () {
    // Do nothing if running in a non-browser environment or if listeners
    // have been already added.
    if (!isBrowser || this.connected_) {
        return;
    }

    // Subscription to the "Transitionend" event is used as a workaround for
    // delayed transitions. This way it's possible to capture at least the
    // final state of an element.
    document.addEventListener('transitionend', this.onTransitionEnd_);

    window.addEventListener('resize', this.refresh);

    if (mutationObserverSupported) {
        this.mutationsObserver_ = new MutationObserver(this.refresh);

        this.mutationsObserver_.observe(document, {
            attributes: true,
            childList: true,
            characterData: true,
            subtree: true
        });
    } else {
        document.addEventListener('DOMSubtreeModified', this.refresh);

        this.mutationEventsAdded_ = true;
    }

    this.connected_ = true;
};

/**
 * Removes DOM listeners.
 *
 * @private
 * @returns {void}
 */
ResizeObserverController.prototype.disconnect_ = function () {
    // Do nothing if running in a non-browser environment or if listeners
    // have been already removed.
    if (!isBrowser || !this.connected_) {
        return;
    }

    document.removeEventListener('transitionend', this.onTransitionEnd_);
    window.removeEventListener('resize', this.refresh);

    if (this.mutationsObserver_) {
        this.mutationsObserver_.disconnect();
    }

    if (this.mutationEventsAdded_) {
        document.removeEventListener('DOMSubtreeModified', this.refresh);
    }

    this.mutationsObserver_ = null;
    this.mutationEventsAdded_ = false;
    this.connected_ = false;
};

/**
 * "Transitionend" event handler.
 *
 * @private
 * @param {TransitionEvent} event
 * @returns {void}
 */
ResizeObserverController.prototype.onTransitionEnd_ = function (ref) {
        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';

    // Detect whether transition may affect dimensions of an element.
    var isReflowProperty = transitionKeys.some(function (key) {
        return !!~propertyName.indexOf(key);
    });

    if (isReflowProperty) {
        this.refresh();
    }
};

/**
 * Returns instance of the ResizeObserverController.
 *
 * @returns {ResizeObserverController}
 */
ResizeObserverController.getInstance = function () {
    if (!this.instance_) {
        this.instance_ = new ResizeObserverController();
    }

    return this.instance_;
};

ResizeObserverController.instance_ = null;

/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */
var defineConfigurable = (function (target, props) {
    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {
        var key = list[i];

        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }

    return target;
});

/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */
var getWindowOf = (function (target) {
    // Assume that the element is an instance of Node, which means that it
    // has the "ownerDocument" property from which we can retrieve a
    // corresponding global object.
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;

    // Return the local global object if it's not possible extract one from
    // provided element.
    return ownerGlobal || global$1;
});

// Placeholder of an empty content rectangle.
var emptyRect = createRectInit(0, 0, 0, 0);

/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */
function toFloat(value) {
    return parseFloat(value) || 0;
}

/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */
function getBordersSize(styles) {
    var positions = [], len = arguments.length - 1;
    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];

    return positions.reduce(function (size, position) {
        var value = styles['border-' + position + '-width'];

        return size + toFloat(value);
    }, 0);
}

/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */
function getPaddings(styles) {
    var positions = ['top', 'right', 'bottom', 'left'];
    var paddings = {};

    for (var i = 0, list = positions; i < list.length; i += 1) {
        var position = list[i];

        var value = styles['padding-' + position];

        paddings[position] = toFloat(value);
    }

    return paddings;
}

/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */
function getSVGContentRect(target) {
    var bbox = target.getBBox();

    return createRectInit(0, 0, bbox.width, bbox.height);
}

/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */
function getHTMLElementContentRect(target) {
    // Client width & height properties can't be
    // used exclusively as they provide rounded values.
    var clientWidth = target.clientWidth;
    var clientHeight = target.clientHeight;

    // By this condition we can catch all non-replaced inline, hidden and
    // detached elements. Though elements with width & height properties less
    // than 0.5 will be discarded as well.
    //
    // Without it we would need to implement separate methods for each of
    // those cases and it's not possible to perform a precise and performance
    // effective test for hidden elements. E.g. even jQuery's ':visible' filter
    // gives wrong results for elements with width & height less than 0.5.
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }

    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;

    // Computed styles of width & height are being used because they are the
    // only dimensions available to JS that contain non-rounded values. It could
    // be possible to utilize the getBoundingClientRect if only it's data wasn't
    // affected by CSS transformations let alone paddings, borders and scroll bars.
    var width = toFloat(styles.width),
        height = toFloat(styles.height);

    // Width & height include paddings and borders when the 'border-box' box
    // model is applied (except for IE).
    if (styles.boxSizing === 'border-box') {
        // Following conditions are required to handle Internet Explorer which
        // doesn't include paddings and borders to computed CSS dimensions.
        //
        // We can say that if CSS dimensions + paddings are equal to the "client"
        // properties then it's either IE, and thus we don't need to subtract
        // anything, or an element merely doesn't have paddings/borders styles.
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, 'left', 'right') + horizPad;
        }

        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
        }
    }

    // Following steps can't be applied to the document's root element as its
    // client[Width/Height] properties represent viewport area of the window.
    // Besides, it's as well not necessary as the <html> itself neither has
    // rendered scroll bars nor it can be clipped.
    if (!isDocumentElement(target)) {
        // In some browsers (only in Firefox, actually) CSS width & height
        // include scroll bars size which can be removed at this step as scroll
        // bars are the only difference between rounded dimensions + paddings
        // and "client" properties, though that is not always true in Chrome.
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;

        // Chrome has a rather weird rounding of "client" properties.
        // E.g. for an element with content width of 314.2px it sometimes gives
        // the client width of 315px and for the width of 314.7px it may give
        // 314px. And it doesn't happen all the time. So just ignore this delta
        // as a non-relevant.
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }

        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }

    return createRectInit(paddings.left, paddings.top, width, height);
}

/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
var isSVGGraphicsElement = (function () {
    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
    // interface.
    if (typeof SVGGraphicsElement !== 'undefined') {
        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
    }

    // If it's so, then check that element is at least an instance of the
    // SVGElement and that it has the "getBBox" method.
    // eslint-disable-next-line no-extra-parens
    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };
})();

/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}

/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */
function getContentRect(target) {
    if (!isBrowser) {
        return emptyRect;
    }

    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }

    return getHTMLElementContentRect(target);
}

/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */
function createReadOnlyRect(ref) {
    var x = ref.x;
    var y = ref.y;
    var width = ref.width;
    var height = ref.height;

    // If DOMRectReadOnly is available use it as a prototype for the rectangle.
    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);

    // Rectangle's properties are not writable and non-enumerable.
    defineConfigurable(rect, {
        x: x, y: y, width: width, height: height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });

    return rect;
}

/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */
function createRectInit(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}

/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */
var ResizeObservation = function(target) {
    this.broadcastWidth = 0;
    this.broadcastHeight = 0;
    this.contentRect_ = createRectInit(0, 0, 0, 0);

    this.target = target;
};

/**
 * Updates content rectangle and tells whether it's width or height properties
 * have changed since the last broadcast.
 *
 * @returns {boolean}
 */


/**
 * Reference to the last observed content rectangle.
 *
 * @private {DOMRectInit}
 */


/**
 * Broadcasted width of content rectangle.
 *
 * @type {number}
 */
ResizeObservation.prototype.isActive = function () {
    var rect = getContentRect(this.target);

    this.contentRect_ = rect;

    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
};

/**
 * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
 * from the corresponding properties of the last observed content rectangle.
 *
 * @returns {DOMRectInit} Last observed content rectangle.
 */
ResizeObservation.prototype.broadcastRect = function () {
    var rect = this.contentRect_;

    this.broadcastWidth = rect.width;
    this.broadcastHeight = rect.height;

    return rect;
};

var ResizeObserverEntry = function(target, rectInit) {
    var contentRect = createReadOnlyRect(rectInit);

    // According to the specification following properties are not writable
    // and are also not enumerable in the native implementation.
    //
    // Property accessors are not being used as they'd require to define a
    // private WeakMap storage which may cause memory leaks in browsers that
    // don't support this type of collections.
    defineConfigurable(this, { target: target, contentRect: contentRect });
};

var ResizeObserverSPI = function(callback, controller, callbackCtx) {
    this.activeObservations_ = [];
    this.observations_ = new MapShim();

    if (typeof callback !== 'function') {
        throw new TypeError('The callback provided as parameter 1 is not a function.');
    }

    this.callback_ = callback;
    this.controller_ = controller;
    this.callbackCtx_ = callbackCtx;
};

/**
 * Starts observing provided element.
 *
 * @param {Element} target - Element to be observed.
 * @returns {void}
 */


/**
 * Registry of the ResizeObservation instances.
 *
 * @private {Map<Element, ResizeObservation>}
 */


/**
 * Public ResizeObserver instance which will be passed to the callback
 * function and used as a value of it's "this" binding.
 *
 * @private {ResizeObserver}
 */

/**
 * Collection of resize observations that have detected changes in dimensions
 * of elements.
 *
 * @private {Array<ResizeObservation>}
 */
ResizeObserverSPI.prototype.observe = function (target) {
    if (!arguments.length) {
        throw new TypeError('1 argument required, but only 0 present.');
    }

    // Do nothing if current environment doesn't have the Element interface.
    if (typeof Element === 'undefined' || !(Element instanceof Object)) {
        return;
    }

    if (!(target instanceof getWindowOf(target).Element)) {
        throw new TypeError('parameter 1 is not of type "Element".');
    }

    var observations = this.observations_;

    // Do nothing if element is already being observed.
    if (observations.has(target)) {
        return;
    }

    observations.set(target, new ResizeObservation(target));

    this.controller_.addObserver(this);

    // Force the update of observations.
    this.controller_.refresh();
};

/**
 * Stops observing provided element.
 *
 * @param {Element} target - Element to stop observing.
 * @returns {void}
 */
ResizeObserverSPI.prototype.unobserve = function (target) {
    if (!arguments.length) {
        throw new TypeError('1 argument required, but only 0 present.');
    }

    // Do nothing if current environment doesn't have the Element interface.
    if (typeof Element === 'undefined' || !(Element instanceof Object)) {
        return;
    }

    if (!(target instanceof getWindowOf(target).Element)) {
        throw new TypeError('parameter 1 is not of type "Element".');
    }

    var observations = this.observations_;

    // Do nothing if element is not being observed.
    if (!observations.has(target)) {
        return;
    }

    observations.delete(target);

    if (!observations.size) {
        this.controller_.removeObserver(this);
    }
};

/**
 * Stops observing all elements.
 *
 * @returns {void}
 */
ResizeObserverSPI.prototype.disconnect = function () {
    this.clearActive();
    this.observations_.clear();
    this.controller_.removeObserver(this);
};

/**
 * Collects observation instances the associated element of which has changed
 * it's content rectangle.
 *
 * @returns {void}
 */
ResizeObserverSPI.prototype.gatherActive = function () {
        var this$1 = this;

    this.clearActive();

    this.observations_.forEach(function (observation) {
        if (observation.isActive()) {
            this$1.activeObservations_.push(observation);
        }
    });
};

/**
 * Invokes initial callback function with a list of ResizeObserverEntry
 * instances collected from active resize observations.
 *
 * @returns {void}
 */
ResizeObserverSPI.prototype.broadcastActive = function () {
    // Do nothing if observer doesn't have active observations.
    if (!this.hasActive()) {
        return;
    }

    var ctx = this.callbackCtx_;

    // Create ResizeObserverEntry instance for every active observation.
    var entries = this.activeObservations_.map(function (observation) {
        return new ResizeObserverEntry(observation.target, observation.broadcastRect());
    });

    this.callback_.call(ctx, entries, ctx);
    this.clearActive();
};

/**
 * Clears the collection of active observations.
 *
 * @returns {void}
 */
ResizeObserverSPI.prototype.clearActive = function () {
    this.activeObservations_.splice(0);
};

/**
 * Tells whether observer has active observations.
 *
 * @returns {boolean}
 */
ResizeObserverSPI.prototype.hasActive = function () {
    return this.activeObservations_.length > 0;
};

// Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.
var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();

/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */
var ResizeObserver = function(callback) {
    if (!(this instanceof ResizeObserver)) {
        throw new TypeError('Cannot call a class as a function.');
    }
    if (!arguments.length) {
        throw new TypeError('1 argument required, but only 0 present.');
    }

    var controller = ResizeObserverController.getInstance();
    var observer = new ResizeObserverSPI(callback, controller, this);

    observers.set(this, observer);
};

// Expose public methods of ResizeObserver.
['observe', 'unobserve', 'disconnect'].forEach(function (method) {
    ResizeObserver.prototype[method] = function () {
        return (ref = observers.get(this))[method].apply(ref, arguments);
        var ref;
    };
});

var index = (function () {
    // Export existing implementation if available.
    if (typeof global$1.ResizeObserver !== 'undefined') {
        return global$1.ResizeObserver;
    }

    return ResizeObserver;
})();

/* harmony default export */ __webpack_exports__["default"] = (index);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(/*! ./../../webpack/buildin/global.js */ 45)))

/***/ }),
/* 317 */
/*!***************************************!*\
  !*** ./node_modules/json2mq/index.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var camel2hyphen = __webpack_require__(/*! string-convert/camel2hyphen */ 318);

var isDimension = function (feature) {
  var re = /[height|width]$/;
  return re.test(feature);
};

var obj2mq = function (obj) {
  var mq = '';
  var features = Object.keys(obj);
  features.forEach(function (feature, index) {
    var value = obj[feature];
    feature = camel2hyphen(feature);
    // Add px to dimension features
    if (isDimension(feature) && typeof value === 'number') {
      value = value + 'px';
    }
    if (value === true) {
      mq += feature;
    } else if (value === false) {
      mq += 'not ' + feature;
    } else {
      mq += '(' + feature + ': ' + value + ')';
    }
    if (index < features.length-1) {
      mq += ' and '
    }
  });
  return mq;
};

var json2mq = function (query) {
  var mq = '';
  if (typeof query === 'string') {
    return query;
  }
  // Handling array of media queries
  if (query instanceof Array) {
    query.forEach(function (q, index) {
      mq += obj2mq(q);
      if (index < query.length-1) {
        mq += ', '
      }
    });
    return mq;
  }
  // Handling single media query
  return obj2mq(query);
};

module.exports = json2mq;

/***/ }),
/* 318 */
/*!*****************************************************!*\
  !*** ./node_modules/string-convert/camel2hyphen.js ***!
  \*****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

var camel2hyphen = function (str) {
  return str
          .replace(/[A-Z]/g, function (match) {
            return '-' + match.toLowerCase();
          })
          .toLowerCase();
};

module.exports = camel2hyphen;

/***/ }),
/* 319 */
/*!*******************************************************!*\
  !*** ./node_modules/react-slick/lib/default-props.js ***!
  \*******************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _react = __webpack_require__(/*! react */ 3);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
  accessibility: true,
  adaptiveHeight: false,
  afterChange: null,
  appendDots: function appendDots(dots) {
    return _react2.default.createElement(
      "ul",
      { style: { display: "block" } },
      dots
    );
  },
  arrows: true,
  autoplay: false,
  autoplaySpeed: 3000,
  beforeChange: null,
  centerMode: false,
  centerPadding: "50px",
  className: "",
  cssEase: "ease",
  customPaging: function customPaging(i) {
    return _react2.default.createElement(
      "button",
      null,
      i + 1
    );
  },
  dots: false,
  dotsClass: "slick-dots",
  draggable: true,
  easing: "linear",
  edgeFriction: 0.35,
  fade: false,
  focusOnSelect: false,
  infinite: true,
  initialSlide: 0,
  lazyLoad: null,
  nextArrow: null,
  onEdge: null,
  onInit: null,
  onLazyLoadError: null,
  onReInit: null,
  pauseOnDotsHover: false,
  pauseOnFocus: false,
  pauseOnHover: true,
  prevArrow: null,
  responsive: null,
  rows: 1,
  rtl: false,
  slide: "div",
  slidesPerRow: 1,
  slidesToScroll: 1,
  slidesToShow: 1,
  speed: 500,
  swipe: true,
  swipeEvent: null,
  swipeToSlide: false,
  touchMove: true,
  touchThreshold: 5,
  useCSS: true,
  useTransform: true,
  variableWidth: false,
  vertical: false,
  waitForAnimate: true
};

exports.default = defaultProps;

/***/ }),
/* 320 */
/*!**********************************************!*\
  !*** ./node_modules/enquire.js/src/index.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var MediaQueryDispatch = __webpack_require__(/*! ./MediaQueryDispatch */ 321);
module.exports = new MediaQueryDispatch();


/***/ }),
/* 321 */
/*!***********************************************************!*\
  !*** ./node_modules/enquire.js/src/MediaQueryDispatch.js ***!
  \***********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var MediaQuery = __webpack_require__(/*! ./MediaQuery */ 322);
var Util = __webpack_require__(/*! ./Util */ 111);
var each = Util.each;
var isFunction = Util.isFunction;
var isArray = Util.isArray;

/**
 * Allows for registration of query handlers.
 * Manages the query handler's state and is responsible for wiring up browser events
 *
 * @constructor
 */
function MediaQueryDispatch () {
    if(!window.matchMedia) {
        throw new Error('matchMedia not present, legacy browsers require a polyfill');
    }

    this.queries = {};
    this.browserIsIncapable = !window.matchMedia('only all').matches;
}

MediaQueryDispatch.prototype = {

    constructor : MediaQueryDispatch,

    /**
     * Registers a handler for the given media query
     *
     * @param {string} q the media query
     * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers
     * @param {function} options.match fired when query matched
     * @param {function} [options.unmatch] fired when a query is no longer matched
     * @param {function} [options.setup] fired when handler first triggered
     * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched
     * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers
     */
    register : function(q, options, shouldDegrade) {
        var queries         = this.queries,
            isUnconditional = shouldDegrade && this.browserIsIncapable;

        if(!queries[q]) {
            queries[q] = new MediaQuery(q, isUnconditional);
        }

        //normalise to object in an array
        if(isFunction(options)) {
            options = { match : options };
        }
        if(!isArray(options)) {
            options = [options];
        }
        each(options, function(handler) {
            if (isFunction(handler)) {
                handler = { match : handler };
            }
            queries[q].addHandler(handler);
        });

        return this;
    },

    /**
     * unregisters a query and all it's handlers, or a specific handler for a query
     *
     * @param {string} q the media query to target
     * @param {object || function} [handler] specific handler to unregister
     */
    unregister : function(q, handler) {
        var query = this.queries[q];

        if(query) {
            if(handler) {
                query.removeHandler(handler);
            }
            else {
                query.clear();
                delete this.queries[q];
            }
        }

        return this;
    }
};

module.exports = MediaQueryDispatch;


/***/ }),
/* 322 */
/*!***************************************************!*\
  !*** ./node_modules/enquire.js/src/MediaQuery.js ***!
  \***************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var QueryHandler = __webpack_require__(/*! ./QueryHandler */ 323);
var each = __webpack_require__(/*! ./Util */ 111).each;

/**
 * Represents a single media query, manages it's state and registered handlers for this query
 *
 * @constructor
 * @param {string} query the media query string
 * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design
 */
function MediaQuery(query, isUnconditional) {
    this.query = query;
    this.isUnconditional = isUnconditional;
    this.handlers = [];
    this.mql = window.matchMedia(query);

    var self = this;
    this.listener = function(mql) {
        // Chrome passes an MediaQueryListEvent object, while other browsers pass MediaQueryList directly
        self.mql = mql.currentTarget || mql;
        self.assess();
    };
    this.mql.addListener(this.listener);
}

MediaQuery.prototype = {

    constuctor : MediaQuery,

    /**
     * add a handler for this query, triggering if already active
     *
     * @param {object} handler
     * @param {function} handler.match callback for when query is activated
     * @param {function} [handler.unmatch] callback for when query is deactivated
     * @param {function} [handler.setup] callback for immediate execution when a query handler is registered
     * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?
     */
    addHandler : function(handler) {
        var qh = new QueryHandler(handler);
        this.handlers.push(qh);

        this.matches() && qh.on();
    },

    /**
     * removes the given handler from the collection, and calls it's destroy methods
     *
     * @param {object || function} handler the handler to remove
     */
    removeHandler : function(handler) {
        var handlers = this.handlers;
        each(handlers, function(h, i) {
            if(h.equals(handler)) {
                h.destroy();
                return !handlers.splice(i,1); //remove from array and exit each early
            }
        });
    },

    /**
     * Determine whether the media query should be considered a match
     *
     * @return {Boolean} true if media query can be considered a match, false otherwise
     */
    matches : function() {
        return this.mql.matches || this.isUnconditional;
    },

    /**
     * Clears all handlers and unbinds events
     */
    clear : function() {
        each(this.handlers, function(handler) {
            handler.destroy();
        });
        this.mql.removeListener(this.listener);
        this.handlers.length = 0; //clear array
    },

    /*
        * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match
        */
    assess : function() {
        var action = this.matches() ? 'on' : 'off';

        each(this.handlers, function(handler) {
            handler[action]();
        });
    }
};

module.exports = MediaQuery;


/***/ }),
/* 323 */
/*!*****************************************************!*\
  !*** ./node_modules/enquire.js/src/QueryHandler.js ***!
  \*****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Delegate to handle a media query being matched and unmatched.
 *
 * @param {object} options
 * @param {function} options.match callback for when the media query is matched
 * @param {function} [options.unmatch] callback for when the media query is unmatched
 * @param {function} [options.setup] one-time callback triggered the first time a query is matched
 * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?
 * @constructor
 */
function QueryHandler(options) {
    this.options = options;
    !options.deferSetup && this.setup();
}

QueryHandler.prototype = {

    constructor : QueryHandler,

    /**
     * coordinates setup of the handler
     *
     * @function
     */
    setup : function() {
        if(this.options.setup) {
            this.options.setup();
        }
        this.initialised = true;
    },

    /**
     * coordinates setup and triggering of the handler
     *
     * @function
     */
    on : function() {
        !this.initialised && this.setup();
        this.options.match && this.options.match();
    },

    /**
     * coordinates the unmatch event for the handler
     *
     * @function
     */
    off : function() {
        this.options.unmatch && this.options.unmatch();
    },

    /**
     * called when a handler is to be destroyed.
     * delegates to the destroy or unmatch callbacks, depending on availability.
     *
     * @function
     */
    destroy : function() {
        this.options.destroy ? this.options.destroy() : this.off();
    },

    /**
     * determines equality by reference.
     * if object is supplied compare options, if function, compare match callback
     *
     * @function
     * @param {object || function} [target] the target for comparison
     */
    equals : function(target) {
        return this.options === target || this.options.match === target;
    }

};

module.exports = QueryHandler;


/***/ }),
/* 324 */
/*!*************************************!*\
  !*** ./src/blocks/section/block.js ***!
  \*************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss__ = __webpack_require__(/*! ./style.scss */ 325);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__style_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 326);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__editor_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__attributes__ = __webpack_require__(/*! ./attributes */ 327);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__edit__ = __webpack_require__(/*! ./edit */ 328);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__inline_styles__ = __webpack_require__(/*! ./inline-styles */ 112);
/**
 * BLOCK: Section
 */




//  Import CSS.






// Components
var __ = wp.i18n.__;

// Register block controls

var registerBlockType = wp.blocks.registerBlockType;
var InnerBlocks = wp.editor.InnerBlocks;

/**
 * Register: as Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("uagb/section", {
	title: uagb_blocks_info.blocks["uagb/section"]["title"],
	description: uagb_blocks_info.blocks["uagb/section"]["description"],
	icon: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__["a" /* default */].section,
	category: uagb_blocks_info.category,
	keywords: [__("section"), __("uagb")],
	attributes: __WEBPACK_IMPORTED_MODULE_4__attributes__["a" /* default */],
	edit: __WEBPACK_IMPORTED_MODULE_5__edit__["a" /* default */],
	getEditWrapperProps: function getEditWrapperProps(attributes) {
		var align = attributes.align,
		    contentWidth = attributes.contentWidth;

		if ("left" === align || "right" === align || "wide" === align || "full" === align) {
			if ("full_width" == contentWidth) {
				return { "data-align": align };
			}
		}
	},

	save: function save(props) {
		var attributes = props.attributes,
		    className = props.className;
		var _props$attributes = props.attributes,
		    block_id = _props$attributes.block_id,
		    tag = _props$attributes.tag,
		    backgroundType = _props$attributes.backgroundType,
		    backgroundVideo = _props$attributes.backgroundVideo,
		    contentWidth = _props$attributes.contentWidth,
		    align = _props$attributes.align;


		var block_controls_class = "";

		if ("full_width" == contentWidth) {

			if (align == "wide" || align == "full") {
				block_controls_class = "align" + align;
			}
		}

		var CustomTag = "" + tag;

		return wp.element.createElement(
			CustomTag,
			{
				className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-section__wrap", "uagb-section__background-" + backgroundType, block_controls_class),
				id: "uagb-section-" + block_id
			},
			wp.element.createElement("div", { className: "uagb-section__overlay" }),
			"video" == backgroundType && wp.element.createElement(
				"div",
				{ className: "uagb-section__video-wrap" },
				backgroundVideo && wp.element.createElement("video", { src: backgroundVideo.url, autoPlay: true, loop: true, muted: true })
			),
			wp.element.createElement(
				"div",
				{ className: "uagb-section__inner-wrap" },
				wp.element.createElement(InnerBlocks.Content, null)
			)
		);
	}
});

/***/ }),
/* 325 */
/*!***************************************!*\
  !*** ./src/blocks/section/style.scss ***!
  \***************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 326 */
/*!****************************************!*\
  !*** ./src/blocks/section/editor.scss ***!
  \****************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 327 */
/*!******************************************!*\
  !*** ./src/blocks/section/attributes.js ***!
  \******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * BLOCK: UAGB Section Attributes
 */
var attributes = {
	align: {
		type: "string",
		default: "center"
	},
	block_id: {
		type: "string"
	},
	topPadding: {
		type: "number",
		default: 20
	},
	bottomPadding: {
		type: "number",
		default: 20
	},
	leftPadding: {
		type: "number",
		default: 20
	},
	rightPadding: {
		type: "number",
		default: 20
	},
	topMargin: {
		type: "number",
		default: 0
	},
	bottomMargin: {
		type: "number",
		default: 0
	},
	leftMargin: {
		type: "number",
		default: 0
	},
	rightMargin: {
		type: "number",
		default: 0
	},
	contentWidth: {
		type: "string",
		default: "boxed"
	},
	width: {
		type: "number",
		default: 900
	},
	innerWidth: {
		type: "number",
		default: 1140
	},
	themeWidth: {
		type: "boolean",
		default: false
	},
	tag: {
		type: "string",
		default: "section"
	},
	backgroundType: {
		type: "string"
	},
	backgroundImage: {
		type: "object"
	},
	backgroundPosition: {
		type: "string",
		default: "center-center"
	},
	backgroundSize: {
		type: "string",
		default: "cover"
	},
	backgroundRepeat: {
		type: "string",
		default: "no-repeat"
	},
	backgroundAttachment: {
		type: "string",
		default: "scroll"
	},
	backgroundVideo: {
		type: "object"
	},
	backgroundColor: {
		type: "string"
	},
	gradientColor1: {
		type: "string"
	},
	gradientColor2: {
		type: "string"
	},
	gradientType: {
		type: "string",
		default: "linear"
	},
	gradientLocation1: {
		type: "number",
		default: 0
	},
	gradientLocation2: {
		type: "number",
		default: 100
	},
	gradientAngle: {
		type: "number",
		default: 0
	},
	backgroundOpacity: {
		type: "number"
	},
	backgroundVideoOpacity: {
		type: "number",
		default: 50
	},
	backgroundVideoColor: {
		type: "string"
	},
	backgroundImageColor: {
		type: "string"
	},
	borderStyle: {
		type: "string",
		default: "none"
	},
	borderWidth: {
		type: "number",
		default: 1
	},
	borderRadius: {
		type: "number"
	},
	borderColor: {
		type: "string"
	}
};

/* harmony default export */ __webpack_exports__["a"] = (attributes);

/***/ }),
/* 328 */
/*!************************************!*\
  !*** ./src/blocks/section/edit.js ***!
  \************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__styling__ = __webpack_require__(/*! ./styling */ 329);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * BLOCK: UAGB - Section Edit Class
 */

// Import classes



var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$editor = wp.editor,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    BlockAlignmentToolbar = _wp$editor.BlockAlignmentToolbar,
    ColorPalette = _wp$editor.ColorPalette,
    InspectorControls = _wp$editor.InspectorControls,
    InnerBlocks = _wp$editor.InnerBlocks,
    MediaUpload = _wp$editor.MediaUpload,
    PanelColorSettings = _wp$editor.PanelColorSettings;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    Button = _wp$components.Button,
    Dashicon = _wp$components.Dashicon,
    BaseControl = _wp$components.BaseControl,
    withNotices = _wp$components.withNotices,
    ToggleControl = _wp$components.ToggleControl;

var UAGBSectionEdit = function (_Component) {
	_inherits(UAGBSectionEdit, _Component);

	function UAGBSectionEdit() {
		_classCallCheck(this, UAGBSectionEdit);

		var _this = _possibleConstructorReturn(this, (UAGBSectionEdit.__proto__ || Object.getPrototypeOf(UAGBSectionEdit)).apply(this, arguments));

		_this.onRemoveVideo = _this.onRemoveVideo.bind(_this);
		_this.onRemoveImage = _this.onRemoveImage.bind(_this);
		_this.onSelectImage = _this.onSelectImage.bind(_this);
		_this.onSelectVideo = _this.onSelectVideo.bind(_this);
		return _this;
	}

	_createClass(UAGBSectionEdit, [{
		key: "componentDidMount",
		value: function componentDidMount() {

			// Assigning block_id in the attribute.
			this.props.setAttributes({ block_id: this.props.clientId });

			// Pushing Style tag for this block css.
			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-section-style-" + this.props.clientId);
			document.head.appendChild($style);
		}

		/*
   * Event to set Image as null while removing.
   */

	}, {
		key: "onRemoveImage",
		value: function onRemoveImage() {
			var backgroundImage = this.props.attributes.backgroundImage;
			var setAttributes = this.props.setAttributes;


			setAttributes({ backgroundImage: null });
		}

		/*
   * Event to set Image as while adding.
   */

	}, {
		key: "onSelectImage",
		value: function onSelectImage(media) {
			var backgroundImage = this.props.attributes.backgroundImage;
			var setAttributes = this.props.setAttributes;


			if (!media || !media.url) {
				setAttributes({ backgroundImage: null });
				return;
			}

			if (!media.type || "image" != media.type) {
				return;
			}

			setAttributes({ backgroundImage: media });
		}

		/*
   * Event to set Video as null while removing.
   */

	}, {
		key: "onRemoveVideo",
		value: function onRemoveVideo() {
			var backgroundVideo = this.props.attributes.backgroundVideo;
			var setAttributes = this.props.setAttributes;


			setAttributes({ backgroundVideo: null });
		}

		/*
   * Event to set Video while adding.
   */

	}, {
		key: "onSelectVideo",
		value: function onSelectVideo(media) {
			var backgroundVideo = this.props.attributes.backgroundVideo;
			var setAttributes = this.props.setAttributes;


			if (!media || !media.url) {
				setAttributes({ backgroundVideo: null });
				return;
			}
			if (!media.type || "video" != media.type) {
				return;
			}
			setAttributes({ backgroundVideo: media });
		}
	}, {
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes,
			    isSelected = _props.isSelected,
			    className = _props.className;
			var align = attributes.align,
			    padding = attributes.padding,
			    contentWidth = attributes.contentWidth,
			    width = attributes.width,
			    innerWidth = attributes.innerWidth,
			    tag = attributes.tag,
			    themeWidth = attributes.themeWidth,
			    leftPadding = attributes.leftPadding,
			    rightPadding = attributes.rightPadding,
			    topPadding = attributes.topPadding,
			    bottomPadding = attributes.bottomPadding,
			    leftMargin = attributes.leftMargin,
			    rightMargin = attributes.rightMargin,
			    topMargin = attributes.topMargin,
			    bottomMargin = attributes.bottomMargin,
			    backgroundType = attributes.backgroundType,
			    backgroundImage = attributes.backgroundImage,
			    backgroundVideo = attributes.backgroundVideo,
			    backgroundColor = attributes.backgroundColor,
			    backgroundPosition = attributes.backgroundPosition,
			    backgroundAttachment = attributes.backgroundAttachment,
			    backgroundRepeat = attributes.backgroundRepeat,
			    backgroundSize = attributes.backgroundSize,
			    gradientColor1 = attributes.gradientColor1,
			    gradientColor2 = attributes.gradientColor2,
			    gradientLocation1 = attributes.gradientLocation1,
			    gradientLocation2 = attributes.gradientLocation2,
			    gradientType = attributes.gradientType,
			    gradientAngle = attributes.gradientAngle,
			    backgroundOpacity = attributes.backgroundOpacity,
			    backgroundVideoColor = attributes.backgroundVideoColor,
			    backgroundVideoOpacity = attributes.backgroundVideoOpacity,
			    backgroundImageColor = attributes.backgroundImageColor,
			    borderStyle = attributes.borderStyle,
			    borderWidth = attributes.borderWidth,
			    borderRadius = attributes.borderRadius,
			    borderColor = attributes.borderColor;


			var CustomTag = "" + tag;

			var element = document.getElementById("uagb-section-style-" + this.props.clientId);

			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_1__styling__["a" /* default */])(this.props);
			}

			var onColorChange = function onColorChange(colorValue) {
				setAttributes({ backgroundColor: colorValue });
			};

			var active = isSelected ? "active" : "not-active";

			var block_controls = ["left", "center", "right"];
			var block_controls_class = "";

			if ("full_width" == contentWidth) {
				block_controls = ["wide", "full"];

				if (align == "wide" || align == "full") {
					block_controls_class = "align" + align;
				}
			}

			return wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					BlockControls,
					null,
					wp.element.createElement(BlockAlignmentToolbar, {
						value: align,
						onChange: function onChange(value) {
							setAttributes({ align: value });
						},
						controls: block_controls
					})
				),
				wp.element.createElement(
					InspectorControls,
					null,
					wp.element.createElement(
						PanelBody,
						{ title: __("Layout") },
						wp.element.createElement(SelectControl, {
							label: __("Content Width"),
							value: contentWidth,
							onChange: function onChange(value) {
								return setAttributes({ contentWidth: value });
							},
							options: [{ value: "boxed", label: __("Boxed") }, { value: "full_width", label: __("Full Width") }]
						}),
						contentWidth == "boxed" && wp.element.createElement(RangeControl, {
							label: __("Width"),
							value: width,
							min: 0,
							max: 2000,
							onChange: function onChange(value) {
								return setAttributes({ width: value });
							}
						}),
						contentWidth != "boxed" && wp.element.createElement(ToggleControl, {
							label: __("Inherit Inner Width from Theme"),
							checked: themeWidth,
							onChange: function onChange(value) {
								return setAttributes({ themeWidth: !themeWidth });
							}
						}),
						contentWidth != "boxed" && !themeWidth && wp.element.createElement(RangeControl, {
							label: __("Inner Width"),
							value: innerWidth,
							min: 0,
							max: 2000,
							onChange: function onChange(value) {
								return setAttributes({ innerWidth: value });
							}
						}),
						wp.element.createElement(SelectControl, {
							label: __("HTML Tag"),
							value: tag,
							onChange: function onChange(value) {
								return setAttributes({ tag: value });
							},
							options: [{ value: "div", label: __("div") }, { value: "header", label: __("header") }, { value: "footer", label: __("footer") }, { value: "main", label: __("main") }, { value: "article", label: __("article") }, { value: "section", label: __("section") }, { value: "aside", label: __("aside") }, { value: "nav", label: __("nav") }]
						})
					),
					wp.element.createElement(
						PanelBody,
						{ title: __("Spacing"), initialOpen: false },
						wp.element.createElement(RangeControl, {
							label: __("Left Padding"),
							value: leftPadding,
							onChange: function onChange(value) {
								return setAttributes({ leftPadding: value });
							},
							min: 0,
							max: 200,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Right Padding"),
							value: rightPadding,
							onChange: function onChange(value) {
								return setAttributes({ rightPadding: value });
							},
							min: 0,
							max: 200,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Top Padding"),
							value: topPadding,
							onChange: function onChange(value) {
								return setAttributes({ topPadding: value });
							},
							min: 0,
							max: 200,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Bottom Padding"),
							value: bottomPadding,
							onChange: function onChange(value) {
								return setAttributes({ bottomPadding: value });
							},
							min: 0,
							max: 200,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Left Margin"),
							value: leftMargin,
							onChange: function onChange(value) {
								return setAttributes({ leftMargin: value });
							},
							min: -200,
							max: 200,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Right Margin"),
							value: rightMargin,
							onChange: function onChange(value) {
								return setAttributes({ rightMargin: value });
							},
							min: -200,
							max: 200,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Top Margin"),
							value: topMargin,
							onChange: function onChange(value) {
								return setAttributes({ topMargin: value });
							},
							min: -200,
							max: 200,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Bottom Margin"),
							value: bottomMargin,
							onChange: function onChange(value) {
								return setAttributes({ bottomMargin: value });
							},
							min: -200,
							max: 200,
							allowReset: true
						})
					),
					wp.element.createElement(
						PanelBody,
						{ title: __("Background"), initialOpen: false },
						wp.element.createElement(SelectControl, {
							label: __("Background Type"),
							value: backgroundType,
							onChange: function onChange(value) {
								return setAttributes({ backgroundType: value });
							},
							options: [{ value: "none", label: __("None") }, { value: "color", label: __("Color") }, { value: "gradient", label: __("Gradient") }, { value: "image", label: __("Image") }, { value: "video", label: __("Video") }]
						}),
						"color" == backgroundType && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(
								"p",
								{ className: "uagb-setting-label" },
								__("Background Color"),
								wp.element.createElement(
									"span",
									{ className: "components-base-control__label" },
									wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: backgroundColor } })
								)
							),
							wp.element.createElement(ColorPalette, {
								value: backgroundColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ backgroundColor: colorValue });
								},
								allowReset: true
							})
						),
						"image" == backgroundType && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(
								BaseControl,
								{
									className: "editor-bg-image-control",
									label: __("Background Image") },
								wp.element.createElement(MediaUpload, {
									title: __("Select Background Image"),
									onSelect: this.onSelectImage,
									allowedTypes: ["image"],
									value: backgroundImage,
									render: function render(_ref) {
										var open = _ref.open;
										return wp.element.createElement(
											Button,
											{ isDefault: true, onClick: open },
											!backgroundImage ? __("Select Background Image") : __("Replace image")
										);
									}
								}),
								backgroundImage && wp.element.createElement(
									Button,
									{ className: "uagb-rm-btn", onClick: this.onRemoveImage, isLink: true, isDestructive: true },
									__("Remove Image")
								)
							),
							backgroundImage && wp.element.createElement(
								Fragment,
								null,
								wp.element.createElement(SelectControl, {
									label: __("Image Position"),
									value: backgroundPosition,
									onChange: function onChange(value) {
										return setAttributes({ backgroundPosition: value });
									},
									options: [{ value: "top-left", label: __("Top Left") }, { value: "top-center", label: __("Top Center") }, { value: "top-right", label: __("Top Right") }, { value: "center-left", label: __("Center Left") }, { value: "center-center", label: __("Center Center") }, { value: "center-right", label: __("Center Right") }, { value: "bottom-left", label: __("Bottom Left") }, { value: "bottom-center", label: __("Bottom Center") }, { value: "bottom-right", label: __("Bottom Right") }]
								}),
								wp.element.createElement(SelectControl, {
									label: __("Attachment"),
									value: backgroundAttachment,
									onChange: function onChange(value) {
										return setAttributes({ backgroundAttachment: value });
									},
									options: [{ value: "fixed", label: __("Fixed") }, { value: "scroll", label: __("Scroll") }]
								}),
								wp.element.createElement(SelectControl, {
									label: __("Repeat"),
									value: backgroundRepeat,
									onChange: function onChange(value) {
										return setAttributes({ backgroundRepeat: value });
									},
									options: [{ value: "no-repeat", label: __("No Repeat") }, { value: "repeat", label: __("Repeat") }, { value: "repeat-x", label: __("Repeat-x") }, { value: "repeat-y", label: __("Repeat-y") }]
								}),
								wp.element.createElement(SelectControl, {
									label: __("Size"),
									value: backgroundSize,
									onChange: function onChange(value) {
										return setAttributes({ backgroundSize: value });
									},
									options: [{ value: "auto", label: __("Auto") }, { value: "cover", label: __("Cover") }, { value: "contain", label: __("Contain") }]
								}),
								wp.element.createElement(
									Fragment,
									null,
									wp.element.createElement(
										"p",
										{ className: "uagb-setting-label" },
										__("Image Overlay Color"),
										wp.element.createElement(
											"span",
											{ className: "components-base-control__label" },
											wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: backgroundImageColor } })
										)
									),
									wp.element.createElement(ColorPalette, {
										value: backgroundImageColor,
										onChange: function onChange(colorValue) {
											return setAttributes({ backgroundImageColor: colorValue });
										},
										allowReset: true
									})
								)
							)
						),
						"gradient" == backgroundType && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(PanelColorSettings, {
								title: __("Color Settings"),
								colorSettings: [{
									value: gradientColor1,
									onChange: function onChange(value) {
										return setAttributes({ gradientColor1: value });
									},
									label: __("Color 1")
								}, {
									value: gradientColor2,
									onChange: function onChange(value) {
										return setAttributes({ gradientColor2: value });
									},
									label: __("Color 2")
								}]
							}),
							wp.element.createElement(SelectControl, {
								label: __("Type"),
								value: gradientType,
								onChange: function onChange(value) {
									return setAttributes({ gradientType: value });
								},
								options: [{ value: "linear", label: __("Linear") }, { value: "radial", label: __("Radial") }]
							}),
							wp.element.createElement(RangeControl, {
								label: __("Location 1"),
								value: gradientLocation1,
								onChange: function onChange(value) {
									return setAttributes({ gradientLocation1: value });
								},
								min: 0,
								max: 100,
								allowReset: true
							}),
							wp.element.createElement(RangeControl, {
								label: __("Location 2"),
								value: gradientLocation2,
								onChange: function onChange(value) {
									return setAttributes({ gradientLocation2: value });
								},
								min: 0,
								max: 100,
								allowReset: true
							}),
							wp.element.createElement(RangeControl, {
								label: __("Angle"),
								value: gradientAngle,
								onChange: function onChange(value) {
									return setAttributes({ gradientAngle: value });
								},
								min: 0,
								max: 360,
								allowReset: true
							})
						),
						"video" == backgroundType && wp.element.createElement(
							BaseControl,
							{
								className: "editor-bg-video-control",
								label: __("Background Video")
							},
							wp.element.createElement(MediaUpload, {
								title: __("Select Background Video"),
								onSelect: this.onSelectVideo,
								allowedTypes: ["video"],
								value: backgroundVideo,
								render: function render(_ref2) {
									var open = _ref2.open;
									return wp.element.createElement(
										Button,
										{ isDefault: true, onClick: open },
										!backgroundVideo ? __("Select Background Video") : __("Replace Video")
									);
								}
							}),
							backgroundVideo && wp.element.createElement(
								Button,
								{ onClick: this.onRemoveVideo, isLink: true, isDestructive: true },
								__("Remove Video")
							)
						),
						("color" == backgroundType || "image" == backgroundType && backgroundImage || "gradient" == backgroundType) && wp.element.createElement(RangeControl, {
							label: __("Opacity"),
							value: backgroundOpacity,
							onChange: function onChange(value) {
								return setAttributes({ backgroundOpacity: value });
							},
							min: 0,
							max: 100,
							allowReset: true,
							initialPosition: 0
						}),
						"video" == backgroundType && backgroundVideo && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(
								"p",
								{ className: "uagb-setting-label" },
								__("Video Overlay Color"),
								wp.element.createElement(
									"span",
									{ className: "components-base-control__label" },
									wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: backgroundVideoColor } })
								)
							),
							wp.element.createElement(ColorPalette, {
								value: backgroundVideoColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ backgroundVideoColor: colorValue });
								},
								allowReset: true
							})
						),
						"video" == backgroundType && backgroundVideo && wp.element.createElement(RangeControl, {
							label: __("Opacity"),
							value: backgroundVideoOpacity,
							onChange: function onChange(value) {
								return setAttributes({ backgroundVideoOpacity: value });
							},
							min: 0,
							max: 100,
							allowReset: true,
							initialPosition: 50
						})
					),
					wp.element.createElement(
						PanelBody,
						{ title: __("Border"), initialOpen: false },
						wp.element.createElement(SelectControl, {
							label: __("Border Style"),
							value: borderStyle,
							onChange: function onChange(value) {
								return setAttributes({ borderStyle: value });
							},
							options: [{ value: "none", label: __("None") }, { value: "solid", label: __("Solid") }, { value: "dotted", label: __("Dotted") }, { value: "dashed", label: __("Dashed") }, { value: "double", label: __("Double") }, { value: "groove", label: __("Groove") }, { value: "inset", label: __("Inset") }, { value: "outset", label: __("Outset") }, { value: "ridge", label: __("Ridge") }]
						}),
						"none" != borderStyle && wp.element.createElement(RangeControl, {
							label: __("Border Width"),
							value: borderWidth,
							onChange: function onChange(value) {
								return setAttributes({ borderWidth: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Border Radius"),
							value: borderRadius,
							onChange: function onChange(value) {
								return setAttributes({ borderRadius: value });
							},
							min: 0,
							max: 1000,
							allowReset: true
						}),
						"none" != borderStyle && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(
								"p",
								{ className: "uagb-setting-label" },
								__("Border Color"),
								wp.element.createElement(
									"span",
									{ className: "components-base-control__label" },
									wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: borderColor } })
								)
							),
							wp.element.createElement(ColorPalette, {
								value: borderColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ borderColor: colorValue });
								},
								allowReset: true
							})
						)
					)
				),
				wp.element.createElement(
					CustomTag,
					{
						className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-section__wrap", "uagb-section__background-" + backgroundType, "uagb-section__edit-" + active, block_controls_class),
						id: "uagb-section-" + this.props.clientId
					},
					wp.element.createElement("div", { className: "uagb-section__overlay" }),
					"video" == backgroundType && wp.element.createElement(
						"div",
						{ className: "uagb-section__video-wrap" },
						backgroundVideo && wp.element.createElement("video", { src: backgroundVideo.url, autoPlay: true, loop: true, muted: true })
					),
					wp.element.createElement(
						"div",
						{ className: "uagb-section__inner-wrap" },
						wp.element.createElement(InnerBlocks, { templateLock: false })
					)
				)
			);
		}
	}]);

	return UAGBSectionEdit;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (withNotices(UAGBSectionEdit));

/***/ }),
/* 329 */
/*!***************************************!*\
  !*** ./src/blocks/section/styling.js ***!
  \***************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__inline_styles__ = __webpack_require__(/*! ./inline-styles */ 112);
/**
 * Set inline styles.
 * @param  {object} props - The block object.
 * @return {object} The inline background type CSS.
 */



function styling(props) {
	var _props$attributes = props.attributes,
	    backgroundType = _props$attributes.backgroundType,
	    backgroundVideoColor = _props$attributes.backgroundVideoColor,
	    backgroundImageColor = _props$attributes.backgroundImageColor,
	    backgroundOpacity = _props$attributes.backgroundOpacity,
	    backgroundColor = _props$attributes.backgroundColor,
	    backgroundVideoOpacity = _props$attributes.backgroundVideoOpacity,
	    backgroundVideo = _props$attributes.backgroundVideo,
	    className = _props$attributes.className,
	    innerWidth = _props$attributes.innerWidth,
	    contentWidth = _props$attributes.contentWidth,
	    borderRadius = _props$attributes.borderRadius;


	var inner_width = "100%";

	if (typeof contentWidth != "undefined") {
		if ("boxed" != contentWidth) {
			if (typeof innerWidth != "undefined") {
				inner_width = innerWidth + "px";
			}
		}
	}

	var selectors = {
		".uagb-section__wrap": Object(__WEBPACK_IMPORTED_MODULE_0__inline_styles__["a" /* default */])(props),
		" .uagb-section__video-wrap": {
			"opacity": typeof backgroundVideoOpacity != "undefined" ? (100 - backgroundVideoOpacity) / 100 : 0.5
		},
		" .uagb-section__inner-wrap": {
			"max-width": inner_width
		}
	};

	selectors[" > .uagb-section__overlay"] = {};

	if ("video" == backgroundType) {
		selectors[" > .uagb-section__overlay"] = {
			"opacity": 1,
			"background-color": backgroundVideoColor
		};
	} else if ("image" == backgroundType) {
		selectors[" > .uagb-section__overlay"] = {
			"opacity": typeof backgroundOpacity != "undefined" ? backgroundOpacity / 100 : 0,
			"background-color": backgroundImageColor
		};
	} else if ("color" == backgroundType) {
		selectors[" > .uagb-section__overlay"] = {
			"opacity": typeof backgroundOpacity != "undefined" ? backgroundOpacity / 100 : "",
			"background-color": backgroundColor
		};
	}

	selectors[" > .uagb-section__overlay"]["border-radius"] = borderRadius + "px";

	var styling_css = "";

	for (var i in selectors) {

		styling_css += "#uagb-section-" + props.clientId;

		styling_css += i + " { ";

		var sel = selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (styling);

/***/ }),
/* 330 */
/*!*************************************!*\
  !*** ./src/blocks/buttons/block.js ***!
  \*************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_times__ = __webpack_require__(/*! lodash/times */ 8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_times___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_times__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__style_scss__ = __webpack_require__(/*! ./style.scss */ 332);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__style_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 333);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__editor_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__attributes__ = __webpack_require__(/*! ./attributes */ 334);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__edit__ = __webpack_require__(/*! ./edit */ 335);
/**
 * BLOCK: Multi Buttons
 */




//  Import CSS.





// Components
var __ = wp.i18n.__;

// Register block controls

var registerBlockType = wp.blocks.registerBlockType;
var RichText = wp.editor.RichText;

/**
 * Register: as Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("uagb/buttons", {
	title: uagb_blocks_info.blocks["uagb/buttons"]["title"],
	description: uagb_blocks_info.blocks["uagb/buttons"]["description"],
	icon: __WEBPACK_IMPORTED_MODULE_2__dist_blocks_uagb_controls_block_icons__["a" /* default */].buttons,
	category: uagb_blocks_info.category,
	keywords: [__("buttons"), __("multi buttons"), __("uagb")],
	attributes: __WEBPACK_IMPORTED_MODULE_5__attributes__["a" /* default */],
	edit: __WEBPACK_IMPORTED_MODULE_6__edit__["a" /* default */],
	save: function save(props) {
		var attributes = props.attributes,
		    className = props.className;
		var _props$attributes = props.attributes,
		    block_id = _props$attributes.block_id,
		    align = _props$attributes.align,
		    items = _props$attributes.items,
		    buttons = _props$attributes.buttons,
		    btn_count = _props$attributes.btn_count;


		var renderButtons = function renderButtons(index) {

			if ("undefined" != typeof buttons[index]) {

				return wp.element.createElement(
					"div",
					{
						className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-buttons-repeater-" + index, "uagb-button__wrapper"),
						key: index
					},
					wp.element.createElement(RichText.Content, {
						placeholder: __("Click Here"),
						value: buttons[index].label,
						tagName: "a",
						className: "uagb-button__link",
						href: buttons[index].link,
						rel: "noopener noreferrer",
						target: buttons[index].target
					})
				);
			}
		};

		return wp.element.createElement(
			"div",
			{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-buttons__outer-wrap"),
				id: "uagb-buttons-" + block_id
			},
			wp.element.createElement(
				"div",
				{ className: "uagb-buttons__wrap" },
				__WEBPACK_IMPORTED_MODULE_1_lodash_times___default()(btn_count, function (n) {
					return renderButtons(n);
				})
			)
		);
	}
});

/***/ }),
/* 331 */
/*!**********************************************!*\
  !*** ./node_modules/lodash/_castFunction.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(/*! ./identity */ 40);

/**
 * Casts `value` to `identity` if it's not a function.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Function} Returns cast function.
 */
function castFunction(value) {
  return typeof value == 'function' ? value : identity;
}

module.exports = castFunction;


/***/ }),
/* 332 */
/*!***************************************!*\
  !*** ./src/blocks/buttons/style.scss ***!
  \***************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 333 */
/*!****************************************!*\
  !*** ./src/blocks/buttons/editor.scss ***!
  \****************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 334 */
/*!******************************************!*\
  !*** ./src/blocks/buttons/attributes.js ***!
  \******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * BLOCK: UAGB Section Attributes
 */
var ITEM_COUNT = 2;

var buttons = [];

for (var i = 1; i <= ITEM_COUNT; i++) {
	var label = "Click Here " + "#" + i;
	var link = "#";
	buttons.push({
		"label": label,
		"link": link,
		"target": "_self",
		"size": "",
		"vPadding": 10,
		"hPadding": 14,
		"borderWidth": 1,
		"borderRadius": 2,
		"borderStyle": "solid",
		"borderColor": "#333",
		"borderHColor": "#333",
		"color": "#333",
		"background": "",
		"hColor": "#333",
		"hBackground": ""
	});
}

var attributes = {
	block_id: {
		type: "string"
	},
	align: {
		type: "string",
		default: "center"
	},
	btn_count: {
		type: "number",
		default: ITEM_COUNT
	},
	buttons: {
		type: "array",
		default: buttons
	},
	gap: {
		type: "number",
		default: 10
	},
	stack: {
		type: "string",
		default: "none"
	}
};

/* harmony default export */ __webpack_exports__["a"] = (attributes);

/***/ }),
/* 335 */
/*!************************************!*\
  !*** ./src/blocks/buttons/edit.js ***!
  \************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_times__ = __webpack_require__(/*! lodash/times */ 8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_times___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_times__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__styling__ = __webpack_require__(/*! ./styling */ 336);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * BLOCK: UAGB - Section Edit Class
 */

// Import classes




var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$editor = wp.editor,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    BlockAlignmentToolbar = _wp$editor.BlockAlignmentToolbar,
    InspectorControls = _wp$editor.InspectorControls,
    RichText = _wp$editor.RichText,
    PanelColorSettings = _wp$editor.PanelColorSettings,
    URLInput = _wp$editor.URLInput;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl;

var UAGBMultiButtonEdit = function (_Component) {
	_inherits(UAGBMultiButtonEdit, _Component);

	function UAGBMultiButtonEdit() {
		_classCallCheck(this, UAGBMultiButtonEdit);

		var _this = _possibleConstructorReturn(this, (UAGBMultiButtonEdit.__proto__ || Object.getPrototypeOf(UAGBMultiButtonEdit)).apply(this, arguments));

		_this.state = {
			isHovered: "false",
			isFocused: "false"
		};
		return _this;
	}

	_createClass(UAGBMultiButtonEdit, [{
		key: "componentDidMount",
		value: function componentDidMount() {

			// Assigning block_id in the attribute.
			this.props.setAttributes({ block_id: this.props.clientId });

			// Pushing Style tag for this block css.
			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-style-buttons-" + this.props.clientId);
			document.head.appendChild($style);
		}
	}, {
		key: "componentDidUpdate",
		value: function componentDidUpdate(prevProps) {
			if (!this.props.isSelected && prevProps.isSelected && this.state.isFocused) {
				this.setState({
					isFocused: "false"
				});
			}
		}
	}, {
		key: "saveButton",
		value: function saveButton(value, index) {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes;
			var buttons = attributes.buttons;


			var newItems = buttons.map(function (item, thisIndex) {
				if (index === thisIndex) {
					item = _extends({}, item, value);
				}

				return item;
			});
			setAttributes({
				buttons: newItems
			});
		}
	}, {
		key: "render",
		value: function render() {
			var _this2 = this;

			var _props2 = this.props,
			    attributes = _props2.attributes,
			    setAttributes = _props2.setAttributes,
			    isSelected = _props2.isSelected;
			var align = attributes.align,
			    className = attributes.className,
			    btn_count = attributes.btn_count,
			    buttons = attributes.buttons,
			    gap = attributes.gap,
			    stack = attributes.stack;


			var onMouseOut = function onMouseOut() {
				if ("false" !== _this2.state.isHovered) {
					_this2.setState({
						isHovered: "false"
					});
				}
			};

			var updateFocusState = function updateFocusState(index) {
				_this2.setState({
					isFocused: index
				});
			};

			var updateHoverState = function updateHoverState(index) {
				_this2.setState({
					isHovered: index
				});
			};

			var buttonControls = function buttonControls(index) {
				return wp.element.createElement(
					PanelBody,
					{ key: index,
						title: __("Button") + " " + (index + 1) + " " + __("Settings"),
						initialOpen: false
					},
					wp.element.createElement(
						"p",
						{ className: "components-base-control__label" },
						__("Link")
					),
					wp.element.createElement(URLInput, {
						value: buttons[index].link,
						onChange: function onChange(value) {
							_this2.saveButton({ link: value }, index);
						}
					}),
					wp.element.createElement(SelectControl, {
						label: __("Link Target"),
						value: buttons[index].target,
						options: [{ value: "_self", label: __("Same Window") }, { value: "_blank", label: __("New Window") }],
						onChange: function onChange(value) {
							_this2.saveButton({ target: value }, index);
						}
					}),
					wp.element.createElement(RangeControl, {
						beforeIcon: "editor-textcolor",
						afterIcon: "editor-textcolor",
						label: __("Button Text Size"),
						value: buttons[index].size,
						onChange: function onChange(value) {
							_this2.saveButton({ size: value }, index);
						},
						min: 10,
						max: 100,
						initialPosition: 16
					}),
					wp.element.createElement(RangeControl, {
						label: __("Top and Bottom Padding"),
						value: buttons[index].vPadding,
						onChange: function onChange(value) {
							_this2.saveButton({ vPadding: value }, index);
						},
						min: 0,
						max: 100
					}),
					wp.element.createElement(RangeControl, {
						label: __("Left and Right Padding"),
						value: buttons[index].hPadding,
						onChange: function onChange(value) {
							_this2.saveButton({ hPadding: value }, index);
						},
						min: 0,
						max: 100
					}),
					wp.element.createElement(RangeControl, {
						label: __("Border Thickness"),
						value: buttons[index].borderWidth,
						onChange: function onChange(value) {
							_this2.saveButton({ borderWidth: value }, index);
						},
						min: 0,
						max: 20
					}),
					wp.element.createElement(SelectControl, {
						label: __("Border Style"),
						value: buttons[index].borderStyle,
						options: [{ value: "solid", label: __("Solid") }, { value: "dotted", label: __("Dotted") }, { value: "dashed", label: __("Dashed") }, { value: "double", label: __("Double") }],
						onChange: function onChange(value) {
							_this2.saveButton({ borderStyle: value }, index);
						}
					}),
					wp.element.createElement(RangeControl, {
						label: __("Border Radius"),
						value: buttons[index].borderRadius,
						onChange: function onChange(value) {
							_this2.saveButton({ borderRadius: value }, index);
						},
						min: 0,
						max: 50
					}),
					wp.element.createElement(PanelColorSettings, {
						title: __("Color Settings"),
						colorSettings: [{
							value: buttons[index].color,
							onChange: function onChange(value) {
								return _this2.saveButton({ color: value }, index);
							},
							label: __("Color")
						}, {
							value: buttons[index].background,
							onChange: function onChange(value) {
								return _this2.saveButton({ background: value }, index);
							},
							label: __("Background Color")
						}, {
							value: buttons[index].borderColor,
							onChange: function onChange(value) {
								return _this2.saveButton({ borderColor: value }, index);
							},
							label: __("Border Color")
						}, {
							value: buttons[index].hColor,
							onChange: function onChange(value) {
								return _this2.saveButton({ hColor: value }, index);
							},
							label: __("Hover Color")
						}, {
							value: buttons[index].hBackground,
							onChange: function onChange(value) {
								return _this2.saveButton({ hBackground: value }, index);
							},
							label: __("Background Hover Color")
						}, {
							value: buttons[index].borderHColor,
							onChange: function onChange(value) {
								return _this2.saveButton({ borderHColor: value }, index);
							},
							label: __("Border Hover Color")
						}]
					})
				);
			};

			var element = document.getElementById("uagb-style-buttons-" + this.props.clientId);

			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_2__styling__["a" /* default */])(this.props);
			}

			return wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					BlockControls,
					null,
					wp.element.createElement(BlockAlignmentToolbar, {
						value: align,
						onChange: function onChange(value) {
							setAttributes({ align: value });
						},
						controls: ["left", "center", "right", "full"]
					})
				),
				wp.element.createElement(
					InspectorControls,
					null,
					wp.element.createElement(
						PanelBody,
						{
							title: __("Button Count"),
							initialOpen: true
						},
						wp.element.createElement(RangeControl, {
							label: __("Number of Buttons"),
							value: btn_count,
							onChange: function onChange(newCount) {

								var cloneButtons = [].concat(_toConsumableArray(buttons));

								if (cloneButtons.length < newCount) {

									var incAmount = Math.abs(newCount - cloneButtons.length);

									{
										__WEBPACK_IMPORTED_MODULE_1_lodash_times___default()(incAmount, function (n) {

											cloneButtons.push({
												label: "Click Here " + "#" + (cloneButtons.length + 1),
												link: cloneButtons[0].link,
												target: cloneButtons[0].target,
												size: cloneButtons[0].size,
												vPadding: cloneButtons[0].vPadding,
												hPadding: cloneButtons[0].hPadding,
												borderRadius: cloneButtons[0].borderRadius,
												borderWidth: cloneButtons[0].borderWidth,
												borderColor: cloneButtons[0].borderColor,
												borderHColor: cloneButtons[0].borderHColor,
												borderStyle: cloneButtons[0].borderStyle,
												color: cloneButtons[0].color,
												background: cloneButtons[0].background,
												hColor: cloneButtons[0].hColor,
												hBackground: cloneButtons[0].hBackground });
										});
									}

									setAttributes({ buttons: cloneButtons });
								}
								setAttributes({ btn_count: newCount });
							},
							min: 1,
							max: 5
						})
					),
					__WEBPACK_IMPORTED_MODULE_1_lodash_times___default()(btn_count, function (n) {
						return buttonControls(n);
					}),
					wp.element.createElement(
						PanelBody,
						{
							title: __("Spacing"),
							initialOpen: false
						},
						wp.element.createElement(RangeControl, {
							label: __("Gap between Buttons"),
							value: gap,
							onChange: function onChange(value) {
								return setAttributes({ gap: value });
							},
							min: 0,
							max: 50
						}),
						wp.element.createElement(SelectControl, {
							label: __("Stack on"),
							value: stack,
							options: [{ value: "none", label: __("None") }, { value: "desktop", label: __("Desktop") }, { value: "tablet", label: __("Tablet") }, { value: "mobile", label: __("Mobile") }],
							onChange: function onChange(value) {
								return setAttributes({ stack: value });
							}
						}),
						wp.element.createElement(
							"p",
							{ className: "uagb-note" },
							__("Note: Choose on what breakpoint the buttons will stack.")
						)
					)
				),
				wp.element.createElement(
					"div",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-buttons__outer-wrap"),
						id: "uagb-buttons-" + this.props.clientId
					},
					wp.element.createElement(
						"div",
						{ className: "uagb-buttons__wrap" },
						buttons.map(function (button, index) {

							if (btn_count <= index) {
								return;
							}

							return wp.element.createElement(
								"div",
								{
									className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-buttons-repeater-" + index, "uagb-button__wrapper", isSelected && false !== _this2.state.isFocused && index === _this2.state.isFocused ? "uagb-button__active" : ""),
									key: index
								},
								wp.element.createElement(RichText, {
									placeholder: __("Add text…"),
									value: button.label,
									tagName: "div",
									onChange: function onChange(value) {
										_this2.saveButton({ label: value }, index);
									},
									formattingControls: ["bold", "italic", "strikethrough"],
									className: "uagb-button__link",
									rel: "noopener noreferrer",
									keepPlaceholderOnFocus: true
								})
							);
						})
					)
				)
			);
		}
	}]);

	return UAGBMultiButtonEdit;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (UAGBMultiButtonEdit);

/***/ }),
/* 336 */
/*!***************************************!*\
  !*** ./src/blocks/buttons/styling.js ***!
  \***************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function styling(props) {
	var _props$attributes = props.attributes,
	    align = _props$attributes.align,
	    className = _props$attributes.className,
	    btn_count = _props$attributes.btn_count,
	    buttons = _props$attributes.buttons,
	    gap = _props$attributes.gap,
	    stack = _props$attributes.stack;


	var selectors = {};
	var tablet_selectors = {};
	var mobile_selectors = {};

	buttons.map(function (button, index) {

		if (btn_count <= index) {
			return;
		}

		selectors[" .uagb-buttons-repeater-" + index] = {
			"font-size": button.size + "px",
			"border-width": button.borderWidth + "px",
			"border-style": button.borderStyle,
			"border-color": button.borderColor,
			"border-radius": button.borderRadius + "px",
			"background": button.background
		};

		selectors[" .uagb-buttons-repeater-" + index + ":hover"] = {
			"background": button.hBackground,
			"border-width": button.borderWidth + "px",
			"border-style": button.borderStyle,
			"border-color": button.borderHColor
		};

		selectors[" .uagb-buttons-repeater-" + index + " a.uagb-button__link"] = {
			"padding": button.vPadding + "px " + button.hPadding + "px",
			"color": button.color
		};

		selectors[" .uagb-buttons-repeater-" + index + ":hover a.uagb-button__link"] = {
			"color": button.hColor
		};

		selectors[" .uagb-buttons-repeater-" + index + " .uagb-button__link"] = {
			"padding": button.vPadding + "px " + button.hPadding + "px",
			"color": button.color
		};

		selectors[" .uagb-buttons-repeater-" + index + ":hover .uagb-button__link"] = {
			"color": button.hColor
		};
	});

	selectors[" .uagb-button__wrapper"] = {
		"margin-left": gap / 2 + "px",
		"margin-right": gap / 2 + "px"
	};

	selectors[" .uagb-button__wrapper:first-child"] = {
		"margin-left": 0
	};

	selectors[" .uagb-button__wrapper:last-child"] = {
		"margin-right": 0
	};

	var alignment = align == "left" ? "flex-start" : align == "right" ? "flex-end" : "center";

	selectors[" .uagb-buttons__wrap"] = _defineProperty({
		"justify-content": alignment,
		"-webkit-box-pack": alignment,
		"-ms-flex-pack": alignment
	}, "justify-content", alignment);

	if ("desktop" == stack) {

		selectors[" .uagb-button__wrapper"] = {
			"margin-left": 0,
			"margin-right": 0,
			"margin-bottom": gap + "px"
		};

		selectors[" .uagb-buttons__wrap"] = {
			"flex-direction": "column"
		};

		selectors[" .uagb-button__wrapper:last-child"] = {
			"margin-bottom": 0
		};
	} else if ("tablet" == stack) {

		tablet_selectors[" .uagb-button__wrapper"] = {
			"margin-left": 0,
			"margin-right": 0,
			"margin-bottom": gap + "px"
		};

		tablet_selectors[" .uagb-buttons__wrap"] = {
			"flex-direction": "column"
		};

		tablet_selectors[" .uagb-button__wrapper:last-child"] = {
			"margin-bottom": 0
		};
	} else if ("mobile" == stack) {

		mobile_selectors[" .uagb-button__wrapper"] = {
			"margin-left": 0,
			"margin-right": 0,
			"margin-bottom": gap + "px"
		};

		mobile_selectors[" .uagb-buttons__wrap"] = {
			"flex-direction": "column"
		};

		mobile_selectors[" .uagb-button__wrapper:last-child"] = {
			"margin-bottom": 0
		};
	}

	var styling_css = "";
	var id = "#uagb-buttons-" + props.clientId;

	for (var i in selectors) {

		styling_css += id;

		styling_css += i + " { ";

		var sel = selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	styling_css += "@media only screen and (max-width: 976px) {";

	for (var i in tablet_selectors) {

		styling_css += id;

		styling_css += i + " { ";

		var sel = tablet_selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	styling_css += " }";

	styling_css += "@media only screen and (max-width: 767px) {";

	for (var i in mobile_selectors) {

		styling_css += id;

		styling_css += i + " { ";

		var sel = mobile_selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	styling_css += " }";

	return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (styling);

/***/ }),
/* 337 */
/*!**************************************!*\
  !*** ./src/blocks/info-box/block.js ***!
  \**************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Prefix__ = __webpack_require__(/*! ./components/Prefix */ 113);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Title__ = __webpack_require__(/*! ./components/Title */ 114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_InfoBoxDesc__ = __webpack_require__(/*! ./components/InfoBoxDesc */ 115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_InfoBoxIcon__ = __webpack_require__(/*! ./components/InfoBoxIcon */ 116);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__classes__ = __webpack_require__(/*! ./classes */ 117);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_InfoBoxSeperator__ = __webpack_require__(/*! ./components/InfoBoxSeperator */ 118);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_InfoBoxCta__ = __webpack_require__(/*! ./components/InfoBoxCta */ 119);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__inline_styles__ = __webpack_require__(/*! ./inline-styles */ 120);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_InfoBoxIconImage__ = __webpack_require__(/*! ./components/InfoBoxIconImage */ 121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__edit__ = __webpack_require__(/*! ./edit */ 338);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__attributes__ = __webpack_require__(/*! ./attributes */ 346);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 347);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13__editor_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__style_scss__ = __webpack_require__(/*! ./style.scss */ 348);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14__style_scss__);
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * BLOCK: advanced-heading
 */

// Import block dependencies and components.



// Import icon.













var __ = wp.i18n.__;

// Import registerBlockType() from wp.blocks

var registerBlockType = wp.blocks.registerBlockType;
var RichText = wp.editor.RichText;

// Extend component

var Fragment = wp.element.Fragment;

/**
 * Register: as Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("uagb/info-box", {
	title: uagb_blocks_info.blocks["uagb/info-box"]["title"],
	description: uagb_blocks_info.blocks["uagb/info-box"]["description"],
	icon: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__["a" /* default */].info_box,
	keywords: [__("info-box"), __("uagb")],
	category: uagb_blocks_info.category,
	attributes: __WEBPACK_IMPORTED_MODULE_12__attributes__["a" /* default */],
	edit: __WEBPACK_IMPORTED_MODULE_11__edit__["a" /* default */],
	save: function save(props) {
		var _props$attributes = props.attributes,
		    iconimgPosition = _props$attributes.iconimgPosition,
		    block_id = _props$attributes.block_id,
		    source_type = _props$attributes.source_type,
		    seperatorStyle = _props$attributes.seperatorStyle,
		    backgroundType = _props$attributes.backgroundType,
		    ctaType = _props$attributes.ctaType,
		    ctaLink = _props$attributes.ctaLink,
		    ctaTarget = _props$attributes.ctaTarget,
		    className = _props$attributes.className,
		    prefixTitle = _props$attributes.prefixTitle,
		    infoBoxTitle = _props$attributes.infoBoxTitle,
		    headingDesc = _props$attributes.headingDesc,
		    showPrefix = _props$attributes.showPrefix,
		    showTitle = _props$attributes.showTitle,
		    showDesc = _props$attributes.showDesc,
		    icon = _props$attributes.icon;


		var my_block_id = "uagb-infobox-" + block_id;
		var ClassNamesId = typeof className != "undefined" ? className : "";

		ClassNamesId = ClassNamesId + " " + my_block_id;

		var back_style = Object(__WEBPACK_IMPORTED_MODULE_9__inline_styles__["a" /* default */])(props);

		// Get icon/Image components.
		var is_image = "";

		if (source_type === "icon" && icon !== "") {
			is_image = wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_InfoBoxIcon__["a" /* default */], { attributes: props.attributes });
		} else {
			is_image = wp.element.createElement(__WEBPACK_IMPORTED_MODULE_10__components_InfoBoxIconImage__["a" /* default */], { attributes: props.attributes });
		}

		// Get description and seperator components.
		var desc = wp.element.createElement(
			Fragment,
			null,
			"none" !== seperatorStyle && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_7__components_InfoBoxSeperator__["a" /* default */], { attributes: props.attributes }),
			wp.element.createElement(
				"div",
				{ className: "uagb-ifb-text-wrap" },
				showDesc && "" !== headingDesc && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_InfoBoxDesc__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set" }),
				ctaType !== "none" && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_8__components_InfoBoxCta__["a" /* default */], { attributes: props.attributes })
			)
		);

		// Get Title and Prefix components.
		var title_text = wp.element.createElement(
			Fragment,
			null,
			wp.element.createElement(
				"div",
				{ className: "uagb-ifb-title-wrap" },
				showPrefix && "" !== prefixTitle && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_Prefix__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set" }),
				showTitle && "" !== infoBoxTitle && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_Title__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set" })
			)
		);

		var output = wp.element.createElement(
			Fragment,
			null,
			wp.element.createElement(
				"div",
				{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, ["uagb-infobox__content-wrap"].concat(_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_6__classes__["a" /* default */])(props.attributes)))) },
				wp.element.createElement(
					"div",
					{ className: "uagb-ifb-left-right-wrap" },
					iconimgPosition == "left" && is_image,
					wp.element.createElement(
						"div",
						{ className: "uagb-ifb-content" },
						iconimgPosition == "above-title" && is_image,
						(iconimgPosition == "above-title" || iconimgPosition == "below-title") && title_text,
						iconimgPosition == "below-title" && is_image,
						(iconimgPosition == "above-title" || iconimgPosition == "below-title") && desc,
						iconimgPosition === "left-title" && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(
								"div",
								{ className: "uagb-ifb-left-title-image" },
								is_image,
								title_text
							),
							desc
						),
						iconimgPosition === "right-title" && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(
								"div",
								{ className: "uagb-ifb-right-title-image" },
								title_text,
								is_image
							),
							desc
						),
						(iconimgPosition == "left" || iconimgPosition == "right") && wp.element.createElement(
							Fragment,
							null,
							title_text,
							desc
						)
					),
					iconimgPosition == "right" && is_image
				)
			)
		);

		var target = "";
		if (ctaTarget) {
			target = "_blank";
		}

		return wp.element.createElement(
			Fragment,
			null,
			wp.element.createElement(
				"div",
				{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-infobox__outer-wrap"),
					id: my_block_id },
				ctaType == "all" && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(
						"a",
						{ href: ctaLink, className: "uagb-infobox-link-wrap", target: target, rel: "noopener noreferrer" },
						" ",
						output
					)
				),
				ctaType !== "all" && output
			)
		);
	},
	deprecated: [{
		attributes: __WEBPACK_IMPORTED_MODULE_12__attributes__["a" /* default */],
		save: function save(props) {
			var _props$attributes2 = props.attributes,
			    iconimgPosition = _props$attributes2.iconimgPosition,
			    block_id = _props$attributes2.block_id,
			    source_type = _props$attributes2.source_type,
			    seperatorStyle = _props$attributes2.seperatorStyle,
			    backgroundType = _props$attributes2.backgroundType,
			    ctaType = _props$attributes2.ctaType,
			    ctaLink = _props$attributes2.ctaLink,
			    ctaTarget = _props$attributes2.ctaTarget,
			    className = _props$attributes2.className;


			var my_block_id = "uagb-infobox-" + block_id;
			var ClassNamesId = typeof className != "undefined" ? className : "";

			ClassNamesId = ClassNamesId + " " + my_block_id;

			var back_style = Object(__WEBPACK_IMPORTED_MODULE_9__inline_styles__["a" /* default */])(props);

			// Get icon/Image components.
			var is_image = "";

			if (source_type === "icon") {
				is_image = wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_InfoBoxIcon__["a" /* default */], { attributes: props.attributes });
			} else {
				is_image = wp.element.createElement(__WEBPACK_IMPORTED_MODULE_10__components_InfoBoxIconImage__["a" /* default */], { attributes: props.attributes });
			}

			// Get description and seperator components.
			var desc = wp.element.createElement(
				Fragment,
				null,
				"none" !== seperatorStyle && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_7__components_InfoBoxSeperator__["a" /* default */], { attributes: props.attributes }),
				wp.element.createElement(
					"div",
					{ className: "uagb-ifb-text-wrap" },
					wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_InfoBoxDesc__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set" }),
					wp.element.createElement(__WEBPACK_IMPORTED_MODULE_8__components_InfoBoxCta__["a" /* default */], { attributes: props.attributes })
				)
			);

			// Get Title and Prefix components.
			var title_text = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					"div",
					{ className: "uagb-ifb-title-wrap" },
					wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_Prefix__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set" }),
					wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_Title__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set" })
				)
			);

			var output = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					"div",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, ["uagb-infobox__content-wrap"].concat(_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_6__classes__["a" /* default */])(props.attributes)))) },
					wp.element.createElement(
						"div",
						{ className: "uagb-ifb-left-right-wrap" },
						iconimgPosition == "left" && is_image,
						wp.element.createElement(
							"div",
							{ className: "uagb-ifb-content" },
							iconimgPosition == "above-title" && is_image,
							(iconimgPosition == "above-title" || iconimgPosition == "below-title") && title_text,
							iconimgPosition == "below-title" && is_image,
							(iconimgPosition == "above-title" || iconimgPosition == "below-title") && desc,
							iconimgPosition === "left-title" && wp.element.createElement(
								Fragment,
								null,
								wp.element.createElement(
									"div",
									{ className: "uagb-ifb-left-title-image" },
									is_image,
									title_text
								),
								desc
							),
							iconimgPosition === "right-title" && wp.element.createElement(
								Fragment,
								null,
								wp.element.createElement(
									"div",
									{ className: "uagb-ifb-right-title-image" },
									title_text,
									is_image
								),
								desc
							),
							(iconimgPosition == "left" || iconimgPosition == "right") && wp.element.createElement(
								Fragment,
								null,
								title_text,
								desc
							)
						),
						iconimgPosition == "right" && is_image
					)
				)
			);

			var target = "";
			if (ctaTarget) {
				target = "_blank";
			}

			return wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					"div",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-infobox__outer-wrap"),
						id: my_block_id },
					ctaType == "all" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"a",
							{ href: ctaLink, className: "uagb-infobox-link-wrap", target: target, rel: "noopener noreferrer" },
							" ",
							output
						)
					),
					ctaType !== "all" && output
				)
			);
		}
	}]
});

/***/ }),
/* 338 */
/*!*************************************!*\
  !*** ./src/blocks/info-box/edit.js ***!
  \*************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_UAGBIcon__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/UAGBIcon */ 12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker__ = __webpack_require__(/*! @fonticonpicker/react-fonticonpicker */ 13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Prefix__ = __webpack_require__(/*! ./components/Prefix */ 113);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Title__ = __webpack_require__(/*! ./components/Title */ 114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_InfoBoxDesc__ = __webpack_require__(/*! ./components/InfoBoxDesc */ 115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_InfoBoxIcon__ = __webpack_require__(/*! ./components/InfoBoxIcon */ 116);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__classes__ = __webpack_require__(/*! ./classes */ 117);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_InfoBoxSeperator__ = __webpack_require__(/*! ./components/InfoBoxSeperator */ 118);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_InfoBoxCta__ = __webpack_require__(/*! ./components/InfoBoxCta */ 119);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__inline_styles__ = __webpack_require__(/*! ./inline-styles */ 120);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__components_InfoBoxIconImage__ = __webpack_require__(/*! ./components/InfoBoxIconImage */ 121);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Import block dependencies and components.


// Import icon.












var __ = wp.i18n.__;
var _wp$editor = wp.editor,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    ColorPalette = _wp$editor.ColorPalette,
    InspectorControls = _wp$editor.InspectorControls,
    RichText = _wp$editor.RichText,
    PanelColorSettings = _wp$editor.PanelColorSettings,
    MediaUpload = _wp$editor.MediaUpload;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    TabPanel = _wp$components.TabPanel,
    ToggleControl = _wp$components.ToggleControl,
    TextControl = _wp$components.TextControl,
    BaseControl = _wp$components.BaseControl,
    Button = _wp$components.Button,
    withNotices = _wp$components.withNotices;
var compose = wp.compose.compose;
var withSelect = wp.data.withSelect;
var withViewportMatch = wp.viewport.withViewportMatch;

// Extend component

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;

var UAGBinfoBox = function (_Component) {
	_inherits(UAGBinfoBox, _Component);

	function UAGBinfoBox() {
		_classCallCheck(this, UAGBinfoBox);

		var _this = _possibleConstructorReturn(this, (UAGBinfoBox.__proto__ || Object.getPrototypeOf(UAGBinfoBox)).apply(this, arguments));

		_this.getIfbIcon = _this.getIfbIcon.bind(_this);
		_this.toggleTarget = _this.toggleTarget.bind(_this);
		_this.toggleResponsive = _this.toggleResponsive.bind(_this);
		_this.onSelectImage = _this.onSelectImage.bind(_this);
		_this.onRemoveImage = _this.onRemoveImage.bind(_this);
		_this.getCtaicon = _this.getCtaicon.bind(_this);
		return _this;
	}

	_createClass(UAGBinfoBox, [{
		key: "getIfbIcon",
		value: function getIfbIcon(value) {
			this.props.setAttributes({ icon: value });
		}
	}, {
		key: "getCtaicon",
		value: function getCtaicon(value) {
			this.props.setAttributes({ ctaIcon: value });
		}

		/*
   * Event to set Image as while adding.
   */

	}, {
		key: "onSelectImage",
		value: function onSelectImage(media) {
			var iconImage = this.props.attributes.iconImage;
			var setAttributes = this.props.setAttributes;


			if (!media || !media.url) {
				setAttributes({ iconImage: null });
				return;
			}

			if (!media.type || "image" !== media.type) {
				setAttributes({ iconImage: null });
				return;
			}

			setAttributes({ iconImage: media });
		}

		/*
   * Event to set Image as null while removing.
   */

	}, {
		key: "onRemoveImage",
		value: function onRemoveImage() {
			var iconImage = this.props.attributes.iconImage;
			var setAttributes = this.props.setAttributes;


			setAttributes({ iconImage: null });
		}

		/**
   * Function Name: toggleTarget.
   */

	}, {
		key: "toggleTarget",
		value: function toggleTarget() {
			var ctaTarget = this.props.attributes.ctaTarget;
			var setAttributes = this.props.setAttributes;


			setAttributes({ ctaTarget: !ctaTarget });
		}

		/**
   * Function Name: toggleResponsive.
   */

	}, {
		key: "toggleResponsive",
		value: function toggleResponsive() {
			var responsiveDesign = this.props.attributes.responsiveDesign;
			var setAttributes = this.props.setAttributes;


			setAttributes({ responsiveDesign: !responsiveDesign });
		}
	}, {
		key: "render",
		value: function render() {
			var _props = this.props,
			    isSelected = _props.isSelected,
			    className = _props.className,
			    setAttributes = _props.setAttributes,
			    attributes = _props.attributes,
			    mergeBlocks = _props.mergeBlocks,
			    insertBlocksAfter = _props.insertBlocksAfter,
			    onReplace = _props.onReplace;

			// Setup the attributes.

			var prefixTitle = attributes.prefixTitle,
			    infoBoxTitle = attributes.infoBoxTitle,
			    headingDesc = attributes.headingDesc,
			    headingAlign = attributes.headingAlign,
			    headingColor = attributes.headingColor,
			    subHeadingColor = attributes.subHeadingColor,
			    prefixColor = attributes.prefixColor,
			    prefixTag = attributes.prefixTag,
			    prefixFontSize = attributes.prefixFontSize,
			    headingTag = attributes.headingTag,
			    headFontSize = attributes.headFontSize,
			    subHeadFontSize = attributes.subHeadFontSize,
			    separatorWidth = attributes.separatorWidth,
			    separatorHeight = attributes.separatorHeight,
			    seperatorSpace = attributes.seperatorSpace,
			    headSpace = attributes.headSpace,
			    separatorSpace = attributes.separatorSpace,
			    subHeadSpace = attributes.subHeadSpace,
			    icon = attributes.icon,
			    iconColor = attributes.iconColor,
			    iconSize = attributes.iconSize,
			    iconimgPosition = attributes.iconimgPosition,
			    block_id = attributes.block_id,
			    iconHover = attributes.iconHover,
			    iconimgBorderRadius = attributes.iconimgBorderRadius,
			    source_type = attributes.source_type,
			    sourceAlign = attributes.sourceAlign,
			    seperatorStyle = attributes.seperatorStyle,
			    seperatorWidth = attributes.seperatorWidth,
			    seperatorColor = attributes.seperatorColor,
			    seperatorThickness = attributes.seperatorThickness,
			    ctaType = attributes.ctaType,
			    ctaText = attributes.ctaText,
			    ctaLink = attributes.ctaLink,
			    ctaTarget = attributes.ctaTarget,
			    ctaIcon = attributes.ctaIcon,
			    ctaIconPosition = attributes.ctaIconPosition,
			    ctaIconSpace = attributes.ctaIconSpace,
			    ctaLinkColor = attributes.ctaLinkColor,
			    ctaFontSize = attributes.ctaFontSize,
			    ctaBtnLinkColor = attributes.ctaBtnLinkColor,
			    ctaLinkHoverColor = attributes.ctaLinkHoverColor,
			    ctaBgHoverColor = attributes.ctaBgHoverColor,
			    ctaBgColor = attributes.ctaBgColor,
			    ctaBtnVertPadding = attributes.ctaBtnVertPadding,
			    ctaBtnHrPadding = attributes.ctaBtnHrPadding,
			    ctaBorderStyle = attributes.ctaBorderStyle,
			    ctaBorderColor = attributes.ctaBorderColor,
			    ctaBorderhoverColor = attributes.ctaBorderhoverColor,
			    ctaBorderWidth = attributes.ctaBorderWidth,
			    ctaBorderRadius = attributes.ctaBorderRadius,
			    prefixSpace = attributes.prefixSpace,
			    iconLeftMargin = attributes.iconLeftMargin,
			    iconRightMargin = attributes.iconRightMargin,
			    iconTopMargin = attributes.iconTopMargin,
			    iconBottomMargin = attributes.iconBottomMargin,
			    iconImage = attributes.iconImage,
			    imageSize = attributes.imageSize,
			    imageWidth = attributes.imageWidth,
			    stack = attributes.stack,
			    showPrefix = attributes.showPrefix,
			    showTitle = attributes.showTitle,
			    showDesc = attributes.showDesc;

			// Add CSS.

			var element = document.getElementById("uagb-info-box-style-" + this.props.clientId);
			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_10__inline_styles__["a" /* default */])(this.props);
			}

			// Icon properties.
			var icon_props = {
				icons: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_UAGBIcon__["a" /* default */],
				renderUsing: "class",
				theme: "default",
				value: icon,
				onChange: this.getIfbIcon,
				isMulti: false

				// Icon properties.
			};var cta_icon_props = {
				icons: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_UAGBIcon__["a" /* default */],
				renderUsing: "class",
				theme: "default",
				value: ctaIcon,
				onChange: this.getCtaicon,
				isMulti: false
			};

			var my_block_id = "uagb-infobox-" + this.props.clientId;

			// Settings for icon.
			var iconControls = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker___default.a, icon_props),
				wp.element.createElement(RangeControl, {
					label: __("Icon Size"),
					value: iconSize,
					onChange: function onChange(value) {
						return setAttributes({ iconSize: value });
					},
					min: 10,
					max: 300,
					beforeIcon: "",
					allowReset: true
				}),
				wp.element.createElement(PanelColorSettings, {
					title: __("Color Settings"),
					initialOpen: true,
					colorSettings: [{
						value: iconColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ iconColor: colorValue });
						},
						label: __("Icon Color")
					}, {
						value: iconHover,
						onChange: function onChange(colorValue) {
							return setAttributes({ iconHover: colorValue });
						},
						label: __("Icon Hover Color")
					}]
				})
			);

			// Seperator settings.
			var seperatorSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Seperator"),
						initialOpen: false },
					wp.element.createElement(SelectControl, {
						label: __("Style"),
						value: seperatorStyle,
						onChange: function onChange(value) {
							return setAttributes({ seperatorStyle: value });
						},
						options: [{ value: "none", label: __("None") }, { value: "solid", label: __("Solid") }, { value: "double", label: __("Double") }, { value: "dashed", label: __("Dashed") }, { value: "dotted", label: __("Dotted") }]
					}),
					"none" !== seperatorStyle && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(
								"p",
								{ className: "uagb-setting-label" },
								__("Seperator Color"),
								wp.element.createElement(
									"span",
									{ className: "components-base-control__label" },
									wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: seperatorColor } })
								)
							),
							wp.element.createElement(ColorPalette, {
								value: seperatorColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ seperatorColor: colorValue });
								},
								allowReset: true
							})
						),
						wp.element.createElement(RangeControl, {
							label: __("Thickness"),
							value: seperatorThickness,
							onChange: function onChange(value) {
								return setAttributes({ seperatorThickness: value });
							},
							min: 0,
							max: 10,
							beforeIcon: "",
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Width"),
							value: seperatorWidth,
							onChange: function onChange(value) {
								return setAttributes({ seperatorWidth: value });
							},
							min: 0,
							max: 100,
							beforeIcon: "",
							allowReset: true
						})
					)
				)
			);

			// CTA settings.
			var ctaSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Call To Action"),
						initialOpen: false
					},
					wp.element.createElement(SelectControl, {
						label: __("Type"),
						value: ctaType,
						onChange: function onChange(value) {
							return setAttributes({ ctaType: value });
						},
						options: [{ value: "none", label: __("None") }, { value: "text", label: __("Text") }, { value: "button", label: __("Button") }, { value: "all", label: __("Complete Box") }]
					}),
					(ctaType === "text" || ctaType === "button") && wp.element.createElement(TextControl, {
						label: __("Text"),
						value: ctaText,
						onChange: function onChange(value) {
							return setAttributes({ ctaText: value });
						}
					}),
					ctaType !== "none" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(TextControl, {
							label: __("Link"),
							value: ctaLink,
							onChange: function onChange(value) {
								return setAttributes({ ctaLink: value });
							}
						}),
						wp.element.createElement(ToggleControl, {
							label: __("Open in new Window"),
							checked: ctaTarget,
							onChange: this.toggleTarget
						})
					),
					ctaType !== "all" && ctaType !== "none" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker___default.a, cta_icon_props),
						wp.element.createElement(SelectControl, {
							label: __("Icon Position"),
							value: ctaIconPosition,
							onChange: function onChange(value) {
								return setAttributes({ ctaIconPosition: value });
							},
							options: [{ value: "before", label: __("Before Text") }, { value: "after", label: __("After Text") }]
						}),
						wp.element.createElement(RangeControl, {
							label: __("Icon Spacing"),
							value: ctaIconSpace,
							onChange: function onChange(value) {
								return setAttributes({ ctaIconSpace: value });
							},
							min: 0,
							max: 50,
							beforeIcon: "",
							allowReset: true
						})
					),
					ctaType == "button" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(RangeControl, {
							label: __("Vertical Padding"),
							value: ctaBtnVertPadding,
							onChange: function onChange(value) {
								return setAttributes({ ctaBtnVertPadding: value });
							},
							min: 0,
							max: 50,
							beforeIcon: "",
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("HorizontalPadding"),
							value: ctaBtnHrPadding,
							onChange: function onChange(value) {
								return setAttributes({ ctaBtnHrPadding: value });
							},
							min: 0,
							max: 50,
							beforeIcon: "",
							allowReset: true
						}),
						wp.element.createElement(SelectControl, {
							label: __("Border Style"),
							value: ctaBorderStyle,
							onChange: function onChange(value) {
								return setAttributes({ ctaBorderStyle: value });
							},
							options: [{ value: "none", label: __("None") }, { value: "solid", label: __("Solid") }, { value: "double", label: __("Double") }, { value: "dashed", label: __("Dashed") }, { value: "dotted", label: __("Dotted") }]
						}),
						ctaBorderStyle !== "none" && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(RangeControl, {
								label: __("Border Width"),
								value: ctaBorderWidth,
								onChange: function onChange(value) {
									return setAttributes({ ctaBorderWidth: value });
								},
								min: 0,
								max: 10,
								beforeIcon: "",
								allowReset: true
							}),
							wp.element.createElement(
								"p",
								{ className: "uagb-setting-label" },
								__("Border Color"),
								wp.element.createElement(
									"span",
									{ className: "components-base-control__label" },
									wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaBorderColor } })
								)
							),
							wp.element.createElement(ColorPalette, {
								value: ctaBorderColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ ctaBorderColor: colorValue });
								},
								allowReset: true
							}),
							wp.element.createElement(
								"p",
								{ className: "uagb-setting-label" },
								__("Border Hover Color"),
								wp.element.createElement(
									"span",
									{ className: "components-base-control__label" },
									wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaBorderhoverColor } })
								)
							),
							wp.element.createElement(ColorPalette, {
								value: ctaBorderhoverColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ ctaBorderhoverColor: colorValue });
								},
								allowReset: true
							})
						),
						wp.element.createElement(RangeControl, {
							label: __("Rounded Corner"),
							value: ctaBorderRadius,
							onChange: function onChange(value) {
								return setAttributes({ ctaBorderRadius: value });
							},
							min: 0,
							max: 100,
							beforeIcon: "",
							allowReset: true
						})
					)
				)
			);

			var ctaNormalSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(PanelColorSettings, {
					title: __("CTA Color Settings"),
					initialOpen: true,
					colorSettings: [{
						value: ctaBtnLinkColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ ctaBtnLinkColor: colorValue });
						},
						label: __("Color")
					}, {
						value: ctaBgColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ ctaBgColor: colorValue });
						},
						label: __("Background Color")
					}]
				})
			);

			var ctaHoverSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(PanelColorSettings, {
					title: __("CTA Hover Color Settings"),
					initialOpen: true,
					colorSettings: [{
						value: ctaLinkHoverColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ ctaLinkHoverColor: colorValue });
						},
						label: __("Hover Color")
					}, {
						value: ctaBgHoverColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ ctaBgHoverColor: colorValue });
						},
						label: __("Background Hover Color")
					}]
				})
			);

			// Typography settings.
			var TypographySettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Typography"),
						initialOpen: false
					},
					wp.element.createElement(ToggleControl, {
						label: __("Enable Prefix"),
						checked: showPrefix,
						onChange: function onChange(value) {
							return setAttributes({ showPrefix: !showPrefix });
						}
					}),
					showPrefix && wp.element.createElement(RangeControl, {
						label: __("Prefix Font Size"),
						value: prefixFontSize,
						onChange: function onChange(value) {
							return setAttributes({ prefixFontSize: value });
						},
						min: 10,
						max: 200,
						initialPosition: 16,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Enable Heading"),
						checked: showTitle,
						onChange: function onChange(value) {
							return setAttributes({ showTitle: !showTitle });
						}
					}),
					showTitle && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(SelectControl, {
							label: __("Title Tag"),
							value: headingTag,
							onChange: function onChange(value) {
								return setAttributes({ headingTag: value });
							},
							options: [{ value: "h1", label: __("H1") }, { value: "h2", label: __("H2") }, { value: "h3", label: __("H3") }, { value: "h4", label: __("H4") }, { value: "h5", label: __("H5") }, { value: "h6", label: __("H6") }]
						}),
						wp.element.createElement(RangeControl, {
							label: __("Heading Font Size"),
							value: headFontSize,
							onChange: function onChange(value) {
								return setAttributes({ headFontSize: value });
							},
							min: 10,
							max: 200,
							initialPosition: 30,
							beforeIcon: "editor-textcolor",
							allowReset: true
						})
					),
					wp.element.createElement(ToggleControl, {
						label: __("Enable Description"),
						checked: showDesc,
						onChange: function onChange(value) {
							return setAttributes({ showDesc: !showDesc });
						}
					}),
					showDesc && wp.element.createElement(RangeControl, {
						label: __("Description Font Size"),
						value: subHeadFontSize,
						onChange: function onChange(value) {
							return setAttributes({ subHeadFontSize: value });
						},
						min: 10,
						max: 200,
						initialPosition: 16,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					(ctaType === "text" || ctaType === "button") && wp.element.createElement(RangeControl, {
						label: __("CTA Font Size"),
						value: ctaFontSize,
						onChange: function onChange(value) {
							return setAttributes({ ctaFontSize: value });
						},
						min: 0,
						max: 50,
						initialPosition: 16,
						beforeIcon: "editor-textcolor",
						allowReset: true
					})
				),
				wp.element.createElement(
					PanelBody,
					{
						title: __("Color Settings"),
						initialOpen: true
					},
					showPrefix && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Prefix Title Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: prefixColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: prefixColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ prefixColor: colorValue });
							},
							allowReset: true
						})
					),
					showTitle && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Heading Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: headingColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: headingColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ headingColor: colorValue });
							},
							allowReset: true
						}),
						" "
					),
					showDesc && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Description Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: subHeadingColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: subHeadingColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ subHeadingColor: colorValue });
							},
							allowReset: true
						}),
						" "
					),
					ctaType === "text" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("CTA Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaLinkColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: ctaLinkColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ ctaLinkColor: colorValue });
							},
							allowReset: true
						}),
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("CTA Hover Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaLinkHoverColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: ctaLinkHoverColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ ctaLinkHoverColor: colorValue });
							},
							allowReset: true
						})
					),
					ctaType === "button" && wp.element.createElement(
						TabPanel,
						{ className: "uagb-inspect-tabs uagb-inspect-tabs-col-2",
							activeClass: "active-tab",
							tabs: [{
								name: "normal",
								title: __("Normal"),
								className: "uagb-normal-tab"
							}, {
								name: "hover",
								title: __("Hover"),
								className: "uagb-focus-tab"
							}] },
						function (tabName) {
							var tabout = void 0;
							if ("normal" === tabName.name) {
								tabout = ctaNormalSettings;
							} else {
								tabout = ctaHoverSettings;
							}
							return wp.element.createElement(
								"div",
								null,
								tabout
							);
						}
					)
				)
			);

			// Margin Settings.
			var marginSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Spacing"),
						initialOpen: false
					},
					showPrefix && wp.element.createElement(RangeControl, {
						label: __("Prefix Bottom Margin"),
						value: prefixSpace,
						onChange: function onChange(value) {
							return setAttributes({ prefixSpace: value });
						},
						min: 0,
						max: 50,
						beforeIcon: "",
						allowReset: true
					}),
					showTitle && wp.element.createElement(RangeControl, {
						label: __("Heading Bottom Margin"),
						value: headSpace,
						onChange: function onChange(value) {
							return setAttributes({ headSpace: value });
						},
						min: 0,
						max: 50,
						beforeIcon: "",
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Seperator Bottom Margin"),
						value: seperatorSpace,
						onChange: function onChange(value) {
							return setAttributes({ seperatorSpace: value });
						},
						min: 0,
						max: 50,
						beforeIcon: "",
						allowReset: true
					}),
					showDesc && wp.element.createElement(RangeControl, {
						label: __("Description Bottom Margin"),
						value: subHeadSpace,
						onChange: function onChange(value) {
							return setAttributes({ subHeadSpace: value });
						},
						min: 0,
						max: 50,
						beforeIcon: "",
						allowReset: true
					}),
					wp.element.createElement(
						PanelBody,
						{
							title: __("Image/Icon Margins"),
							initialOpen: true
						},
						wp.element.createElement(RangeControl, {
							label: __("Left Margin"),
							value: iconLeftMargin,
							onChange: function onChange(value) {
								return setAttributes({ iconLeftMargin: value });
							},
							min: 0,
							max: 50,
							beforeIcon: "",
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Right Margin"),
							value: iconRightMargin,
							onChange: function onChange(value) {
								return setAttributes({ iconRightMargin: value });
							},
							min: 0,
							max: 50,
							beforeIcon: "",
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Top Margin"),
							value: iconTopMargin,
							onChange: function onChange(value) {
								return setAttributes({ iconTopMargin: value });
							},
							min: 0,
							max: 50,
							beforeIcon: "",
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Bottom Margin"),
							value: iconBottomMargin,
							onChange: function onChange(value) {
								return setAttributes({ iconBottomMargin: value });
							},
							min: 0,
							max: 50,
							beforeIcon: "",
							allowReset: true
						})
					)
				)
			);

			// Image sizes.
			var imageSizeOptions = [{ value: "thumbnail", label: __("Thumbnail") }, { value: "medium", label: __("Medium") }, { value: "full", label: __("Large") }];

			var image_name = "Select Image";
			if (iconImage) {
				if (iconImage.url == null || iconImage.url == "") {
					image_name = "Select Image";
				} else {
					image_name = "Replace Image";
				}
			}

			// Image controls.
			var imageControls = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					BaseControl,
					{
						className: "editor-bg-image-control",
						label: __("Image")
					},
					wp.element.createElement(MediaUpload, {
						title: __("Select Image"),
						onSelect: this.onSelectImage,
						allowedTypes: ["image"],
						value: iconImage,
						render: function render(_ref) {
							var open = _ref.open;
							return wp.element.createElement(
								Button,
								{ isDefault: true, onClick: open },
								image_name
							);
						}
					}),
					iconImage && iconImage.url !== "null" && iconImage.url !== "" && wp.element.createElement(
						Button,
						{ className: "uagb-rm-btn", onClick: this.onRemoveImage, isLink: true, isDestructive: true },
						__("Remove Image")
					)
				),
				iconImage && iconImage.url !== "null" && iconImage.url !== "" && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(SelectControl, {
						label: __("Image Size"),
						options: imageSizeOptions,
						value: imageSize,
						onChange: function onChange(value) {
							return setAttributes({ imageSize: value });
						}
					}),
					wp.element.createElement(RangeControl, {
						label: __("Width"),
						value: imageWidth,
						onChange: function onChange(value) {
							return setAttributes({ imageWidth: value });
						},
						min: 0,
						max: 500,
						beforeIcon: "",
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Rounded Corners"),
						value: iconimgBorderRadius,
						onChange: function onChange(value) {
							return setAttributes({ iconimgBorderRadius: value });
						},
						min: 0,
						max: 500,
						beforeIcon: "",
						allowReset: true
					})
				)
			);

			// Global Controls.
			var inspect_control = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					InspectorControls,
					null,
					wp.element.createElement(
						PanelBody,
						{
							title: __("Image/Icon")
						},
						wp.element.createElement(SelectControl, {
							label: __("Select Position"),
							value: iconimgPosition,
							onChange: function onChange(value) {
								return setAttributes({ iconimgPosition: value });
							},
							options: [{ value: "above-title", label: __("Above Heading") }, { value: "below-title", label: __("Below Heading") }, { value: "left-title", label: __("Left of Heading") }, { value: "right-title", label: __("Right of Heading") }, { value: "left", label: __("Left of Text and Heading") }, { value: "right", label: __("Right of Text and Heading") }]
						}),
						(iconimgPosition == "left" || iconimgPosition == "right") && wp.element.createElement(SelectControl, {
							label: __("Stack on"),
							value: stack,
							options: [{ value: "none", label: __("None") }, { value: "tablet", label: __("Tablet") }, { value: "mobile", label: __("Mobile") }],
							help: __("Note: Choose on what breakpoint the Info Box will stack."),
							onChange: function onChange(value) {
								return setAttributes({ stack: value });
							}
						}),
						wp.element.createElement(SelectControl, {
							label: __("Select Source"),
							value: source_type,
							onChange: function onChange(value) {
								return setAttributes({ source_type: value });
							},
							options: [{ value: "icon", label: __("Icon") }, { value: "image", label: __("Image") }]
						}),
						iconimgPosition && iconimgPosition !== "above-title" && iconimgPosition !== "below-title" && wp.element.createElement(SelectControl, {
							label: __("Vertical ALignment"),
							value: sourceAlign,
							onChange: function onChange(value) {
								return setAttributes({ sourceAlign: value });
							},
							options: [{ value: "top", label: __("Top") }, { value: "middle", label: __("Middle") }]
						}),
						source_type && source_type == "icon" && iconControls,
						source_type && source_type == "image" && imageControls
					),
					TypographySettings,
					seperatorSettings,
					ctaSettings,
					marginSettings
				)
			);

			// Get icon/Image components.
			var is_image = "";

			if (source_type === "icon" && icon !== "") {
				is_image = wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_InfoBoxIcon__["a" /* default */], { attributes: attributes });
			} else {
				is_image = wp.element.createElement(__WEBPACK_IMPORTED_MODULE_11__components_InfoBoxIconImage__["a" /* default */], { attributes: attributes });
			}

			// Get description and seperator components.
			var desc = wp.element.createElement(
				Fragment,
				null,
				"none" !== seperatorStyle && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_8__components_InfoBoxSeperator__["a" /* default */], { attributes: attributes }),
				wp.element.createElement(
					"div",
					{ className: "uagb-ifb-text-wrap" },
					showDesc && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_InfoBoxDesc__["a" /* default */], { attributes: attributes, setAttributes: setAttributes, props: this.props }),
					wp.element.createElement(__WEBPACK_IMPORTED_MODULE_9__components_InfoBoxCta__["a" /* default */], { attributes: attributes })
				)
			);

			// Get Title and Prefix components.
			var title_text = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					"div",
					{ className: "uagb-ifb-title-wrap" },
					showPrefix && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_Prefix__["a" /* default */], { attributes: attributes, setAttributes: setAttributes, props: this.props }),
					showTitle && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_Title__["a" /* default */], { attributes: attributes, setAttributes: setAttributes, props: this.props })
				)
			);

			var output = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					"div",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, ["uagb-infobox__content-wrap"].concat(_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_7__classes__["a" /* default */])(attributes)))) },
					wp.element.createElement(
						"div",
						{ className: "uagb-ifb-left-right-wrap" },
						iconimgPosition == "left" && is_image,
						wp.element.createElement(
							"div",
							{ className: "uagb-ifb-content" },
							iconimgPosition == "above-title" && is_image,
							(iconimgPosition == "above-title" || iconimgPosition == "below-title") && title_text,
							iconimgPosition == "below-title" && is_image,
							(iconimgPosition == "above-title" || iconimgPosition == "below-title") && desc,
							iconimgPosition === "left-title" && wp.element.createElement(
								Fragment,
								null,
								wp.element.createElement(
									"div",
									{ className: "uagb-ifb-left-title-image" },
									is_image,
									title_text
								),
								desc
							),
							iconimgPosition === "right-title" && wp.element.createElement(
								Fragment,
								null,
								wp.element.createElement(
									"div",
									{ className: "uagb-ifb-right-title-image" },
									title_text,
									is_image
								),
								desc
							),
							(iconimgPosition == "left" || iconimgPosition == "right") && wp.element.createElement(
								Fragment,
								null,
								title_text,
								desc
							)
						),
						iconimgPosition == "right" && is_image
					)
				)
			);

			return wp.element.createElement(
				Fragment,
				null,
				(iconimgPosition == "above-title" || iconimgPosition == "below-title") && wp.element.createElement(
					BlockControls,
					{ key: "controls" },
					wp.element.createElement(AlignmentToolbar, {
						value: headingAlign,
						onChange: function onChange(value) {
							return setAttributes({ headingAlign: value });
						}
					})
				),
				inspect_control,
				wp.element.createElement(
					"div",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-infobox__outer-wrap"),
						id: my_block_id
					},
					ctaType == "all" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"a",
							{ href: ctaLink, className: "uagb-infobox-link-wrap", rel: "noopener noreferrer" },
							" ",
							output
						)
					),
					ctaType !== "all" && output
				)
			);
		}
	}, {
		key: "componentDidMount",
		value: function componentDidMount() {

			// Assigning block_id in the attribute.
			this.props.setAttributes({ block_id: this.props.clientId });

			// Pushing Style tag for this block css.
			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-info-box-style-" + this.props.clientId);
			document.head.appendChild($style);
		}
	}]);

	return UAGBinfoBox;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (UAGBinfoBox);

/***/ }),
/* 339 */
/*!******************************************************!*\
  !*** ./node_modules/react-transition-group/index.js ***!
  \******************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _CSSTransition = _interopRequireDefault(__webpack_require__(/*! ./CSSTransition */ 340));

var _ReplaceTransition = _interopRequireDefault(__webpack_require__(/*! ./ReplaceTransition */ 344));

var _TransitionGroup = _interopRequireDefault(__webpack_require__(/*! ./TransitionGroup */ 125));

var _Transition = _interopRequireDefault(__webpack_require__(/*! ./Transition */ 122));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = {
  Transition: _Transition.default,
  TransitionGroup: _TransitionGroup.default,
  ReplaceTransition: _ReplaceTransition.default,
  CSSTransition: _CSSTransition.default
};

/***/ }),
/* 340 */
/*!**************************************************************!*\
  !*** ./node_modules/react-transition-group/CSSTransition.js ***!
  \**************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

exports.__esModule = true;
exports.default = void 0;

var PropTypes = _interopRequireWildcard(__webpack_require__(/*! prop-types */ 11));

var _addClass = _interopRequireDefault(__webpack_require__(/*! dom-helpers/class/addClass */ 341));

var _removeClass = _interopRequireDefault(__webpack_require__(/*! dom-helpers/class/removeClass */ 343));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ 3));

var _Transition = _interopRequireDefault(__webpack_require__(/*! ./Transition */ 122));

var _PropTypes = __webpack_require__(/*! ./utils/PropTypes */ 124);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var addClass = function addClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return (0, _addClass.default)(node, c);
  });
};

var removeClass = function removeClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return (0, _removeClass.default)(node, c);
  });
};

var propTypes = process.env.NODE_ENV !== "production" ? _extends({}, _Transition.default.propTypes, {
  /**
   * The animation classNames applied to the component as it enters, exits or has finished the transition.
   * A single name can be provided and it will be suffixed for each stage: e.g.
   *
   * `classNames="fade"` applies `fade-enter`, `fade-enter-active`, `fade-enter-done`,
   * `fade-exit`, `fade-exit-active`, `fade-exit-done`, `fade-appear`, and `fade-appear-active`.
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply spread
   * them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: _PropTypes.classNamesShape,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * @type Function(node: HtmlElement)
   */
  onExit: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * @type Function(node: HtmlElement
   */
  onExiting: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * @type Function(node: HtmlElement)
   */
  onExited: PropTypes.func
}) : {};;
/**
 * A `Transition` component using CSS transitions and animations.
 * It's inspired by the excellent [ng-animate](http://www.nganimate.org/) library.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` stages of the transition. The first class is applied and then a
 * second "active" class in order to activate the css animation. After the animation,
 * matching `done` class names are applied to persist the animation state.
 *
 * When the `in` prop is toggled to `true` the Component will get
 * the `example-enter` CSS class and the `example-enter-active` CSS class
 * added in the next tick. This is a convention based on the `classNames` prop.
 */

var CSSTransition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(CSSTransition, _React$Component);

  function CSSTransition() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _this.onEnter = function (node, appearing) {
      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),
          className = _this$getClassNames.className;

      _this.removeClasses(node, 'exit');

      addClass(node, className);

      if (_this.props.onEnter) {
        _this.props.onEnter(node);
      }
    };

    _this.onEntering = function (node, appearing) {
      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),
          activeClassName = _this$getClassNames2.activeClassName;

      _this.reflowAndAddClass(node, activeClassName);

      if (_this.props.onEntering) {
        _this.props.onEntering(node);
      }
    };

    _this.onEntered = function (node, appearing) {
      var _this$getClassNames3 = _this.getClassNames('enter'),
          doneClassName = _this$getClassNames3.doneClassName;

      _this.removeClasses(node, appearing ? 'appear' : 'enter');

      addClass(node, doneClassName);

      if (_this.props.onEntered) {
        _this.props.onEntered(node);
      }
    };

    _this.onExit = function (node) {
      var _this$getClassNames4 = _this.getClassNames('exit'),
          className = _this$getClassNames4.className;

      _this.removeClasses(node, 'appear');

      _this.removeClasses(node, 'enter');

      addClass(node, className);

      if (_this.props.onExit) {
        _this.props.onExit(node);
      }
    };

    _this.onExiting = function (node) {
      var _this$getClassNames5 = _this.getClassNames('exit'),
          activeClassName = _this$getClassNames5.activeClassName;

      _this.reflowAndAddClass(node, activeClassName);

      if (_this.props.onExiting) {
        _this.props.onExiting(node);
      }
    };

    _this.onExited = function (node) {
      var _this$getClassNames6 = _this.getClassNames('exit'),
          doneClassName = _this$getClassNames6.doneClassName;

      _this.removeClasses(node, 'exit');

      addClass(node, doneClassName);

      if (_this.props.onExited) {
        _this.props.onExited(node);
      }
    };

    _this.getClassNames = function (type) {
      var classNames = _this.props.classNames;
      var className = typeof classNames !== 'string' ? classNames[type] : classNames + '-' + type;
      var activeClassName = typeof classNames !== 'string' ? classNames[type + 'Active'] : className + '-active';
      var doneClassName = typeof classNames !== 'string' ? classNames[type + 'Done'] : className + '-done';
      return {
        className: className,
        activeClassName: activeClassName,
        doneClassName: doneClassName
      };
    };

    return _this;
  }

  var _proto = CSSTransition.prototype;

  _proto.removeClasses = function removeClasses(node, type) {
    var _this$getClassNames7 = this.getClassNames(type),
        className = _this$getClassNames7.className,
        activeClassName = _this$getClassNames7.activeClassName,
        doneClassName = _this$getClassNames7.doneClassName;

    className && removeClass(node, className);
    activeClassName && removeClass(node, activeClassName);
    doneClassName && removeClass(node, doneClassName);
  };

  _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {
    // This is for to force a repaint,
    // which is necessary in order to transition styles when adding a class name.
    if (className) {
      /* eslint-disable no-unused-expressions */
      node && node.scrollTop;
      /* eslint-enable no-unused-expressions */

      addClass(node, className);
    }
  };

  _proto.render = function render() {
    var props = _extends({}, this.props);

    delete props.classNames;
    return _react.default.createElement(_Transition.default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };

  return CSSTransition;
}(_react.default.Component);

CSSTransition.propTypes = process.env.NODE_ENV !== "production" ? propTypes : {};
var _default = CSSTransition;
exports.default = _default;
module.exports = exports["default"];
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../process/browser.js */ 2)))

/***/ }),
/* 341 */
/*!****************************************************!*\
  !*** ./node_modules/dom-helpers/class/addClass.js ***!
  \****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = addClass;

var _hasClass = __webpack_require__(/*! ./hasClass */ 342);

var _hasClass2 = _interopRequireDefault(_hasClass);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);
}
module.exports = exports['default'];

/***/ }),
/* 342 */
/*!****************************************************!*\
  !*** ./node_modules/dom-helpers/class/hasClass.js ***!
  \****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = hasClass;
function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);else return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}
module.exports = exports["default"];

/***/ }),
/* 343 */
/*!*******************************************************!*\
  !*** ./node_modules/dom-helpers/class/removeClass.js ***!
  \*******************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp('(^|\\s)' + classToRemove + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}

module.exports = function removeClass(element, className) {
  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
};

/***/ }),
/* 344 */
/*!******************************************************************!*\
  !*** ./node_modules/react-transition-group/ReplaceTransition.js ***!
  \******************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ 11));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ 3));

var _reactDom = __webpack_require__(/*! react-dom */ 24);

var _TransitionGroup = _interopRequireDefault(__webpack_require__(/*! ./TransitionGroup */ 125));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var propTypes = process.env.NODE_ENV !== "production" ? {
  in: _propTypes.default.bool.isRequired,
  children: function children(props, propName) {
    if (_react.default.Children.count(props[propName]) !== 2) return new Error("\"" + propName + "\" must be exactly two transition components.");
    return null;
  }
} : {};;
/**
 * The `<ReplaceTransition>` component is a specialized `Transition` component
 * that animates between two children.
 *
 * ```jsx
 * <ReplaceTransition in>
 *   <Fade><div>I appear first</div></Fade>
 *   <Fade><div>I replace the above</div></Fade>
 * </ReplaceTransition>
 * ```
 */

var ReplaceTransition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(ReplaceTransition, _React$Component);

  function ReplaceTransition() {
    var _this;

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;

    _this.handleEnter = function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _this.handleLifecycle('onEnter', 0, args);
    };

    _this.handleEntering = function () {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      return _this.handleLifecycle('onEntering', 0, args);
    };

    _this.handleEntered = function () {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return _this.handleLifecycle('onEntered', 0, args);
    };

    _this.handleExit = function () {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      return _this.handleLifecycle('onExit', 1, args);
    };

    _this.handleExiting = function () {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      return _this.handleLifecycle('onExiting', 1, args);
    };

    _this.handleExited = function () {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      return _this.handleLifecycle('onExited', 1, args);
    };

    return _this;
  }

  var _proto = ReplaceTransition.prototype;

  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;

    var children = this.props.children;

    var child = _react.default.Children.toArray(children)[idx];

    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) this.props[handler]((0, _reactDom.findDOMNode)(this));
  };

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        inProp = _this$props.in,
        props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);

    var _React$Children$toArr = _react.default.Children.toArray(children),
        first = _React$Children$toArr[0],
        second = _React$Children$toArr[1];

    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {
      key: 'first',
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : _react.default.cloneElement(second, {
      key: 'second',
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };

  return ReplaceTransition;
}(_react.default.Component);

ReplaceTransition.propTypes = process.env.NODE_ENV !== "production" ? propTypes : {};
var _default = ReplaceTransition;
exports.default = _default;
module.exports = exports["default"];
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../process/browser.js */ 2)))

/***/ }),
/* 345 */
/*!*******************************************************************!*\
  !*** ./node_modules/react-transition-group/utils/ChildMapping.js ***!
  \*******************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getChildMapping = getChildMapping;
exports.mergeChildMappings = mergeChildMappings;
exports.getInitialChildMapping = getInitialChildMapping;
exports.getNextChildMapping = getNextChildMapping;

var _react = __webpack_require__(/*! react */ 3);

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */
function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;
  };

  var result = Object.create(null);
  if (children) _react.Children.map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */


function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  } // For each key of `next`, the list of keys to insert before that key in
  // the combined list


  var nextKeysPending = Object.create(null);
  var pendingKeys = [];

  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i;
  var childMapping = {};

  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }

    childMapping[nextKey] = getValueForKey(nextKey);
  } // Finally, add the keys which didn't appear before any key in `next`


  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}

function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}

function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function (child) {
    return (0, _react.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, 'appear', props),
      enter: getProp(child, 'enter', props),
      exit: getProp(child, 'exit', props)
    });
  });
}

function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function (key) {
    var child = children[key];
    if (!(0, _react.isValidElement)(child)) return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)

    if (hasNext && (!hasPrev || isLeaving)) {
      // console.log('entering', key)
      children[key] = (0, _react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      // item is old (exiting)
      // console.log('leaving', key)
      children[key] = (0, _react.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {
      // item hasn't changed transition states
      // copy over the last transition props;
      // console.log('unchanged', key)
      children[key] = (0, _react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    }
  });
  return children;
}

/***/ }),
/* 346 */
/*!*******************************************!*\
  !*** ./src/blocks/info-box/attributes.js ***!
  \*******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * BLOCK: UAGB Section Attributes
 */

var attributes = {
	prefixTitle: {
		source: "html",
		selector: "span.uagb-ifb-title-prefix",
		default: "Prefix"
	},
	infoBoxTitle: {
		source: "html",
		selector: "h1,h2,h3,h4,h5,h6",
		default: "Info Box"
	},
	headingDesc: {
		source: "html",
		selector: "p",
		default: "Click here to change this text. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo."
	},
	headingAlign: {
		type: "string",
		default: "center"
	},
	headingColor: {
		type: "string"
	},
	subHeadingColor: {
		type: "string"
	},
	prefixColor: {
		type: "string"
	},
	icon: {
		type: "string",
		default: "fa fa-star"
	},
	iconimgPosition: {
		type: "string",
		default: "above-title"
	},
	iconSize: {
		type: "number",
		default: 40
	},
	iconHover: {
		type: "string",
		default: ""
	},
	iconBgHover: {
		type: "string",
		default: ""
	},
	iconColor: {
		type: "string",
		default: "#333"
	},
	prefixTag: {
		type: "string",
		default: "h3"
	},
	prefixFontSize: {
		type: "number"
	},
	headingTag: {
		type: "string",
		default: "h3"
	},
	separatorHeight: {
		type: "number"
	},
	separatorWidth: {
		type: "number"
	},
	headFontSize: {
		type: "number"
	},
	subHeadFontSize: {
		type: "number"
	},
	headSpace: {
		type: "number",
		default: 10
	},
	subHeadSpace: {
		type: "number",
		default: 10
	},
	seperatorSpace: {
		type: "number",
		default: 10
	},
	iconimgBorderRadius: {
		type: "number",
		default: 0
	},
	source_type: {
		type: "string",
		default: "icon"
	},
	block_id: {
		type: "string",
		default: "not_set"
	},
	sourceAlign: {
		type: "string",
		default: "top"
	},
	ctaTarget: {
		type: "boolean",
		default: false
	},
	ctaIcon: {
		type: "string",
		default: ""
	},
	ctaIconPosition: {
		type: "string",
		default: "after"
	},
	ctaIconSpace: {
		type: "number",
		default: 5
	},
	seperatorStyle: {
		type: "string",
		default: "solid"
	},
	seperatorColor: {
		type: "string",
		default: "#333"
	},
	seperatorWidth: {
		type: "number",
		default: 30
	},
	seperatorThickness: {
		type: "number",
		default: 2
	},
	ctaType: {
		type: "string",
		default: "none"
	},
	ctaText: {
		type: "string",
		default: "Read More"
	},
	ctaLink: {
		type: "string",
		default: "#"
	},
	ctaLinkColor: {
		type: "string",
		default: "#333"
	},
	ctaFontSize: {
		type: "number"
	},
	ctaBtnLinkColor: {
		type: "string",
		default: "#333"
	},
	ctaLinkHoverColor: {
		type: "string",
		default: ""
	},
	ctaBgColor: {
		type: "string",
		default: "transparent"
	},
	ctaBgHoverColor: {
		type: "string",
		default: "transparent"
	},
	ctaBorderColor: {
		type: "string",
		default: "#333"
	},
	ctaBorderhoverColor: {
		type: "string",
		default: ""
	},
	ctaBorderStyle: {
		type: "string",
		default: "solid"
	},
	ctaBtnVertPadding: {
		type: "number",
		default: 10
	},
	ctaBtnHrPadding: {
		type: "number",
		default: 14
	},
	ctaBorderWidth: {
		type: "number",
		default: 1
	},
	ctaBorderRadius: {
		type: "number",
		default: 0
	},
	prefixSpace: {
		type: "number",
		default: 5
	},
	iconLeftMargin: {
		type: "number",
		default: 10
	},
	iconRightMargin: {
		type: "number",
		default: 10
	},
	iconTopMargin: {
		type: "number",
		default: 5
	},
	iconBottomMargin: {
		type: "number",
		default: 5
	},
	iconImage: {
		type: "object",
		default: {
			"url": "",
			"alt": "InfoBox placeholder img"
		}
	},
	imageSize: {
		type: "string",
		default: "thumbnail"
	},
	imageWidth: {
		type: "number",
		default: 120
	},
	stack: {
		type: "string",
		default: "tablet"
	},
	showPrefix: {
		type: "boolean",
		default: true
	},
	showTitle: {
		type: "boolean",
		default: true
	},
	showDesc: {
		type: "boolean",
		default: true
	}
};

/* harmony default export */ __webpack_exports__["a"] = (attributes);

/***/ }),
/* 347 */
/*!*****************************************!*\
  !*** ./src/blocks/info-box/editor.scss ***!
  \*****************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 348 */
/*!****************************************!*\
  !*** ./src/blocks/info-box/style.scss ***!
  \****************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 349 */
/*!*****************************************!*\
  !*** ./src/blocks/testimonial/block.js ***!
  \*****************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_AuthorName__ = __webpack_require__(/*! ./components/AuthorName */ 126);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Company__ = __webpack_require__(/*! ./components/Company */ 127);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Description__ = __webpack_require__(/*! ./components/Description */ 128);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__classes__ = __webpack_require__(/*! ./classes */ 129);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_TestimonialImage__ = __webpack_require__(/*! ./components/TestimonialImage */ 130);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__edit__ = __webpack_require__(/*! ./edit */ 350);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__attributes__ = __webpack_require__(/*! ./attributes */ 352);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__style_scss__ = __webpack_require__(/*! ./style.scss */ 353);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9__style_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 354);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10__editor_scss__);
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * BLOCK: Testimonial
 */

// Import block dependencies and components.



// Import icon.









var __ = wp.i18n.__;

// Import registerBlockType() from wp.blocks

var registerBlockType = wp.blocks.registerBlockType;
var RichText = wp.editor.RichText;

// Extend component

var Fragment = wp.element.Fragment;

/**
 * Register: as Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("uagb/testimonial", {

	// Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
	title: uagb_blocks_info.blocks["uagb/testimonial"]["title"], // Block title.
	description: uagb_blocks_info.blocks["uagb/testimonial"]["description"], // Block description.
	icon: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__["a" /* default */].testimonial, // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
	keywords: [__("testimonial"), __("uagb")],
	category: uagb_blocks_info.category,

	attributes: __WEBPACK_IMPORTED_MODULE_8__attributes__["a" /* default */],
	edit: __WEBPACK_IMPORTED_MODULE_7__edit__["a" /* default */],
	save: function save(props) {
		var _props$attributes = props.attributes,
		    block_id = _props$attributes.block_id,
		    className = _props$attributes.className,
		    columns = _props$attributes.columns,
		    autoplaySpeed = _props$attributes.autoplaySpeed,
		    autoplay = _props$attributes.autoplay,
		    infiniteLoop = _props$attributes.infiniteLoop,
		    pauseOnHover = _props$attributes.pauseOnHover,
		    transitionSpeed = _props$attributes.transitionSpeed,
		    tcolumns = _props$attributes.tcolumns,
		    arrowSize = _props$attributes.arrowSize,
		    mcolumns = _props$attributes.mcolumns,
		    test_block = _props$attributes.test_block,
		    imagePosition = _props$attributes.imagePosition,
		    arrowColor = _props$attributes.arrowColor;


		var my_block_id = "uagb-testimonial-" + block_id;

		var sldier_data = [];
		sldier_data.push({
			"block_id": block_id,
			"columns": columns,
			"autoplaySpeed": autoplaySpeed,
			"autoplay": autoplay,
			"infiniteLoop": infiniteLoop,
			"pauseOnHover": pauseOnHover,
			"transitionSpeed": transitionSpeed,
			"tcolumns": tcolumns,
			"arrowSize": arrowSize,
			"mcolumns": mcolumns,
			"arrowColor": arrowColor
		});

		return wp.element.createElement(
			Fragment,
			null,
			wp.element.createElement(
				"div",
				{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-testomonial__outer-wrap uagb-slick-carousel uagb-tm__arrow-outside"),
					id: my_block_id,
					"data-slider": JSON.stringify(sldier_data)
				},
				wp.element.createElement(
					"div",
					{
						className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("is-carousel", "uagb-tm__columns-" + columns, "uagb-tm__items")
					},
					test_block.map(function (test, index) {
						return wp.element.createElement(
							"div",
							{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, ["uagb-testimonial__wrap"].concat(_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_5__classes__["a" /* default */])(props.attributes)))), key: "wrap-" + index },
							wp.element.createElement(
								"div",
								{ className: "uagb-tm__content", key: "tm_content-" + index },
								wp.element.createElement("div", { className: "uagb-tm__overlay" }),
								(imagePosition == "top" || imagePosition == "left") && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_TestimonialImage__["a" /* default */], { attributes: props.attributes, index_value: index }),
								wp.element.createElement(
									"div",
									{ className: "uagb-tm__text-wrap" },
									// Get description.
									wp.element.createElement(
										Fragment,
										null,
										wp.element.createElement(
											"div",
											{ className: "uagb-testinomial-text-wrap", key: "text-wrap-" + index },
											wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_Description__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set", props: props, index_value: index })
										)
									),
									wp.element.createElement(
										"div",
										{ className: "uagb-tm__meta" },
										wp.element.createElement(
											"div",
											{ className: "uagb-tm__meta-inner" },
											imagePosition == "bottom" && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_TestimonialImage__["a" /* default */], { attributes: props.attributes, index_value: index }),
											//title_text
											wp.element.createElement(
												Fragment,
												null,
												wp.element.createElement(
													"div",
													{ className: "uagb-testimonial-details", key: "tm_wraps-" + index },
													wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_AuthorName__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set", props: props, index_value: index }),
													wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_Company__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set", props: props, index_value: index })
												)
											)
										)
									)
								),
								imagePosition == "right" && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_TestimonialImage__["a" /* default */], { attributes: props.attributes, index_value: index })
							)
						);
					})
				)
			)
		);
	}
});

/***/ }),
/* 350 */
/*!****************************************!*\
  !*** ./src/blocks/testimonial/edit.js ***!
  \****************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_AuthorName__ = __webpack_require__(/*! ./components/AuthorName */ 126);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Company__ = __webpack_require__(/*! ./components/Company */ 127);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Description__ = __webpack_require__(/*! ./components/Description */ 128);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__classes__ = __webpack_require__(/*! ./classes */ 129);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__inline_styles__ = __webpack_require__(/*! ./inline-styles */ 351);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_TestimonialImage__ = __webpack_require__(/*! ./components/TestimonialImage */ 130);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_lodash_times__ = __webpack_require__(/*! lodash/times */ 8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_lodash_times___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_lodash_times__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_react_slick__ = __webpack_require__(/*! react-slick */ 106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_react_slick___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_react_slick__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Import block dependencies and components.










var __ = wp.i18n.__;
var _wp$editor = wp.editor,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    ColorPalette = _wp$editor.ColorPalette,
    InspectorControls = _wp$editor.InspectorControls,
    RichText = _wp$editor.RichText,
    PanelColorSettings = _wp$editor.PanelColorSettings,
    MediaUpload = _wp$editor.MediaUpload;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    ToggleControl = _wp$components.ToggleControl,
    BaseControl = _wp$components.BaseControl,
    Button = _wp$components.Button;

// Extend component

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;

var UAGBtestimonial = function (_Component) {
	_inherits(UAGBtestimonial, _Component);

	function UAGBtestimonial() {
		_classCallCheck(this, UAGBtestimonial);

		var _this = _possibleConstructorReturn(this, (UAGBtestimonial.__proto__ || Object.getPrototypeOf(UAGBtestimonial)).apply(this, arguments));

		_this.onSelectTestImage = _this.onSelectTestImage.bind(_this);
		_this.onRemoveTestImage = _this.onRemoveTestImage.bind(_this);
		_this.getImageName = _this.getImageName.bind(_this);
		_this.togglePauseOnHover = _this.togglePauseOnHover.bind(_this);
		_this.toggleInfiniteLoop = _this.toggleInfiniteLoop.bind(_this);
		_this.toggleAutoplay = _this.toggleAutoplay.bind(_this);
		_this.onRemoveImage = _this.onRemoveImage.bind(_this);
		_this.onSelectImage = _this.onSelectImage.bind(_this);
		return _this;
	}

	/*
  * Event to set Image as while adding.
  */


	_createClass(UAGBtestimonial, [{
		key: "onSelectTestImage",
		value: function onSelectTestImage(media, index) {
			var test_block = this.props.attributes.test_block;
			var setAttributes = this.props.setAttributes;


			var imag_url = null;
			if (!media || !media.url) {
				imag_url = null;
			} else {
				imag_url = media;
			}

			if (!media.type || "image" !== media.type) {
				imag_url = null;
			}

			var newItems = test_block.map(function (item, thisIndex) {
				if (index === thisIndex) {
					item["image"] = imag_url;
				}
				return item;
			});

			setAttributes({
				test_block: newItems
			});
		}

		/*
   * Event to set Image as null while removing.
   */

	}, {
		key: "onRemoveTestImage",
		value: function onRemoveTestImage(index) {
			var test_block = this.props.attributes.test_block;
			var setAttributes = this.props.setAttributes;


			var newItems = test_block.map(function (item, thisIndex) {
				if (index === thisIndex) {
					item["image"] = null;
				}
				return item;
			});

			setAttributes({
				test_block: newItems
			});
		}

		/*
   * Event to set Image selectot label.
   */

	}, {
		key: "getImageName",
		value: function getImageName(image) {
			var test_block = this.props.attributes.test_block;


			var image_name = "Select Image";
			if (image) {
				if (image.url == null || image.url == "") {
					image_name = "Select Image";
				} else {
					image_name = "Replace Image";
				}
			}
			return image_name;
		}
	}, {
		key: "togglePauseOnHover",
		value: function togglePauseOnHover() {
			var pauseOnHover = this.props.attributes.pauseOnHover;
			var setAttributes = this.props.setAttributes;


			setAttributes({ pauseOnHover: !pauseOnHover });
		}
	}, {
		key: "toggleInfiniteLoop",
		value: function toggleInfiniteLoop() {
			var infiniteLoop = this.props.attributes.infiniteLoop;
			var setAttributes = this.props.setAttributes;


			setAttributes({ infiniteLoop: !infiniteLoop });
		}
	}, {
		key: "toggleAutoplay",
		value: function toggleAutoplay() {
			var autoplay = this.props.attributes.autoplay;
			var setAttributes = this.props.setAttributes;


			setAttributes({ autoplay: !autoplay });
		}

		/*
   * Event to set Image as null while removing.
   */

	}, {
		key: "onRemoveImage",
		value: function onRemoveImage() {
			var backgroundImage = this.props.attributes.backgroundImage;
			var setAttributes = this.props.setAttributes;


			setAttributes({ backgroundImage: null });
		}

		/*
   * Event to set Image as while adding.
   */

	}, {
		key: "onSelectImage",
		value: function onSelectImage(media) {
			var backgroundImage = this.props.attributes.backgroundImage;
			var setAttributes = this.props.setAttributes;


			if (!media || !media.url) {
				setAttributes({ backgroundImage: null });
				return;
			}

			if (!media.type || "image" !== media.type) {
				setAttributes({ backgroundImage: null });
				return;
			}

			setAttributes({ backgroundImage: media });
		}
	}, {
		key: "render",
		value: function render() {
			var _this2 = this;

			var _props = this.props,
			    isSelected = _props.isSelected,
			    className = _props.className,
			    setAttributes = _props.setAttributes,
			    attributes = _props.attributes,
			    mergeBlocks = _props.mergeBlocks,
			    insertBlocksAfter = _props.insertBlocksAfter,
			    onReplace = _props.onReplace;

			// Setup the attributes.

			var test_item_count = attributes.test_item_count,
			    test_block = attributes.test_block,
			    headingAlign = attributes.headingAlign,
			    companyColor = attributes.companyColor,
			    descColor = attributes.descColor,
			    authorColor = attributes.authorColor,
			    prefixTag = attributes.prefixTag,
			    nameFontSize = attributes.nameFontSize,
			    companyFontSize = attributes.companyFontSize,
			    descFontSize = attributes.descFontSize,
			    separatorWidth = attributes.separatorWidth,
			    separatorSpace = attributes.separatorSpace,
			    descSpace = attributes.descSpace,
			    iconimgStyle = attributes.iconimgStyle,
			    imagePosition = attributes.imagePosition,
			    imageAlignment = attributes.imageAlignment,
			    block_id = attributes.block_id,
			    source_type = attributes.source_type,
			    nameSpace = attributes.nameSpace,
			    imgHrPadding = attributes.imgHrPadding,
			    imgVrPadding = attributes.imgVrPadding,
			    iconImage = attributes.iconImage,
			    imageSize = attributes.imageSize,
			    imageWidth = attributes.imageWidth,
			    columns = attributes.columns,
			    tcolumns = attributes.tcolumns,
			    mcolumns = attributes.mcolumns,
			    pauseOnHover = attributes.pauseOnHover,
			    infiniteLoop = attributes.infiniteLoop,
			    transitionSpeed = attributes.transitionSpeed,
			    arrowDots = attributes.arrowDots,
			    arrowSize = attributes.arrowSize,
			    arrowBorderSize = attributes.arrowBorderSize,
			    arrowBorderRadius = attributes.arrowBorderRadius,
			    autoplay = attributes.autoplay,
			    autoplaySpeed = attributes.autoplaySpeed,
			    arrowColor = attributes.arrowColor,
			    rowGap = attributes.rowGap,
			    columnGap = attributes.columnGap,
			    contentPadding = attributes.contentPadding,
			    backgroundType = attributes.backgroundType,
			    backgroundColor = attributes.backgroundColor,
			    backgroundImage = attributes.backgroundImage,
			    backgroundPosition = attributes.backgroundPosition,
			    backgroundSize = attributes.backgroundSize,
			    backgroundRepeat = attributes.backgroundRepeat,
			    backgroundImageColor = attributes.backgroundImageColor,
			    backgroundOpacity = attributes.backgroundOpacity,
			    borderStyle = attributes.borderStyle,
			    borderWidth = attributes.borderWidth,
			    borderRadius = attributes.borderRadius,
			    borderColor = attributes.borderColor,
			    stack = attributes.stack;

			// Add CSS.

			var element = document.getElementById("uagb-testinomial-style-" + this.props.clientId);
			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_5__inline_styles__["a" /* default */])(this.props);
			}

			var my_block_id = "uagb-testimonial-" + this.props.clientId;

			// Typography settings.
			var TypographySettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Typography"),
						initialOpen: false
					},
					wp.element.createElement(RangeControl, {
						label: __("Testimonial Font Size"),
						value: descFontSize,
						onChange: function onChange(value) {
							return setAttributes({ descFontSize: value });
						},
						min: 10,
						max: 100,
						initialPosition: 16,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Name Font Size"),
						value: nameFontSize,
						onChange: function onChange(value) {
							return setAttributes({ nameFontSize: value });
						},
						min: 10,
						max: 100,
						initialPosition: 30,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Company Font Size"),
						value: companyFontSize,
						onChange: function onChange(value) {
							return setAttributes({ companyFontSize: value });
						},
						min: 10,
						max: 100,
						initialPosition: 16,
						beforeIcon: "editor-textcolor",
						allowReset: true
					})
				),
				wp.element.createElement(PanelColorSettings, {
					title: __("Color Settings"),
					initialOpen: false,
					colorSettings: [{
						value: descColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ descColor: colorValue });
						},
						label: __("Testimonial Color")
					}, {
						value: authorColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ authorColor: colorValue });
						},
						label: __("Name Color")
					}, {
						value: companyColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ companyColor: colorValue });
						},
						label: __("Company Color")
					}, {
						value: arrowColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ arrowColor: colorValue });
						},
						label: __("Arrow & Dots Color")
					}]
				})
			);

			// Margin Settings.
			var marginSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Spacing"),
						initialOpen: false
					},
					wp.element.createElement(RangeControl, {
						label: __("Gap Between Content & Dots"),
						value: rowGap,
						onChange: function onChange(value) {
							return setAttributes({ rowGap: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Row Gap"),
						value: columnGap,
						onChange: function onChange(value) {
							return setAttributes({ columnGap: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Content Padding"),
						value: contentPadding,
						onChange: function onChange(value) {
							return setAttributes({ contentPadding: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Testimonial Bottom Margin"),
						value: descSpace,
						onChange: function onChange(value) {
							return setAttributes({ descSpace: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Name Bottom Margin"),
						value: nameSpace,
						onChange: function onChange(value) {
							return setAttributes({ nameSpace: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Image Horizontal Padding"),
						value: imgHrPadding,
						onChange: function onChange(value) {
							return setAttributes({ imgHrPadding: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Image Vertical Padding"),
						value: imgVrPadding,
						onChange: function onChange(value) {
							return setAttributes({ imgVrPadding: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					})
				)
			);

			var background_settings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{ title: __("Background"), initialOpen: false },
					wp.element.createElement(SelectControl, {
						label: __("Background Type"),
						value: backgroundType,
						onChange: function onChange(value) {
							return setAttributes({ backgroundType: value });
						},
						options: [{ value: "none", label: __("None") }, { value: "color", label: __("Color") }, { value: "image", label: __("Image") }]
					}),
					"color" == backgroundType && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Background Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: backgroundColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: backgroundColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ backgroundColor: colorValue });
							},
							allowReset: true
						})
					),
					"image" == backgroundType && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							BaseControl,
							{
								className: "editor-bg-image-control",
								label: __("Background Image") },
							wp.element.createElement(MediaUpload, {
								title: __("Select Background Image"),
								onSelect: this.onSelectImage,
								allowedTypes: ["image"],
								value: backgroundImage,
								render: function render(_ref) {
									var open = _ref.open;
									return wp.element.createElement(
										Button,
										{ isDefault: true, onClick: open },
										!backgroundImage ? __("Select Background Image") : __("Replace image")
									);
								}
							}),
							backgroundImage && wp.element.createElement(
								Button,
								{ className: "uagb-rm-btn", onClick: this.onRemoveImage, isLink: true, isDestructive: true },
								__("Remove Image")
							)
						),
						backgroundImage && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(SelectControl, {
								label: __("Image Position"),
								value: backgroundPosition,
								onChange: function onChange(value) {
									return setAttributes({ backgroundPosition: value });
								},
								options: [{ value: "top-left", label: __("Top Left") }, { value: "top-center", label: __("Top Center") }, { value: "top-right", label: __("Top Right") }, { value: "center-left", label: __("Center Left") }, { value: "center-center", label: __("Center Center") }, { value: "center-right", label: __("Center Right") }, { value: "bottom-left", label: __("Bottom Left") }, { value: "bottom-center", label: __("Bottom Center") }, { value: "bottom-right", label: __("Bottom Right") }]
							}),
							wp.element.createElement(SelectControl, {
								label: __("Repeat"),
								value: backgroundRepeat,
								onChange: function onChange(value) {
									return setAttributes({ backgroundRepeat: value });
								},
								options: [{ value: "no-repeat", label: __("No Repeat") }, { value: "repeat", label: __("Repeat") }, { value: "repeat-x", label: __("Repeat-x") }, { value: "repeat-y", label: __("Repeat-y") }]
							}),
							wp.element.createElement(SelectControl, {
								label: __("Size"),
								value: backgroundSize,
								onChange: function onChange(value) {
									return setAttributes({ backgroundSize: value });
								},
								options: [{ value: "auto", label: __("Auto") }, { value: "cover", label: __("Cover") }, { value: "contain", label: __("Contain") }]
							}),
							wp.element.createElement(
								Fragment,
								null,
								wp.element.createElement(
									"p",
									{ className: "uagb-setting-label" },
									__("Image Overlay Color"),
									wp.element.createElement(
										"span",
										{ className: "components-base-control__label" },
										wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: backgroundImageColor } })
									)
								),
								wp.element.createElement(ColorPalette, {
									value: backgroundImageColor,
									onChange: function onChange(colorValue) {
										return setAttributes({ backgroundImageColor: colorValue });
									},
									allowReset: true
								})
							)
						)
					),
					"image" == backgroundType && backgroundImage && wp.element.createElement(RangeControl, {
						label: __("Opacity"),
						value: backgroundOpacity,
						onChange: function onChange(value) {
							return setAttributes({ backgroundOpacity: value });
						},
						min: 0,
						max: 100,
						allowReset: true,
						initialPosition: 0
					})
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Border"), initialOpen: false },
					wp.element.createElement(SelectControl, {
						label: __("Border Style"),
						value: borderStyle,
						onChange: function onChange(value) {
							return setAttributes({ borderStyle: value });
						},
						options: [{ value: "none", label: __("None") }, { value: "solid", label: __("Solid") }, { value: "dotted", label: __("Dotted") }, { value: "dashed", label: __("Dashed") }, { value: "double", label: __("Double") }, { value: "groove", label: __("Groove") }, { value: "inset", label: __("Inset") }, { value: "outset", label: __("Outset") }, { value: "ridge", label: __("Ridge") }]
					}),
					"none" != borderStyle && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(RangeControl, {
							label: __("Border Width"),
							value: borderWidth,
							onChange: function onChange(value) {
								return setAttributes({ borderWidth: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Border Radius"),
							value: borderRadius,
							onChange: function onChange(value) {
								return setAttributes({ borderRadius: value });
							},
							min: 0,
							max: 1000,
							allowReset: true
						}),
						wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(
								"p",
								{ className: "uagb-setting-label" },
								__("Border Color"),
								wp.element.createElement(
									"span",
									{ className: "components-base-control__label" },
									wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: borderColor } })
								)
							),
							wp.element.createElement(ColorPalette, {
								value: borderColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ borderColor: colorValue });
								},
								allowReset: true
							})
						)
					)
				)
			);

			// Image sizes.
			var imageSizeOptions = [{ value: "thumbnail", label: __("Thumbnail") }, { value: "medium", label: __("Medium") }, { value: "full", label: __("Large") }];

			function NextArrow(props) {

				return wp.element.createElement(
					"button",
					{ type: "button", "data-role": "none", className: "slick-next slick-arrow", "aria-label": "Next", tabIndex: "0", role: "button", style: { "borderColor": arrowColor, "borderRadius": arrowBorderRadius, "borderWidth": arrowBorderSize } },
					wp.element.createElement("span", { className: "fas fa-angle-right", style: { "fontSize": props.arrowSize, "color": arrowColor, "height": props.arrowSize, "width": props.arrowSize } })
				);
			}

			function PrevArrow(props) {

				return wp.element.createElement(
					"button",
					{ type: "button", "data-role": "none", className: "slick-prev slick-arrow", "aria-label": "Previous", tabIndex: "0", role: "button", style: { "borderColor": arrowColor, "borderRadius": arrowBorderRadius, "borderWidth": arrowBorderSize } },
					wp.element.createElement("span", { className: "fas fa-angle-left", style: { "fontSize": props.arrowSize, "color": arrowColor, "height": props.arrowSize, "width": props.arrowSize } })
				);
			}

			var dots = "dots" == arrowDots || "arrows_dots" == arrowDots ? true : false;
			var arrows = "arrows" == arrowDots || "arrows_dots" == arrowDots ? true : false;

			var settings = {
				slidesToShow: columns,
				slidesToScroll: 1,
				autoplaySpeed: autoplaySpeed,
				autoplay: autoplay,
				infinite: infiniteLoop,
				pauseOnHover: pauseOnHover,
				speed: transitionSpeed,
				arrows: arrows,
				dots: dots,
				rtl: false,
				draggable: false,
				nextArrow: wp.element.createElement(NextArrow, { arrowSize: arrowSize }),
				prevArrow: wp.element.createElement(PrevArrow, { arrowSize: arrowSize }),
				responsive: [{
					breakpoint: 1024,
					settings: {
						slidesToShow: tcolumns,
						slidesToScroll: 1
					}
				}, {
					breakpoint: 767,
					settings: {
						slidesToShow: mcolumns,
						slidesToScroll: 1
					}
				}]
			};

			var image_enable = false;
			// Set testinomial image panel
			var tmControls = function tmControls(index) {
				var image_val = null;
				if (test_block[index] && typeof test_block[index] !== "undefined") {
					image_val = test_block[index]["image"];
				}
				return wp.element.createElement(
					PanelBody,
					{ key: index,
						title: __("Image") + " " + (index + 1) + " " + __("Settings"),
						initialOpen: true
					},
					wp.element.createElement(
						BaseControl,
						{
							className: "editor-bg-image-control",
							label: __("")
						},
						wp.element.createElement(MediaUpload, {
							title: __("Select Image" + (index + 1)),
							onSelect: function onSelect(media) {
								_this2.onSelectTestImage(media, index);
							},
							allowedTypes: ["image"],
							value: image_val,
							render: function render(_ref2) {
								var open = _ref2.open;
								return wp.element.createElement(
									Button,
									{ isDefault: true, onClick: open },
									_this2.getImageName(test_block[index]["image"])
								);
							}
						}),
						image_val && test_block[index]["image"].url !== null && test_block[index]["image"].url !== "" && wp.element.createElement(
							Button,
							{ className: "uagb-rm-btn", key: index, onClick: function onClick(value) {
									_this2.onRemoveTestImage(index);
								}, isLink: true, isDestructive: true },
							__("Remove Image")
						)
					)
				);
			};

			var carousal_settings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{ title: __("Carousel"), initialOpen: false },
					wp.element.createElement(ToggleControl, {
						label: __("Pause On Hover"),
						checked: pauseOnHover,
						onChange: this.togglePauseOnHover
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Autoplay"),
						checked: autoplay,
						onChange: this.toggleAutoplay
					}),
					autoplay == true && wp.element.createElement(RangeControl, {
						label: __("Autoplay Speed (ms)"),
						value: autoplaySpeed,
						onChange: function onChange(value) {
							return setAttributes({ autoplaySpeed: value });
						},
						min: 100,
						max: 10000
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Infinite Loop"),
						checked: infiniteLoop,
						onChange: this.toggleInfiniteLoop
					}),
					wp.element.createElement(RangeControl, {
						label: __("Transition Speed (ms)"),
						value: transitionSpeed,
						onChange: function onChange(value) {
							return setAttributes({ transitionSpeed: value });
						},
						min: 100,
						max: 5000
					}),
					wp.element.createElement(SelectControl, {
						label: __("Show Arrows & Dots"),
						value: arrowDots,
						onChange: function onChange(value) {
							return setAttributes({ arrowDots: value });
						},
						options: [{ value: "arrows", label: __("Only Arrows") }, { value: "dots", label: __("Only Dots") }, { value: "arrows_dots", label: __("Both Arrows & Dots") }]
					}),
					"dots" != arrowDots && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(RangeControl, {
							label: __("Arrow Size"),
							value: arrowSize,
							onChange: function onChange(value) {
								return setAttributes({ arrowSize: value });
							},
							min: 0,
							max: 50
						}),
						wp.element.createElement(RangeControl, {
							label: __("Arrow Border Size"),
							value: arrowBorderSize,
							onChange: function onChange(value) {
								return setAttributes({ arrowBorderSize: value });
							},
							min: 0,
							max: 50
						}),
						wp.element.createElement(RangeControl, {
							label: __("Arrow Border Radius"),
							value: arrowBorderRadius,
							onChange: function onChange(value) {
								return setAttributes({ arrowBorderRadius: value });
							},
							min: 0,
							max: 50
						})
					)
				)
			);

			var cnt = 0;
			test_block.map(function (item, thisIndex) {
				var image_arr = test_block[thisIndex];
				if (image_arr && typeof image_arr !== "undefined") {
					var image = image_arr["image"];
					if (typeof image !== "undefined" && image !== null && image !== "") {
						cnt++;
					}
				}
			});

			// Global Controls.
			var inspect_control = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					InspectorControls,
					null,
					wp.element.createElement(
						PanelBody,
						{
							title: __("General"),
							initialOpen: true
						},
						wp.element.createElement(RangeControl, {
							label: __("Number of Testimonials"),
							value: test_item_count,
							onChange: function onChange(newCount) {
								var cloneTest_block = [].concat(_toConsumableArray(test_block));
								if (cloneTest_block.length < newCount) {
									var incAmount = Math.abs(newCount - cloneTest_block.length);

									{
										__WEBPACK_IMPORTED_MODULE_7_lodash_times___default()(incAmount, function (n) {

											cloneTest_block.push({
												description: "I have been working with these guys since years now! With lots of hard work and timely communication they made sure they delivered the best to me. Highly recommended!",
												name: "John Doe",
												company: "Company" + (cloneTest_block.length + 1),
												image: ""
											});
										});
									}
									setAttributes({ test_block: cloneTest_block });
								} else {
									var _incAmount = Math.abs(newCount - cloneTest_block.length);
									var data_new = cloneTest_block;
									for (var i = 0; i < _incAmount; i++) {
										data_new.pop();
									}
									setAttributes({ test_block: data_new });
								}
								setAttributes({ test_item_count: newCount });
							},
							min: 0,
							max: 10,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Columns"),
							value: columns,
							onChange: function onChange(value) {
								return setAttributes({ columns: value });
							},
							min: 1,
							max: test_item_count
						}),
						wp.element.createElement(RangeControl, {
							label: __("Columns (Tablet)"),
							value: tcolumns,
							onChange: function onChange(value) {
								return setAttributes({ tcolumns: value });
							},
							min: 1,
							max: test_item_count
						}),
						wp.element.createElement(RangeControl, {
							label: __("Columns (Mobile)"),
							value: mcolumns,
							onChange: function onChange(value) {
								return setAttributes({ mcolumns: value });
							},
							min: 1,
							max: test_item_count
						})
					),
					carousal_settings,
					wp.element.createElement(
						PanelBody,
						{
							title: __("Image"),
							initialOpen: false
						},
						__WEBPACK_IMPORTED_MODULE_7_lodash_times___default()(test_item_count, function (n) {
							return tmControls(n);
						}),
						cnt > 0 && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(SelectControl, {
								label: __("Image Position"),
								value: imagePosition,
								onChange: function onChange(value) {
									return setAttributes({ imagePosition: value });
								},
								options: [{ value: "top", label: __("Top") }, { value: "bottom", label: __("Bottom") }, { value: "left", label: __("Left") }, { value: "right", label: __("Right") }]
							}),
							(imagePosition == "left" || imagePosition == "right") && wp.element.createElement(
								Fragment,
								null,
								wp.element.createElement(SelectControl, {
									label: __("Vertical ALignment"),
									value: imageAlignment,
									onChange: function onChange(value) {
										return setAttributes({ imageAlignment: value });
									},
									options: [{ value: "top", label: __("Top") }, { value: "middle", label: __("Middle") }]
								}),
								wp.element.createElement(SelectControl, {
									label: __("Stack on"),
									value: stack,
									options: [{ value: "none", label: __("None") }, { value: "tablet", label: __("Tablet") }, { value: "mobile", label: __("Mobile") }],
									help: __("Note: Choose on what breakpoint the Info Box will stack."),
									onChange: function onChange(value) {
										return setAttributes({ stack: value });
									}
								})
							),
							wp.element.createElement(SelectControl, {
								label: __("Image Style"),
								value: iconimgStyle,
								onChange: function onChange(value) {
									return setAttributes({ iconimgStyle: value });
								},
								options: [{ value: "normal", label: __("Normal") }, { value: "circle", label: __("Circle") }, { value: "square", label: __("Square") }]
							}),
							wp.element.createElement(SelectControl, {
								label: __("Image Size"),
								options: imageSizeOptions,
								value: imageSize,
								onChange: function onChange(value) {
									return setAttributes({ imageSize: value });
								}
							}),
							wp.element.createElement(RangeControl, {
								label: __("Width"),
								value: imageWidth,
								onChange: function onChange(value) {
									return setAttributes({ imageWidth: value });
								},
								min: 0,
								max: 500,
								allowReset: true
							})
						)
					),
					TypographySettings,
					marginSettings,
					background_settings
				)
			);

			return wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					BlockControls,
					{ key: "controls" },
					wp.element.createElement(AlignmentToolbar, {
						value: headingAlign,
						onChange: function onChange(value) {
							return setAttributes({ headingAlign: value });
						}
					})
				),
				inspect_control,
				wp.element.createElement(
					"div",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-testomonial__outer-wrap uagb-slick-carousel uagb-tm__arrow-outside"),
						id: my_block_id
					},
					wp.element.createElement(
						__WEBPACK_IMPORTED_MODULE_8_react_slick___default.a,
						_extends({
							className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("is-carousel", "uagb-tm__columns-" + columns, "uagb-tm__items")
						}, settings),
						test_block.map(function (test, index) {
							return wp.element.createElement(
								"div",
								{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, ["uagb-testimonial__wrap"].concat(_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_4__classes__["a" /* default */])(attributes)))), key: "wrap-" + index },
								wp.element.createElement(
									"div",
									{ className: "uagb-tm__content", key: "tm_content-" + index },
									wp.element.createElement("div", { className: "uagb-tm__overlay" }),
									(imagePosition == "top" || imagePosition == "left") && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_TestimonialImage__["a" /* default */], { attributes: attributes, index_value: index }),
									wp.element.createElement(
										"div",
										{ className: "uagb-tm__text-wrap" },
										// Get description.
										wp.element.createElement(
											Fragment,
											null,
											wp.element.createElement(
												"div",
												{ className: "uagb-testinomial-text-wrap", key: "text-wrap-" + index },
												wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_Description__["a" /* default */], { attributes: attributes, setAttributes: setAttributes, props: _this2.props, index_value: index })
											)
										),
										wp.element.createElement(
											"div",
											{ className: "uagb-tm__meta" },
											wp.element.createElement(
												"div",
												{ className: "uagb-tm__meta-inner" },
												imagePosition == "bottom" && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_TestimonialImage__["a" /* default */], { attributes: attributes, index_value: index }),
												//title_text
												wp.element.createElement(
													Fragment,
													null,
													wp.element.createElement(
														"div",
														{ className: "uagb-testimonial-details", key: "tm_wraps-" + index },
														wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_AuthorName__["a" /* default */], { attributes: attributes, setAttributes: setAttributes, props: _this2.props, index_value: index }),
														wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_Company__["a" /* default */], { attributes: attributes, setAttributes: setAttributes, props: _this2.props, index_value: index })
													)
												)
											)
										)
									),
									imagePosition == "right" && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_TestimonialImage__["a" /* default */], { attributes: attributes, index_value: index })
								)
							);
						})
					)
				)
			);
		}
	}, {
		key: "componentDidMount",
		value: function componentDidMount() {

			// Assigning block_id in the attribute.
			this.props.setAttributes({ block_id: this.props.clientId });

			// Pushing Style tag for this block css.
			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-testinomial-style-" + this.props.clientId);
			document.head.appendChild($style);
		}
	}]);

	return UAGBtestimonial;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (UAGBtestimonial);

/***/ }),
/* 351 */
/*!*************************************************!*\
  !*** ./src/blocks/testimonial/inline-styles.js ***!
  \*************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline styles.
 * @param  {object} props - The block object.
 * @return {object} The inline background type CSS.
 */
function TestimonialStyle(props) {
	var _props$attributes = props.attributes,
	    headingAlign = _props$attributes.headingAlign,
	    companyColor = _props$attributes.companyColor,
	    descColor = _props$attributes.descColor,
	    authorColor = _props$attributes.authorColor,
	    nameFontSize = _props$attributes.nameFontSize,
	    companyFontSize = _props$attributes.companyFontSize,
	    descFontSize = _props$attributes.descFontSize,
	    descSpace = _props$attributes.descSpace,
	    block_id = _props$attributes.block_id,
	    nameSpace = _props$attributes.nameSpace,
	    imgVrPadding = _props$attributes.imgVrPadding,
	    imgHrPadding = _props$attributes.imgHrPadding,
	    imageWidth = _props$attributes.imageWidth,
	    rowGap = _props$attributes.rowGap,
	    columnGap = _props$attributes.columnGap,
	    contentPadding = _props$attributes.contentPadding,
	    backgroundColor = _props$attributes.backgroundColor,
	    backgroundImage = _props$attributes.backgroundImage,
	    backgroundPosition = _props$attributes.backgroundPosition,
	    backgroundSize = _props$attributes.backgroundSize,
	    backgroundRepeat = _props$attributes.backgroundRepeat,
	    backgroundImageColor = _props$attributes.backgroundImageColor,
	    backgroundOpacity = _props$attributes.backgroundOpacity,
	    borderStyle = _props$attributes.borderStyle,
	    borderWidth = _props$attributes.borderWidth,
	    borderRadius = _props$attributes.borderRadius,
	    borderColor = _props$attributes.borderColor,
	    arrowColor = _props$attributes.arrowColor,
	    test_item_count = _props$attributes.test_item_count,
	    columns = _props$attributes.columns,
	    arrowDots = _props$attributes.arrowDots;


	if (props.clientId) {
		var clientId = "uagb-testimonial-" + props.clientId;
	} else {
		var clientId = "uagb-testimonial-" + block_id;
	}

	var img_align = "center";

	if (headingAlign == "left") {
		img_align = "flex-start";
	} else if (headingAlign == "right") {
		img_align = "flex-end";
	}

	var selectors = {};

	selectors[".uagb-testimonial__wrap"] = {
		"padding-left": columnGap / 2 + "px",
		"padding-right": columnGap / 2 + "px",
		"margin-bottom": rowGap + "px"
	};

	selectors[".uagb-testimonial__wrap .uagb-tm__image-content"] = {
		"padding-left": imgHrPadding + "px",
		"padding-right": imgHrPadding + "px",
		"padding-top": imgVrPadding + "px",
		"padding-bottom": imgVrPadding + "px"
	};

	selectors[".uagb-tm__image-position-top .uagb-tm__image-content"] = {
		"justify-content": img_align

		// Image
	};selectors[".uagb-tm__image img"] = {
		"width": imageWidth + "px",
		"max-width": imageWidth + "px"
	};

	selectors[".uagb-tm__content"] = {
		"text-align": headingAlign,
		"padding": contentPadding + "px"

		// Prefix Style
	};selectors[".uagb-tm__author-name"] = {
		"font-size": nameFontSize + "px",
		"color": authorColor,
		"margin-bottom": nameSpace + "px"

		// Title Style
	};selectors[".uagb-tm__company"] = {
		"font-size": companyFontSize + "px",
		"color": companyColor

		// Description Style
	};selectors[".uagb-tm__desc"] = {
		"font-size": descFontSize + "px",
		"color": descColor,
		"margin-bottom": descSpace + "px"
	};

	selectors[".uagb-testimonial__wrap.uagb-tm__bg-type-color .uagb-tm__content"] = {
		"background-color": backgroundColor
	};

	var position = backgroundPosition.replace("-", " ");
	selectors[".uagb-testimonial__wrap.uagb-tm__bg-type-image .uagb-tm__content"] = {
		"background-image": backgroundImage ? "url(" + backgroundImage.url + ")" : null,
		"background-position": position,
		"background-repeat": backgroundRepeat,
		"background-size": backgroundSize
	};

	selectors[".uagb-testimonial__wrap.uagb-tm__bg-type-image .uagb-tm__overlay"] = {
		"background-color": backgroundImageColor,
		"opacity": typeof backgroundOpacity != "undefined" ? (100 - backgroundOpacity) / 100 : 0.5
	};

	if (borderStyle != "none") {
		selectors[".uagb-testimonial__wrap .uagb-tm__content"] = {
			"border-color": borderColor,
			"border-style": borderStyle,
			"border-width": borderWidth + "px",
			"border-radius": borderRadius + "px"
		};
	}

	selectors["ul.slick-dots li button:before"] = {
		"color": arrowColor
	};
	selectors["ul.slick-dots li.slick-active button:before"] = {
		"color": arrowColor
	};

	if (test_item_count === 1 || test_item_count === columns || arrowDots === "dots") {
		selectors[".uagb-slick-carousel.uagb-tm__arrow-outside"] = {
			"padding": 0
		};
	}

	var styling_css = "";

	for (var i in selectors) {

		if (i === ".uagb-slick-carousel.uagb-tm__arrow-outside") {
			styling_css += "#wpwrap #" + clientId + i + " { ";
		} else {
			styling_css += "#wpwrap #" + clientId + " " + i + " { ";
		}

		var sel = selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (TestimonialStyle);

/***/ }),
/* 352 */
/*!**********************************************!*\
  !*** ./src/blocks/testimonial/attributes.js ***!
  \**********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _attributes;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * BLOCK: UAGB Section Attributes
 */

var ITEM_COUNT = 3;

var testimonial_block = [];

for (var i = 1; i <= ITEM_COUNT; i++) {
	var desc_text = "I have been working with these guys since years now! With lots of hard work and timely communication they made sure they delivered the best to me. Highly recommended!";
	var author_text = "John Doe ";
	var company_text = "Company" + i;
	testimonial_block.push({
		"description": desc_text,
		"name": author_text,
		"company": company_text,
		"image": ""
	});
}

var attributes = (_attributes = {
	test_item_count: {
		type: "number",
		default: ITEM_COUNT
	},
	test_block: {
		type: "array",
		default: testimonial_block
	},
	headingAlign: {
		type: "string",
		default: "center"
	},
	descColor: {
		type: "string",
		default: "#333"
	},
	companyColor: {
		type: "string",
		default: "#888888"
	},
	authorColor: {
		type: "string",
		default: "#333"
	},
	iconimgStyle: {
		type: "string",
		default: "circle"
	},
	imagePosition: {
		type: "string",
		default: "bottom"
	},
	imageAlignment: {
		type: "string",
		default: "top"
	},
	authorFontSize: {
		type: "number"
	},
	nameFontSize: {
		type: "number"
	},
	companyFontSize: {
		type: "number",
		default: 15
	},
	descFontSize: {
		type: "number"
	},
	nameSpace: {
		type: "number",
		default: 5
	},
	descSpace: {
		type: "number",
		default: 15
	},
	block_id: {
		type: "string",
		default: "not_set"
	},
	authorSpace: {
		type: "number",
		default: 5
	},
	imgVrPadding: {
		type: "number",
		default: 10
	},
	imgHrPadding: {
		type: "number",
		default: 10
	},
	imgTopPadding: {
		type: "number",
		default: 10
	},
	imgBottomPadding: {
		type: "number",
		default: 10
	},
	iconImage: {
		type: "object",
		default: {
			"url": "",
			"alt": "InfoBox placeholder img"
		}
	},
	imageSize: {
		type: "string",
		default: "thumbnail"
	},
	imageWidth: {
		type: "number",
		default: 60
	},
	columns: {
		type: "number",
		default: 1
	},
	tcolumns: {
		type: "number",
		default: 1
	},
	mcolumns: {
		type: "number",
		default: 1
	},
	pauseOnHover: {
		type: "boolean",
		default: true
	},
	infiniteLoop: {
		type: "boolean",
		default: true
	},
	transitionSpeed: {
		type: "number",
		default: 500
	},
	autoplay: {
		type: "boolean",
		default: true
	},
	autoplaySpeed: {
		type: "number",
		default: 2000
	},
	arrowDots: {
		type: "string",
		default: "arrows_dots"
	},
	arrowSize: {
		type: "number",
		default: 20
	},
	"arrowBorderSize": {
		type: "number",
		default: 1
	},
	"arrowBorderRadius": {
		type: "number",
		default: 0
	},
	arrowColor: {
		type: "string",
		default: "#aaaaaa"
	},
	rowGap: {
		type: "number",
		default: 10
	},
	columnGap: {
		type: "number",
		default: 10
	},
	contentPadding: {
		type: "number",
		default: 5
	},
	backgroundType: {
		type: "string"
	},
	backgroundImage: {
		type: "object"
	},
	backgroundPosition: {
		type: "string",
		default: "center-center"
	},
	backgroundSize: {
		type: "string",
		default: "cover"
	},
	backgroundRepeat: {
		type: "string",
		default: "no-repeat"
	},
	backgroundColor: {
		type: "string"
	},
	backgroundImageColor: {
		type: "string"
	},
	borderStyle: {
		type: "string",
		default: "none"
	},
	borderWidth: {
		type: "number",
		default: "1"
	},
	borderRadius: {
		type: "number"
	},
	borderColor: {
		type: "string"
	},
	backgroundOpacity: {
		type: "number",
		default: 50
	}
}, _defineProperty(_attributes, "arrowColor", {
	type: "string",
	default: "#333"
}), _defineProperty(_attributes, "stack", {
	type: "string",
	default: "tablet"
}), _attributes);

/* harmony default export */ __webpack_exports__["a"] = (attributes);

/***/ }),
/* 353 */
/*!*******************************************!*\
  !*** ./src/blocks/testimonial/style.scss ***!
  \*******************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 354 */
/*!********************************************!*\
  !*** ./src/blocks/testimonial/editor.scss ***!
  \********************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 355 */
/*!**********************************!*\
  !*** ./src/blocks/team/block.js ***!
  \**********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit__ = __webpack_require__(/*! ./edit */ 356);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__attributes__ = __webpack_require__(/*! ./attributes */ 358);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 359);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__editor_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__style_scss__ = __webpack_require__(/*! ./style.scss */ 360);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__style_scss__);
/**
 * BLOCK: Team
 */

// Import block dependencies and components.



// Import icon.




var __ = wp.i18n.__;

// Import registerBlockType() from wp.blocks

var registerBlockType = wp.blocks.registerBlockType;
var RichText = wp.editor.RichText;

// Extend component

var Fragment = wp.element.Fragment;


function social_html(icon, link, target) {
	var target_value = target ? "_blank" : "_self";
	return wp.element.createElement(
		"li",
		{ className: "uagb-team__social-icon" },
		wp.element.createElement(
			"a",
			{ href: link, target: target_value, title: "", rel: "noopener noreferrer" },
			wp.element.createElement("span", { className: icon })
		)
	);
}

/**
 * Register: as Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */
registerBlockType("uagb/team", {
	title: uagb_blocks_info.blocks["uagb/team"]["title"],
	description: uagb_blocks_info.blocks["uagb/team"]["description"],
	icon: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__["a" /* default */].team,
	keywords: [__("team"), __("members"), __("uagb")],
	category: uagb_blocks_info.category,
	attributes: __WEBPACK_IMPORTED_MODULE_3__attributes__["a" /* default */],
	edit: __WEBPACK_IMPORTED_MODULE_2__edit__["a" /* default */],
	save: function save(props) {
		var _props$attributes = props.attributes,
		    block_id = _props$attributes.block_id,
		    align = _props$attributes.align,
		    tag = _props$attributes.tag,
		    title = _props$attributes.title,
		    prefix = _props$attributes.prefix,
		    description_text = _props$attributes.description_text,
		    image = _props$attributes.image,
		    imgSize = _props$attributes.imgSize,
		    imgStyle = _props$attributes.imgStyle,
		    imgPosition = _props$attributes.imgPosition,
		    twitterIcon = _props$attributes.twitterIcon,
		    fbIcon = _props$attributes.fbIcon,
		    linkedinIcon = _props$attributes.linkedinIcon,
		    pinIcon = _props$attributes.pinIcon,
		    twitterLink = _props$attributes.twitterLink,
		    fbLink = _props$attributes.fbLink,
		    linkedinLink = _props$attributes.linkedinLink,
		    pinLink = _props$attributes.pinLink,
		    socialTarget = _props$attributes.socialTarget,
		    socialEnable = _props$attributes.socialEnable,
		    stack = _props$attributes.stack;


		var size = "";
		var img_url = "";

		if (image) {
			size = image.sizes;
			if (image.sizes) {
				img_url = size[imgSize] ? size[imgSize].url : image.url;
			} else {
				img_url = image.url;
			}
		}

		var image_html = "";

		if ("" != img_url) {
			image_html = wp.element.createElement(
				"div",
				{
					className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-team__image-wrap", "uagb-team__image-crop-" + imgStyle) },
				wp.element.createElement("img", {
					className: "",
					src: img_url,
					alt: image.alt ? image.alt : ""
				})
			);
		}

		return wp.element.createElement(
			"div",
			{
				className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(props.className, "uagb-team", "uagb-team__outer-wrap", "uagb-team__image-position-" + imgPosition, "uagb-team__align-" + align, "uagb-team__stack-" + stack),
				id: "uagb-team-" + block_id },
			wp.element.createElement(
				"div",
				{ className: "uagb-team__wrap" },
				imgPosition == "left" && image_html,
				wp.element.createElement(
					"div",
					{ className: "uagb-team__content" },
					imgPosition == "above" && image_html,
					wp.element.createElement(
						"div",
						{ className: "uagb-team__title-wrap" },
						wp.element.createElement(RichText.Content, {
							tagName: tag,
							value: title,
							className: "uagb-team__title"
						}),
						wp.element.createElement(RichText.Content, {
							tagName: "span",
							value: prefix,
							className: "uagb-team__prefix"
						})
					),
					wp.element.createElement(
						"div",
						{ className: "uagb-team__desc-wrap" },
						wp.element.createElement(RichText.Content, {
							tagName: "p",
							value: description_text,
							className: "uagb-team__desc"
						})
					),
					socialEnable && wp.element.createElement(
						"div",
						{ className: "uagb-team__social-icon-wrap" },
						wp.element.createElement(
							"ul",
							{ className: "uagb-team__social-list" },
							"" != twitterIcon && social_html(twitterIcon, twitterLink, socialTarget),
							"" != fbIcon && social_html(fbIcon, fbLink, socialTarget),
							"" != linkedinIcon && social_html(linkedinIcon, linkedinLink, socialTarget),
							"" != pinIcon && social_html(pinIcon, pinLink, socialTarget)
						)
					)
				),
				imgPosition == "right" && image_html
			)
		);
	}
});

/***/ }),
/* 356 */
/*!*********************************!*\
  !*** ./src/blocks/team/edit.js ***!
  \*********************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_UAGBIcon__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/UAGBIcon */ 12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker__ = __webpack_require__(/*! @fonticonpicker/react-fonticonpicker */ 13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__styling__ = __webpack_require__(/*! ./styling */ 357);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Import block dependencies and components.


// Import icon.




var __ = wp.i18n.__;
var _wp$editor = wp.editor,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    InspectorControls = _wp$editor.InspectorControls,
    RichText = _wp$editor.RichText,
    PanelColorSettings = _wp$editor.PanelColorSettings,
    MediaUpload = _wp$editor.MediaUpload;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    Button = _wp$components.Button,
    TextControl = _wp$components.TextControl,
    BaseControl = _wp$components.BaseControl,
    ToggleControl = _wp$components.ToggleControl;

// Extend component

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;

var UAGBTeam = function (_Component) {
	_inherits(UAGBTeam, _Component);

	function UAGBTeam() {
		_classCallCheck(this, UAGBTeam);

		return _possibleConstructorReturn(this, (UAGBTeam.__proto__ || Object.getPrototypeOf(UAGBTeam)).apply(this, arguments));
	}

	_createClass(UAGBTeam, [{
		key: "social_html",
		value: function social_html(icon, link, target) {

			var target_value = target ? "_blank" : "_self";

			return wp.element.createElement(
				"li",
				{ className: "uagb-team__social-icon" },
				wp.element.createElement(
					"a",
					{ href: link, target: target_value, title: "", rel: "noopener noreferrer" },
					wp.element.createElement("span", { className: icon })
				)
			);
		}
	}, {
		key: "render",
		value: function render() {
			var _wp$element$createEle, _wp$element$createEle2;

			var _props = this.props,
			    isSelected = _props.isSelected,
			    className = _props.className,
			    setAttributes = _props.setAttributes,
			    attributes = _props.attributes,
			    mergeBlocks = _props.mergeBlocks,
			    insertBlocksAfter = _props.insertBlocksAfter,
			    onReplace = _props.onReplace;

			// Setup the attributes.

			var block_id = attributes.block_id,
			    align = attributes.align,
			    tag = attributes.tag,
			    title = attributes.title,
			    prefix = attributes.prefix,
			    description_text = attributes.description_text,
			    titleColor = attributes.titleColor,
			    prefixColor = attributes.prefixColor,
			    descColor = attributes.descColor,
			    titleFontSize = attributes.titleFontSize,
			    prefixFontSize = attributes.prefixFontSize,
			    descFontSize = attributes.descFontSize,
			    socialFontSize = attributes.socialFontSize,
			    image = attributes.image,
			    imgStyle = attributes.imgStyle,
			    imgAlign = attributes.imgAlign,
			    imgSize = attributes.imgSize,
			    imgWidth = attributes.imgWidth,
			    imgPosition = attributes.imgPosition,
			    titleSpace = attributes.titleSpace,
			    descSpace = attributes.descSpace,
			    prefixSpace = attributes.prefixSpace,
			    imgLeftMargin = attributes.imgLeftMargin,
			    imgRightMargin = attributes.imgRightMargin,
			    imgTopMargin = attributes.imgTopMargin,
			    imgBottomMargin = attributes.imgBottomMargin,
			    twitterIcon = attributes.twitterIcon,
			    fbIcon = attributes.fbIcon,
			    linkedinIcon = attributes.linkedinIcon,
			    pinIcon = attributes.pinIcon,
			    twitterLink = attributes.twitterLink,
			    fbLink = attributes.fbLink,
			    linkedinLink = attributes.linkedinLink,
			    pinLink = attributes.pinLink,
			    socialColor = attributes.socialColor,
			    socialHoverColor = attributes.socialHoverColor,
			    socialSpace = attributes.socialSpace,
			    socialTarget = attributes.socialTarget,
			    socialEnable = attributes.socialEnable,
			    stack = attributes.stack;

			// Add CSS.

			var element = document.getElementById("uagb-team-style-" + this.props.clientId);
			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_3__styling__["a" /* default */])(this.props);
			}

			// Set image.
			var onSelectImage = function onSelectImage(media) {
				if (!media || !media.url) {
					setAttributes({ image: null });
					return;
				}
				if (!media.type || "image" != media.type) {
					return;
				}
				setAttributes({ image: media });
			};

			// Remove image.
			var onRemoveImage = function onRemoveImage(media) {
				setAttributes({ image: null });
			};

			var size = "";
			var img_url = "";

			if (image) {
				size = image.sizes;
				if (image.sizes) {
					img_url = size[imgSize] ? size[imgSize].url : image.url;
				} else {
					img_url = image.url;
				}
			}

			var image_html = "";

			if ("" != img_url) {
				image_html = wp.element.createElement(
					"div",
					{
						className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-team__image-wrap", "uagb-team__image-crop-" + imgStyle) },
					wp.element.createElement("img", {
						className: "",
						src: img_url,
						alt: image.alt ? image.alt : ""
					})
				);
			}

			var team_image = "";

			// Get description and seperator components.
			var desc_html = wp.element.createElement(
				"div",
				{ className: "uagb-team__desc-wrap" },
				wp.element.createElement(RichText, (_wp$element$createEle = {
					tagName: "p",
					value: description_text,
					placeholder: __("Write a Description"),
					className: "uagb-team__desc",
					onChange: function onChange(value) {
						return setAttributes({ description_text: value });
					},
					onMerge: mergeBlocks
				}, _defineProperty(_wp$element$createEle, "placeholder", __("Write a Description")), _defineProperty(_wp$element$createEle, "unstableOnSplit", insertBlocksAfter ? function (before, after) {
					for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
						blocks[_key - 2] = arguments[_key];
					}

					setAttributes({ content: before });
					insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
				} : undefined), _defineProperty(_wp$element$createEle, "onRemove", function onRemove() {
					return onReplace([]);
				}), _wp$element$createEle))
			);

			var social_links = wp.element.createElement(
				"div",
				{ className: "uagb-team__social-icon-wrap" },
				wp.element.createElement(
					"ul",
					{ className: "uagb-team__social-list" },
					"" != twitterIcon && this.social_html(twitterIcon, twitterLink, socialTarget),
					"" != fbIcon && this.social_html(fbIcon, fbLink, socialTarget),
					"" != linkedinIcon && this.social_html(linkedinIcon, linkedinLink, socialTarget),
					"" != pinIcon && this.social_html(pinIcon, pinLink, socialTarget)
				)
			);

			// Get Title and Prefix components.
			var title_html = wp.element.createElement(
				"div",
				{ className: "uagb-team__title-wrap" },
				wp.element.createElement(RichText, {
					tagName: tag,
					value: title,
					className: "uagb-team__title",
					onChange: function onChange(value) {
						return setAttributes({ title: value });
					},
					multiline: false,
					placeholder: __("Write a Title"),
					onMerge: mergeBlocks,
					unstableOnSplit: insertBlocksAfter ? function (before, after) {
						for (var _len2 = arguments.length, blocks = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
							blocks[_key2 - 2] = arguments[_key2];
						}

						setAttributes({ content: before });
						insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
					} : undefined,
					onRemove: function onRemove() {
						return onReplace([]);
					}
				}),
				wp.element.createElement(RichText, (_wp$element$createEle2 = {
					tagName: "div",
					value: prefix,
					placeholder: __("Enter Prefix"),
					className: "uagb-team__prefix",
					onChange: function onChange(value) {
						return setAttributes({ prefix: value });
					},
					onMerge: mergeBlocks
				}, _defineProperty(_wp$element$createEle2, "placeholder", __("Write a Designation")), _defineProperty(_wp$element$createEle2, "unstableOnSplit", insertBlocksAfter ? function (before, after) {
					for (var _len3 = arguments.length, blocks = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
						blocks[_key3 - 2] = arguments[_key3];
					}

					setAttributes({ content: before });
					insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
				} : undefined), _defineProperty(_wp$element$createEle2, "onRemove", function onRemove() {
					return onReplace([]);
				}), _wp$element$createEle2))
			);

			return wp.element.createElement(
				Fragment,
				null,
				imgPosition == "above" && wp.element.createElement(
					BlockControls,
					{ key: "controls" },
					wp.element.createElement(AlignmentToolbar, {
						value: align,
						onChange: function onChange(value) {
							return setAttributes({ align: value });
						}
					})
				),
				wp.element.createElement(
					InspectorControls,
					null,
					wp.element.createElement(
						PanelBody,
						{
							title: __("Image")
						},
						wp.element.createElement(
							BaseControl,
							{
								className: "editor-bg-image-control",
								label: __("Team Member Image") },
							wp.element.createElement(MediaUpload, {
								title: __("Select Image"),
								onSelect: onSelectImage,
								allowedTypes: ["image"],
								value: image,
								render: function render(_ref) {
									var open = _ref.open;
									return wp.element.createElement(
										Button,
										{ isDefault: true, onClick: open },
										!image ? __("Select Image") : __("Replace image")
									);
								}
							}),
							image && wp.element.createElement(
								Button,
								{ className: "uagb-rm-btn", onClick: onRemoveImage, isLink: true, isDestructive: true },
								__("Remove Image")
							)
						),
						image && wp.element.createElement(SelectControl, {
							label: __("Position"),
							value: imgPosition,
							onChange: function onChange(value) {
								return setAttributes({ imgPosition: value });
							},
							options: [{ value: "above", label: __("Above") }, { value: "left", label: __("Left") }, { value: "right", label: __("Right") }]
						}),
						imgPosition != "above" && image && wp.element.createElement(SelectControl, {
							label: __("Stack on"),
							value: stack,
							options: [{ value: "none", label: __("None") }, { value: "tablet", label: __("Tablet") }, { value: "mobile", label: __("Mobile") }],
							help: __("Note: Choose on what breakpoint the Team will stack."),
							onChange: function onChange(value) {
								return setAttributes({ stack: value });
							}
						}),
						image && wp.element.createElement(SelectControl, {
							label: __("Image Style"),
							value: imgStyle,
							onChange: function onChange(value) {
								return setAttributes({ imgStyle: value });
							},
							options: [{ value: "normal", label: __("Normal") }, { value: "circle", label: __("Circle") }, { value: "square", label: __("Square") }]
						}),
						imgPosition && imgPosition !== "above" && image && wp.element.createElement(SelectControl, {
							label: __("Vertical Alignment"),
							value: imgAlign,
							onChange: function onChange(value) {
								return setAttributes({ imgAlign: value });
							},
							options: [{ value: "top", label: __("Top") }, { value: "middle", label: __("Middle") }]
						}),
						image && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(SelectControl, {
								label: __("Size"),
								options: [{ value: "thumbnail", label: __("Thumbnail") }, { value: "medium", label: __("Medium") }, { value: "full", label: __("Large") }],
								value: imgSize,
								onChange: function onChange(value) {
									return setAttributes({ imgSize: value });
								}
							}),
							wp.element.createElement(RangeControl, {
								label: __("Width"),
								value: imgWidth,
								onChange: function onChange(value) {
									return setAttributes({ imgWidth: value });
								},
								min: 0,
								max: 500,
								allowReset: true
							})
						)
					),
					wp.element.createElement(
						PanelBody,
						{ title: __("Social Links"),
							initialOpen: false },
						wp.element.createElement(ToggleControl, {
							label: __("Enable Social Links"),
							checked: socialEnable,
							onChange: function onChange(value) {
								return setAttributes({ socialEnable: !socialEnable });
							}
						}),
						socialEnable && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(ToggleControl, {
								label: __("Open Links in New Window"),
								checked: socialTarget,
								onChange: function onChange(value) {
									return setAttributes({ socialTarget: !socialTarget });
								}
							}),
							wp.element.createElement(
								PanelBody,
								{ title: __("Twitter"), initialOpen: false },
								wp.element.createElement(
									"p",
									{ className: "components-base-control__label" },
									__("Icon")
								),
								wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker___default.a, {
									icons: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_UAGBIcon__["a" /* default */],
									renderUsing: "class",
									theme: "default",
									value: twitterIcon,
									onChange: function onChange(value) {
										return setAttributes({ twitterIcon: value });
									},
									isMulti: false
								}),
								wp.element.createElement(
									"p",
									{ className: "components-base-control__label" },
									__("URL")
								),
								wp.element.createElement(TextControl, {
									value: twitterLink,
									onChange: function onChange(value) {
										return setAttributes({ twitterLink: value });
									},
									placeholder: __("Enter Twitter URL")
								})
							),
							wp.element.createElement(
								PanelBody,
								{ title: __("FaceBook"), initialOpen: false },
								wp.element.createElement(
									"p",
									{ className: "components-base-control__label" },
									__("Icon")
								),
								wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker___default.a, {
									icons: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_UAGBIcon__["a" /* default */],
									renderUsing: "class",
									theme: "default",
									value: fbIcon,
									onChange: function onChange(value) {
										return setAttributes({ fbIcon: value });
									},
									isMulti: false
								}),
								wp.element.createElement(
									"p",
									{ className: "components-base-control__label" },
									__("URL")
								),
								wp.element.createElement(TextControl, {
									value: fbLink,
									onChange: function onChange(value) {
										return setAttributes({ fbLink: value });
									},
									placeholder: __("Enter FaceBook URL")
								})
							),
							wp.element.createElement(
								PanelBody,
								{ title: __("LinkedIn"), initialOpen: false },
								wp.element.createElement(
									"p",
									{ className: "components-base-control__label" },
									__("Icon")
								),
								wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker___default.a, {
									icons: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_UAGBIcon__["a" /* default */],
									renderUsing: "class",
									theme: "default",
									value: linkedinIcon,
									onChange: function onChange(value) {
										return setAttributes({ linkedinIcon: value });
									},
									isMulti: false
								}),
								wp.element.createElement(
									"p",
									{ className: "components-base-control__label" },
									__("URL")
								),
								wp.element.createElement(TextControl, {
									value: linkedinLink,
									onChange: function onChange(value) {
										return setAttributes({ linkedinLink: value });
									},
									placeholder: __("Enter LinkedIn URL")
								})
							),
							wp.element.createElement(
								PanelBody,
								{ title: __("Pinterest"), initialOpen: false },
								wp.element.createElement(
									"p",
									{ className: "components-base-control__label" },
									__("Icon")
								),
								wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker___default.a, {
									icons: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_UAGBIcon__["a" /* default */],
									renderUsing: "class",
									theme: "default",
									value: pinIcon,
									onChange: function onChange(value) {
										return setAttributes({ pinIcon: value });
									},
									isMulti: false
								}),
								wp.element.createElement(
									"p",
									{ className: "components-base-control__label" },
									__("URL")
								),
								wp.element.createElement(TextControl, {
									value: pinLink,
									onChange: function onChange(value) {
										return setAttributes({ pinLink: value });
									},
									placeholder: __("Enter Pinterest URL")
								})
							)
						)
					),
					wp.element.createElement(
						PanelBody,
						{
							title: __("Typography"),
							initialOpen: false },
						wp.element.createElement(SelectControl, {
							label: __("Title Tag"),
							value: tag,
							onChange: function onChange(value) {
								return setAttributes({ tag: value });
							},
							options: [{ value: "h1", label: __("H1") }, { value: "h2", label: __("H2") }, { value: "h3", label: __("H3") }, { value: "h4", label: __("H4") }, { value: "h5", label: __("H5") }, { value: "h6", label: __("H6") }]
						}),
						wp.element.createElement(RangeControl, {
							label: __("Title Font Size"),
							value: titleFontSize,
							onChange: function onChange(value) {
								return setAttributes({ titleFontSize: value });
							},
							min: 1,
							max: 100,
							beforeIcon: "editor-textcolor",
							allowReset: true,
							initialPosition: 30
						}),
						wp.element.createElement(RangeControl, {
							label: __("Designation Font Size"),
							value: prefixFontSize,
							onChange: function onChange(value) {
								return setAttributes({ prefixFontSize: value });
							},
							min: 1,
							max: 100,
							beforeIcon: "editor-textcolor",
							allowReset: true,
							initialPosition: 16
						}),
						wp.element.createElement(RangeControl, {
							label: __("Description Font Size"),
							value: descFontSize,
							onChange: function onChange(value) {
								return setAttributes({ descFontSize: value });
							},
							min: 1,
							max: 100,
							beforeIcon: "editor-textcolor",
							allowReset: true,
							initialPosition: 16
						}),
						wp.element.createElement(RangeControl, {
							label: __("Social Icon Font Size"),
							value: socialFontSize,
							onChange: function onChange(value) {
								return setAttributes({ socialFontSize: value });
							},
							min: 1,
							max: 100,
							beforeIcon: "editor-textcolor",
							allowReset: true
						})
					),
					wp.element.createElement(PanelColorSettings, {
						title: __("Color Settings"),
						initialOpen: false,
						colorSettings: [{
							value: titleColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ titleColor: colorValue });
							},
							label: __("Title Color")
						}, {
							value: prefixColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ prefixColor: colorValue });
							},
							label: __("Designation")
						}, {
							value: descColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ descColor: colorValue });
							},
							label: __("Description")
						}, {
							value: socialColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ socialColor: colorValue });
							},
							label: __("Social Icon")
						}, {
							value: socialHoverColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ socialHoverColor: colorValue });
							},
							label: __("Social Icon Hover")
						}]
					}),
					wp.element.createElement(
						PanelBody,
						{
							title: __("Spacing"),
							initialOpen: false },
						wp.element.createElement(RangeControl, {
							label: __("Title Bottom Spacing"),
							value: titleSpace,
							onChange: function onChange(value) {
								return setAttributes({ titleSpace: value });
							},
							min: 0,
							max: 50,
							allowReset: true,
							initialPosition: 0
						}),
						wp.element.createElement(RangeControl, {
							label: __("Designation Bottom Spacing"),
							value: prefixSpace,
							onChange: function onChange(value) {
								return setAttributes({ prefixSpace: value });
							},
							min: 0,
							max: 50,
							allowReset: true,
							initialPosition: 0
						}),
						wp.element.createElement(RangeControl, {
							label: __("Description Bottom Spacing"),
							value: descSpace,
							onChange: function onChange(value) {
								return setAttributes({ descSpace: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Inter Social Icon Spacing"),
							value: socialSpace,
							onChange: function onChange(value) {
								return setAttributes({ socialSpace: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						}),
						wp.element.createElement(
							PanelBody,
							{
								title: __("Image Margins"),
								initialOpen: true
							},
							imgPosition != "above" && wp.element.createElement(RangeControl, {
								label: __("Left Margin"),
								value: imgLeftMargin,
								onChange: function onChange(value) {
									return setAttributes({ imgLeftMargin: value });
								},
								min: 0,
								max: 50,
								beforeIcon: "editor-textcolor",
								allowReset: true
							}),
							imgPosition != "above" && wp.element.createElement(RangeControl, {
								label: __("Right Margin"),
								value: imgRightMargin,
								onChange: function onChange(value) {
									return setAttributes({ imgRightMargin: value });
								},
								min: 0,
								max: 50,
								beforeIcon: "editor-textcolor",
								allowReset: true
							}),
							wp.element.createElement(RangeControl, {
								label: __("Top Margin"),
								value: imgTopMargin,
								onChange: function onChange(value) {
									return setAttributes({ imgTopMargin: value });
								},
								min: 0,
								max: 50,
								beforeIcon: "editor-textcolor",
								allowReset: true
							}),
							wp.element.createElement(RangeControl, {
								label: __("Bottom Margin"),
								value: imgBottomMargin,
								onChange: function onChange(value) {
									return setAttributes({ imgBottomMargin: value });
								},
								min: 0,
								max: 50,
								beforeIcon: "editor-textcolor",
								allowReset: true
							})
						)
					)
				),
				wp.element.createElement(
					"div",
					{
						className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-team", "uagb-team__outer-wrap", "uagb-team__image-position-" + imgPosition, "uagb-team__align-" + align, "uagb-team__stack-" + stack),
						id: "uagb-team-" + this.props.clientId },
					wp.element.createElement(
						"div",
						{ className: "uagb-team__wrap" },
						imgPosition == "left" && image_html,
						wp.element.createElement(
							"div",
							{ className: "uagb-team__content" },
							imgPosition == "above" && image_html,
							title_html,
							desc_html,
							socialEnable && social_links
						),
						imgPosition == "right" && image_html
					)
				)
			);
		}
	}, {
		key: "componentDidMount",
		value: function componentDidMount() {

			// Assigning block_id in the attribute.
			this.props.setAttributes({ block_id: this.props.clientId });

			// Pushing Style tag for this block css.
			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-team-style-" + this.props.clientId);
			document.head.appendChild($style);
		}
	}]);

	return UAGBTeam;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (UAGBTeam);

/***/ }),
/* 357 */
/*!************************************!*\
  !*** ./src/blocks/team/styling.js ***!
  \************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline styles.
 * @param  {object} props - The block object.
 * @return {object} The inline background type CSS.
 */

function styling(props) {
	var _props$attributes = props.attributes,
	    tag = _props$attributes.tag,
	    align = _props$attributes.align,
	    titleColor = _props$attributes.titleColor,
	    prefixColor = _props$attributes.prefixColor,
	    descColor = _props$attributes.descColor,
	    titleFontSize = _props$attributes.titleFontSize,
	    prefixFontSize = _props$attributes.prefixFontSize,
	    descFontSize = _props$attributes.descFontSize,
	    imgStyle = _props$attributes.imgStyle,
	    imgAlign = _props$attributes.imgAlign,
	    imgSize = _props$attributes.imgSize,
	    imgWidth = _props$attributes.imgWidth,
	    imgPosition = _props$attributes.imgPosition,
	    titleSpace = _props$attributes.titleSpace,
	    descSpace = _props$attributes.descSpace,
	    prefixSpace = _props$attributes.prefixSpace,
	    imgLeftMargin = _props$attributes.imgLeftMargin,
	    imgRightMargin = _props$attributes.imgRightMargin,
	    imgTopMargin = _props$attributes.imgTopMargin,
	    imgBottomMargin = _props$attributes.imgBottomMargin,
	    socialColor = _props$attributes.socialColor,
	    socialHoverColor = _props$attributes.socialHoverColor,
	    socialSpace = _props$attributes.socialSpace,
	    socialFontSize = _props$attributes.socialFontSize;


	var selectors = {
		" .editor-rich-text p.uagb-team__desc.editor-rich-text__tinymce": {
			"font-size": descFontSize + "px",
			"color": descColor,
			"margin-bottom": descSpace + "px"
		},
		" .uagb-team__prefix": {
			"font-size": prefixFontSize + "px",
			"color": prefixColor
		},
		" .uagb-team__desc-wrap": {
			"margin-top": prefixSpace + "px"
		},
		" .uagb-team__social-icon a": {
			"color": socialColor + " !important",
			"font-size": socialFontSize + "px !important",
			"width": socialFontSize + "px !important",
			"height": socialFontSize + "px !important"
		},
		" .uagb-team__social-icon:hover a": {
			"color": socialHoverColor + " !important"
		},
		".uagb-team__image-position-left .uagb-team__social-icon": {
			"margin-right": socialSpace + "px !important",
			"margin-left": "0"
		},
		".uagb-team__image-position-right .uagb-team__social-icon": {
			"margin-left": socialSpace + "px !important",
			"margin-right": "0"
		},
		".uagb-team__image-position-above.uagb-team__align-center .uagb-team__social-icon": {
			"margin-right": socialSpace / 2 + "px !important",
			"margin-left": socialSpace / 2 + "px !important"
		},
		".uagb-team__image-position-above.uagb-team__align-left .uagb-team__social-icon": {
			"margin-right": socialSpace + "px !important",
			"margin-left": "0"
		},
		".uagb-team__image-position-above.uagb-team__align-right .uagb-team__social-icon": {
			"margin-left": socialSpace + "px !important",
			"margin-right": "0"
		},
		" .uagb-team__image-wrap": {
			"margin-top": imgTopMargin + "px",
			"margin-bottom": imgBottomMargin + "px",
			"margin-left": imgLeftMargin + "px",
			"margin-right": imgRightMargin + "px",
			"width": imgWidth + "px"
		}
	};

	if ("above" == imgPosition) {
		if ("center" == align) {
			selectors[" .uagb-team__image-wrap"]["margin-left"] = "auto";
			selectors[" .uagb-team__image-wrap"]["margin-right"] = "auto";
		} else if ("left" == align) {
			selectors[" .uagb-team__image-wrap"]["margin-right"] = "auto";
		} else if ("right" == align) {
			selectors[" .uagb-team__image-wrap"]["margin-left"] = "auto";
		}
	}

	if ("above" != imgPosition) {
		if ("middle" == imgAlign) {
			selectors[" .uagb-team__image-wrap"]["align-self"] = "center";
		}
	}

	selectors[" .editor-rich-text " + tag + ".uagb-team__title"] = {
		"font-size": titleFontSize + "px",
		"color": titleColor,
		"margin-bottom": titleSpace + "px"
	};

	var styling_css = "";

	for (var i in selectors) {

		styling_css += "#uagb-team-" + props.clientId;

		styling_css += i + " { ";

		var sel = selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (styling);

/***/ }),
/* 358 */
/*!***************************************!*\
  !*** ./src/blocks/team/attributes.js ***!
  \***************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * BLOCK: UAGB Team Block Attributes
 */

var attributes = {
	block_id: {
		type: "string"
	},
	align: {
		type: "string",
		default: "center"
	},
	tag: {
		type: "string",
		default: "h3"
	},
	title: {
		selector: "h1,h2,h3,h4,h5,h6",
		default: "John Doe"
	},
	prefix: {
		selector: "div.uagb-team__prefix",
		default: "Designation"
	},
	description_text: {
		selector: "p",
		default: "Click here to change this text. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo."
	},
	titleColor: {
		type: "string"
	},
	prefixColor: {
		type: "string",
		default: "#888888"
	},
	descColor: {
		type: "string"
	},
	socialColor: {
		type: "string",
		default: "#333"
	},
	socialHoverColor: {
		type: "string"
	},
	titleFontSize: {
		type: "number"
	},
	prefixFontSize: {
		type: "number",
		default: 15
	},
	descFontSize: {
		type: "number"
	},
	socialFontSize: {
		type: "number",
		default: 20
	},
	image: {
		type: "object"
	},
	imgStyle: {
		type: "string",
		default: "normal"
	},
	imgPosition: {
		type: "string",
		default: "above"
	},
	imgAlign: {
		type: "string",
		default: "top"
	},
	imgSize: {
		type: "string",
		default: "thumbnail"
	},
	imgWidth: {
		type: "number",
		default: 120
	},
	titleSpace: {
		type: "number"
	},
	prefixSpace: {
		type: "number"
	},
	descSpace: {
		type: "number",
		default: 10
	},
	imgLeftMargin: {
		type: "number",
		default: 20
	},
	imgRightMargin: {
		type: "number",
		default: 20
	},
	imgTopMargin: {
		type: "number",
		default: 15
	},
	imgBottomMargin: {
		type: "number",
		default: 15
	},
	socialEnable: {
		type: "boolean",
		default: true
	},
	socialSpace: {
		type: "number",
		default: 20
	},
	socialTarget: {
		type: "boolean",
		default: false
	},
	twitterIcon: {
		type: "string",
		default: "fab fa-twitter"
	},
	fbIcon: {
		type: "string",
		default: "fab fa-facebook"
	},
	linkedinIcon: {
		type: "string",
		default: "fab fa-linkedin"
	},
	pinIcon: {
		type: "string",
		default: "fab fa-pinterest"
	},
	twitterLink: {
		type: "string",
		default: "#"
	},
	fbLink: {
		type: "string",
		default: "#"
	},
	linkedinLink: {
		type: "string",
		default: "#"
	},
	pinLink: {
		type: "string",
		default: "#"
	},
	stack: {
		type: "string",
		default: "tablet"
	}
};

/* harmony default export */ __webpack_exports__["a"] = (attributes);

/***/ }),
/* 359 */
/*!*************************************!*\
  !*** ./src/blocks/team/editor.scss ***!
  \*************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 360 */
/*!************************************!*\
  !*** ./src/blocks/team/style.scss ***!
  \************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 361 */
/*!******************************************!*\
  !*** ./src/blocks/social-share/block.js ***!
  \******************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss__ = __webpack_require__(/*! ./style.scss */ 362);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__style_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 363);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__editor_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__attributes__ = __webpack_require__(/*! ./attributes */ 364);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__edit__ = __webpack_require__(/*! ./edit */ 365);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__links__ = __webpack_require__(/*! ./links */ 131);
/**
 * BLOCK: Social Share
 */



//  Import CSS.






// Components
var __ = wp.i18n.__;

// Register block controls

var registerBlockType = wp.blocks.registerBlockType;

/**
 * Register: as Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("uagb/social-share", {
	title: uagb_blocks_info.blocks["uagb/social-share"]["title"],
	description: uagb_blocks_info.blocks["uagb/social-share"]["description"],
	icon: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__["a" /* default */].social_share,
	category: uagb_blocks_info.category,
	keywords: [__("social share"), __("icon"), __("uagb")],
	attributes: __WEBPACK_IMPORTED_MODULE_4__attributes__["a" /* default */],
	edit: __WEBPACK_IMPORTED_MODULE_5__edit__["a" /* default */],
	save: function save(props) {
		var attributes = props.attributes,
		    className = props.className;
		var _props$attributes = props.attributes,
		    block_id = _props$attributes.block_id,
		    align = _props$attributes.align,
		    items = _props$attributes.items,
		    socials = _props$attributes.socials,
		    social_count = _props$attributes.social_count,
		    social_layout = _props$attributes.social_layout,
		    current_url = _props$attributes.current_url;


		return wp.element.createElement(
			"div",
			{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-social-share__outer-wrap", "uagb-social-share__layout-" + social_layout),
				id: "uagb-social-share-" + block_id },
			wp.element.createElement(
				"div",
				{ className: "uagb-social-share__wrap" },
				socials.map(function (social, index) {

					if (social_count <= index) {
						return;
					}

					var url = "";

					if (null != current_url) {
						url = __WEBPACK_IMPORTED_MODULE_6__links__["a" /* default */][social.type] + encodeURI(current_url);
					}

					var image_icon_html = "";

					if (social.image_icon == "icon") {
						if (social.icon) {
							image_icon_html = wp.element.createElement("span", { className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(social.icon, "uagb-ss__source-icon") });
						}
					} else {
						if (social.image) {
							image_icon_html = wp.element.createElement("img", { className: "uagb-ss__source-image", src: social.image.url });
						}
					}

					return wp.element.createElement(
						"div",
						{
							className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-ss-repeater-" + index, "uagb-ss__wrapper"),
							key: index
						},
						wp.element.createElement(
							"a",
							{ className: "uagb-ss__link", href: url, rel: "noopener noreferrer" },
							wp.element.createElement(
								"span",
								{ className: "uagb-ss__source-wrap" },
								image_icon_html
							)
						)
					);
				})
			)
		);
	}
});

/***/ }),
/* 362 */
/*!********************************************!*\
  !*** ./src/blocks/social-share/style.scss ***!
  \********************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 363 */
/*!*********************************************!*\
  !*** ./src/blocks/social-share/editor.scss ***!
  \*********************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 364 */
/*!***********************************************!*\
  !*** ./src/blocks/social-share/attributes.js ***!
  \***********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * BLOCK: UAGB Social Share Attributes
 */
var ITEM_COUNT = 1;

var socials = [];

for (var i = 1; i <= ITEM_COUNT; i++) {
	socials.push({
		"type": "facebook",
		"image_icon": "icon",
		"icon": "fab fa-facebook",
		"image": "",
		"icon_color": "#3a3a3a",
		"icon_hover_color": "",
		"icon_bg_color": "",
		"icon_bg_hover_color": ""
	});
}

var attributes = {
	block_id: {
		type: "string"
	},
	current_url: {
		type: "string"
	},
	align: {
		type: "string",
		default: "center"
	},
	social_count: {
		type: "number",
		default: ITEM_COUNT
	},
	socials: {
		type: "array",
		default: socials
	},
	gap: {
		type: "number",
		default: 10
	},
	size: {
		type: "number",
		default: 40
	},
	bgSize: {
		type: "number",
		default: 0
	},
	borderRadius: {
		type: "number",
		default: 0
	},
	social_layout: {
		type: "string",
		default: "horizontal"
	},
	stack: {
		type: "string",
		default: "none"
	}
};

/* harmony default export */ __webpack_exports__["a"] = (attributes);

/***/ }),
/* 365 */
/*!*****************************************!*\
  !*** ./src/blocks/social-share/edit.js ***!
  \*****************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_times__ = __webpack_require__(/*! lodash/times */ 8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_times___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_times__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dist_blocks_uagb_controls_UAGBIcon__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/UAGBIcon */ 12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker__ = __webpack_require__(/*! @fonticonpicker/react-fonticonpicker */ 13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__styling__ = __webpack_require__(/*! ./styling */ 366);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__links__ = __webpack_require__(/*! ./links */ 131);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * BLOCK: UAGB - Social Share Edit Class
 */

// Import classes







var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$editor = wp.editor,
    BlockControls = _wp$editor.BlockControls,
    BlockAlignmentToolbar = _wp$editor.BlockAlignmentToolbar,
    InspectorControls = _wp$editor.InspectorControls,
    PanelColorSettings = _wp$editor.PanelColorSettings,
    MediaUpload = _wp$editor.MediaUpload;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    Button = _wp$components.Button;

var UAGBSocialShare = function (_Component) {
	_inherits(UAGBSocialShare, _Component);

	function UAGBSocialShare() {
		_classCallCheck(this, UAGBSocialShare);

		return _possibleConstructorReturn(this, (UAGBSocialShare.__proto__ || Object.getPrototypeOf(UAGBSocialShare)).apply(this, arguments));
	}

	_createClass(UAGBSocialShare, [{
		key: "componentDidMount",
		value: function componentDidMount() {

			// Assigning block_id in the attribute.
			this.props.setAttributes({ block_id: this.props.clientId });
			this.props.setAttributes({ current_url: wp.data.select("core/editor").getPermalink() });

			// Pushing Style tag for this block css.
			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-style-social-share-" + this.props.clientId);
			document.head.appendChild($style);
		}
	}, {
		key: "saveSocials",
		value: function saveSocials(value, index) {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes;
			var socials = attributes.socials;


			var newItems = socials.map(function (item, thisIndex) {
				if (index === thisIndex) {
					item = _extends({}, item, value);
				}

				return item;
			});
			setAttributes({
				socials: newItems
			});
		}
	}, {
		key: "render",
		value: function render() {
			var _this2 = this;

			var _props2 = this.props,
			    attributes = _props2.attributes,
			    setAttributes = _props2.setAttributes,
			    isSelected = _props2.isSelected;
			var align = attributes.align,
			    className = attributes.className,
			    social_count = attributes.social_count,
			    socials = attributes.socials,
			    gap = attributes.gap,
			    stack = attributes.stack,
			    current_url = attributes.current_url,
			    social_layout = attributes.social_layout,
			    size = attributes.size,
			    borderRadius = attributes.borderRadius,
			    bgSize = attributes.bgSize;


			var socialControls = function socialControls(index) {
				return wp.element.createElement(
					PanelBody,
					{ key: index,
						title: __("Social Share") + " " + (index + 1) + " " + __("Settings"),
						initialOpen: false
					},
					wp.element.createElement(SelectControl, {
						label: __("Type"),
						value: socials[index].type,
						options: [{ value: "facebook", label: __("Facebook") }, { value: "twitter", label: __("Twitter") }, { value: "google", label: __("Google Plus") }, { value: "pinterest", label: __("Pinterest") }, { value: "linkedin", label: __("LinkedIn") }, { value: "digg", label: __("Digg") }, { value: "blogger", label: __("Blogger") }, { value: "reddit", label: __("Reddit") }, { value: "stumbleupon", label: __("StumbleUpon") }, { value: "tumblr", label: __("Tumblr") }, { value: "myspace", label: __("Myspace") }, { value: "email", label: __("Email") }],
						onChange: function onChange(value) {
							_this2.saveSocials({ type: value }, index);
						}
					}),
					wp.element.createElement(SelectControl, {
						label: __("Image / Icon"),
						value: socials[index].image_icon,
						options: [{ value: "icon", label: __("Icon") }, { value: "image", label: __("Image") }],
						onChange: function onChange(value) {
							_this2.saveSocials({ image_icon: value }, index);
						}
					}),
					"icon" == socials[index].image_icon && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "components-base-control__label" },
							__("Icon")
						),
						wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker___default.a, {
							icons: __WEBPACK_IMPORTED_MODULE_2__dist_blocks_uagb_controls_UAGBIcon__["a" /* default */],
							renderUsing: "class",
							theme: "default",
							value: socials[index].icon,
							onChange: function onChange(value) {
								_this2.saveSocials({ icon: value }, index);
							},
							isMulti: false
						})
					),
					"image" == socials[index].image_icon && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(MediaUpload, {
							title: __("Select Image"),
							onSelect: function onSelect(value) {
								_this2.saveSocials({ image: value }, index);
							},
							allowedTypes: ["image"],
							value: socials[index].image,
							render: function render(_ref) {
								var open = _ref.open;
								return wp.element.createElement(
									Button,
									{ isDefault: true, onClick: open },
									!socials[index].image ? __("Select Image") : __("Replace image")
								);
							}
						}),
						socials[index].image && wp.element.createElement(
							Button,
							{
								className: "uagb-rm-btn",
								onClick: function onClick(value) {
									_this2.saveSocials({ image: null }, index);
								},
								isLink: true, isDestructive: true },
							__("Remove Image")
						),
						wp.element.createElement(PanelColorSettings, {
							title: __("Color Settings"),
							colorSettings: [{
								value: socials[index].icon_bg_color,
								onChange: function onChange(value) {
									return _this2.saveSocials({ icon_bg_color: value }, index);
								},
								label: __("Background Color")
							}, {
								value: socials[index].icon_bg_hover_color,
								onChange: function onChange(value) {
									return _this2.saveSocials({ icon_bg_hover_color: value }, index);
								},
								label: __("Background Hover Color")
							}] })
					),
					"icon" == socials[index].image_icon && wp.element.createElement(PanelColorSettings, {
						title: __("Color Settings"),
						colorSettings: [{
							value: socials[index].icon_color,
							onChange: function onChange(value) {
								return _this2.saveSocials({ icon_color: value }, index);
							},
							label: __("Color")
						}, {
							value: socials[index].icon_bg_color,
							onChange: function onChange(value) {
								return _this2.saveSocials({ icon_bg_color: value }, index);
							},
							label: __("Background Color")
						}, {
							value: socials[index].icon_hover_color,
							onChange: function onChange(value) {
								return _this2.saveSocials({ icon_hover_color: value }, index);
							},
							label: __("Hover Color")
						}, {
							value: socials[index].icon_bg_hover_color,
							onChange: function onChange(value) {
								return _this2.saveSocials({ icon_bg_hover_color: value }, index);
							},
							label: __("Background Hover Color")
						}] })
				);
			};

			var element = document.getElementById("uagb-style-social-share-" + this.props.clientId);

			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_4__styling__["a" /* default */])(this.props);
			}

			return wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					BlockControls,
					null,
					wp.element.createElement(BlockAlignmentToolbar, {
						value: align,
						onChange: function onChange(value) {
							setAttributes({ align: value });
						},
						controls: ["left", "center", "right", "full"]
					})
				),
				wp.element.createElement(
					InspectorControls,
					null,
					wp.element.createElement(
						PanelBody,
						{
							title: __("Social Icon Count"),
							initialOpen: true
						},
						wp.element.createElement(RangeControl, {
							label: __("Number of Social Icons"),
							value: social_count,
							onChange: function onChange(newCount) {

								var cloneSocials = [].concat(_toConsumableArray(socials));

								if (cloneSocials.length < newCount) {

									var incAmount = Math.abs(newCount - cloneSocials.length);

									{
										__WEBPACK_IMPORTED_MODULE_1_lodash_times___default()(incAmount, function (n) {

											cloneSocials.push({
												"type": cloneSocials[0].type,
												"image_icon": cloneSocials[0].image_icon,
												"icon": cloneSocials[0].icon,
												"image": cloneSocials[0].image,
												"icon_color": cloneSocials[0].icon_color,
												"icon_hover_color": cloneSocials[0].icon_hover_color,
												"icon_bg_color": cloneSocials[0].icon_bg_color,
												"icon_bg_hover_color": cloneSocials[0].icon_bg_hover_color
											});
										});
									}

									setAttributes({ socials: cloneSocials });
								}
								setAttributes({ social_count: newCount });
							},
							min: 1,
							max: 12
						})
					),
					__WEBPACK_IMPORTED_MODULE_1_lodash_times___default()(social_count, function (n) {
						return socialControls(n);
					}),
					wp.element.createElement(
						PanelBody,
						{
							title: __("General"),
							initialOpen: false
						},
						wp.element.createElement(SelectControl, {
							label: __("Layout"),
							value: social_layout,
							options: [{ value: "horizontal", label: __("Horizontal") }, { value: "vertical", label: __("Vertical") }],
							onChange: function onChange(value) {
								return setAttributes({ social_layout: value });
							}
						}),
						"horizontal" == social_layout && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(SelectControl, {
								label: __("Stack on"),
								value: stack,
								options: [{ value: "none", label: __("None") }, { value: "desktop", label: __("Desktop") }, { value: "tablet", label: __("Tablet") }, { value: "mobile", label: __("Mobile") }],
								onChange: function onChange(value) {
									return setAttributes({ stack: value });
								}
							}),
							wp.element.createElement(
								"p",
								{ className: "uagb-note" },
								__("Note: Choose on what breakpoint the Icons will stack.")
							)
						),
						wp.element.createElement(RangeControl, {
							label: __("Size"),
							value: size,
							onChange: function onChange(value) {
								return setAttributes({ size: value });
							},
							min: 0,
							max: 500,
							initialPosition: 40
						}),
						wp.element.createElement(RangeControl, {
							label: __("Background Size"),
							value: bgSize,
							onChange: function onChange(value) {
								return setAttributes({ bgSize: value });
							},
							min: 0,
							max: 500
						}),
						wp.element.createElement(
							"p",
							{ className: "uagb-note" },
							__("Note: Background Size option is useful when one adds background color to the icons.")
						),
						wp.element.createElement(RangeControl, {
							label: __("Circular Size"),
							value: borderRadius,
							onChange: function onChange(value) {
								return setAttributes({ borderRadius: value });
							},
							min: 0,
							max: 500
						}),
						wp.element.createElement(
							"p",
							{ className: "uagb-note" },
							__("Note: Circular Size option is useful when one adds background color to the icons.")
						),
						wp.element.createElement(RangeControl, {
							label: __("Gap between Icon / Image"),
							value: gap,
							onChange: function onChange(value) {
								return setAttributes({ gap: value });
							},
							min: 0,
							max: 100
						})
					)
				),
				wp.element.createElement(
					"div",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-social-share__outer-wrap", "uagb-social-share__layout-" + social_layout),
						id: "uagb-social-share-" + this.props.clientId },
					wp.element.createElement(
						"div",
						{ className: "uagb-social-share__wrap" },
						socials.map(function (social, index) {

							if (social_count <= index) {
								return;
							}

							var url = "";

							if (null != current_url) {
								url = __WEBPACK_IMPORTED_MODULE_5__links__["a" /* default */][social.type] + encodeURI(current_url);
							}

							var image_icon_html = "";

							if (social.image_icon == "icon") {
								if (social.icon) {
									image_icon_html = wp.element.createElement("span", { className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(social.icon, "uagb-ss__source-icon") });
								}
							} else {
								if (social.image) {
									image_icon_html = wp.element.createElement("img", { className: "uagb-ss__source-image", src: social.image.url });
								}
							}

							return wp.element.createElement(
								"div",
								{
									className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-ss-repeater-" + index, "uagb-ss__wrapper"),
									key: index
								},
								wp.element.createElement(
									"a",
									{ className: "uagb-ss__link", href: "javascript:void(0)", rel: "noopener noreferrer" },
									wp.element.createElement(
										"span",
										{ className: "uagb-ss__source-wrap" },
										image_icon_html
									)
								)
							);
						})
					)
				)
			);
		}
	}]);

	return UAGBSocialShare;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (UAGBSocialShare);

/***/ }),
/* 366 */
/*!********************************************!*\
  !*** ./src/blocks/social-share/styling.js ***!
  \********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function styling(props) {
	var _selectors$UagbSoc;

	var _props$attributes = props.attributes,
	    align = _props$attributes.align,
	    className = _props$attributes.className,
	    social_count = _props$attributes.social_count,
	    socials = _props$attributes.socials,
	    gap = _props$attributes.gap,
	    social_layout = _props$attributes.social_layout,
	    size = _props$attributes.size,
	    borderRadius = _props$attributes.borderRadius,
	    bgSize = _props$attributes.bgSize,
	    stack = _props$attributes.stack;


	var selectors = {};
	var tablet_selectors = {};
	var mobile_selectors = {};

	socials.map(function (social, index) {

		if (social_count <= index) {
			return;
		}

		selectors[" .uagb-ss-repeater-" + index + " a.uagb-ss__link"] = {
			"color": social.icon_color,
			"padding": bgSize + "px"
		};

		selectors[" .uagb-ss-repeater-" + index + ":hover a.uagb-ss__link"] = {
			"color": social.icon_hover_color
		};

		selectors[" .uagb-ss-repeater-" + index] = {
			"background": social.icon_bg_color
		};

		selectors[" .uagb-ss-repeater-" + index + ":hover"] = {
			"background": social.icon_bg_hover_color
		};
	});

	selectors[".uagb-social-share__layout-vertical .uagb-ss__wrapper"] = {
		"margin-left": 0,
		"margin-right": 0,
		"margin-bottom": gap + "px"
	};

	selectors[".uagb-social-share__layout-vertical .uagb-social-share__wrap"] = {
		"flex-direction": "column"
	};

	selectors[".uagb-social-share__layout-vertical .uagb-ss__wrapper:last-child"] = {
		"margin-bottom": 0
	};

	selectors[".uagb-social-share__layout-horizontal .uagb-ss__wrapper"] = {
		"margin-left": gap / 2 + "px",
		"margin-right": gap / 2 + "px"
	};

	selectors[".uagb-social-share__layout-horizontal .uagb-ss__wrapper:first-child"] = {
		"margin-left": 0
	};

	selectors[".uagb-social-share__layout-horizontal .uagb-ss__wrapper:last-child"] = {
		"margin-right": 0
	};

	selectors[" .uagb-ss__wrapper"] = {
		"border-radius": borderRadius + "px"
	};

	selectors[" .uagb-ss__source-image"] = {
		"width": size + "px"
	};

	selectors[" .uagb-ss__source-wrap"] = {
		"width": size + "px",
		"height": size + "px",
		"line-height": size + "px"
	};

	selectors[" .uagb-ss__source-icon"] = {
		"width": size + "px",
		"height": size + "px",
		"font-size": size + "px",
		"line-height": size + "px"
	};

	var alignment = align == "left" ? "flex-start" : align == "right" ? "flex-end" : "center";

	selectors[" .uagb-social-share__wrap"] = (_selectors$UagbSoc = {
		"justify-content": alignment,
		"-webkit-box-pack": alignment,
		"-ms-flex-pack": alignment
	}, _defineProperty(_selectors$UagbSoc, "justify-content", alignment), _defineProperty(_selectors$UagbSoc, "-webkit-box-align", alignment), _defineProperty(_selectors$UagbSoc, "-ms-flex-align", alignment), _defineProperty(_selectors$UagbSoc, "align-items", alignment), _selectors$UagbSoc);

	if ("horizontal" == social_layout) {

		if ("desktop" == stack) {

			selectors[" .uagb-ss__wrapper"] = {
				"margin-left": 0,
				"margin-right": 0,
				"margin-bottom": gap + "px"
			};

			selectors[" .uagb-social-share__wrap"] = {
				"flex-direction": "column"
			};

			selectors[" .uagb-ss__wrapper:last-child"] = {
				"margin-bottom": 0
			};
		} else if ("tablet" == stack) {

			tablet_selectors[" .uagb-ss__wrapper"] = {
				"margin-left": 0,
				"margin-right": 0,
				"margin-bottom": gap + "px"
			};

			tablet_selectors[" .uagb-social-share__wrap"] = {
				"flex-direction": "column"
			};

			tablet_selectors[" .uagb-ss__wrapper:last-child"] = {
				"margin-bottom": 0
			};
		} else if ("mobile" == stack) {

			mobile_selectors[" .uagb-ss__wrapper"] = {
				"margin-left": 0,
				"margin-right": 0,
				"margin-bottom": gap + "px"
			};

			mobile_selectors[" .uagb-social-share__wrap"] = {
				"flex-direction": "column"
			};

			mobile_selectors[" .uagb-ss__wrapper:last-child"] = {
				"margin-bottom": 0
			};
		}
	}

	var styling_css = "";
	var id = "#uagb-social-share-" + props.clientId;

	for (var i in selectors) {

		styling_css += id;

		styling_css += i + " { ";

		var sel = selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	styling_css += "@media only screen and (max-width: 976px) {";

	for (var i in tablet_selectors) {

		styling_css += id;

		styling_css += i + " { ";

		var sel = tablet_selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	styling_css += " }";

	styling_css += "@media only screen and (max-width: 767px) {";

	for (var i in mobile_selectors) {

		styling_css += id;

		styling_css += i + " { ";

		var sel = mobile_selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	styling_css += " }";

	return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (styling);

/***/ }),
/* 367 */
/*!****************************************!*\
  !*** ./src/blocks/google-map/block.js ***!
  \****************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss__ = __webpack_require__(/*! ./style.scss */ 368);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__style_scss__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * BLOCK: Google Map
 */

// Import block dependencies and components.



//  Import CSS.


/* eslint-disable */
// Import __() from wp.i18n
var __ = wp.i18n.__;
/* eslint-enable  */

var registerBlockType = wp.blocks.registerBlockType;
var InspectorControls = wp.editor.InspectorControls;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    RangeControl = _wp$components.RangeControl,
    TextControl = _wp$components.TextControl;

// Extend component

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;


var api_key = "AIzaSyAsd_d46higiozY-zNqtr7zdA81Soswje4";

var UAGBGoogleMap = function (_Component) {
	_inherits(UAGBGoogleMap, _Component);

	function UAGBGoogleMap() {
		_classCallCheck(this, UAGBGoogleMap);

		return _possibleConstructorReturn(this, (UAGBGoogleMap.__proto__ || Object.getPrototypeOf(UAGBGoogleMap)).apply(this, arguments));
	}

	_createClass(UAGBGoogleMap, [{
		key: "componentDidMount",
		value: function componentDidMount() {

			// Assigning block_id in the attribute.
			this.props.setAttributes({ block_id: this.props.clientId });
		}
	}, {
		key: "render",
		value: function render() {

			// Setup the attributes
			var _props = this.props,
			    className = _props.className,
			    setAttributes = _props.setAttributes,
			    _props$attributes = _props.attributes,
			    block_id = _props$attributes.block_id,
			    height = _props$attributes.height,
			    zoom = _props$attributes.zoom,
			    address = _props$attributes.address;


			var encoded_address = encodeURI(address);

			var url = "https://www.google.com/maps/embed/v1/place?key=" + api_key + "&q=" + encoded_address + "&zoom=" + zoom;

			return wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					InspectorControls,
					null,
					wp.element.createElement(
						PanelBody,
						{ title: __("General") },
						wp.element.createElement(
							"p",
							{ className: "uagb-google-map-notice" },
							__("This block uses UAGB's API key to display the map. You don't need to create your own API key or worry about renewing it.")
						),
						wp.element.createElement(
							"p",
							{ className: "components-base-control__label" },
							__("Address")
						),
						wp.element.createElement(TextControl, {
							value: address,
							onChange: function onChange(value) {
								return setAttributes({ address: value });
							},
							placeholder: __("Type the address")
						}),
						wp.element.createElement(RangeControl, {
							label: __("Zoom"),
							value: zoom,
							onChange: function onChange(value) {
								return setAttributes({ zoom: value });
							},
							min: 1,
							max: 22,
							beforeIcon: "editor-textcolor",
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Height"),
							value: height,
							onChange: function onChange(value) {
								return setAttributes({ height: value });
							},
							min: 0,
							max: 1000,
							allowReset: true
						})
					)
				),
				wp.element.createElement(
					"div",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-google-map__wrap"), id: "uagb-google-map-" + this.props.clientId },
					wp.element.createElement("iframe", {
						className: "uagb-google-map__iframe",
						src: url,
						style: { height: height } })
				)
			);
		}
	}]);

	return UAGBGoogleMap;
}(Component);

/**
 * Register: as Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */


registerBlockType("uagb/google-map", {
	title: uagb_blocks_info.blocks["uagb/google-map"]["title"],
	description: uagb_blocks_info.blocks["uagb/google-map"]["description"],
	icon: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__["a" /* default */].google_map,
	keywords: [__("google map"), __("uagb")],
	category: uagb_blocks_info.category,
	attributes: {
		block_id: {
			type: "string"
		},
		address: {
			type: "string",
			default: "Brainstorm Force"
		},
		height: {
			type: "number",
			default: 300
		},
		zoom: {
			type: "number",
			default: 12
		}
	},
	edit: UAGBGoogleMap,
	save: function save(props) {
		var _props$attributes2 = props.attributes,
		    block_id = _props$attributes2.block_id,
		    height = _props$attributes2.height,
		    zoom = _props$attributes2.zoom,
		    address = _props$attributes2.address;


		var encoded_address = encodeURI(address);

		var url = "https://www.google.com/maps/embed/v1/place?key=" + api_key + "&q=" + encoded_address + "&zoom=" + zoom;

		return wp.element.createElement(
			"div",
			{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(props.className, "uagb-google-map__wrap"), id: "uagb-google-map-" + block_id },
			wp.element.createElement("iframe", {
				className: "uagb-google-map__iframe",
				src: url,
				style: { height: height } })
		);
	}
});

/***/ }),
/* 368 */
/*!******************************************!*\
  !*** ./src/blocks/google-map/style.scss ***!
  \******************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 369 */
/*!***************************************!*\
  !*** ./src/blocks/icon-list/block.js ***!
  \***************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss__ = __webpack_require__(/*! ./style.scss */ 370);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__style_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__editor_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__attributes__ = __webpack_require__(/*! ./attributes */ 372);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__edit__ = __webpack_require__(/*! ./edit */ 373);
/**
 * BLOCK: Icon List
 */



//  Import CSS.





// Components
var __ = wp.i18n.__;

// Register block controls

var registerBlockType = wp.blocks.registerBlockType;
var RichText = wp.editor.RichText;

/**
 * Register: as Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("uagb/icon-list", {
	title: uagb_blocks_info.blocks["uagb/icon-list"]["title"],
	description: uagb_blocks_info.blocks["uagb/icon-list"]["description"],
	icon: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__["a" /* default */].icon_list,
	category: uagb_blocks_info.category,
	keywords: [__("icon list"), __("image list"), __("uagb")],
	attributes: __WEBPACK_IMPORTED_MODULE_4__attributes__["a" /* default */],
	edit: __WEBPACK_IMPORTED_MODULE_5__edit__["a" /* default */],
	save: function save(props) {
		var attributes = props.attributes,
		    className = props.className;
		var _props$attributes = props.attributes,
		    block_id = _props$attributes.block_id,
		    icons = _props$attributes.icons,
		    icon_count = _props$attributes.icon_count,
		    icon_layout = _props$attributes.icon_layout,
		    hideLabel = _props$attributes.hideLabel;


		var labelClass = hideLabel ? "uagb-icon-list__no-label" : "";

		return wp.element.createElement(
			"div",
			{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-icon-list__outer-wrap", "uagb-icon-list__layout-" + icon_layout, labelClass),
				id: "uagb-icon-list-" + block_id },
			wp.element.createElement(
				"div",
				{ className: "uagb-icon-list__wrap" },
				icons.map(function (icon, index) {

					if (icon_count <= index) {
						return;
					}

					var url = "";
					var image_icon_html = "";

					if (icon.image_icon == "icon") {
						if (icon.icon) {
							image_icon_html = wp.element.createElement("span", { className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(icon.icon, "uagb-icon-list__source-icon") });
						}
					} else {
						if (icon.image) {
							image_icon_html = wp.element.createElement("img", { className: "uagb-icon-list__source-image", src: icon.image.url });
						}
					}

					var target = icon.target ? "_blank" : "_self";

					return wp.element.createElement(
						"a",
						{
							className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-icon-list-repeater-" + index, "uagb-icon-list__wrapper"),
							key: index,
							target: target,
							rel: "noopener noreferrer",
							href: icon.link
						},
						wp.element.createElement(
							"div",
							{ className: "uagb-icon-list__content-wrap" },
							wp.element.createElement(
								"span",
								{ className: "uagb-icon-list__source-wrap" },
								image_icon_html
							),
							!hideLabel && "" != icons[index].label && wp.element.createElement(
								"div",
								{ className: "uagb-icon-list__label-wrap" },
								wp.element.createElement(RichText.Content, {
									tagName: "span",
									value: icons[index].label,
									className: "uagb-icon-list__label" })
							)
						)
					);
				})
			)
		);
	}
});

/***/ }),
/* 370 */
/*!*****************************************!*\
  !*** ./src/blocks/icon-list/style.scss ***!
  \*****************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 371 */
/*!******************************************!*\
  !*** ./src/blocks/icon-list/editor.scss ***!
  \******************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 372 */
/*!********************************************!*\
  !*** ./src/blocks/icon-list/attributes.js ***!
  \********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * BLOCK: UAGB Icon List Attributes
 */
var ITEM_COUNT = 1;

var icons = [];

for (var i = 1; i <= ITEM_COUNT; i++) {
	icons.push({
		"label": "Label #" + i,
		"image_icon": "icon",
		"icon": "fab fa-facebook",
		"image": "",
		"icon_color": "#3a3a3a",
		"label_color": "",
		"icon_hover_color": "",
		"label_hover_color": "",
		"icon_bg_color": "",
		"icon_bg_hover_color": "",
		"link": "#",
		"target": false
	});
}

var attributes = {
	block_id: {
		type: "string"
	},
	align: {
		type: "string",
		default: "left"
	},
	icon_count: {
		type: "number",
		default: ITEM_COUNT
	},
	icons: {
		type: "array",
		default: icons
	},
	gap: {
		type: "number",
		default: 10
	},
	inner_gap: {
		type: "number",
		default: 15
	},
	size: {
		type: "number",
		default: 40
	},
	bgSize: {
		type: "number",
		default: 0
	},
	borderRadius: {
		type: "number",
		default: 0
	},
	hideLabel: {
		type: "boolean",
		default: false
	},
	fontSize: {
		type: "number"
	},
	icon_layout: {
		type: "string",
		default: "vertical"
	},
	stack: {
		type: "string",
		default: "none"
	}
};

/* harmony default export */ __webpack_exports__["a"] = (attributes);

/***/ }),
/* 373 */
/*!**************************************!*\
  !*** ./src/blocks/icon-list/edit.js ***!
  \**************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_times__ = __webpack_require__(/*! lodash/times */ 8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_times___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_times__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dist_blocks_uagb_controls_UAGBIcon__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/UAGBIcon */ 12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker__ = __webpack_require__(/*! @fonticonpicker/react-fonticonpicker */ 13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__styling__ = __webpack_require__(/*! ./styling */ 374);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * BLOCK: UAGB - Social Share Edit Class
 */

// Import classes






var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$editor = wp.editor,
    BlockControls = _wp$editor.BlockControls,
    BlockAlignmentToolbar = _wp$editor.BlockAlignmentToolbar,
    InspectorControls = _wp$editor.InspectorControls,
    PanelColorSettings = _wp$editor.PanelColorSettings,
    MediaUpload = _wp$editor.MediaUpload,
    RichText = _wp$editor.RichText;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    Button = _wp$components.Button,
    TextControl = _wp$components.TextControl,
    ToggleControl = _wp$components.ToggleControl;

var UAGBIconList = function (_Component) {
	_inherits(UAGBIconList, _Component);

	function UAGBIconList() {
		_classCallCheck(this, UAGBIconList);

		return _possibleConstructorReturn(this, (UAGBIconList.__proto__ || Object.getPrototypeOf(UAGBIconList)).apply(this, arguments));
	}

	_createClass(UAGBIconList, [{
		key: "componentDidMount",
		value: function componentDidMount() {

			// Assigning block_id in the attribute.
			this.props.setAttributes({ block_id: this.props.clientId });

			// Pushing Style tag for this block css.
			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-style-icon-list-" + this.props.clientId);
			document.head.appendChild($style);
		}
	}, {
		key: "saveIcons",
		value: function saveIcons(value, index) {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes;
			var icons = attributes.icons;


			var newItems = icons.map(function (item, thisIndex) {
				if (index === thisIndex) {
					item = _extends({}, item, value);
				}

				return item;
			});
			setAttributes({
				icons: newItems
			});
		}
	}, {
		key: "render",
		value: function render() {
			var _this2 = this;

			var _props2 = this.props,
			    attributes = _props2.attributes,
			    setAttributes = _props2.setAttributes,
			    isSelected = _props2.isSelected;
			var align = attributes.align,
			    className = attributes.className,
			    icon_count = attributes.icon_count,
			    icons = attributes.icons,
			    gap = attributes.gap,
			    inner_gap = attributes.inner_gap,
			    stack = attributes.stack,
			    icon_layout = attributes.icon_layout,
			    size = attributes.size,
			    hideLabel = attributes.hideLabel,
			    fontSize = attributes.fontSize,
			    borderRadius = attributes.borderRadius,
			    bgSize = attributes.bgSize;


			var iconControls = function iconControls(index) {

				var color_control = "";

				if ("image" == icons[index].image_icon) {

					color_control = [{
						value: icons[index].label_color,
						onChange: function onChange(value) {
							return _this2.saveIcons({ label_color: value }, index);
						},
						label: __("Text Color")
					}, {
						value: icons[index].icon_bg_color,
						onChange: function onChange(value) {
							return _this2.saveIcons({ icon_bg_color: value }, index);
						},
						label: __("Image Background Color")
					}, {
						value: icons[index].label_hover_color,
						onChange: function onChange(value) {
							return _this2.saveIcons({ label_hover_color: value }, index);
						},
						label: __("Text Hover Color")
					}, {
						value: icons[index].icon_bg_hover_color,
						onChange: function onChange(value) {
							return _this2.saveIcons({ icon_bg_hover_color: value }, index);
						},
						label: __("Image Background Hover Color")
					}];
				} else {

					color_control = [{
						value: icons[index].icon_color,
						onChange: function onChange(value) {
							return _this2.saveIcons({ icon_color: value }, index);
						},
						label: __("Icon Color")
					}, {
						value: icons[index].icon_bg_color,
						onChange: function onChange(value) {
							return _this2.saveIcons({ icon_bg_color: value }, index);
						},
						label: __("Background Color")
					}, {
						value: icons[index].label_color,
						onChange: function onChange(value) {
							return _this2.saveIcons({ label_color: value }, index);
						},
						label: __("Text Color")
					}, {
						value: icons[index].icon_hover_color,
						onChange: function onChange(value) {
							return _this2.saveIcons({ icon_hover_color: value }, index);
						},
						label: __("Icon Hover Color")
					}, {
						value: icons[index].icon_bg_hover_color,
						onChange: function onChange(value) {
							return _this2.saveIcons({ icon_bg_hover_color: value }, index);
						},
						label: __("Background Hover Color")
					}, {
						value: icons[index].label_hover_color,
						onChange: function onChange(value) {
							return _this2.saveIcons({ label_hover_color: value }, index);
						},
						label: __("Text Hover Color")
					}];
				}

				return wp.element.createElement(
					PanelBody,
					{ key: index,
						title: __("Icon") + " " + (index + 1) + " " + __("Settings"),
						initialOpen: false
					},
					wp.element.createElement(SelectControl, {
						label: __("Image / Icon"),
						value: icons[index].image_icon,
						options: [{ value: "icon", label: __("Icon") }, { value: "image", label: __("Image") }],
						onChange: function onChange(value) {
							_this2.saveIcons({ image_icon: value }, index);
						}
					}),
					"icon" == icons[index].image_icon && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "components-base-control__label" },
							__("Icon")
						),
						wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker___default.a, {
							icons: __WEBPACK_IMPORTED_MODULE_2__dist_blocks_uagb_controls_UAGBIcon__["a" /* default */],
							renderUsing: "class",
							theme: "default",
							value: icons[index].icon,
							onChange: function onChange(value) {
								_this2.saveIcons({ icon: value }, index);
							},
							isMulti: false
						})
					),
					"image" == icons[index].image_icon && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(MediaUpload, {
							title: __("Select Image"),
							onSelect: function onSelect(value) {
								_this2.saveIcons({ image: value }, index);
							},
							allowedTypes: ["image"],
							value: icons[index].image,
							render: function render(_ref) {
								var open = _ref.open;
								return wp.element.createElement(
									Button,
									{ isDefault: true, onClick: open },
									!icons[index].image ? __("Select Image") : __("Replace image")
								);
							}
						}),
						icons[index].image && wp.element.createElement(
							Button,
							{
								className: "uagb-rm-btn",
								onClick: function onClick(value) {
									_this2.saveIcons({ image: null }, index);
								},
								isLink: true, isDestructive: true },
							__("Remove Image")
						)
					),
					wp.element.createElement(
						"p",
						{ className: "components-base-control__label" },
						__("URL")
					),
					wp.element.createElement(TextControl, {
						value: icons[index].link,
						onChange: function onChange(value) {
							_this2.saveIcons({ link: value }, index);
						},
						placeholder: __("Enter URL")
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Open in New Tab"),
						checked: icons[index].target,
						onChange: function onChange(value) {
							_this2.saveIcons({ target: value }, index);
						}
					}),
					wp.element.createElement(PanelColorSettings, {
						title: __("Color Settings"),
						colorSettings: color_control })
				);
			};

			var element = document.getElementById("uagb-style-icon-list-" + this.props.clientId);

			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_4__styling__["a" /* default */])(this.props);
			}

			var labelClass = hideLabel ? "uagb-icon-list__no-label" : "";

			return wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					BlockControls,
					null,
					wp.element.createElement(BlockAlignmentToolbar, {
						value: align,
						onChange: function onChange(value) {
							setAttributes({ align: value });
						},
						controls: ["left", "center", "right", "full"]
					})
				),
				wp.element.createElement(
					InspectorControls,
					null,
					wp.element.createElement(
						PanelBody,
						{
							title: __("Icon Count"),
							initialOpen: true
						},
						wp.element.createElement(RangeControl, {
							label: __("Number of Icons"),
							value: icon_count,
							onChange: function onChange(newCount) {

								var cloneIcons = [].concat(_toConsumableArray(icons));

								if (cloneIcons.length < newCount) {

									var incAmount = Math.abs(newCount - cloneIcons.length);

									{
										__WEBPACK_IMPORTED_MODULE_1_lodash_times___default()(incAmount, function (n) {

											cloneIcons.push({
												"label": "Label #" + (cloneIcons.length + 1),
												"image_icon": cloneIcons[0].image_icon,
												"icon": cloneIcons[0].icon,
												"image": cloneIcons[0].image,
												"icon_color": cloneIcons[0].icon_color,
												"icon_hover_color": cloneIcons[0].icon_hover_color,
												"icon_bg_color": cloneIcons[0].icon_bg_color,
												"icon_bg_hover_color": cloneIcons[0].icon_bg_hover_color,
												"link": cloneIcons[0].link,
												"target": cloneIcons[0].target
											});
										});
									}

									setAttributes({ icons: cloneIcons });
								}
								setAttributes({ icon_count: newCount });
							},
							min: 1,
							max: 12
						})
					),
					__WEBPACK_IMPORTED_MODULE_1_lodash_times___default()(icon_count, function (n) {
						return iconControls(n);
					}),
					wp.element.createElement(
						PanelBody,
						{
							title: __("General"),
							initialOpen: false
						},
						wp.element.createElement(SelectControl, {
							label: __("Layout"),
							value: icon_layout,
							options: [{ value: "horizontal", label: __("Horizontal") }, { value: "vertical", label: __("Vertical") }],
							onChange: function onChange(value) {
								return setAttributes({ icon_layout: value });
							}
						}),
						"horizontal" == icon_layout && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(SelectControl, {
								label: __("Stack on"),
								value: stack,
								options: [{ value: "none", label: __("None") }, { value: "tablet", label: __("Tablet") }, { value: "mobile", label: __("Mobile") }],
								onChange: function onChange(value) {
									return setAttributes({ stack: value });
								}
							}),
							wp.element.createElement(
								"p",
								{ className: "uagb-note" },
								__("Note: Choose on what breakpoint the Icons will stack.")
							)
						),
						wp.element.createElement(ToggleControl, {
							label: __("Hide Labels"),
							checked: hideLabel,
							onChange: function onChange(value) {
								return setAttributes({ hideLabel: !hideLabel });
							}
						}),
						wp.element.createElement(RangeControl, {
							label: __("Size"),
							value: size,
							onChange: function onChange(value) {
								return setAttributes({ size: value });
							},
							min: 0,
							max: 500,
							initialPosition: 40
						}),
						wp.element.createElement(RangeControl, {
							label: __("Lable Font Size"),
							value: fontSize,
							onChange: function onChange(value) {
								return setAttributes({ fontSize: value });
							},
							min: 1,
							max: 100,
							beforeIcon: "editor-textcolor",
							allowReset: true,
							initialPosition: 15
						}),
						wp.element.createElement(RangeControl, {
							label: __("Background Size"),
							value: bgSize,
							onChange: function onChange(value) {
								return setAttributes({ bgSize: value });
							},
							min: 0,
							max: 500
						}),
						wp.element.createElement(
							"p",
							{ className: "uagb-note" },
							__("Note: Background Size option is useful when one adds background color to the icons.")
						),
						wp.element.createElement(RangeControl, {
							label: __("Circular Size"),
							value: borderRadius,
							onChange: function onChange(value) {
								return setAttributes({ borderRadius: value });
							},
							min: 0,
							max: 500
						}),
						wp.element.createElement(
							"p",
							{ className: "uagb-note" },
							__("Note: Circular Size option is useful when one adds background color to the icons.")
						),
						wp.element.createElement(RangeControl, {
							label: __("Gap between Items"),
							value: gap,
							onChange: function onChange(value) {
								return setAttributes({ gap: value });
							},
							min: 0,
							max: 100
						}),
						!hideLabel && wp.element.createElement(RangeControl, {
							label: __("Gap between Icon and Label"),
							value: inner_gap,
							onChange: function onChange(value) {
								return setAttributes({ inner_gap: value });
							},
							min: 0,
							max: 100
						})
					)
				),
				wp.element.createElement(
					"div",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-icon-list__outer-wrap", "uagb-icon-list__layout-" + icon_layout, labelClass),
						id: "uagb-icon-list-" + this.props.clientId },
					wp.element.createElement(
						"div",
						{ className: "uagb-icon-list__wrap" },
						icons.map(function (icon, index) {
							var _wp$element$createEle;

							if (icon_count <= index) {
								return;
							}

							var url = "";

							var image_icon_html = "";

							if (icon.image_icon == "icon") {
								if (icon.icon) {
									image_icon_html = wp.element.createElement("span", { className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(icon.icon, "uagb-icon-list__source-icon") });
								}
							} else {
								if (icon.image) {
									image_icon_html = wp.element.createElement("img", { className: "uagb-icon-list__source-image", src: icon.image.url });
								}
							}

							var target = icon.target ? "_blank" : "_self";

							return wp.element.createElement(
								"a",
								{
									className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-icon-list-repeater-" + index, "uagb-icon-list__wrapper"),
									key: index,
									href: "javascript:void(0)",
									target: target,
									rel: "noopener noreferrer"
								},
								wp.element.createElement(
									"div",
									{ className: "uagb-icon-list__content-wrap" },
									wp.element.createElement(
										"span",
										{ className: "uagb-icon-list__source-wrap" },
										image_icon_html
									),
									!hideLabel && wp.element.createElement(
										"div",
										{ className: "uagb-icon-list__label-wrap" },
										wp.element.createElement(RichText, (_wp$element$createEle = {
											tagName: "div",
											placeholder: __("Label Name"),
											value: icons[index].label,
											className: "uagb-icon-list__label",
											onChange: function onChange(value) {
												_this2.saveIcons({ label: value }, index);
											}
										}, _defineProperty(_wp$element$createEle, "placeholder", __("Description")), _defineProperty(_wp$element$createEle, "multiline", false), _wp$element$createEle))
									)
								)
							);
						})
					)
				)
			);
		}
	}]);

	return UAGBIconList;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (UAGBIconList);

/***/ }),
/* 374 */
/*!*****************************************!*\
  !*** ./src/blocks/icon-list/styling.js ***!
  \*****************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function styling(props) {
	var _selectors$UagbIco;

	var _props$attributes = props.attributes,
	    align = _props$attributes.align,
	    icon_count = _props$attributes.icon_count,
	    icons = _props$attributes.icons,
	    gap = _props$attributes.gap,
	    inner_gap = _props$attributes.inner_gap,
	    icon_layout = _props$attributes.icon_layout,
	    size = _props$attributes.size,
	    fontSize = _props$attributes.fontSize,
	    stack = _props$attributes.stack,
	    bgSize = _props$attributes.bgSize,
	    borderRadius = _props$attributes.borderRadius;


	var selectors = {};
	var tablet_selectors = {};
	var mobile_selectors = {};

	icons.map(function (icon, index) {

		if (icon_count <= index) {
			return;
		}

		selectors[" .uagb-icon-list-repeater-" + index + " .uagb-icon-list__source-icon"] = {
			"color": icon.icon_color
		};

		selectors[" .uagb-icon-list-repeater-" + index + ":hover .uagb-icon-list__source-icon"] = {
			"color": icon.icon_hover_color
		};

		selectors[" .uagb-icon-list-repeater-" + index + " .uagb-icon-list__label"] = {
			"color": icon.label_color,
			"font-size": fontSize + "px"
		};

		selectors[" .uagb-icon-list-repeater-" + index + ":hover .uagb-icon-list__label"] = {
			"color": icon.label_hover_color
		};

		selectors[" .uagb-icon-list-repeater-" + index + " .uagb-icon-list__source-wrap"] = {
			"background": icon.icon_bg_color
		};

		selectors[" .uagb-icon-list-repeater-" + index + ":hover .uagb-icon-list__source-wrap"] = {
			"background": icon.icon_bg_hover_color
		};
	});

	if ("right" == align) {
		selectors[":not(.uagb-icon-list__no-label) .uagb-icon-list__source-wrap"] = {
			"margin-left": inner_gap + "px"
		};
		selectors[" .uagb-icon-list__content-wrap"] = {
			"flex-direction": "row-reverse"
		};
	} else {
		selectors[":not(.uagb-icon-list__no-label) .uagb-icon-list__source-wrap"] = {
			"margin-right": inner_gap + "px"
		};
	}

	selectors[" .uagb-icon-list__source-wrap"] = {
		"padding": bgSize + "px",
		"border-radius": borderRadius + "px"
	};

	selectors[".uagb-icon-list__layout-vertical a.uagb-icon-list__wrapper"] = {
		"margin-left": 0,
		"margin-right": 0,
		"margin-bottom": gap + "px"
	};

	selectors[".uagb-icon-list__layout-vertical .uagb-icon-list__wrap"] = {
		"flex-direction": "column"
	};

	selectors[".uagb-icon-list__layout-vertical a.uagb-icon-list__wrapper:last-child"] = {
		"margin-bottom": 0
	};

	selectors[".uagb-icon-list__layout-horizontal a.uagb-icon-list__wrapper"] = {
		"margin-left": gap / 2 + "px",
		"margin-right": gap / 2 + "px"
	};

	selectors[".uagb-icon-list__layout-horizontal a.uagb-icon-list__wrapper:first-child"] = {
		"margin-left": 0
	};

	selectors[".uagb-icon-list__layout-horizontal a.uagb-icon-list__wrapper:last-child"] = {
		"margin-right": 0
	};

	selectors[" .uagb-icon-list__source-image"] = {
		"width": size + "px"
	};

	selectors[" .uagb-icon-list__source-icon"] = {
		"width": size + "px",
		"height": size + "px",
		"font-size": size + "px"
	};

	selectors[" .uagb-icon-list__source-icon:before"] = {
		"width": size + "px",
		"height": size + "px",
		"font-size": size + "px"
	};

	selectors[" .uagb-icon-list__label-wrap"] = {
		"text-align": align
	};

	var alignment = align == "left" ? "flex-start" : align == "right" ? "flex-end" : "center";

	selectors[" .uagb-icon-list__wrap"] = (_selectors$UagbIco = {
		"justify-content": alignment,
		"-webkit-box-pack": alignment,
		"-ms-flex-pack": alignment
	}, _defineProperty(_selectors$UagbIco, "justify-content", alignment), _defineProperty(_selectors$UagbIco, "-webkit-box-align", alignment), _defineProperty(_selectors$UagbIco, "-ms-flex-align", alignment), _defineProperty(_selectors$UagbIco, "align-items", alignment), _selectors$UagbIco);

	if ("horizontal" == icon_layout) {

		if ("tablet" == stack) {

			tablet_selectors[" .uagb-icon-list__wrap a.uagb-icon-list__wrapper"] = {
				"margin-left": 0,
				"margin-right": 0,
				"margin-bottom": gap + "px"
			};

			tablet_selectors[" .uagb-icon-list__wrap"] = {
				"flex-direction": "column"
			};

			tablet_selectors[" .uagb-icon-list__wrap a.uagb-icon-list__wrapper:last-child"] = {
				"margin-bottom": 0
			};
		} else if ("mobile" == stack) {

			mobile_selectors[" .uagb-icon-list__wrap a.uagb-icon-list__wrapper"] = {
				"margin-left": 0,
				"margin-right": 0,
				"margin-bottom": gap + "px"
			};

			mobile_selectors[" .uagb-icon-list__wrap"] = {
				"flex-direction": "column"
			};

			mobile_selectors[" .uagb-icon-list__wrap a.uagb-icon-list__wrapper:last-child"] = {
				"margin-bottom": 0
			};
		}
	}

	var styling_css = "";
	var id = "#uagb-icon-list-" + props.clientId;

	for (var i in selectors) {

		styling_css += id;

		styling_css += i + " { ";

		var sel = selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	styling_css += "@media only screen and (max-width: 976px) {";

	for (var i in tablet_selectors) {

		styling_css += id;

		styling_css += i + " { ";

		var sel = tablet_selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	styling_css += " }";

	styling_css += "@media only screen and (max-width: 767px) {";

	for (var i in mobile_selectors) {

		styling_css += id;

		styling_css += i + " { ";

		var sel = mobile_selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	styling_css += " }";

	return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (styling);

/***/ }),
/* 375 */
/*!*********************************************!*\
  !*** ./src/blocks/restaurant-menu/block.js ***!
  \*********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Title__ = __webpack_require__(/*! ./components/Title */ 132);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Price__ = __webpack_require__(/*! ./components/Price */ 133);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Description__ = __webpack_require__(/*! ./components/Description */ 134);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__classes__ = __webpack_require__(/*! ./classes */ 135);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_RestMenuImage__ = __webpack_require__(/*! ./components/RestMenuImage */ 136);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__edit__ = __webpack_require__(/*! ./edit */ 376);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__attributes__ = __webpack_require__(/*! ./attributes */ 378);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__style_scss__ = __webpack_require__(/*! ./style.scss */ 379);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9__style_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 380);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10__editor_scss__);
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * BLOCK: Restaurant Menu
 */

// Import block dependencies and components.












var __ = wp.i18n.__;

// Import registerBlockType() from wp.blocks

var registerBlockType = wp.blocks.registerBlockType;
var RichText = wp.editor.RichText;

// Extend component

var Fragment = wp.element.Fragment;

/**
 * Register: as Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("uagb/restaurant-menu", {

	// Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
	title: uagb_blocks_info.blocks["uagb/restaurant-menu"]["title"], // Block title.
	description: uagb_blocks_info.blocks["uagb/restaurant-menu"]["description"], // Block description.
	icon: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__["a" /* default */].restaurant_menu, // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
	keywords: [__("restaurant"), __("menu"), __("uagb")],
	category: uagb_blocks_info.category,
	attributes: __WEBPACK_IMPORTED_MODULE_8__attributes__["a" /* default */],
	edit: __WEBPACK_IMPORTED_MODULE_7__edit__["a" /* default */],
	save: function save(props) {
		var _props$attributes = props.attributes,
		    block_id = _props$attributes.block_id,
		    className = _props$attributes.className,
		    rest_menu_item_arr = _props$attributes.rest_menu_item_arr,
		    imagePosition = _props$attributes.imagePosition;


		var my_block_id = "uagb-rm-" + block_id;

		return wp.element.createElement(
			Fragment,
			null,
			wp.element.createElement(
				"div",
				{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-rest_menu__outer-wrap"),
					id: my_block_id
				},
				rest_menu_item_arr.map(function (test, index) {
					return wp.element.createElement(
						"div",
						{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, ["uagb-rest_menu__wrap"].concat(_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_5__classes__["a" /* default */])(props.attributes)))), key: "wrap-" + index },
						wp.element.createElement(
							"div",
							{ className: "uagb-rm__content", key: "tm_content-" + index },
							(imagePosition == "top" || imagePosition == "left") && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_RestMenuImage__["a" /* default */], { attributes: props.attributes, index_value: index }),
							wp.element.createElement(
								"div",
								{ className: "uagb-rm__text-wrap" },
								wp.element.createElement(
									Fragment,
									null,
									wp.element.createElement(
										"div",
										{ className: "uagb-rm-details", key: "tm_wraps-" + index },
										wp.element.createElement(
											"div",
											{ className: "uagb-rm__title-wrap", key: "rm_title__wraps-" + index },
											wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_Title__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set", props: props, index_value: index }),
											wp.element.createElement(
												"div",
												{ className: "uagb-rest-menu-text-wrap", key: "text-wrap-" + index },
												wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_Description__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set", props: props, index_value: index })
											)
										),
										wp.element.createElement(
											"div",
											{ className: "uagb-rm__price-wrap", key: "rm_price__wraps-" + index },
											wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_Price__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set", props: props, index_value: index })
										)
									)
								)
							),
							imagePosition == "right" && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_RestMenuImage__["a" /* default */], { attributes: props.attributes, index_value: index })
						),
						wp.element.createElement(
							"div",
							{ className: "uagb-rm__separator-parent" },
							wp.element.createElement("div", { className: "uagb-rm__separator" })
						)
					);
				})
			)
		);
	}
});

/***/ }),
/* 376 */
/*!********************************************!*\
  !*** ./src/blocks/restaurant-menu/edit.js ***!
  \********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_Title__ = __webpack_require__(/*! ./components/Title */ 132);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Price__ = __webpack_require__(/*! ./components/Price */ 133);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Description__ = __webpack_require__(/*! ./components/Description */ 134);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__classes__ = __webpack_require__(/*! ./classes */ 135);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__inline_styles__ = __webpack_require__(/*! ./inline-styles */ 377);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_RestMenuImage__ = __webpack_require__(/*! ./components/RestMenuImage */ 136);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_lodash_times__ = __webpack_require__(/*! lodash/times */ 8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_lodash_times___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_lodash_times__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Import block dependencies and components.









var __ = wp.i18n.__;
var _wp$editor = wp.editor,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    ColorPalette = _wp$editor.ColorPalette,
    InspectorControls = _wp$editor.InspectorControls,
    PanelColorSettings = _wp$editor.PanelColorSettings,
    MediaUpload = _wp$editor.MediaUpload;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    BaseControl = _wp$components.BaseControl,
    Button = _wp$components.Button;

// Extend component

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;


var MAX_COLUMNS = 3;

var UAGBRestaurantMenu = function (_Component) {
	_inherits(UAGBRestaurantMenu, _Component);

	function UAGBRestaurantMenu() {
		_classCallCheck(this, UAGBRestaurantMenu);

		var _this = _possibleConstructorReturn(this, (UAGBRestaurantMenu.__proto__ || Object.getPrototypeOf(UAGBRestaurantMenu)).apply(this, arguments));

		_this.onSelectRestImage = _this.onSelectRestImage.bind(_this);
		_this.onRemoveRestImage = _this.onRemoveRestImage.bind(_this);
		_this.getImageName = _this.getImageName.bind(_this);
		_this.onRemoveImage = _this.onRemoveImage.bind(_this);
		_this.onSelectImage = _this.onSelectImage.bind(_this);
		return _this;
	}

	/*
  * Event to set Image as while adding.
  */


	_createClass(UAGBRestaurantMenu, [{
		key: "onSelectRestImage",
		value: function onSelectRestImage(media, index) {
			var rest_menu_item_arr = this.props.attributes.rest_menu_item_arr;
			var setAttributes = this.props.setAttributes;


			var image_url = null;
			if (!media || !media.url) {
				image_url = null;
			} else {
				image_url = media;
			}

			if (!media.type || "image" !== media.type) {
				image_url = null;
			}

			var newItems = rest_menu_item_arr.map(function (item, thisIndex) {
				if (index === thisIndex) {
					item["image"] = image_url;
				}
				return item;
			});

			setAttributes({
				rest_menu_item_arr: newItems
			});
		}

		/*
   * Event to set Image as null while removing.
   */

	}, {
		key: "onRemoveRestImage",
		value: function onRemoveRestImage(index) {
			var rest_menu_item_arr = this.props.attributes.rest_menu_item_arr;
			var setAttributes = this.props.setAttributes;


			var newItems = rest_menu_item_arr.map(function (item, thisIndex) {
				if (index === thisIndex) {
					item["image"] = null;
				}
				return item;
			});

			setAttributes({
				rest_menu_item_arr: newItems
			});
		}

		/*
   * Event to set Image selectot label.
   */

	}, {
		key: "getImageName",
		value: function getImageName(image) {
			var rest_menu_item_arr = this.props.attributes.rest_menu_item_arr;


			var image_title = "Select Image";
			if (image) {
				if (image.url == null || image.url == "") {
					image_title = "Select Image";
				} else {
					image_title = "Replace Image";
				}
			}
			return image_title;
		}

		/*
   * Event to set Image as null while removing.
   */

	}, {
		key: "onRemoveImage",
		value: function onRemoveImage() {
			var backgroundImage = this.props.attributes.backgroundImage;
			var setAttributes = this.props.setAttributes;


			setAttributes({ backgroundImage: null });
		}

		/*
   * Event to set Image as while adding.
   */

	}, {
		key: "onSelectImage",
		value: function onSelectImage(media) {
			var backgroundImage = this.props.attributes.backgroundImage;
			var setAttributes = this.props.setAttributes;


			if (!media || !media.url) {
				setAttributes({ backgroundImage: null });
				return;
			}

			if (!media.type || "image" !== media.type) {
				setAttributes({ backgroundImage: null });
				return;
			}

			setAttributes({ backgroundImage: media });
		}
	}, {
		key: "render",
		value: function render() {
			var _this2 = this;

			var _props = this.props,
			    isSelected = _props.isSelected,
			    className = _props.className,
			    setAttributes = _props.setAttributes,
			    attributes = _props.attributes,
			    mergeBlocks = _props.mergeBlocks,
			    insertBlocksAfter = _props.insertBlocksAfter,
			    onReplace = _props.onReplace;

			// Setup the attributes.

			var menu_item_count = attributes.menu_item_count,
			    rest_menu_item_arr = attributes.rest_menu_item_arr,
			    headingAlign = attributes.headingAlign,
			    priceColor = attributes.priceColor,
			    descColor = attributes.descColor,
			    titleColor = attributes.titleColor,
			    prefixTag = attributes.prefixTag,
			    headingTag = attributes.headingTag,
			    titleFontSize = attributes.titleFontSize,
			    priceFontSize = attributes.priceFontSize,
			    descFontSize = attributes.descFontSize,
			    separatorWidth = attributes.separatorWidth,
			    separatorSpace = attributes.separatorSpace,
			    descSpace = attributes.descSpace,
			    imagePosition = attributes.imagePosition,
			    imageAlignment = attributes.imageAlignment,
			    block_id = attributes.block_id,
			    source_type = attributes.source_type,
			    titleSpace = attributes.titleSpace,
			    imgHrPadding = attributes.imgHrPadding,
			    imgVrPadding = attributes.imgVrPadding,
			    imageSize = attributes.imageSize,
			    imageWidth = attributes.imageWidth,
			    columns = attributes.columns,
			    tcolumns = attributes.tcolumns,
			    mcolumns = attributes.mcolumns,
			    rowGap = attributes.rowGap,
			    columnGap = attributes.columnGap,
			    contentHrPadding = attributes.contentHrPadding,
			    contentVrPadding = attributes.contentVrPadding,
			    seperatorStyle = attributes.seperatorStyle,
			    seperatorWidth = attributes.seperatorWidth,
			    seperatorThickness = attributes.seperatorThickness,
			    seperatorColor = attributes.seperatorColor,
			    stack = attributes.stack;

			// Add CSS.

			var element = document.getElementById("uagb-restaurant-menu-style-" + this.props.clientId);
			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_5__inline_styles__["a" /* default */])(this.props);
			}

			var my_block_id = "uagb-rm-" + this.props.clientId;

			// Typography settings.
			var TypographySettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Typography"),
						initialOpen: false
					},
					wp.element.createElement(SelectControl, {
						label: __("Title Tag"),
						value: headingTag,
						onChange: function onChange(value) {
							return setAttributes({ headingTag: value });
						},
						options: [{ value: "h1", label: __("H1") }, { value: "h2", label: __("H2") }, { value: "h3", label: __("H3") }, { value: "h4", label: __("H4") }, { value: "h5", label: __("H5") }, { value: "h6", label: __("H6") }]
					}),
					wp.element.createElement(RangeControl, {
						label: __("Title Font Size"),
						value: titleFontSize,
						onChange: function onChange(value) {
							return setAttributes({ titleFontSize: value });
						},
						min: 10,
						max: 100,
						initialPosition: 30,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Content Font Size"),
						value: descFontSize,
						onChange: function onChange(value) {
							return setAttributes({ descFontSize: value });
						},
						min: 10,
						max: 100,
						initialPosition: 16,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Price Font Size"),
						value: priceFontSize,
						onChange: function onChange(value) {
							return setAttributes({ priceFontSize: value });
						},
						min: 10,
						max: 100,
						initialPosition: 16,
						beforeIcon: "editor-textcolor",
						llowReset: true
					})
				),
				wp.element.createElement(PanelColorSettings, {
					title: __("Color Settings"),
					initialOpen: false,
					colorSettings: [{
						value: titleColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ titleColor: colorValue });
						},
						label: __("Title Color")
					}, {
						value: descColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ descColor: colorValue });
						},
						label: __("Content Color")
					}, {
						value: priceColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ priceColor: colorValue });
						},
						label: __("Price Color")
					}]
				})
			);

			var separatorSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{ title: __("Seperator"), initialOpen: false },
					wp.element.createElement(SelectControl, {
						label: __("Seperator Style"),
						value: seperatorStyle,
						onChange: function onChange(value) {
							return setAttributes({ seperatorStyle: value });
						},
						options: [{ value: "none", label: __("None") }, { value: "solid", label: __("Solid") }, { value: "dotted", label: __("Dotted") }, { value: "dashed", label: __("Dashed") }, { value: "double", label: __("Double") }, { value: "groove", label: __("Groove") }, { value: "inset", label: __("Inset") }, { value: "outset", label: __("Outset") }, { value: "ridge", label: __("Ridge") }]
					}),
					"none" != seperatorStyle && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(RangeControl, {
							label: __("Seperator Width"),
							value: seperatorWidth,
							onChange: function onChange(value) {
								return setAttributes({ seperatorWidth: value });
							},
							min: 0,
							max: 100,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Seperator Thickness"),
							value: seperatorThickness,
							onChange: function onChange(value) {
								return setAttributes({ seperatorThickness: value });
							},
							min: 0,
							max: 20,
							allowReset: true
						}),
						wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(
								"p",
								{ className: "uagb-setting-label" },
								__("Seperator Color"),
								wp.element.createElement(
									"span",
									{ className: "components-base-control__label" },
									wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: seperatorColor } })
								)
							),
							wp.element.createElement(ColorPalette, {
								value: seperatorColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ seperatorColor: colorValue });
								},
								allowReset: true
							})
						)
					)
				)
			);

			// Image sizes.
			var imageSizeOptions = [{ value: "thumbnail", label: __("Thumbnail") }, { value: "medium", label: __("Medium") }, { value: "full", label: __("Large") }];

			var imageControls = function imageControls(index) {
				var image_val = null;
				if (rest_menu_item_arr[index] && typeof rest_menu_item_arr[index] !== "undefined") {
					image_val = rest_menu_item_arr[index]["image"];
				}
				return wp.element.createElement(
					PanelBody,
					{ key: index,
						title: __("Image") + " " + (index + 1) + " " + __("Settings"),
						initialOpen: true
					},
					wp.element.createElement(
						BaseControl,
						{
							className: "editor-bg-image-control",
							label: __("")
						},
						wp.element.createElement(MediaUpload, {
							title: __("Select Image" + (index + 1)),
							onSelect: function onSelect(media) {
								_this2.onSelectRestImage(media, index);
							},
							allowedTypes: ["image"],
							value: image_val,
							render: function render(_ref) {
								var open = _ref.open;
								return wp.element.createElement(
									Button,
									{ isDefault: true, onClick: open },
									_this2.getImageName(rest_menu_item_arr[index]["image"])
								);
							}
						}),
						image_val && rest_menu_item_arr[index]["image"].url !== null && rest_menu_item_arr[index]["image"].url !== "" && wp.element.createElement(
							Button,
							{ className: "uagb-rm-btn", key: index, onClick: function onClick(value) {
									_this2.onRemoveRestImage(index);
								}, isLink: true, isDestructive: true },
							__("Remove Image")
						)
					)
				);
			};

			var cnt = 0;
			rest_menu_item_arr.map(function (item, thisIndex) {
				var image_arr = rest_menu_item_arr[thisIndex];
				if (image_arr && typeof image_arr !== "undefined") {
					var image = image_arr["image"];
					if (typeof image !== "undefined" && image !== null && image !== "") {
						cnt++;
					}
				}
			});

			// Margin Settings.
			var marginSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Spacing"),
						initialOpen: false
					},
					wp.element.createElement(RangeControl, {
						label: __("Row Gap"),
						value: rowGap,
						onChange: function onChange(value) {
							return setAttributes({ rowGap: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Column Gap"),
						value: columnGap,
						onChange: function onChange(value) {
							return setAttributes({ columnGap: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Item Horizontal Padding"),
						value: contentHrPadding,
						onChange: function onChange(value) {
							return setAttributes({ contentHrPadding: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Item Vertical Padding"),
						value: contentVrPadding,
						onChange: function onChange(value) {
							return setAttributes({ contentVrPadding: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Title Bottom Margin"),
						value: titleSpace,
						onChange: function onChange(value) {
							return setAttributes({ titleSpace: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					cnt > 0 && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(RangeControl, {
							label: __("Image Horizontal Padding"),
							value: imgHrPadding,
							onChange: function onChange(value) {
								return setAttributes({ imgHrPadding: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Image Vertical Padding"),
							value: imgVrPadding,
							onChange: function onChange(value) {
								return setAttributes({ imgVrPadding: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						})
					)
				)
			);

			var inspect_control = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					InspectorControls,
					null,
					wp.element.createElement(
						PanelBody,
						{
							title: __("General"),
							initialOpen: true
						},
						wp.element.createElement(RangeControl, {
							label: __("Number of Menu Items"),
							value: menu_item_count,
							onChange: function onChange(newCount) {
								var cloneTest_block = [].concat(_toConsumableArray(rest_menu_item_arr));
								if (cloneTest_block.length < newCount) {
									var incAmount = Math.abs(newCount - cloneTest_block.length);

									{
										__WEBPACK_IMPORTED_MODULE_7_lodash_times___default()(incAmount, function (n) {

											cloneTest_block.push({
												description: __("Lorem ipsum dolor sit amet, consectetur adipiscing elit."),
												title: __(" Menu Item" + (cloneTest_block.length + 1)),
												price: __("$19"),
												image: ""
											});
										});
									}
									setAttributes({ rest_menu_item_arr: cloneTest_block });
								} else {
									var _incAmount = Math.abs(newCount - cloneTest_block.length);
									var data_new = cloneTest_block;
									for (var i = 0; i < _incAmount; i++) {
										data_new.pop();
									}
									setAttributes({ rest_menu_item_arr: data_new });
								}
								setAttributes({ menu_item_count: newCount });
							},
							min: 0,
							max: 10,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Columns"),
							value: columns,
							onChange: function onChange(value) {
								return setAttributes({ columns: value });
							},
							min: 1,
							max: Math.min(MAX_COLUMNS, menu_item_count)
						}),
						wp.element.createElement(RangeControl, {
							label: __("Columns (Tablet)"),
							value: tcolumns,
							onChange: function onChange(value) {
								return setAttributes({ tcolumns: value });
							},
							min: 1,
							max: Math.min(MAX_COLUMNS, menu_item_count)
						}),
						wp.element.createElement(RangeControl, {
							label: __("Columns (Mobile)"),
							value: mcolumns,
							onChange: function onChange(value) {
								return setAttributes({ mcolumns: value });
							},
							min: 1,
							max: Math.min(MAX_COLUMNS, menu_item_count)
						})
					),
					wp.element.createElement(
						PanelBody,
						{
							title: __("Image"),
							initialOpen: false
						},
						__WEBPACK_IMPORTED_MODULE_7_lodash_times___default()(menu_item_count, function (n) {
							return imageControls(n);
						}),
						cnt > 0 && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(SelectControl, {
								label: __("Image Position"),
								value: imagePosition,
								onChange: function onChange(value) {
									return setAttributes({ imagePosition: value });
								},
								options: [{ value: "top", label: __("Top") }, { value: "left", label: __("Left") }, { value: "right", label: __("Right") }]
							}),
							(imagePosition == "left" || imagePosition == "right") && wp.element.createElement(
								Fragment,
								null,
								wp.element.createElement(SelectControl, {
									label: __("Vertical Alignment"),
									value: imageAlignment,
									onChange: function onChange(value) {
										return setAttributes({ imageAlignment: value });
									},
									options: [{ value: "top", label: __("Top") }, { value: "middle", label: __("Middle") }]
								}),
								wp.element.createElement(SelectControl, {
									label: __("Stack on"),
									value: stack,
									options: [{ value: "none", label: __("None") }, { value: "tablet", label: __("Tablet") }, { value: "mobile", label: __("Mobile") }],
									help: __("Note: Choose on what breakpoint the Images will stack."),
									onChange: function onChange(value) {
										return setAttributes({ stack: value });
									}
								})
							),
							wp.element.createElement(SelectControl, {
								label: __("Image Size"),
								options: imageSizeOptions,
								value: imageSize,
								onChange: function onChange(value) {
									return setAttributes({ imageSize: value });
								}
							}),
							wp.element.createElement(RangeControl, {
								label: __("Width"),
								value: imageWidth,
								onChange: function onChange(value) {
									return setAttributes({ imageWidth: value });
								},
								min: 0,
								max: 500,
								allowReset: true
							})
						)
					),
					separatorSettings,
					TypographySettings,
					marginSettings
				)
			);

			return wp.element.createElement(
				Fragment,
				null,
				(cnt == 0 || cnt > 0 && imagePosition == "top") && wp.element.createElement(
					BlockControls,
					{ key: "controls" },
					wp.element.createElement(AlignmentToolbar, {
						value: headingAlign,
						onChange: function onChange(value) {
							return setAttributes({ headingAlign: value });
						}
					})
				),
				inspect_control,
				wp.element.createElement(
					"div",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-rest_menu__outer-wrap"),
						id: my_block_id
					},
					rest_menu_item_arr.map(function (test, index) {
						return wp.element.createElement(
							"div",
							{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, ["uagb-rest_menu__wrap"].concat(_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_4__classes__["a" /* default */])(attributes)))), key: "wrap-" + index },
							wp.element.createElement(
								"div",
								{ className: "uagb-rm__content", key: "tm_content-" + index },
								(imagePosition == "top" || imagePosition == "left") && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_RestMenuImage__["a" /* default */], { attributes: attributes, index_value: index }),
								wp.element.createElement(
									"div",
									{ className: "uagb-rm__text-wrap" },
									wp.element.createElement(
										Fragment,
										null,
										wp.element.createElement(
											"div",
											{ className: "uagb-rm-details", key: "tm_wraps-" + index },
											wp.element.createElement(
												"div",
												{ className: "uagb-rm__title-wrap", key: "rm_title__wraps-" + index },
												wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_Title__["a" /* default */], { attributes: attributes, setAttributes: setAttributes, props: _this2.props, index_value: index }),
												wp.element.createElement(
													"div",
													{ className: "uagb-rest-menu-text-wrap", key: "text-wrap-" + index },
													wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_Description__["a" /* default */], { attributes: attributes, setAttributes: setAttributes, props: _this2.props, index_value: index })
												)
											),
											wp.element.createElement(
												"div",
												{ className: "uagb-rm__price-wrap", key: "rm_price__wraps-" + index },
												wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_Price__["a" /* default */], { attributes: attributes, setAttributes: setAttributes, props: _this2.props, index_value: index })
											)
										)
									)
								),
								imagePosition == "right" && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_RestMenuImage__["a" /* default */], { attributes: attributes, index_value: index })
							),
							wp.element.createElement(
								"div",
								{ className: "uagb-rm__separator-parent" },
								wp.element.createElement("div", { className: "uagb-rm__separator" })
							)
						);
					})
				)
			);
		}
	}, {
		key: "componentDidMount",
		value: function componentDidMount() {

			// Assigning block_id in the attribute.
			this.props.setAttributes({ block_id: this.props.clientId });

			// Pushing Style tag for this block css.
			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-restaurant-menu-style-" + this.props.clientId);
			document.head.appendChild($style);
		}
	}]);

	return UAGBRestaurantMenu;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (UAGBRestaurantMenu);

/***/ }),
/* 377 */
/*!*****************************************************!*\
  !*** ./src/blocks/restaurant-menu/inline-styles.js ***!
  \*****************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline styles.
 * @param  {object} props - The block object.
 * @return {object} The inline background type CSS.
 */
function RestMenuStyle(props) {
	var _props$attributes = props.attributes,
	    headingAlign = _props$attributes.headingAlign,
	    priceColor = _props$attributes.priceColor,
	    descColor = _props$attributes.descColor,
	    titleColor = _props$attributes.titleColor,
	    titleFontSize = _props$attributes.titleFontSize,
	    priceFontSize = _props$attributes.priceFontSize,
	    descFontSize = _props$attributes.descFontSize,
	    descSpace = _props$attributes.descSpace,
	    block_id = _props$attributes.block_id,
	    titleSpace = _props$attributes.titleSpace,
	    imgVrPadding = _props$attributes.imgVrPadding,
	    imgHrPadding = _props$attributes.imgHrPadding,
	    imageWidth = _props$attributes.imageWidth,
	    rowGap = _props$attributes.rowGap,
	    columnGap = _props$attributes.columnGap,
	    columns = _props$attributes.columns,
	    tcolumns = _props$attributes.tcolumns,
	    mcolumns = _props$attributes.mcolumns,
	    contentVrPadding = _props$attributes.contentVrPadding,
	    contentHrPadding = _props$attributes.contentHrPadding,
	    seperatorStyle = _props$attributes.seperatorStyle,
	    seperatorWidth = _props$attributes.seperatorWidth,
	    seperatorThickness = _props$attributes.seperatorThickness,
	    seperatorColor = _props$attributes.seperatorColor;


	if (props.clientId) {
		var clientId = "uagb-rm-" + props.clientId;
	} else {
		var clientId = "uagb-rm-" + block_id;
	}

	var selectors = {};

	selectors[".uagb-rest_menu__wrap"] = {
		"padding-left": columnGap / 2 + "px",
		"padding-right": columnGap / 2 + "px",
		"margin-bottom": rowGap + "px"
	};

	selectors[".uagb-rest_menu__wrap .uagb-rm__image-content"] = {
		"padding-left": imgHrPadding + "px",
		"padding-right": imgHrPadding + "px",
		"padding-top": imgVrPadding + "px",
		"padding-bottom": imgVrPadding + "px"

		// Image
	};selectors[".uagb-rm__image img"] = {
		"width": imageWidth + "px",
		"max-width": imageWidth + "px"
	};

	var align = headingAlign;
	if ("left" === align) {
		align = "flex-start";
	} else if ("right" === align) {
		align = "flex-end";
	}

	selectors[".uagb-rm__separator-parent"] = {
		"justify-content": align
	};

	selectors[".uagb-rm__content"] = {
		"text-align": headingAlign,
		"padding-left": contentHrPadding + "px",
		"padding-right": contentHrPadding + "px",
		"padding-top": contentVrPadding + "px",
		"padding-bottom": contentVrPadding + "px"

		// Prefix Style
	};selectors[".uagb-rm__title"] = {
		"font-size": titleFontSize + "px",
		"color": titleColor,
		"margin-bottom": titleSpace + "px"

		// Title Style
	};selectors[".uagb-rm__price"] = {
		"font-size": priceFontSize + "px",
		"color": priceColor

		// Description Style
	};selectors[".uagb-rm__desc"] = {
		"font-size": descFontSize + "px",
		"color": descColor,
		"margin-bottom": descSpace + "px"
	};

	if (seperatorStyle != "none") {
		selectors[".uagb-rest_menu__wrap .uagb-rm__separator"] = {
			"border-top-color": seperatorColor,
			"border-top-style": seperatorStyle,
			"border-top-width": seperatorThickness + "px",
			"width": seperatorWidth + "%"
		};
	}

	selectors[".uagb-rest_menu__wrap.uagb-rm__desk-column-" + columns + ":nth-child(" + columns + "n+1)"] = {
		"margin-left": "0%",
		"clear": "left"
	};

	var styling_css = "";

	for (var i in selectors) {

		styling_css += "#wpwrap #" + clientId + " " + i + " { ";

		var sel = selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (RestMenuStyle);

/***/ }),
/* 378 */
/*!**************************************************!*\
  !*** ./src/blocks/restaurant-menu/attributes.js ***!
  \**************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * BLOCK: UAGB Restaurent Menu Attributes
 */
var __ = wp.i18n.__;


var ITEM_COUNT = 4;

var rest_menu_block = [];

for (var i = 1; i <= ITEM_COUNT; i++) {
	var desc_text = __("Lorem ipsum dolor sit amet, consectetur adipiscing elit.");
	var title_text = __("Menu Item " + i);
	var price_text = __("$9");
	rest_menu_block.push({
		"description": desc_text,
		"title": title_text,
		"price": price_text,
		"image": ""
	});
}

var attributes = {
	menu_item_count: {
		type: "number",
		default: ITEM_COUNT
	},
	rest_menu_item_arr: {
		type: "array",
		default: rest_menu_block
	},
	headingAlign: {
		type: "string",
		default: "left"
	},
	descColor: {
		type: "string",
		default: "#333"
	},
	priceColor: {
		type: "string",
		default: "#888888"
	},
	titleColor: {
		type: "string",
		default: "#333"
	},
	imagePosition: {
		type: "string",
		default: "top"
	},
	imageAlignment: {
		type: "string",
		default: "top"
	},
	headingTag: {
		type: "string",
		default: "h4"
	},
	titleFontSize: {
		type: "number"
	},
	priceFontSize: {
		type: "number"
	},
	descFontSize: {
		type: "number"
	},
	priceSpace: {
		type: "number",
		default: 5
	},
	descSpace: {
		type: "number",
		default: 15
	},
	titleSpace: {
		type: "number",
		default: 10
	},
	block_id: {
		type: "string",
		default: "not_set"
	},
	imgVrPadding: {
		type: "number",
		default: 0
	},
	imgHrPadding: {
		type: "number",
		default: 0
	},
	imgTopPadding: {
		type: "number",
		default: 0
	},
	imgBottomPadding: {
		type: "number",
		default: 0
	},
	imageSize: {
		type: "string",
		default: "medium"
	},
	imageWidth: {
		type: "number",
		default: ""
	},
	columns: {
		type: "number",
		default: 2
	},
	tcolumns: {
		type: "number",
		default: 2
	},
	mcolumns: {
		type: "number",
		default: 1
	},
	rowGap: {
		type: "number",
		default: 10
	},
	columnGap: {
		type: "number",
		default: 10
	},
	contentVrPadding: {
		type: "number",
		default: 5
	},
	contentHrPadding: {
		type: "number",
		default: 5
	},
	seperatorStyle: {
		type: "string",
		default: "dashed"
	},
	seperatorWidth: {
		type: "number",
		default: "100"
	},
	seperatorThickness: {
		type: "number",
		default: "1"
	},
	seperatorColor: {
		type: "string",
		default: "#b2b4b5"
	},
	stack: {
		type: "string",
		default: "tablet"
	}
};

/* harmony default export */ __webpack_exports__["a"] = (attributes);

/***/ }),
/* 379 */
/*!***********************************************!*\
  !*** ./src/blocks/restaurant-menu/style.scss ***!
  \***********************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 380 */
/*!************************************************!*\
  !*** ./src/blocks/restaurant-menu/editor.scss ***!
  \************************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 381 */
/*!**************************************!*\
  !*** ./src/blocks/timeline/block.js ***!
  \**************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__content_timeline_block_js__ = __webpack_require__(/*! ./content-timeline/block.js */ 382);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__post_timeline_block_js__ = __webpack_require__(/*! ./post-timeline/block.js */ 385);
/**
 * Gutenberg Blocks
 *
 * All blocks related JavaScript files should be imported here.
 * You can create a new block folder in this dir and include code
 * for that block here as well.
 *
 * All blocks should be included here since this is the file that
 * Webpack is compiling as the input file.
 */




/***/ }),
/* 382 */
/*!*******************************************************!*\
  !*** ./src/blocks/timeline/content-timeline/block.js ***!
  \*******************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_times__ = __webpack_require__(/*! lodash/times */ 8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_times___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_times__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__style_scss__ = __webpack_require__(/*! .././style.scss */ 137);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__style_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__attributes__ = __webpack_require__(/*! ./attributes */ 383);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__edit__ = __webpack_require__(/*! ./edit */ 384);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__inline_styles__ = __webpack_require__(/*! .././inline-styles */ 71);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__classes__ = __webpack_require__(/*! .././classes */ 72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__align_classes__ = __webpack_require__(/*! .././align-classes */ 73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__day_align_classes__ = __webpack_require__(/*! .././day-align-classes */ 74);
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * Register: as Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */



//  Import CSS.







var _wp$date = wp.date,
    dateI18n = _wp$date.dateI18n,
    __experimentalGetSettings = _wp$date.__experimentalGetSettings;

// Components

var __ = wp.i18n.__;

// Register block controls

var registerBlockType = wp.blocks.registerBlockType;
var RichText = wp.editor.RichText;


registerBlockType("uagb/content-timeline", {

	// Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
	title: uagb_blocks_info.blocks["uagb/content-timeline"]["title"], // Block title.
	description: uagb_blocks_info.blocks["uagb/content-timeline"]["description"], // Block description.
	icon: __WEBPACK_IMPORTED_MODULE_2__dist_blocks_uagb_controls_block_icons__["a" /* default */].content_timeline, // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
	category: uagb_blocks_info.category,
	keywords: [__("Content Timeline"), __("Timeline"), __("uagb")],
	attributes: __WEBPACK_IMPORTED_MODULE_4__attributes__["a" /* default */],
	edit: __WEBPACK_IMPORTED_MODULE_5__edit__["a" /* default */],
	save: function save(props) {
		var _props$attributes = props.attributes,
		    block_id = _props$attributes.block_id,
		    headingTag = _props$attributes.headingTag,
		    timelinAlignment = _props$attributes.timelinAlignment,
		    displayPostDate = _props$attributes.displayPostDate,
		    icon = _props$attributes.icon,
		    tm_content = _props$attributes.tm_content,
		    t_date = _props$attributes.t_date,
		    stack = _props$attributes.stack,
		    className = _props$attributes.className;


		var my_block_id = "uagb-ctm-" + block_id;

		/* Style for elements */
		var front_style = Object(__WEBPACK_IMPORTED_MODULE_6__inline_styles__["a" /* default */])(props);

		var hasItems = Array.isArray(tm_content) && tm_content.length;

		var dateFormat = __experimentalGetSettings().formats.date;

		var content_align_class = Object(__WEBPACK_IMPORTED_MODULE_8__align_classes__["a" /* default */])(props.attributes, 0); // Get classname for layout alignment
		var day_align_class = Object(__WEBPACK_IMPORTED_MODULE_9__day_align_classes__["a" /* default */])(props.attributes, 0); //

		var data_copy = [].concat(_toConsumableArray(tm_content));
		var display_inner_date = false;

		return wp.element.createElement(
			"div",
			{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-timeline__outer-wrap"),
				id: my_block_id },
			wp.element.createElement(
				"div",
				{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, ["uagb-timeline__content-wrap"].concat(_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_7__classes__["a" /* default */])(props.attributes)))) },
				wp.element.createElement(
					"div",
					{ className: "uagb-timeline-wrapper" },
					wp.element.createElement(
						"div",
						{ className: "uagb-timeline__main" },
						wp.element.createElement(
							"div",
							{ className: "uagb-timeline__days" },
							tm_content.map(function (post, index) {
								var second_index = "uagb-" + index;
								if (timelinAlignment == "center") {
									display_inner_date = true;
									content_align_class = Object(__WEBPACK_IMPORTED_MODULE_8__align_classes__["a" /* default */])(props.attributes, index); // Get classname for layout alignment
									day_align_class = Object(__WEBPACK_IMPORTED_MODULE_9__day_align_classes__["a" /* default */])(props.attributes, index); //
								}
								var Tag = headingTag;
								var icon_class = "uagb-timeline__icon-new out-view-uagb-timeline__icon " + icon;
								var post_date = dateI18n(dateFormat, t_date[index].title);
								if (post_date === "Invalid date") {
									post_date = t_date[index].title;
								}
								return wp.element.createElement(
									"article",
									{ className: "uagb-timeline__field uagb-timeline__field-wrap", key: index },
									wp.element.createElement(
										"div",
										{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, _toConsumableArray(content_align_class)) },
										wp.element.createElement(
											"div",
											{ className: "uagb-timeline__marker out-view-uagb-timeline__icon" },
											wp.element.createElement("span", { className: icon_class })
										),
										wp.element.createElement(
											"div",
											{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, _toConsumableArray(day_align_class)) },
											wp.element.createElement(
												"div",
												{ className: "uagb-events-new" },
												wp.element.createElement(
													"div",
													{ className: "uagb-timeline__events-inner-new" },
													wp.element.createElement(
														"div",
														{ className: "uagb-timeline__date-hide uagb-timeline__date-inner" },
														displayPostDate && t_date[index].title && wp.element.createElement(
															"div",
															{ className: "uagb-timeline__inner-date-new" },
															post_date
														)
													),
													wp.element.createElement(
														"div",
														{ className: "uagb-timeline-content" },
														wp.element.createElement(
															"div",
															{ className: "uagb-timeline__heading-text" },
															wp.element.createElement(RichText.Content, {
																tagName: headingTag,
																value: post.time_heading,
																className: "uagb-timeline__heading"
															})
														),
														wp.element.createElement(RichText.Content, {
															tagName: "p",
															value: post.time_desc,
															className: "uagb-timeline-desc-content"
														}),
														wp.element.createElement("div", { className: "uagb-timeline__arrow" })
													)
												)
											)
										),
										display_inner_date && wp.element.createElement(
											"div",
											{ className: "uagb-timeline__date-new" },
											displayPostDate && t_date[index].title && wp.element.createElement(
												"div",
												{ className: "uagb-timeline__date-new" },
												post_date
											)
										)
									)
								);
							})
						),
						wp.element.createElement(
							"div",
							{ className: "uagb-timeline__line" },
							wp.element.createElement("div", { className: "uagb-timeline__line__inner" })
						)
					)
				)
			)
		);
	},
	deprecated: [{
		attributes: __WEBPACK_IMPORTED_MODULE_4__attributes__["a" /* default */],
		save: function save(props) {
			var _props$attributes2 = props.attributes,
			    block_id = _props$attributes2.block_id,
			    headingTag = _props$attributes2.headingTag,
			    timelinAlignment = _props$attributes2.timelinAlignment,
			    displayPostDate = _props$attributes2.displayPostDate,
			    icon = _props$attributes2.icon,
			    tm_content = _props$attributes2.tm_content,
			    t_date = _props$attributes2.t_date,
			    stack = _props$attributes2.stack,
			    className = _props$attributes2.className;


			var my_block_id = "uagb-ctm-" + block_id;

			/* Style for elements */
			var front_style = Object(__WEBPACK_IMPORTED_MODULE_6__inline_styles__["a" /* default */])(props);

			var hasItems = Array.isArray(tm_content) && tm_content.length;

			var dateFormat = __experimentalGetSettings().formats.date;

			var content_align_class = Object(__WEBPACK_IMPORTED_MODULE_8__align_classes__["a" /* default */])(props.attributes, 0); // Get classname for layout alignment
			var day_align_class = Object(__WEBPACK_IMPORTED_MODULE_9__day_align_classes__["a" /* default */])(props.attributes, 0); //

			var data_copy = [].concat(_toConsumableArray(tm_content));
			var display_inner_date = false;

			return wp.element.createElement(
				"div",
				{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-timeline__outer-wrap"),
					id: my_block_id },
				wp.element.createElement(
					"div",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, ["uagb-timeline__content-wrap"].concat(_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_7__classes__["a" /* default */])(props.attributes)))) },
					wp.element.createElement(
						"div",
						{ className: "uagb-timeline-wrapper" },
						wp.element.createElement(
							"div",
							{ className: "uagb-timeline__main" },
							wp.element.createElement(
								"div",
								{ className: "uagb-timeline__days" },
								tm_content.map(function (post, index) {
									var second_index = "uagb-" + index;
									if (timelinAlignment == "center") {
										display_inner_date = true;
										content_align_class = Object(__WEBPACK_IMPORTED_MODULE_8__align_classes__["a" /* default */])(props.attributes, index); // Get classname for layout alignment
										day_align_class = Object(__WEBPACK_IMPORTED_MODULE_9__day_align_classes__["a" /* default */])(props.attributes, index); //
									}
									var Tag = headingTag;
									var icon_class = "uagb-timeline__icon-new out-view-uagb-timeline__icon " + icon;

									return wp.element.createElement(
										"article",
										{ className: "uagb-timeline__field uagb-timeline__animate-border", key: index },
										wp.element.createElement(
											"div",
											{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, _toConsumableArray(content_align_class)) },
											wp.element.createElement(
												"div",
												{ className: "uagb-timeline__marker out-view-uagb-timeline__icon" },
												wp.element.createElement("span", { className: icon_class })
											),
											wp.element.createElement(
												"div",
												{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, _toConsumableArray(day_align_class)) },
												wp.element.createElement(
													"div",
													{ className: "uagb-events-new" },
													wp.element.createElement(
														"div",
														{ className: "uagb-timeline__events-inner-new" },
														wp.element.createElement(
															"div",
															{ className: "uagb-timeline__date-hide uagb-timeline__date-inner" },
															displayPostDate && t_date[index].title && wp.element.createElement(
																"div",
																{ className: "uagb-timeline__inner-date-new" },
																dateI18n(dateFormat, t_date[index].title)
															)
														),
														wp.element.createElement(
															"div",
															{ className: "uagb-timeline-content" },
															wp.element.createElement(
																"div",
																{ className: "uagb-timeline__heading-text" },
																wp.element.createElement(RichText.Content, {
																	tagName: headingTag,
																	value: post.time_heading,
																	className: "uagb-timeline__heading"
																})
															),
															wp.element.createElement(RichText.Content, {
																tagName: "p",
																value: post.time_desc,
																className: "uagb-timeline-desc-content"
															}),
															wp.element.createElement("div", { className: "uagb-timeline__arrow" })
														)
													)
												)
											),
											display_inner_date && wp.element.createElement(
												"div",
												{ className: "uagb-timeline__date-new" },
												displayPostDate && t_date[index].title && wp.element.createElement(
													"div",
													{ className: "uagb-timeline__date-new" },
													dateI18n(dateFormat, t_date[index].title)
												)
											)
										)
									);
								})
							),
							wp.element.createElement(
								"div",
								{ className: "uagb-timeline__line" },
								wp.element.createElement("div", { className: "uagb-timeline__line__inner" })
							)
						)
					)
				)
			);
		}
	}]
});

/***/ }),
/* 383 */
/*!************************************************************!*\
  !*** ./src/blocks/timeline/content-timeline/attributes.js ***!
  \************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * BLOCK: UAGB Timeline Attributes
 */
var item = [];
var date_arr = [];

for (var i = 1; i <= 5; i++) {
	var title_heading_val = "Timeline Heading " + i;
	var title_desc_val = "This is Timeline description, you can change me anytime click here ";
	var temp = [];
	var p = { "time_heading": title_heading_val, "time_desc": title_desc_val };
	item.push(p);
	var j = i - 1;
	var today = new Date();
	var dd = today.getDate();
	var mm = today.getMonth() + 1; //January is 0!
	var yyyy = today.getFullYear() - j;

	if (dd < 10) {
		dd = "0" + dd;
	}

	if (mm < 10) {
		mm = "0" + mm;
	}

	today = mm + "/" + dd + "/" + yyyy;
	var p = { "title": today };
	date_arr.push(p);
}

var attributes = {
	tm_content: {
		type: "array",
		default: item
	},
	headingTitle: {
		type: "string"
	},
	headingDesc: {
		type: "string"
	},
	align: {
		type: "string",
		default: "center"
	},
	headingColor: {
		type: "string"
	},
	subHeadingColor: {
		type: "string"
	},
	separatorBg: {
		type: "string",
		default: "#eee"
	},
	backgroundColor: {
		type: "string",
		default: "#eee"
	},
	separatorColor: {
		type: "string",
		default: "#eee"
	},
	separatorFillColor: {
		type: "string",
		default: "#61ce70"
	},
	separatorBorder: {
		type: "string",
		default: "#eee"
	},
	borderFocus: {
		type: "string",
		default: "#5cb85c"
	},
	headingTag: {
		type: "string",
		default: "h4"
	},
	horizontalSpace: {
		type: "number",
		default: 10
	},
	verticalSpace: {
		type: "number",
		default: 15
	},
	headFontSize: {
		type: "number"
	},
	timelinAlignment: {
		type: "string",
		default: "center"
	},
	arrowlinAlignment: {
		type: "string",
		default: "center"
	},
	subHeadFontSize: {
		type: "number"
	},
	headSpace: {
		type: "number",
		default: 5
	},
	separatorwidth: {
		type: "number",
		default: 3
	},
	borderwidth: {
		type: "number",
		default: 0
	},
	iconColor: {
		type: "string",
		default: "#333"
	},
	iconFocus: {
		type: "string",
		default: "#fff"
	},
	iconBgFocus: {
		type: "string",
		default: "#61ce70"
	},
	authorFontsize: {
		type: "number",
		default: 12
	},
	dateColor: {
		type: "string",
		default: "#333"
	},
	dateFontsize: {
		type: "number",
		default: 12
	},
	connectorBgsize: {
		type: "number",
		default: 35
	},
	subHeadSpace: {
		type: "number",
		default: 5
	},
	dateBottomspace: {
		type: "number",
		default: 5
	},
	block_id: {
		type: "string",
		default: "0"
	},
	timelineItem: {
		type: "number",
		default: 5
	},
	tm_client_id: {
		type: "string",
		default: "not_set"
	},
	borderRadius: {
		type: "number",
		default: 2
	},
	bgPadding: {
		type: "number",
		default: 20
	},
	iconSize: {
		type: "number",
		default: 12
	},
	icon: {
		type: "string",
		default: "fab fa fa-calendar-alt"
	},
	t_date: {
		type: "array",
		default: date_arr
	},
	displayPostDate: {
		type: "boolean",
		default: true
	},
	stack: {
		type: "string",
		default: "tablet"
	}
};

/* harmony default export */ __webpack_exports__["a"] = (attributes);

/***/ }),
/* 384 */
/*!******************************************************!*\
  !*** ./src/blocks/timeline/content-timeline/edit.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_times__ = __webpack_require__(/*! lodash/times */ 8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_times___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_times__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dist_blocks_uagb_controls_UAGBIcon__ = __webpack_require__(/*! ../../../../dist/blocks/uagb-controls/UAGBIcon */ 12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker__ = __webpack_require__(/*! @fonticonpicker/react-fonticonpicker */ 13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__inline_styles__ = __webpack_require__(/*! .././inline-styles */ 71);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__classes__ = __webpack_require__(/*! .././classes */ 72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__align_classes__ = __webpack_require__(/*! .././align-classes */ 73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__day_align_classes__ = __webpack_require__(/*! .././day-align-classes */ 74);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * BLOCK: Content Timeline.
 */










var _wp$date = wp.date,
    dateI18n = _wp$date.dateI18n,
    __experimentalGetSettings = _wp$date.__experimentalGetSettings;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var __ = wp.i18n.__;
var decodeEntities = wp.htmlEntities.decodeEntities;

// Import registerBlockType() from wp.blocks

var _wp$blocks = wp.blocks,
    registerBlockType = _wp$blocks.registerBlockType,
    createBlock = _wp$blocks.createBlock;
var _wp$editor = wp.editor,
    BlockControls = _wp$editor.BlockControls,
    ColorPalette = _wp$editor.ColorPalette,
    InspectorControls = _wp$editor.InspectorControls,
    RichText = _wp$editor.RichText,
    BlockAlignmentToolbar = _wp$editor.BlockAlignmentToolbar,
    PanelColorSettings = _wp$editor.PanelColorSettings;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    Placeholder = _wp$components.Placeholder,
    RangeControl = _wp$components.RangeControl,
    Spinner = _wp$components.Spinner,
    TextControl = _wp$components.TextControl,
    ToggleControl = _wp$components.ToggleControl,
    Toolbar = _wp$components.Toolbar,
    TabPanel = _wp$components.TabPanel;

var UAGBcontentTimeline = function (_Component) {
	_inherits(UAGBcontentTimeline, _Component);

	function UAGBcontentTimeline() {
		_classCallCheck(this, UAGBcontentTimeline);

		var _this = _possibleConstructorReturn(this, (UAGBcontentTimeline.__proto__ || Object.getPrototypeOf(UAGBcontentTimeline)).apply(this, arguments));

		_this.splitBlock = _this.splitBlock.bind(_this);

		// Get initial timeline content.
		_this.getTimelinecontent = _this.getTimelinecontent.bind(_this);

		_this.getDatecontent = _this.getDatecontent.bind(_this);

		_this.getTimelineicon = _this.getTimelineicon.bind(_this);

		_this.savedateArray = _this.savedateArray.bind(_this);

		_this.toggleDisplayPostDate = _this.toggleDisplayPostDate.bind(_this);
		return _this;
	}

	_createClass(UAGBcontentTimeline, [{
		key: "splitBlock",
		value: function splitBlock(before, after) {
			var _props = this.props,
			    attributes = _props.attributes,
			    insertBlocksAfter = _props.insertBlocksAfter,
			    setAttributes = _props.setAttributes,
			    onReplace = _props.onReplace;

			for (var _len = arguments.length, blocks = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
				blocks[_key - 2] = arguments[_key];
			}

			if (after) {
				// Append "After" content as a new paragraph block to the end of
				// any other blocks being inserted after the current paragraph.
				blocks.push(createBlock("core/paragraph", { content: after }));
			}

			if (blocks.length && insertBlocksAfter) {
				insertBlocksAfter(blocks);
			}

			var content = attributes.content;

			if (!before) {
				// If before content is omitted, treat as intent to delete block.
				onReplace([]);
			} else if (content !== before) {
				// Only update content if it has in-fact changed. In case that user
				// has created a new paragraph at end of an existing one, the value
				// of before will be strictly equal to the current content.
				setAttributes({ content: before });
			}
		}
		/**
      * Function Name: toggleDisplayPostDate.
      */

	}, {
		key: "toggleDisplayPostDate",
		value: function toggleDisplayPostDate() {
			var displayPostDate = this.props.attributes.displayPostDate;
			var setAttributes = this.props.setAttributes;


			setAttributes({ displayPostDate: !displayPostDate });
		}

		/**
      * [getTimelineicon description]
      * @param  {[type]} value [description]
      * @return {[type]}       [description]
      */

	}, {
		key: "getTimelineicon",
		value: function getTimelineicon(value) {
			this.props.setAttributes({ icon: value });
		}

		/**
     * Loading Timeline content.
     */

	}, {
		key: "getTimelinecontent",
		value: function getTimelinecontent(value) {
			var _props$attributes = this.props.attributes,
			    tm_content = _props$attributes.tm_content,
			    timelineItem = _props$attributes.timelineItem;
			var setAttributes = this.props.setAttributes;

			var item_number = value;
			var data_copy = [].concat(_toConsumableArray(tm_content));
			var data_length = data_copy.length;
			if (item_number < data_length) {
				var diff = data_length - item_number;
				var data_new = data_copy;
				for (var i = 0; i < diff; i++) {
					data_new.pop();
				}
				setAttributes({ tm_content: data_new });
			}if (item_number > data_length) {
				var diff = item_number - data_length;

				for (var i = 0; i < diff; i++) {
					var array_length = data_length + i;
					var title_heading_val = "My Heading " + item_number;
					var title_desc_val = "I am timeline card content. You can change me anytime. Click here to edit this text.";
					data_copy[array_length] = { "time_heading": title_heading_val, "time_desc": title_desc_val };
				}
				setAttributes({ tm_content: data_copy });
			}
			return this.props.attributes.tm_content;
		}
	}, {
		key: "getDatecontent",
		value: function getDatecontent(value) {
			var _props$attributes2 = this.props.attributes,
			    timelineItem = _props$attributes2.timelineItem,
			    t_date = _props$attributes2.t_date;
			var setAttributes = this.props.setAttributes;


			var item_number = value;
			var data_copy = [].concat(_toConsumableArray(t_date));
			var data_length = data_copy.length;

			if (item_number < data_length) {
				var diff = data_length - item_number;
				var data_new = data_copy;

				for (var i = 0; i < diff; i++) {
					data_new.pop();
				}
				setAttributes({ t_date: data_new });
			}

			if (item_number > data_length) {
				var diff = item_number - data_length;

				var today = new Date();
				var dd = today.getDate();
				var mm = today.getMonth() + 1;

				if (dd < 10) {
					dd = "0" + dd;
				}
				if (mm < 10) {
					mm = "0" + mm;
				}

				for (var i = 0; i < diff; i++) {
					var array_length = data_length + i;
					var yyyy = today.getFullYear() - array_length;
					today = mm + "/" + dd + "/" + yyyy;

					data_copy[array_length] = { "title": today };
				}
				setAttributes({ t_date: data_copy });
			}

			return this.props.attributes.t_date;
		}
	}, {
		key: "savedateArray",
		value: function savedateArray(value, index) {
			var _props2 = this.props,
			    attributes = _props2.attributes,
			    setAttributes = _props2.setAttributes;
			var t_date = attributes.t_date;


			var newItems = t_date.map(function (item, thisIndex) {
				if (index === thisIndex) {
					item = _extends({}, item, value);
				}

				return item;
			});

			setAttributes({
				t_date: newItems
			});
		}
	}, {
		key: "render",
		value: function render() {
			var _this2 = this;

			// Setup the attributes.
			var _props3 = this.props,
			    isSelected = _props3.isSelected,
			    className = _props3.className,
			    setAttributes = _props3.setAttributes,
			    insertBlocksAfter = _props3.insertBlocksAfter,
			    mergeBlocks = _props3.mergeBlocks,
			    onReplace = _props3.onReplace,
			    _props3$attributes = _props3.attributes,
			    tm_content = _props3$attributes.tm_content,
			    headingTitle = _props3$attributes.headingTitle,
			    headingDesc = _props3$attributes.headingDesc,
			    headingAlign = _props3$attributes.headingAlign,
			    separatorHeight = _props3$attributes.separatorHeight,
			    headSpace = _props3$attributes.headSpace,
			    separatorSpace = _props3$attributes.separatorSpace,
			    headingColor = _props3$attributes.headingColor,
			    subHeadingColor = _props3$attributes.subHeadingColor,
			    backgroundColor = _props3$attributes.backgroundColor,
			    separatorColor = _props3$attributes.separatorColor,
			    separatorFillColor = _props3$attributes.separatorFillColor,
			    separatorBg = _props3$attributes.separatorBg,
			    separatorBorder = _props3$attributes.separatorBorder,
			    borderFocus = _props3$attributes.borderFocus,
			    headingTag = _props3$attributes.headingTag,
			    headFontSize = _props3$attributes.headFontSize,
			    timelineItem = _props3$attributes.timelineItem,
			    timelinAlignment = _props3$attributes.timelinAlignment,
			    arrowlinAlignment = _props3$attributes.arrowlinAlignment,
			    subHeadFontSize = _props3$attributes.subHeadFontSize,
			    verticalSpace = _props3$attributes.verticalSpace,
			    horizontalSpace = _props3$attributes.horizontalSpace,
			    separatorwidth = _props3$attributes.separatorwidth,
			    borderwidth = _props3$attributes.borderwidth,
			    connectorBgsize = _props3$attributes.connectorBgsize,
			    dateBottomspace = _props3$attributes.dateBottomspace,
			    align = _props3$attributes.align,
			    icon = _props3$attributes.icon,
			    iconColor = _props3$attributes.iconColor,
			    dateColor = _props3$attributes.dateColor,
			    dateFontsize = _props3$attributes.dateFontsize,
			    authorFontsize = _props3$attributes.authorFontsize,
			    iconSize = _props3$attributes.iconSize,
			    borderRadius = _props3$attributes.borderRadius,
			    bgPadding = _props3$attributes.bgPadding,
			    block_id = _props3$attributes.block_id,
			    iconFocus = _props3$attributes.iconFocus,
			    iconBgFocus = _props3$attributes.iconBgFocus,
			    t_date = _props3$attributes.t_date,
			    displayPostDate = _props3$attributes.displayPostDate,
			    stack = _props3$attributes.stack;

			// Parameters for FontIconPicker

			var icon_props = {
				icons: __WEBPACK_IMPORTED_MODULE_2__dist_blocks_uagb_controls_UAGBIcon__["a" /* default */],
				renderUsing: "class",
				theme: "default",
				value: icon,
				onChange: this.getTimelineicon,
				isMulti: false
			};

			var iconColorSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(PanelColorSettings, {
					title: __("Color Settings"),
					initialOpen: true,
					colorSettings: [{
						value: separatorColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ separatorColor: colorValue });
						},
						label: __("Line Color")
					}, {
						value: iconColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ iconColor: colorValue });
						},
						label: __("Icon Color")
					}, {
						value: separatorBg,
						onChange: function onChange(colorValue) {
							return setAttributes({ separatorBg: colorValue });
						},
						label: __("Background Color")
					}, {
						value: separatorBorder,
						onChange: function onChange(colorValue) {
							return setAttributes({ separatorBorder: colorValue });
						},
						label: __("Border Color")
					}]
				})
			);

			var iconFocusSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(PanelColorSettings, {
					title: __("Color Settings"),
					initialOpen: true,
					colorSettings: [{
						value: separatorFillColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ separatorFillColor: colorValue });
						},
						label: __("Line Color")
					}, {
						value: iconFocus,
						onChange: function onChange(colorValue) {
							return setAttributes({ iconFocus: colorValue });
						},
						label: __("Icon Color")
					}, {
						value: iconBgFocus,
						onChange: function onChange(colorValue) {
							return setAttributes({ iconBgFocus: colorValue });
						},
						label: __("Background Color")
					}, {
						value: borderFocus,
						onChange: function onChange(colorValue) {
							return setAttributes({ borderFocus: colorValue });
						},
						label: __("Border Color")
					}]
				})
			);

			var iconControls = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Connector Color Settings"),
						initialOpen: true
					},
					wp.element.createElement(
						TabPanel,
						{ className: "uagb-inspect-tabs uagb-inspect-tabs-col-2",
							activeClass: "active-tab",
							tabs: [{
								name: "normal",
								title: __("Normal"),
								className: "uagb-normal-tab"
							}, {
								name: "focus",
								title: __("Focus"),
								className: "uagb-focus-tab"
							}] },
						function (tabName) {
							var tabout = void 0;
							if ("focus" === tabName.name) {
								tabout = iconFocusSettings;
							} else {
								tabout = iconColorSettings;
							}
							return wp.element.createElement(
								"div",
								null,
								tabout
							);
						}
					)
				)
			);

			var renderDateSettings = function renderDateSettings(index) {
				return wp.element.createElement(
					Fragment,
					{ key: index },
					wp.element.createElement(TextControl, {
						label: __("Date") + " " + (index + 1) + " " + __("Settings"),
						value: t_date[index].title,
						onChange: function onChange(value) {
							_this2.savedateArray({ title: value }, index);
						}
					})
				);
			};

			var renderSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Date Settings"),
						initialOpen: false
					},
					wp.element.createElement(ToggleControl, {
						label: __("Display Post Date"),
						checked: displayPostDate,
						onChange: this.toggleDisplayPostDate
					}),
					displayPostDate && __WEBPACK_IMPORTED_MODULE_1_lodash_times___default()(timelineItem, function (n) {
						return renderDateSettings(n);
					}),
					displayPostDate && timelinAlignment !== "center" && wp.element.createElement(RangeControl, {
						label: __("Date Bottom Spacing"),
						value: dateBottomspace,
						onChange: function onChange(value) {
							return setAttributes({ dateBottomspace: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					}),
					displayPostDate && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(
								"p",
								{ className: "uagb-setting-label" },
								__("Date Color"),
								wp.element.createElement(
									"span",
									{ className: "components-base-control__label" },
									wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: dateColor } })
								)
							),
							wp.element.createElement(ColorPalette, {
								value: dateColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ dateColor: colorValue });
								},
								allowReset: true
							})
						),
						wp.element.createElement(RangeControl, {
							label: __("Date Font Size"),
							value: dateFontsize,
							onChange: function onChange(value) {
								return setAttributes({ dateFontsize: value });
							},
							min: 1,
							max: 50,
							initialPosition: 16,
							beforeIcon: "editor-textcolor",
							allowReset: true
						})
					)
				)
			);

			var content_control = wp.element.createElement(
				InspectorControls,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("General"),
						initialOpen: false
					},
					wp.element.createElement(RangeControl, {
						label: __("Number of Items"),
						value: timelineItem,
						onChange: function onChange(value) {
							setAttributes({ timelineItem: value });
							_this2.getTimelinecontent(value);
							_this2.getDatecontent(value);
						},
						min: 1,
						max: 20,
						allowReset: true
					})
				),
				renderSettings,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Layout"),
						initialOpen: false
					},
					wp.element.createElement(SelectControl, {
						label: __("Orientation"),
						value: timelinAlignment,
						onChange: function onChange(value) {
							return setAttributes({ timelinAlignment: value });
						},
						options: [{ value: "left", label: __("Left") }, { value: "right", label: __("Right") }, { value: "center", label: __("Center") }]
					}),
					wp.element.createElement(SelectControl, {
						label: __("Arrow Alignment"),
						value: arrowlinAlignment,
						onChange: function onChange(value) {
							return setAttributes({ arrowlinAlignment: value });
						},
						options: [{ value: "top", label: __("Top") }, { value: "bottom", label: __("Bottom") }, { value: "center", label: __("Center") }]
					}),
					wp.element.createElement(SelectControl, {
						label: __("Stack on"),
						value: stack,
						options: [{ value: "none", label: __("None") }, { value: "tablet", label: __("Tablet") }, { value: "mobile", label: __("Mobile") }],
						help: __("Note: Choose on what breakpoint the Content Timeline will stack."),
						onChange: function onChange(value) {
							return setAttributes({ stack: value });
						}
					})
				),
				wp.element.createElement(
					PanelBody,
					{
						title: __("Spacing"),
						initialOpen: false
					},
					wp.element.createElement(RangeControl, {
						label: __("Horizontal Space"),
						value: horizontalSpace,
						onChange: function onChange(value) {
							return setAttributes({ horizontalSpace: value });
						},
						min: 1,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Vertical Space"),
						value: verticalSpace,
						onChange: function onChange(value) {
							return setAttributes({ verticalSpace: value });
						},
						min: 1,
						max: 100,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Heading Bottom Spacing"),
						value: headSpace,
						onChange: function onChange(value) {
							return setAttributes({ headSpace: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					})
				),
				wp.element.createElement(
					PanelBody,
					{
						title: __("Timeline Item"),
						initialOpen: false
					},
					wp.element.createElement(SelectControl, {
						label: __("Heading Tag"),
						value: headingTag,
						onChange: function onChange(value) {
							return setAttributes({ headingTag: value });
						},
						options: [{ value: "h1", label: __("H1") }, { value: "h2", label: __("H2") }, { value: "h3", label: __("H3") }, { value: "h4", label: __("H4") }, { value: "h5", label: __("H5") }, { value: "h6", label: __("H6") }]
					}),
					wp.element.createElement(RangeControl, {
						label: __("Rounded Corners"),
						value: borderRadius,
						onChange: function onChange(value) {
							return setAttributes({ borderRadius: value });
						},
						min: 0,
						initialPosition: 10,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Padding"),
						value: bgPadding,
						onChange: function onChange(value) {
							return setAttributes({ bgPadding: value });
						},
						min: 1,
						initialPosition: 10,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Heading Font Size"),
						value: headFontSize,
						onChange: function onChange(value) {
							return setAttributes({ headFontSize: value });
						},
						min: 10,
						max: 50,
						initialPosition: 30,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Content Font Size"),
						value: subHeadFontSize,
						onChange: function onChange(value) {
							return setAttributes({ subHeadFontSize: value });
						},
						min: 10,
						max: 50,
						initialPosition: 16,
						beforeIcon: "editor-textcolor",
						allowReset: true
					})
				),
				wp.element.createElement(
					PanelBody,
					{
						title: __("Connector"),
						initialOpen: false
					},
					wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__fonticonpicker_react_fonticonpicker___default.a, icon_props),
					wp.element.createElement(RangeControl, {
						label: __("Icon Size"),
						value: iconSize,
						onChange: function onChange(value) {
							return setAttributes({ iconSize: value });
						},
						min: 0,
						max: 30,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Icon Background Size"),
						value: connectorBgsize,
						onChange: function onChange(value) {
							return setAttributes({ connectorBgsize: value });
						},
						min: 25,
						max: 90,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Border Width"),
						value: borderwidth,
						onChange: function onChange(value) {
							return setAttributes({ borderwidth: value });
						},
						min: 1,
						max: 10,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Connector Width"),
						value: separatorwidth,
						onChange: function onChange(value) {
							return setAttributes({ separatorwidth: value });
						},
						min: 1,
						max: 10,
						allowReset: true
					}),
					iconControls
				),
				wp.element.createElement(PanelColorSettings, {
					title: __("Color Settings"),
					initialOpen: false,
					colorSettings: [{
						value: headingColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ headingColor: colorValue });
						},
						label: __("Heading Color")
					}, {
						value: subHeadingColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ subHeadingColor: colorValue });
						},
						label: __("Content Color")
					}, {
						value: backgroundColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ backgroundColor: colorValue });
						},
						label: __("Background Color")
					}]
				})
			);

			var my_block_id = "uagb-ctm-" + this.props.clientId;

			return wp.element.createElement(
				Fragment,
				null,
				content_control,
				wp.element.createElement(
					BlockControls,
					null,
					wp.element.createElement(BlockAlignmentToolbar, {
						value: align,
						onChange: function onChange(value) {
							setAttributes({ align: value });
						},
						controls: ["center", "left", "right"]
					})
				),
				wp.element.createElement(
					"div",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-timeline__outer-wrap"),
						id: my_block_id },
					wp.element.createElement(
						"div",
						{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, ["uagb-timeline__content-wrap"].concat(_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_5__classes__["a" /* default */])(this.props.attributes)))) },
						wp.element.createElement(
							"div",
							{ className: "uagb-timeline-wrapper" },
							wp.element.createElement(
								"div",
								{ className: "uagb-timeline__main" },
								this.get_content(),
								wp.element.createElement(
									"div",
									{ className: "uagb-timeline__line" },
									wp.element.createElement("div", { className: "uagb-timeline__line__inner" })
								)
							)
						)
					)
				)
			);
		}
	}, {
		key: "componentDidMount",
		value: function componentDidMount() {
			//Store client id.
			this.props.setAttributes({ block_id: this.props.clientId });

			var id = this.props.clientId;
			window.addEventListener("load", this.timelineContent_back(id));
			window.addEventListener("resize", this.timelineContent_back(id));
			var time = this;
			$(".edit-post-layout__content").scroll(function (event) {
				time.timelineContent_back(id);
			});

			// Pushing Style tag for this block css.
			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-content-timeline-style-" + this.props.clientId);
			document.head.appendChild($style);
		}
	}, {
		key: "componentDidUpdate",
		value: function componentDidUpdate() {
			var id = this.props.clientId;
			window.addEventListener("load", this.timelineContent_back(id));
			window.addEventListener("resize", this.timelineContent_back(id));
			var time = this;
			$(".edit-post-layout__content").scroll(function (event) {
				time.timelineContent_back(id);
			});
		}

		/* Render output at backend */

	}, {
		key: "get_content",
		value: function get_content() {
			var _this3 = this;

			var _props4 = this.props,
			    attributes = _props4.attributes,
			    setAttributes = _props4.setAttributes,
			    mergeBlocks = _props4.mergeBlocks,
			    insertBlocksAfter = _props4.insertBlocksAfter,
			    onReplace = _props4.onReplace;


			var dateFormat = __experimentalGetSettings().formats.date;

			var headingTag = attributes.headingTag,
			    timelinAlignment = attributes.timelinAlignment,
			    displayPostDate = attributes.displayPostDate,
			    icon = attributes.icon,
			    tm_content = attributes.tm_content,
			    t_date = attributes.t_date;

			// Add CSS.

			var element = document.getElementById("uagb-content-timeline-style-" + this.props.clientId);
			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_4__inline_styles__["a" /* default */])(this.props);
			}

			var hasItems = Array.isArray(tm_content) && tm_content.length;
			var hasDate = Array.isArray(t_date) && t_date.length;

			if (!hasItems) {

				return wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(
						Placeholder,
						{
							icon: "admin-post",
							label: __("UAGB Content Timeline")
						},
						!Array.isArray(tm_content) ? wp.element.createElement(Spinner, null) : __("No content found.")
					)
				);
			} else {

				var content_align_class = Object(__WEBPACK_IMPORTED_MODULE_6__align_classes__["a" /* default */])(this.props.attributes, 0); // Get classname for layout alignment
				var day_align_class = Object(__WEBPACK_IMPORTED_MODULE_7__day_align_classes__["a" /* default */])(this.props.attributes, 0); // Get classname for day alignment.
				var data_copy = [].concat(_toConsumableArray(tm_content));
				var display_inner_date = false;

				return wp.element.createElement(
					"div",
					{ className: "uagb-timeline__days" },
					tm_content.map(function (post, index) {
						var second_index = "uagb-" + index;
						if (timelinAlignment == "center") {
							display_inner_date = true;
							content_align_class = Object(__WEBPACK_IMPORTED_MODULE_6__align_classes__["a" /* default */])(_this3.props.attributes, index);
							day_align_class = Object(__WEBPACK_IMPORTED_MODULE_7__day_align_classes__["a" /* default */])(_this3.props.attributes, index);
						}
						var Tag = _this3.props.attributes.headingTag;
						var icon_class = "uagb-timeline__icon-new uagb-timeline__out-view-icon " + icon;
						var post_date = dateI18n(dateFormat, t_date[index].title);
						if (post_date === "Invalid date") {
							post_date = t_date[index].title;
						}
						return wp.element.createElement(
							"article",
							{ className: "uagb-timeline__field uagb-timeline__field-wrap", key: index },
							wp.element.createElement(
								"div",
								{ className: content_align_class },
								wp.element.createElement(
									"div",
									{ className: "uagb-timeline__marker uagb-timeline__out-view-icon" },
									wp.element.createElement("span", { className: icon_class })
								),
								wp.element.createElement(
									"div",
									{ className: day_align_class },
									wp.element.createElement(
										"div",
										{ className: "uagb-timeline__events-new" },
										wp.element.createElement(
											"div",
											{ className: "uagb-timeline__events-inner-new" },
											wp.element.createElement(
												"div",
												{ className: "uagb-timeline__date-hide uagb-timeline__date-inner" },
												displayPostDate && t_date[index].title && wp.element.createElement(
													"div",
													{ className: "uagb-timeline__inner-date-new" },
													post_date
												)
											),
											wp.element.createElement(
												"div",
												{ className: "uagb-content" },
												wp.element.createElement(
													"div",
													{ className: "uagb-timeline__heading-text" },
													wp.element.createElement(RichText, {
														tagName: headingTag,
														value: post.time_heading,
														placeholder: __("Write a Heading"),
														className: "uagb-timeline__heading",
														onChange: function onChange(value) {
															var p = { "time_heading": value, "time_desc": data_copy[index]["time_desc"] };
															data_copy[index] = p;
															setAttributes({ "tm_content": data_copy });
														},
														onMerge: mergeBlocks,
														unstableOnSplit: insertBlocksAfter ? function (before, after) {
															for (var _len2 = arguments.length, blocks = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
																blocks[_key2 - 2] = arguments[_key2];
															}

															setAttributes({ content: before });
															insertBlocksAfter([].concat(blocks, [createBlock("core/paragraph", { content: after })]));
														} : undefined,
														onRemove: function onRemove() {
															return onReplace([]);
														}
													})
												),
												wp.element.createElement(RichText, {
													tagName: "p",
													value: post.time_desc,
													placeholder: __("Write a Description"),
													className: "uagb-timeline-desc-content",
													onChange: function onChange(value) {
														var p = { "time_heading": data_copy[index]["time_heading"], "time_desc": value };
														data_copy[index] = p;
														setAttributes({ "tm_content": data_copy });
													},
													onMerge: mergeBlocks,
													unstableOnSplit: _this3.splitBlock,
													onRemove: function onRemove() {
														return onReplace([]);
													}
												}),
												wp.element.createElement("div", { className: "uagb-timeline__arrow" })
											)
										)
									)
								),
								display_inner_date && wp.element.createElement(
									"div",
									{ className: "uagb-timeline__date-new" },
									displayPostDate && t_date[index].title && wp.element.createElement(
										"div",
										{ className: "uagb-timeline__date-new" },
										post_date
									)
								)
							)
						);
					})
				);
			}
		}

		/*  Js for timeline line and inner line filler*/

	}, {
		key: "timelineContent_back",
		value: function timelineContent_back(id) {
			var timeline = $(".uagb-timeline").parents("#block-" + id);
			var tm_item = timeline.find(".uagb-timeline");
			var line_inner = timeline.find(".uagb-timeline__line__inner");
			var line_outer = timeline.find(".uagb-timeline__line");
			var $icon_class = timeline.find(".uagb-timeline__marker");
			if ($icon_class.length > 0) {
				var $card_last = timeline.find(".uagb-timeline__field:last-child");
				var timeline_start_icon = $icon_class.first().position();
				var timeline_end_icon = $icon_class.last().position();
				line_outer.css("top", timeline_start_icon.top);

				var timeline_card_height = $card_last.height();
				var last_item_top = $card_last.offset().top - tm_item.offset().top;
				var $last_item, parent_top;
				var $document = $(document);

				if (tm_item.hasClass("uagb-timeline__arrow-center")) {

					line_outer.css("bottom", timeline_end_icon.top);

					parent_top = last_item_top - timeline_start_icon.top;
					$last_item = parent_top + timeline_end_icon.top;
				} else if (tm_item.hasClass("uagb-timeline__arrow-top")) {

					var top_height = timeline_card_height - timeline_end_icon.top;
					line_outer.css("bottom", top_height);

					$last_item = last_item_top;
				} else if (tm_item.hasClass("uagb-timeline__arrow-bottom")) {

					var bottom_height = timeline_card_height - timeline_end_icon.top;
					line_outer.css("bottom", bottom_height);

					parent_top = last_item_top - timeline_start_icon.top;
					$last_item = parent_top + timeline_end_icon.top;
				}

				var num = 0;
				var elementEnd = $last_item + 20;

				var viewportHeight = document.documentElement.clientHeight;
				var viewportHeightHalf = viewportHeight / 2;

				var elementPos = tm_item.offset().top;

				var new_elementPos = elementPos + timeline_start_icon.top;

				var photoViewportOffsetTop = new_elementPos - $document.scrollTop();

				if (photoViewportOffsetTop < 0) {
					photoViewportOffsetTop = Math.abs(photoViewportOffsetTop);
				} else {
					photoViewportOffsetTop = -Math.abs(photoViewportOffsetTop);
				}

				if (elementPos < viewportHeightHalf) {
					if (viewportHeightHalf + Math.abs(photoViewportOffsetTop) < elementEnd) {
						line_inner.height(viewportHeightHalf + photoViewportOffsetTop);
					} else {
						if (photoViewportOffsetTop + viewportHeightHalf >= elementEnd) {
							line_inner.height(elementEnd);
						}
					}
				} else {
					if (photoViewportOffsetTop + viewportHeightHalf < elementEnd) {
						if (0 > photoViewportOffsetTop) {
							line_inner.height(viewportHeightHalf - Math.abs(photoViewportOffsetTop));
							++num;
						} else {
							line_inner.height(viewportHeightHalf + photoViewportOffsetTop);
						}
					} else {
						if (photoViewportOffsetTop + viewportHeightHalf >= elementEnd) {
							line_inner.height(elementEnd);
						}
					}
				}

				//For changing icon background color and icon color.
				var timeline_icon_pos, timeline_card_pos;
				var elementPos, elementCardPos;
				var timeline_icon_top, timeline_card_top;
				var timeline_icon = timeline.find(".uagb-timeline__marker"),
				    animate_border = timeline.find(".uagb-timeline__field-wrap");

				for (var i = 0; i < timeline_icon.length; i++) {
					timeline_icon_pos = $(timeline_icon[i]).offset().top;
					timeline_card_pos = $(animate_border[i]).offset().top;
					elementPos = timeline.offset().top;
					elementCardPos = timeline.offset().top;

					timeline_icon_top = timeline_icon_pos - $document.scrollTop();
					timeline_card_top = timeline_card_pos - $document.scrollTop();

					if (timeline_card_top < viewportHeightHalf) {

						animate_border[i].classList.remove("out-view");
						animate_border[i].classList.add("in-view");
					} else {
						// Remove classes if element is below than half of viewport.
						animate_border[i].classList.add("out-view");
						animate_border[i].classList.remove("in-view");
					}

					if (timeline_icon_top < viewportHeightHalf) {

						// Add classes if element is above than half of viewport.
						timeline_icon[i].classList.remove("uagb-timeline__out-view-icon");
						timeline_icon[i].classList.add("uagb-timeline__in-view-icon");
					} else {

						// Remove classes if element is below than half of viewport.
						timeline_icon[i].classList.add("uagb-timeline__out-view-icon");
						timeline_icon[i].classList.remove("uagb-timeline__in-view-icon");
					}
				}
			}
		}
	}]);

	return UAGBcontentTimeline;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (UAGBcontentTimeline);

/***/ }),
/* 385 */
/*!****************************************************!*\
  !*** ./src/blocks/timeline/post-timeline/block.js ***!
  \****************************************************/
/*! exports provided: name */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export name */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__style_scss__ = __webpack_require__(/*! .././style.scss */ 137);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__style_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__editor_scss__ = __webpack_require__(/*! .././editor.scss */ 386);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__editor_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__edit__ = __webpack_require__(/*! ./edit */ 387);
/**
 * BLOCK: Post Timeline Js.
 */





// Components.
var __ = wp.i18n.__;

// Register block controls.

var registerBlockType = wp.blocks.registerBlockType;


var name = "core/latest-posts";

// Register the block.
registerBlockType("uagb/post-timeline", {
	title: uagb_blocks_info.blocks["uagb/post-timeline"]["title"],
	description: uagb_blocks_info.blocks["uagb/post-timeline"]["description"],
	icon: __WEBPACK_IMPORTED_MODULE_0__dist_blocks_uagb_controls_block_icons__["a" /* default */].post_timeline,
	category: uagb_blocks_info.category,
	keywords: [__("post"), __("timeline"), __("uagb")],

	getEditWrapperProps: function getEditWrapperProps(attributes) {
		var align = attributes.align;
	},


	edit: __WEBPACK_IMPORTED_MODULE_3__edit__["a" /* default */],

	// Render via PHP
	save: function save() {
		return null;
	}
});

/***/ }),
/* 386 */
/*!*****************************************!*\
  !*** ./src/blocks/timeline/editor.scss ***!
  \*****************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 387 */
/*!***************************************************!*\
  !*** ./src/blocks/timeline/post-timeline/edit.js ***!
  \***************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_isUndefined__ = __webpack_require__(/*! lodash/isUndefined */ 25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_isUndefined___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_isUndefined__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_pickBy__ = __webpack_require__(/*! lodash/pickBy */ 26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_pickBy___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_pickBy__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dist_blocks_uagb_controls_UAGBIcon__ = __webpack_require__(/*! ../../../../dist/blocks/uagb-controls/UAGBIcon */ 12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__fonticonpicker_react_fonticonpicker__ = __webpack_require__(/*! @fonticonpicker/react-fonticonpicker */ 13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__fonticonpicker_react_fonticonpicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__fonticonpicker_react_fonticonpicker__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__inline_styles__ = __webpack_require__(/*! .././inline-styles */ 71);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__classes__ = __webpack_require__(/*! .././classes */ 72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__align_classes__ = __webpack_require__(/*! .././align-classes */ 73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__day_align_classes__ = __webpack_require__(/*! .././day-align-classes */ 74);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_Title__ = __webpack_require__(/*! ./components/Title */ 388);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_FeaturedImage__ = __webpack_require__(/*! ./components/FeaturedImage */ 389);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__components_Excerpt__ = __webpack_require__(/*! ./components/Excerpt */ 390);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__components_CtaLink__ = __webpack_require__(/*! ./components/CtaLink */ 391);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__components_Author__ = __webpack_require__(/*! ./components/Author */ 392);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__components_PostDate__ = __webpack_require__(/*! ./components/PostDate */ 393);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__components_TmIcon__ = __webpack_require__(/*! ./components/TmIcon */ 394);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * External dependencies
 */






// Import css for timeline.












var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var __ = wp.i18n.__;
var decodeEntities = wp.htmlEntities.decodeEntities;
var withSelect = wp.data.withSelect;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    Placeholder = _wp$components.Placeholder,
    QueryControls = _wp$components.QueryControls,
    RangeControl = _wp$components.RangeControl,
    SelectControl = _wp$components.SelectControl,
    Spinner = _wp$components.Spinner,
    ToggleControl = _wp$components.ToggleControl,
    TabPanel = _wp$components.TabPanel,
    TextControl = _wp$components.TextControl;
var _wp$editor = wp.editor,
    InspectorControls = _wp$editor.InspectorControls,
    ColorPalette = _wp$editor.ColorPalette,
    BlockAlignmentToolbar = _wp$editor.BlockAlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    PanelColorSettings = _wp$editor.PanelColorSettings;

var UAGBTimeline = function (_Component) {
	_inherits(UAGBTimeline, _Component);

	function UAGBTimeline() {
		_classCallCheck(this, UAGBTimeline);

		var _this = _possibleConstructorReturn(this, (UAGBTimeline.__proto__ || Object.getPrototypeOf(UAGBTimeline)).apply(this, arguments));

		_this.getTimelineicon = _this.getTimelineicon.bind(_this);
		return _this;
	}

	_createClass(UAGBTimeline, [{
		key: "getTimelineicon",
		value: function getTimelineicon(value) {
			this.props.setAttributes({ icon: value });
		}
	}, {
		key: "render",
		value: function render() {
			var _this2 = this;

			var _props = this.props,
			    attributes = _props.attributes,
			    categoriesList = _props.categoriesList,
			    setAttributes = _props.setAttributes,
			    latestPosts = _props.latestPosts,
			    focus = _props.focus;
			var className = attributes.className,
			    headingColor = attributes.headingColor,
			    subHeadingColor = attributes.subHeadingColor,
			    backgroundColor = attributes.backgroundColor,
			    separatorColor = attributes.separatorColor,
			    separatorFillColor = attributes.separatorFillColor,
			    separatorBg = attributes.separatorBg,
			    separatorBorder = attributes.separatorBorder,
			    borderFocus = attributes.borderFocus,
			    headingTag = attributes.headingTag,
			    headFontSize = attributes.headFontSize,
			    timelineItem = attributes.timelineItem,
			    postNumber = attributes.postNumber,
			    timelinAlignment = attributes.timelinAlignment,
			    arrowlinAlignment = attributes.arrowlinAlignment,
			    subHeadFontSize = attributes.subHeadFontSize,
			    verticalSpace = attributes.verticalSpace,
			    horizontalSpace = attributes.horizontalSpace,
			    headSpace = attributes.headSpace,
			    separatorwidth = attributes.separatorwidth,
			    borderwidth = attributes.borderwidth,
			    connectorBgsize = attributes.connectorBgsize,
			    authorSpace = attributes.authorSpace,
			    contentSpace = attributes.contentSpace,
			    authorColor = attributes.authorColor,
			    dateBottomspace = attributes.dateBottomspace,
			    displayPostDate = attributes.displayPostDate,
			    displayPostExcerpt = attributes.displayPostExcerpt,
			    displayPostAuthor = attributes.displayPostAuthor,
			    displayPostImage = attributes.displayPostImage,
			    displayPostLink = attributes.displayPostLink,
			    align = attributes.align,
			    postLayout = attributes.postLayout,
			    order = attributes.order,
			    orderBy = attributes.orderBy,
			    categories = attributes.categories,
			    postsToShow = attributes.postsToShow,
			    width = attributes.width,
			    imageSize = attributes.imageSize,
			    readMoreText = attributes.readMoreText,
			    ctaBackground = attributes.ctaBackground,
			    icon = attributes.icon,
			    iconColor = attributes.iconColor,
			    dateColor = attributes.dateColor,
			    ctaColor = attributes.ctaColor,
			    dateFontsize = attributes.dateFontsize,
			    authorFontSize = attributes.authorFontSize,
			    ctaFontSize = attributes.ctaFontSize,
			    iconSize = attributes.iconSize,
			    exerptLength = attributes.exerptLength,
			    borderRadius = attributes.borderRadius,
			    bgPadding = attributes.bgPadding,
			    contentPadding = attributes.contentPadding,
			    block_id = attributes.block_id,
			    iconFocus = attributes.iconFocus,
			    iconBgFocus = attributes.iconBgFocus,
			    stack = attributes.stack,
			    linkTarget = attributes.linkTarget;

			/* Image size options */

			var imageSizeOptions = [{ value: "thumbnail", label: __("Thumbnail") }, { value: "medium", label: __("Medium") }, { value: "medium_large", label: __("Medium Large") }, { value: "large", label: __("Large") }];

			// Parameters for FontIconPicker.
			var icon_props = {
				icons: __WEBPACK_IMPORTED_MODULE_3__dist_blocks_uagb_controls_UAGBIcon__["a" /* default */],
				renderUsing: "class",
				theme: "default",
				value: icon,
				onChange: this.getTimelineicon,
				isMulti: false
			};

			var iconColorSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(PanelColorSettings, {
					title: __("Color Settings"),
					initialOpen: true,
					colorSettings: [{
						value: separatorColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ separatorColor: colorValue });
						},
						label: __("Line Color")
					}, {
						value: iconColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ iconColor: colorValue });
						},
						label: __("Icon Color")
					}, {
						value: separatorBg,
						onChange: function onChange(colorValue) {
							return setAttributes({ separatorBg: colorValue });
						},
						label: __("Background Color")
					}, {
						value: separatorBorder,
						onChange: function onChange(colorValue) {
							return setAttributes({ separatorBorder: colorValue });
						},
						label: __("Border Color")
					}]
				})
			);

			var iconFocusSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(PanelColorSettings, {
					title: __("Color Settings"),
					initialOpen: true,
					colorSettings: [{
						value: separatorFillColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ separatorFillColor: colorValue });
						},
						label: __("Line Color")
					}, {
						value: iconFocus,
						onChange: function onChange(colorValue) {
							return setAttributes({ iconFocus: colorValue });
						},
						label: __("Icon Color")
					}, {
						value: iconBgFocus,
						onChange: function onChange(colorValue) {
							return setAttributes({ iconBgFocus: colorValue });
						},
						label: __("Background Color")
					}, {
						value: borderFocus,
						onChange: function onChange(colorValue) {
							return setAttributes({ borderFocus: colorValue });
						},
						label: __("Border Color")
					}]
				})
			);

			var iconControls = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Connector Color Settings"),
						initialOpen: true
					},
					wp.element.createElement(
						TabPanel,
						{ className: "uagb-inspect-tabs uagb-inspect-tabs-col-2",
							activeClass: "active-tab",
							tabs: [{
								name: "normal",
								title: __("Normal"),
								className: "uagb-normal-tab"
							}, {
								name: "focus",
								title: __("Focus"),
								className: "uagb-focus-tab"
							}] },
						function (tabName) {
							var tabout = void 0;
							if ("focus" === tabName.name) {
								tabout = iconFocusSettings;
							} else {
								tabout = iconColorSettings;
							}
							return wp.element.createElement(
								"div",
								null,
								tabout
							);
						}
					)
				)
			);

			var colorSetting = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelColorSettings,
					{
						title: __("Color Settings"),
						initialOpen: false,
						colorSettings: [{
							value: backgroundColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ backgroundColor: colorValue });
							},
							label: __("Background Color")
						}]
					},
					displayPostDate && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Date Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: dateColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: dateColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ dateColor: colorValue });
							},
							allowReset: true
						})
					),
					wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Heading Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: headingColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: headingColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ headingColor: colorValue });
							},
							allowReset: true
						})
					),
					displayPostAuthor && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Author Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: authorColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: authorColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ authorColor: colorValue });
							},
							allowReset: true
						})
					),
					displayPostExcerpt && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Content Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: subHeadingColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: subHeadingColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ subHeadingColor: colorValue });
							},
							allowReset: true
						})
					),
					displayPostLink && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("CTA Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: ctaColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ ctaColor: colorValue });
							},
							allowReset: true
						}),
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("CTA Background Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaBackground } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: ctaBackground,
							onChange: function onChange(colorValue) {
								return setAttributes({ ctaBackground: colorValue });
							},
							allowReset: true
						})
					)
				)
			);

			var content_control = wp.element.createElement(
				InspectorControls,
				null,
				wp.element.createElement(
					PanelBody,
					{ title: __("Query"),
						initialOpen: true
					},
					wp.element.createElement(QueryControls, _extends({
						numberOfItems: postsToShow
					}, { order: order, orderBy: orderBy }, {
						categoriesList: categoriesList,
						selectedCategoryId: categories,
						onOrderChange: function onOrderChange(value) {
							setAttributes({ order: value });
						},
						onOrderByChange: function onOrderByChange(value) {
							setAttributes({ orderBy: value });
						},
						onCategoryChange: function onCategoryChange(value) {
							setAttributes({ categories: "" !== value ? value : undefined });
						},
						onNumberOfItemsChange: function onNumberOfItemsChange(value) {
							setAttributes({ postsToShow: value });
						}
					}))
				),
				wp.element.createElement(
					PanelBody,
					{
						title: __("Layout"),
						initialOpen: false
					},
					wp.element.createElement(SelectControl, {
						label: __("Orientation"),
						value: timelinAlignment,
						onChange: function onChange(value) {
							return setAttributes({ timelinAlignment: value });
						},
						options: [{ value: "left", label: __("Left") }, { value: "right", label: __("Right") }, { value: "center", label: __("Center") }]
					}),
					wp.element.createElement(SelectControl, {
						label: __("Arrow Alignment"),
						value: arrowlinAlignment,
						onChange: function onChange(value) {
							return setAttributes({ arrowlinAlignment: value });
						},
						options: [{ value: "top", label: __("Top") }, { value: "bottom", label: __("Bottom") }, { value: "center", label: __("Center") }]
					}),
					wp.element.createElement(SelectControl, {
						label: __("Stack on"),
						value: stack,
						options: [{ value: "none", label: __("None") }, { value: "tablet", label: __("Tablet") }, { value: "mobile", label: __("Mobile") }],
						help: __("Note: Choose on what breakpoint the Post Timeline will stack."),
						onChange: function onChange(value) {
							return setAttributes({ stack: value });
						}
					})
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Image"),
						initialOpen: false
					},
					wp.element.createElement(ToggleControl, {
						label: __("Display Featured Image"),
						checked: displayPostImage,
						onChange: function onChange(value) {
							return setAttributes({ displayPostImage: !displayPostImage });
						}
					}),
					displayPostImage && wp.element.createElement(SelectControl, {
						label: __("Featured Image Style"),
						options: imageSizeOptions,
						value: imageSize,
						onChange: function onChange(value) {
							return _this2.props.setAttributes({ imageSize: value });
						}
					})
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Content"),
						initialOpen: false
					},
					wp.element.createElement(ToggleControl, {
						label: __("Display Post Author"),
						checked: displayPostAuthor,
						onChange: function onChange(value) {
							return setAttributes({ displayPostAuthor: !displayPostAuthor });
						}
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Display Post Date"),
						checked: displayPostDate,
						onChange: function onChange(value) {
							return setAttributes({ displayPostDate: !displayPostDate });
						}
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Display Post Excerpt"),
						checked: displayPostExcerpt,
						onChange: function onChange(value) {
							return setAttributes({ displayPostExcerpt: !displayPostExcerpt });
						}
					}),
					displayPostExcerpt && wp.element.createElement(RangeControl, {
						label: __("Excerpt Length"),
						value: exerptLength,
						onChange: function onChange(value) {
							return setAttributes({ exerptLength: value });
						},
						min: 1,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Display Continue Reading Link"),
						checked: displayPostLink,
						onChange: function onChange(value) {
							return setAttributes({ displayPostLink: !displayPostLink });
						}
					}),
					displayPostLink && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(TextControl, {
							label: __("CTA Text"),
							value: readMoreText,
							onChange: function onChange(value) {
								return setAttributes({ readMoreText: value });
							}
						})
					),
					wp.element.createElement(ToggleControl, {
						label: __("Open links in New Tab"),
						checked: linkTarget,
						onChange: function onChange(value) {
							return setAttributes({ linkTarget: !linkTarget });
						}
					})
				),
				wp.element.createElement(
					PanelBody,
					{
						title: __("Timeline Item"),
						initialOpen: false
					},
					wp.element.createElement(SelectControl, {
						label: __("Heading Tag"),
						value: headingTag,
						onChange: function onChange(value) {
							return setAttributes({ headingTag: value });
						},
						options: [{ value: "h1", label: __("H1") }, { value: "h2", label: __("H2") }, { value: "h3", label: __("H3") }, { value: "h4", label: __("H4") }, { value: "h5", label: __("H5") }, { value: "h6", label: __("H6") }]
					}),
					wp.element.createElement(RangeControl, {
						label: __("Heading Font Size"),
						value: headFontSize,
						onChange: function onChange(value) {
							return setAttributes({ headFontSize: value });
						},
						min: 10,
						max: 50,
						initialPosition: 30,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Content Font Size"),
						value: subHeadFontSize,
						onChange: function onChange(value) {
							return setAttributes({ subHeadFontSize: value });
						},
						min: 10,
						max: 50,
						initialPosition: 16,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					displayPostDate && wp.element.createElement(RangeControl, {
						label: __("Date Font Size"),
						value: dateFontsize,
						onChange: function onChange(value) {
							return setAttributes({ dateFontsize: value });
						},
						min: 1,
						max: 50,
						initialPosition: 16,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					displayPostAuthor && wp.element.createElement(RangeControl, {
						label: __("Author Font Size"),
						value: authorFontSize,
						onChange: function onChange(value) {
							return setAttributes({ authorFontSize: value });
						},
						min: 10,
						max: 50,
						initialPosition: 30,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					displayPostLink && wp.element.createElement(RangeControl, {
						label: __("CTA Font Size"),
						value: ctaFontSize,
						onChange: function onChange(value) {
							return setAttributes({ ctaFontSize: value });
						},
						min: 10,
						max: 50,
						initialPosition: 30,
						beforeIcon: "editor-textcolor",
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Rounded Corners"),
						value: borderRadius,
						onChange: function onChange(value) {
							return setAttributes({ borderRadius: value });
						},
						min: 0,
						initialPosition: 10,
						max: 50,
						allowReset: true
					})
				),
				wp.element.createElement(
					PanelBody,
					{
						title: __("Connector"),
						initialOpen: false
					},
					wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__fonticonpicker_react_fonticonpicker___default.a, icon_props),
					wp.element.createElement(RangeControl, {
						label: __("Icon Size"),
						value: iconSize,
						onChange: function onChange(value) {
							return setAttributes({ iconSize: value });
						},
						min: 0,
						max: 30,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Icon Background Size"),
						value: connectorBgsize,
						onChange: function onChange(value) {
							return setAttributes({ connectorBgsize: value });
						},
						min: 25,
						max: 90,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Border Width"),
						value: borderwidth,
						onChange: function onChange(value) {
							return setAttributes({ borderwidth: value });
						},
						min: 1,
						max: 10,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Connector Width"),
						value: separatorwidth,
						onChange: function onChange(value) {
							return setAttributes({ separatorwidth: value });
						},
						min: 1,
						max: 10,
						allowReset: true
					}),
					iconControls
				),
				colorSetting,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Spacing"),
						initialOpen: false
					},
					wp.element.createElement(RangeControl, {
						label: __("Block Padding"),
						value: bgPadding,
						onChange: function onChange(value) {
							return setAttributes({ bgPadding: value });
						},
						min: 0,
						initialPosition: 10,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Content Padding"),
						value: contentPadding,
						onChange: function onChange(value) {
							return setAttributes({ contentPadding: value });
						},
						min: 0,
						initialPosition: 10,
						max: 50,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Horizontal Space"),
						value: horizontalSpace,
						onChange: function onChange(value) {
							return setAttributes({ horizontalSpace: value });
						},
						min: 0,
						max: 50,
						initialPosition: 10,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Vertical Space"),
						value: verticalSpace,
						onChange: function onChange(value) {
							return setAttributes({ verticalSpace: value });
						},
						min: 0,
						max: 100,
						initialPosition: 10,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Heading Bottom Spacing"),
						value: headSpace,
						onChange: function onChange(value) {
							return setAttributes({ headSpace: value });
						},
						min: 0,
						max: 50,
						initialPosition: 10,
						allowReset: true
					}),
					displayPostAuthor && wp.element.createElement(RangeControl, {
						label: __("Author Bottom Spacing"),
						value: authorSpace,
						onChange: function onChange(value) {
							return setAttributes({ authorSpace: value });
						},
						min: 0,
						max: 50,
						initialPosition: 10,
						allowReset: true
					}),
					displayPostExcerpt && displayPostLink && wp.element.createElement(RangeControl, {
						label: __("Content Bottom Spacing"),
						value: contentSpace,
						onChange: function onChange(value) {
							return setAttributes({ contentSpace: value });
						},
						min: 0,
						max: 50,
						initialPosition: 10,
						allowReset: true
					}),
					displayPostDate && timelinAlignment !== "center" && wp.element.createElement(RangeControl, {
						label: __("Date Bottom Spacing"),
						value: dateBottomspace,
						onChange: function onChange(value) {
							return setAttributes({ dateBottomspace: value });
						},
						min: 0,
						max: 50,
						initialPosition: 10,
						allowReset: true
					})
				)
			);

			var my_block_id = "uagb-ctm-" + this.props.clientId;
			var cta_enable = "";

			if (displayPostLink) {
				cta_enable = "uagb_timeline__cta-enable";
			}

			return wp.element.createElement(
				Fragment,
				null,
				content_control,
				wp.element.createElement(
					BlockControls,
					null,
					wp.element.createElement(BlockAlignmentToolbar, {
						value: align,
						onChange: function onChange(value) {
							setAttributes({ align: value });
						},
						controls: ["center", "left", "right"]
					})
				),
				wp.element.createElement(
					"div",
					{ className: __WEBPACK_IMPORTED_MODULE_2_classnames___default()(className, "uagb-timeline__outer-wrap"),
						id: my_block_id },
					wp.element.createElement(
						"div",
						{ className: __WEBPACK_IMPORTED_MODULE_2_classnames___default.a.apply(undefined, ["uagb-timeline__content-wrap", cta_enable].concat(_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_6__classes__["a" /* default */])(this.props.attributes)))) },
						wp.element.createElement(
							"div",
							{ className: "uagb-timeline-wrapper" },
							wp.element.createElement(
								"div",
								{ className: "uagb-timeline__main" },
								this.get_content(),
								wp.element.createElement(
									"div",
									{ className: "uagb-timeline__line" },
									wp.element.createElement("div", { className: "uagb-timeline__line__inner" })
								)
							)
						)
					)
				)
			);
		}
	}, {
		key: "componentDidMount",
		value: function componentDidMount() {
			//Store lient id. 
			this.props.setAttributes({ block_id: this.props.clientId });

			var id = this.props.clientId;
			window.addEventListener("load", this.timelineContent_back(id));
			window.addEventListener("resize", this.timelineContent_back(id));
			var time = this;
			$(".edit-post-layout__content").scroll(function (event) {
				time.timelineContent_back(id);
			});

			// Pushing Style tag for this block css.
			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-timeline-style-" + this.props.clientId);
			document.head.appendChild($style);
		}
	}, {
		key: "componentDidUpdate",
		value: function componentDidUpdate() {
			var id = this.props.clientId;
			window.addEventListener("load", this.timelineContent_back(id));
			window.addEventListener("resize", this.timelineContent_back(id));
			var time = this;
			$(".edit-post-layout__content").scroll(function (event) {
				time.timelineContent_back(id);
			});
		}

		/*  Js for timeline line and inner line filler*/

	}, {
		key: "timelineContent_back",
		value: function timelineContent_back(id) {
			var timeline = $(".uagb-timeline").parents("#block-" + id);
			var tm_item = timeline.find(".uagb-timeline");
			var line_inner = timeline.find(".uagb-timeline__line__inner");
			var line_outer = timeline.find(".uagb-timeline__line");
			var $icon_class = timeline.find(".uagb-timeline__marker");
			if ($icon_class.length > 0) {
				var $card_last = timeline.find(".uagb-timeline__field:last-child");
				var timeline_start_icon = $icon_class.first().position();
				var timeline_end_icon = $icon_class.last().position();
				line_outer.css("top", timeline_start_icon.top);

				var timeline_card_height = $card_last.height();
				var last_item_top = $card_last.offset().top - tm_item.offset().top;
				var $last_item, parent_top;
				var $document = $(document);

				if (tm_item.hasClass("uagb-timeline__arrow-center")) {

					line_outer.css("bottom", timeline_end_icon.top);

					parent_top = last_item_top - timeline_start_icon.top;
					$last_item = parent_top + timeline_end_icon.top;
				} else if (tm_item.hasClass("uagb-timeline__arrow-top")) {

					var top_height = timeline_card_height - timeline_end_icon.top;
					line_outer.css("bottom", top_height);

					$last_item = last_item_top;
				} else if (tm_item.hasClass("uagb-timeline__arrow-bottom")) {

					var bottom_height = timeline_card_height - timeline_end_icon.top;
					line_outer.css("bottom", bottom_height);

					parent_top = last_item_top - timeline_start_icon.top;
					$last_item = parent_top + timeline_end_icon.top;
				}

				var num = 0;
				var elementEnd = $last_item + 20;

				var viewportHeight = document.documentElement.clientHeight;
				var viewportHeightHalf = viewportHeight / 2;

				var elementPos = tm_item.offset().top;

				var new_elementPos = elementPos + timeline_start_icon.top;

				var photoViewportOffsetTop = new_elementPos - $document.scrollTop();

				if (photoViewportOffsetTop < 0) {
					photoViewportOffsetTop = Math.abs(photoViewportOffsetTop);
				} else {
					photoViewportOffsetTop = -Math.abs(photoViewportOffsetTop);
				}

				if (elementPos < viewportHeightHalf) {
					if (viewportHeightHalf + Math.abs(photoViewportOffsetTop) < elementEnd) {
						line_inner.height(viewportHeightHalf + photoViewportOffsetTop);
					} else {
						if (photoViewportOffsetTop + viewportHeightHalf >= elementEnd) {
							line_inner.height(elementEnd);
						}
					}
				} else {
					if (photoViewportOffsetTop + viewportHeightHalf < elementEnd) {
						if (0 > photoViewportOffsetTop) {
							line_inner.height(viewportHeightHalf - Math.abs(photoViewportOffsetTop));
							++num;
						} else {
							line_inner.height(viewportHeightHalf + photoViewportOffsetTop);
						}
					} else {
						if (photoViewportOffsetTop + viewportHeightHalf >= elementEnd) {
							line_inner.height(elementEnd);
						}
					}
				}

				//For changing icon background color and icon color.
				var timeline_icon_pos, timeline_card_pos;
				var elementPos, elementCardPos;
				var timeline_icon_top, timeline_card_top;
				var timeline_icon = timeline.find(".uagb-timeline__marker"),
				    animate_border = timeline.find(".uagb-timeline__field-wrap");

				for (var i = 0; i < timeline_icon.length; i++) {
					timeline_icon_pos = $(timeline_icon[i]).offset().top;
					timeline_card_pos = $(animate_border[i]).offset().top;
					elementPos = timeline.offset().top;
					elementCardPos = timeline.offset().top;

					timeline_icon_top = timeline_icon_pos - $document.scrollTop();
					timeline_card_top = timeline_card_pos - $document.scrollTop();

					if (timeline_card_top < viewportHeightHalf) {

						animate_border[i].classList.remove("out-view");
						animate_border[i].classList.add("in-view");
					} else {
						// Remove classes if element is below than half of viewport.
						animate_border[i].classList.add("out-view");
						animate_border[i].classList.remove("in-view");
					}

					if (timeline_icon_top < viewportHeightHalf) {

						// Add classes if element is above than half of viewport.
						timeline_icon[i].classList.remove("uagb-timeline__out-view-icon");
						timeline_icon[i].classList.add("uagb-timeline__in-view-icon");
					} else {

						// Remove classes if element is below than half of viewport.
						timeline_icon[i].classList.add("uagb-timeline__out-view-icon");
						timeline_icon[i].classList.remove("uagb-timeline__in-view-icon");
					}
				}
			}
		}

		/* Render output at backend */

	}, {
		key: "get_content",
		value: function get_content() {
			var _this3 = this;

			var _props2 = this.props,
			    attributes = _props2.attributes,
			    setAttributes = _props2.setAttributes,
			    latestPosts = _props2.latestPosts,
			    mergeBlocks = _props2.mergeBlocks,
			    insertBlocksAfter = _props2.insertBlocksAfter,
			    onReplace = _props2.onReplace;
			var timelinAlignment = attributes.timelinAlignment,
			    arrowlinAlignment = attributes.arrowlinAlignment,
			    displayPostDate = attributes.displayPostDate,
			    postsToShow = attributes.postsToShow,
			    contentPadding = attributes.contentPadding,
			    align = attributes.align;

			// Add CSS.

			var element = document.getElementById("uagb-timeline-style-" + this.props.clientId);
			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_5__inline_styles__["a" /* default */])(this.props);
			}

			var hasPosts = Array.isArray(latestPosts) && latestPosts.length;

			if (!hasPosts) {
				return wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(
						Placeholder,
						{
							icon: "admin-post",
							label: __("UAGB timeline")
						},
						!Array.isArray(latestPosts) ? wp.element.createElement(Spinner, null) : __("No posts found.")
					)
				);
			} else {
				// Removing posts from display should be instant.
				var displayPosts = latestPosts.length > postsToShow ? latestPosts.slice(0, postsToShow) : latestPosts;

				var content_align_class = Object(__WEBPACK_IMPORTED_MODULE_7__align_classes__["a" /* default */])(this.props.attributes, 0); // Get classname for layout alignment
				var day_align_class = Object(__WEBPACK_IMPORTED_MODULE_8__day_align_classes__["a" /* default */])(this.props.attributes, 0); // Get classname for day alignment.
				var data_copy = [].concat(_toConsumableArray(latestPosts));
				var display_inner_date = false;

				return wp.element.createElement(
					"div",
					{ className: "uagb-timeline__days" },
					displayPosts.map(function (post, index) {

						if (timelinAlignment == "center") {
							display_inner_date = true;
							content_align_class = Object(__WEBPACK_IMPORTED_MODULE_7__align_classes__["a" /* default */])(_this3.props.attributes, index);
							day_align_class = Object(__WEBPACK_IMPORTED_MODULE_8__day_align_classes__["a" /* default */])(_this3.props.attributes, index);
						}

						return wp.element.createElement(
							"article",
							{ className: "uagb-timeline__field uagb-timeline__field-wrap", key: index },
							wp.element.createElement(
								"div",
								{ className: content_align_class },
								wp.element.createElement(__WEBPACK_IMPORTED_MODULE_15__components_TmIcon__["a" /* default */], { attributes: attributes }),
								wp.element.createElement(
									"div",
									{ className: day_align_class },
									wp.element.createElement(
										"div",
										{ className: "uagb-timeline__events-new" },
										wp.element.createElement(
											"div",
											{ className: "uagb-timeline__events-inner-new" },
											wp.element.createElement(
												"div",
												{ className: "uagb-timeline__date-hide uagb-timeline__date-inner" },
												wp.element.createElement(__WEBPACK_IMPORTED_MODULE_14__components_PostDate__["a" /* default */], { post: post, attributes: attributes, dateClass: "uagb-timeline__inner-date-new" })
											),
											wp.element.createElement(__WEBPACK_IMPORTED_MODULE_10__components_FeaturedImage__["a" /* default */], { post: post, attributes: attributes }),
											wp.element.createElement(
												"div",
												{ className: "uagb-content", style: { padding: contentPadding + "px" } },
												wp.element.createElement(__WEBPACK_IMPORTED_MODULE_9__components_Title__["a" /* default */], { post: post, attributes: attributes }),
												wp.element.createElement(__WEBPACK_IMPORTED_MODULE_13__components_Author__["a" /* default */], { post: post, attributes: attributes }),
												wp.element.createElement(__WEBPACK_IMPORTED_MODULE_11__components_Excerpt__["a" /* default */], { post: post, attributes: attributes }),
												wp.element.createElement(__WEBPACK_IMPORTED_MODULE_12__components_CtaLink__["a" /* default */], { post: post, attributes: attributes }),
												wp.element.createElement("div", { className: "uagb-timeline__arrow" })
											)
										)
									)
								),
								display_inner_date && wp.element.createElement(
									"div",
									{ className: "uagb-timeline__date-new" },
									wp.element.createElement(__WEBPACK_IMPORTED_MODULE_14__components_PostDate__["a" /* default */], { post: post, attributes: attributes, dateClass: "uagb-timeline__date-new" })
								)
							)
						);
					})
				);
			}
		}
	}]);

	return UAGBTimeline;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (withSelect(function (select, props) {
	var _props$attributes = props.attributes,
	    postsToShow = _props$attributes.postsToShow,
	    order = _props$attributes.order,
	    orderBy = _props$attributes.orderBy,
	    categories = _props$attributes.categories;

	var _select = select("core"),
	    getEntityRecords = _select.getEntityRecords;

	var latestPostsQuery = __WEBPACK_IMPORTED_MODULE_1_lodash_pickBy___default()({
		categories: categories,
		order: order,
		orderby: orderBy,
		per_page: postsToShow,
		ignore_sticky_posts: 1
	}, function (value) {
		return !__WEBPACK_IMPORTED_MODULE_0_lodash_isUndefined___default()(value);
	});
	var categoriesListQuery = {
		per_page: 100
	};
	return {
		latestPosts: getEntityRecords("postType", "post", latestPostsQuery),
		categoriesList: getEntityRecords("taxonomy", "category", categoriesListQuery)
	};
})(UAGBTimeline));

/***/ }),
/* 388 */
/*!***************************************************************!*\
  !*** ./src/blocks/timeline/post-timeline/components/Title.js ***!
  \***************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var decodeEntities = wp.htmlEntities.decodeEntities;
var __ = wp.i18n.__;

var Title = function (_React$Component) {
	_inherits(Title, _React$Component);

	function Title() {
		_classCallCheck(this, Title);

		return _possibleConstructorReturn(this, (Title.__proto__ || Object.getPrototypeOf(Title)).apply(this, arguments));
	}

	_createClass(Title, [{
		key: "render",
		value: function render() {

			var Tag = this.props.attributes.headingTag;

			var _props = this.props,
			    post = _props.post,
			    attributes = _props.attributes;


			var target = "_self";
			if (attributes.linkTarget) {
				target = "_blank";
			}
			return wp.element.createElement(
				"div",
				{ className: "uagb-timeline__heading-text" },
				wp.element.createElement(
					Tag,
					{ className: "uagb-timeline__heading" },
					wp.element.createElement(
						"a",
						{ href: post.link, target: target, rel: "noopener noreferrer" },
						decodeEntities(post.title.rendered.trim()) || __("(Untitled)")
					)
				)
			);
		}
	}]);

	return Title;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Title);

/***/ }),
/* 389 */
/*!***********************************************************************!*\
  !*** ./src/blocks/timeline/post-timeline/components/FeaturedImage.js ***!
  \***********************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var decodeEntities = wp.htmlEntities.decodeEntities;

var FeaturedImage = function (_React$Component) {
	_inherits(FeaturedImage, _React$Component);

	function FeaturedImage() {
		_classCallCheck(this, FeaturedImage);

		return _possibleConstructorReturn(this, (FeaturedImage.__proto__ || Object.getPrototypeOf(FeaturedImage)).apply(this, arguments));
	}

	_createClass(FeaturedImage, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    post = _props.post,
			    attributes = _props.attributes;


			if (attributes.displayPostImage && undefined !== post.featured_image_src && attributes.imageSize && post.featured_image_src[attributes.imageSize]) {
				var src = post.featured_image_src[attributes.imageSize];
				var target = "_self";
				if (attributes.linkTarget) {
					target = "_blank";
				}
				return wp.element.createElement(
					"div",
					{ className: "uagb-timeline__image" },
					wp.element.createElement(
						"a",
						{ href: post.link, target: target, rel: "noopener noreferrer", style: {
								textAlign: attributes.align
							} },
						wp.element.createElement("img", {
							src: src[0],
							alt: decodeEntities(post.title.rendered.trim()) || __("(Untitled)")
						})
					)
				);
			} else {

				return null;
			}
		}
	}]);

	return FeaturedImage;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (FeaturedImage);

/***/ }),
/* 390 */
/*!*****************************************************************!*\
  !*** ./src/blocks/timeline/post-timeline/components/Excerpt.js ***!
  \*****************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Excerpt = function (_React$Component) {
	_inherits(Excerpt, _React$Component);

	function Excerpt() {
		_classCallCheck(this, Excerpt);

		return _possibleConstructorReturn(this, (Excerpt.__proto__ || Object.getPrototypeOf(Excerpt)).apply(this, arguments));
	}

	_createClass(Excerpt, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    post = _props.post,
			    attributes = _props.attributes;


			if (attributes.displayPostExcerpt && undefined !== post.excerpt) {

				if (attributes.displayPostExcerpt && post.excerpt) {
					var trimmed_excerpt = post.excerpt.split(/\s+/).slice(0, attributes.exerptLength).join(" ");
				}

				var margin_var = "";
				if (attributes.displayPostLink) {
					margin_var = attributes.contentSpace + "px";
				}
				return wp.element.createElement("div", { className: "uagb-timeline-desc-content", dangerouslySetInnerHTML: { __html: trimmed_excerpt }, style: {
						marginBottom: margin_var
					} });
			} else {
				return null;
			}
		}
	}]);

	return Excerpt;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Excerpt);

/***/ }),
/* 391 */
/*!*****************************************************************!*\
  !*** ./src/blocks/timeline/post-timeline/components/CtaLink.js ***!
  \*****************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CtaLink = function (_React$Component) {
	_inherits(CtaLink, _React$Component);

	function CtaLink() {
		_classCallCheck(this, CtaLink);

		return _possibleConstructorReturn(this, (CtaLink.__proto__ || Object.getPrototypeOf(CtaLink)).apply(this, arguments));
	}

	_createClass(CtaLink, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    post = _props.post,
			    attributes = _props.attributes;

			var target = "_self";
			if (attributes.linkTarget) {
				target = "_blank";
			}

			if (attributes.displayPostLink) {

				return wp.element.createElement(
					"div",
					{
						className: "uagb-timeline__link_parent",
						style: {
							textAlign: attributes.align
						}
					},
					wp.element.createElement(
						"a",
						{ className: "uagb-timeline__link", href: post.link, target: target, rel: "noopener noreferrer",
							style: {
								color: attributes.ctaColor,
								fontSize: attributes.ctaFontSize + "px",
								background: attributes.ctaBackground
							}
						},
						attributes.readMoreText
					)
				);
			} else {
				return null;
			}
		}
	}]);

	return CtaLink;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (CtaLink);

/***/ }),
/* 392 */
/*!****************************************************************!*\
  !*** ./src/blocks/timeline/post-timeline/components/Author.js ***!
  \****************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Fragment = wp.element.Fragment;

var Author = function (_React$Component) {
	_inherits(Author, _React$Component);

	function Author() {
		_classCallCheck(this, Author);

		return _possibleConstructorReturn(this, (Author.__proto__ || Object.getPrototypeOf(Author)).apply(this, arguments));
	}

	_createClass(Author, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    post = _props.post,
			    attributes = _props.attributes;


			var target = "_self";
			if (attributes.linkTarget) {
				target = "_blank";
			}
			return wp.element.createElement(
				Fragment,
				null,
				attributes.displayPostAuthor && undefined !== post.author_info && wp.element.createElement(
					"div",
					{ className: "uagb-timeline__author", style: {
							textAlign: attributes.align,
							marginBottom: attributes.authorSpace + "px"
						} },
					wp.element.createElement("span", { className: "dashicons-admin-users dashicons", style: {
							color: attributes.authorColor,
							fontSize: attributes.authorFontSize + "px"
						} }),
					wp.element.createElement(
						"a",
						{ className: "uagb-timeline__author-link", target: target, href: post.author_info.author_link, rel: "noopener noreferrer",
							style: {
								color: attributes.authorColor,
								fontSize: attributes.authorFontSize + "px"
							}
						},
						post.author_info.display_name
					)
				)
			);
		}
	}]);

	return Author;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (Author);

/***/ }),
/* 393 */
/*!******************************************************************!*\
  !*** ./src/blocks/timeline/post-timeline/components/PostDate.js ***!
  \******************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$date = wp.date,
    dateI18n = _wp$date.dateI18n,
    format = _wp$date.format,
    __experimentalGetSettings = _wp$date.__experimentalGetSettings;
var Fragment = wp.element.Fragment;

var PostDate = function (_React$Component) {
	_inherits(PostDate, _React$Component);

	function PostDate() {
		_classCallCheck(this, PostDate);

		return _possibleConstructorReturn(this, (PostDate.__proto__ || Object.getPrototypeOf(PostDate)).apply(this, arguments));
	}

	_createClass(PostDate, [{
		key: "render",
		value: function render() {
			var _props = this.props,
			    post = _props.post,
			    attributes = _props.attributes,
			    dateClass = _props.dateClass;


			var dateFormat = __experimentalGetSettings().formats.date;

			return wp.element.createElement(
				Fragment,
				null,
				attributes.displayPostDate && post.date_gmt && wp.element.createElement(
					"time",
					{ dateTime: format("c", post.date_gmt), className: dateClass, style: {
							color: attributes.dateColor
						} },
					dateI18n(dateFormat, post.date_gmt)
				)
			);
		}
	}]);

	return PostDate;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (PostDate);

/***/ }),
/* 394 */
/*!****************************************************************!*\
  !*** ./src/blocks/timeline/post-timeline/components/TmIcon.js ***!
  \****************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TmIcon = function (_React$Component) {
	_inherits(TmIcon, _React$Component);

	function TmIcon() {
		_classCallCheck(this, TmIcon);

		return _possibleConstructorReturn(this, (TmIcon.__proto__ || Object.getPrototypeOf(TmIcon)).apply(this, arguments));
	}

	_createClass(TmIcon, [{
		key: "render",
		value: function render() {
			var attributes = this.props.attributes;

			var icon_class = "uagb-timeline__icon-new uagb-timeline__out-view-icon " + attributes.icon;

			return wp.element.createElement(
				"div",
				{ className: "uagb-timeline__marker uagb-timeline__out-view-icon" },
				wp.element.createElement("span", { className: icon_class })
			);
		}
	}]);

	return TmIcon;
}(React.Component);

/* harmony default export */ __webpack_exports__["a"] = (TmIcon);

/***/ }),
/* 395 */
/*!********************************************!*\
  !*** ./src/blocks/call-to-action/block.js ***!
  \********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Title__ = __webpack_require__(/*! ./components/Title */ 138);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Description__ = __webpack_require__(/*! ./components/Description */ 139);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__classes__ = __webpack_require__(/*! ./classes */ 140);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_CallToAction__ = __webpack_require__(/*! ./components/CallToAction */ 141);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__inline_styles__ = __webpack_require__(/*! ./inline-styles */ 142);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__edit__ = __webpack_require__(/*! ./edit */ 396);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__attributes__ = __webpack_require__(/*! ./attributes */ 397);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 398);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9__editor_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__style_scss__ = __webpack_require__(/*! ./style.scss */ 399);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10__style_scss__);
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * BLOCK: Call To Action.
 */

// Import block dependencies and components.



// Import icon.









var __ = wp.i18n.__;

// Import registerBlockType() from wp.blocks

var registerBlockType = wp.blocks.registerBlockType;
var RichText = wp.editor.RichText;

// Extend component

var Fragment = wp.element.Fragment;

/**
 * Register: as Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("uagb/call-to-action", {
	title: uagb_blocks_info.blocks["uagb/call-to-action"]["title"],
	description: uagb_blocks_info.blocks["uagb/call-to-action"]["description"],
	icon: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__["a" /* default */].call_to_action,
	keywords: [__("cta"), __("call to action"), __("uagb")],
	category: uagb_blocks_info.category,
	attributes: __WEBPACK_IMPORTED_MODULE_8__attributes__["a" /* default */],
	edit: __WEBPACK_IMPORTED_MODULE_7__edit__["a" /* default */],
	save: function save(props) {
		var _props$attributes = props.attributes,
		    ctaPosition = _props$attributes.ctaPosition,
		    block_id = _props$attributes.block_id,
		    ctaType = _props$attributes.ctaType,
		    ctaLink = _props$attributes.ctaLink,
		    ctaTarget = _props$attributes.ctaTarget,
		    className = _props$attributes.className,
		    ctaTitle = _props$attributes.ctaTitle,
		    description = _props$attributes.description;


		var my_block_id = "uagb-cta-block-" + block_id;

		var is_cta = wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_CallToAction__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set" });

		// Get description and seperator components.
		var desc = wp.element.createElement(
			Fragment,
			null,
			"" !== description && wp.element.createElement(
				"div",
				{ className: "uagb-cta-text-wrap" },
				wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_Description__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set" })
			)
		);

		// Get Title components.
		var title_text = wp.element.createElement(
			Fragment,
			null,
			"" !== ctaTitle && wp.element.createElement(
				"div",
				{ className: "uagb-cta__title-wrap" },
				wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_Title__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set" })
			)
		);

		var output = wp.element.createElement(
			Fragment,
			null,
			wp.element.createElement(
				"div",
				{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, ["uagb-cta__content-wrap"].concat(_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_4__classes__["a" /* default */])(props.attributes)))) },
				wp.element.createElement(
					"div",
					{ className: "uagb-cta__left-right-wrap" },
					ctaPosition == "left" && is_cta,
					wp.element.createElement(
						"div",
						{ className: "uagb-cta__content" },
						ctaPosition == "above-title" && wp.element.createElement(
							Fragment,
							null,
							is_cta,
							title_text,
							desc
						),
						ctaPosition == "below-title" && wp.element.createElement(
							Fragment,
							null,
							title_text,
							desc,
							is_cta
						),
						(ctaPosition == "left" || ctaPosition == "right") && wp.element.createElement(
							Fragment,
							null,
							title_text,
							desc
						)
					),
					ctaPosition == "right" && is_cta
				)
			)
		);

		var target = "";
		if (ctaTarget) {
			target = "_blank";
		}

		return wp.element.createElement(
			Fragment,
			null,
			wp.element.createElement(
				"div",
				{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-cta__outer-wrap"),
					id: my_block_id },
				ctaType == "all" && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement("a", { href: ctaLink, className: "uagb-cta__block-link-wrap uagb-cta__link-to-all", target: target, rel: "noopener noreferrer" }),
					output
				),
				ctaType !== "all" && output
			)
		);
	}
});

/***/ }),
/* 396 */
/*!*******************************************!*\
  !*** ./src/blocks/call-to-action/edit.js ***!
  \*******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_UAGBIcon__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/UAGBIcon */ 12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker__ = __webpack_require__(/*! @fonticonpicker/react-fonticonpicker */ 13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Title__ = __webpack_require__(/*! ./components/Title */ 138);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Description__ = __webpack_require__(/*! ./components/Description */ 139);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__classes__ = __webpack_require__(/*! ./classes */ 140);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_CallToAction__ = __webpack_require__(/*! ./components/CallToAction */ 141);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__inline_styles__ = __webpack_require__(/*! ./inline-styles */ 142);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Import block dependencies and components.


// Import icon.








var __ = wp.i18n.__;
var _wp$editor = wp.editor,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    ColorPalette = _wp$editor.ColorPalette,
    InspectorControls = _wp$editor.InspectorControls,
    PanelColorSettings = _wp$editor.PanelColorSettings;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    TabPanel = _wp$components.TabPanel,
    ToggleControl = _wp$components.ToggleControl,
    TextControl = _wp$components.TextControl;

// Extend component

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;

var UAGBCallToAction = function (_Component) {
	_inherits(UAGBCallToAction, _Component);

	function UAGBCallToAction() {
		_classCallCheck(this, UAGBCallToAction);

		var _this = _possibleConstructorReturn(this, (UAGBCallToAction.__proto__ || Object.getPrototypeOf(UAGBCallToAction)).apply(this, arguments));

		_this.toggleTarget = _this.toggleTarget.bind(_this);
		_this.setCtaIcon = _this.setCtaIcon.bind(_this);
		return _this;
	}

	_createClass(UAGBCallToAction, [{
		key: "setCtaIcon",
		value: function setCtaIcon(value) {
			this.props.setAttributes({ ctaIcon: value });
		}

		/**
   * Function Name: toggleTarget.
   */

	}, {
		key: "toggleTarget",
		value: function toggleTarget() {
			var ctaTarget = this.props.attributes.ctaTarget;
			var setAttributes = this.props.setAttributes;


			setAttributes({ ctaTarget: !ctaTarget });
		}
	}, {
		key: "render",
		value: function render() {
			var _props = this.props,
			    className = _props.className,
			    setAttributes = _props.setAttributes,
			    attributes = _props.attributes;

			// Setup the attributes.

			var ctaTitle = attributes.ctaTitle,
			    description = attributes.description,
			    textAlign = attributes.textAlign,
			    titleColor = attributes.titleColor,
			    descColor = attributes.descColor,
			    titleTag = attributes.titleTag,
			    titleFontSize = attributes.titleFontSize,
			    descFontSize = attributes.descFontSize,
			    separatorWidth = attributes.separatorWidth,
			    separatorHeight = attributes.separatorHeight,
			    titleSpace = attributes.titleSpace,
			    separatorSpace = attributes.separatorSpace,
			    descSpace = attributes.descSpace,
			    ctaPosition = attributes.ctaPosition,
			    block_id = attributes.block_id,
			    buttonAlign = attributes.buttonAlign,
			    ctaType = attributes.ctaType,
			    ctaText = attributes.ctaText,
			    ctaLink = attributes.ctaLink,
			    ctaTarget = attributes.ctaTarget,
			    ctaIcon = attributes.ctaIcon,
			    ctaIconPosition = attributes.ctaIconPosition,
			    ctaIconSpace = attributes.ctaIconSpace,
			    ctaFontSize = attributes.ctaFontSize,
			    contentWidth = attributes.contentWidth,
			    ctaBtnLinkColor = attributes.ctaBtnLinkColor,
			    ctaBgHoverColor = attributes.ctaBgHoverColor,
			    ctaBgColor = attributes.ctaBgColor,
			    ctaBtnVertPadding = attributes.ctaBtnVertPadding,
			    ctaBtnHrPadding = attributes.ctaBtnHrPadding,
			    ctaBorderStyle = attributes.ctaBorderStyle,
			    ctaBorderColor = attributes.ctaBorderColor,
			    ctaBorderhoverColor = attributes.ctaBorderhoverColor,
			    ctaBorderWidth = attributes.ctaBorderWidth,
			    ctaBorderRadius = attributes.ctaBorderRadius,
			    stack = attributes.stack,
			    ctaLeftSpace = attributes.ctaLeftSpace,
			    ctaRightSpace = attributes.ctaRightSpace,
			    ctaLinkHoverColor = attributes.ctaLinkHoverColor;

			// Add CSS.

			var element = document.getElementById("uagb-cta-style-" + this.props.clientId);
			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_7__inline_styles__["a" /* default */])(this.props);
			}

			// Icon properties.
			var cta_icon_props = {
				icons: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_UAGBIcon__["a" /* default */],
				renderUsing: "class",
				theme: "default",
				value: ctaIcon,
				onChange: this.setCtaIcon,
				isMulti: false
			};

			var my_block_id = "uagb-cta-block-" + this.props.clientId;

			// CTA settings.
			var ctaSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Button"),
						initialOpen: false
					},
					wp.element.createElement(SelectControl, {
						label: __("Type"),
						value: ctaType,
						onChange: function onChange(value) {
							return setAttributes({ ctaType: value });
						},
						options: [{ value: "none", label: __("None") }, { value: "text", label: __("Text") }, { value: "button", label: __("Button") }, { value: "all", label: __("Complete Box") }]
					}),
					(ctaType === "text" || ctaType === "button") && wp.element.createElement(TextControl, {
						label: __("Text"),
						value: ctaText,
						onChange: function onChange(value) {
							return setAttributes({ ctaText: value });
						}
					}),
					ctaType !== "none" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(TextControl, {
							label: __("Link"),
							value: ctaLink,
							onChange: function onChange(value) {
								return setAttributes({ ctaLink: value });
							}
						}),
						wp.element.createElement(ToggleControl, {
							label: __("Open in new Window"),
							checked: ctaTarget,
							onChange: this.toggleTarget
						})
					),
					ctaType !== "all" && ctaType !== "none" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__fonticonpicker_react_fonticonpicker___default.a, cta_icon_props),
						wp.element.createElement(SelectControl, {
							label: __("Icon Position"),
							value: ctaIconPosition,
							onChange: function onChange(value) {
								return setAttributes({ ctaIconPosition: value });
							},
							options: [{ value: "before", label: __("Before Text") }, { value: "after", label: __("After Text") }]
						}),
						wp.element.createElement(RangeControl, {
							label: __("Icon Spacing"),
							value: ctaIconSpace,
							onChange: function onChange(value) {
								return setAttributes({ ctaIconSpace: value });
							},
							min: 0,
							max: 50,
							beforeIcon: "",
							allowReset: true
						})
					),
					ctaType == "button" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(RangeControl, {
							label: __("Vertical Padding"),
							value: ctaBtnVertPadding,
							onChange: function onChange(value) {
								return setAttributes({ ctaBtnVertPadding: value });
							},
							min: 0,
							max: 50,
							beforeIcon: "",
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Horizontal Padding"),
							value: ctaBtnHrPadding,
							onChange: function onChange(value) {
								return setAttributes({ ctaBtnHrPadding: value });
							},
							min: 0,
							max: 50,
							beforeIcon: "",
							allowReset: true
						}),
						wp.element.createElement(SelectControl, {
							label: __("Border Style"),
							value: ctaBorderStyle,
							onChange: function onChange(value) {
								return setAttributes({ ctaBorderStyle: value });
							},
							options: [{ value: "none", label: __("None") }, { value: "solid", label: __("Solid") }, { value: "double", label: __("Double") }, { value: "dashed", label: __("Dashed") }, { value: "dotted", label: __("Dotted") }]
						}),
						ctaBorderStyle !== "none" && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(RangeControl, {
								label: __("Border Width"),
								value: ctaBorderWidth,
								onChange: function onChange(value) {
									return setAttributes({ ctaBorderWidth: value });
								},
								min: 0,
								max: 10,
								beforeIcon: "",
								allowReset: true
							}),
							wp.element.createElement(
								"p",
								{ className: "uagb-setting-label" },
								__("Border Color"),
								wp.element.createElement(
									"span",
									{ className: "components-base-control__label" },
									wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaBorderColor } })
								)
							),
							wp.element.createElement(ColorPalette, {
								value: ctaBorderColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ ctaBorderColor: colorValue });
								},
								allowReset: true
							}),
							wp.element.createElement(
								"p",
								{ className: "uagb-setting-label" },
								__("Border Hover Color"),
								wp.element.createElement(
									"span",
									{ className: "components-base-control__label" },
									wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaBorderhoverColor } })
								)
							),
							wp.element.createElement(ColorPalette, {
								value: ctaBorderhoverColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ ctaBorderhoverColor: colorValue });
								},
								allowReset: true
							})
						),
						wp.element.createElement(RangeControl, {
							label: __("Rounded Corner"),
							value: ctaBorderRadius,
							onChange: function onChange(value) {
								return setAttributes({ ctaBorderRadius: value });
							},
							min: 0,
							max: 100,
							beforeIcon: "",
							allowReset: true
						})
					)
				)
			);

			var ctaNormalSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(PanelColorSettings, {
					title: __("Button Color"),
					initialOpen: true,
					colorSettings: [{
						value: ctaBtnLinkColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ ctaBtnLinkColor: colorValue });
						},
						label: __("Color")
					}, {
						value: ctaBgColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ ctaBgColor: colorValue });
						},
						label: __("Background Color")
					}]
				})
			);

			var ctaHoverSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(PanelColorSettings, {
					title: __("Button Hover Color"),
					initialOpen: true,
					colorSettings: [{
						value: ctaLinkHoverColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ ctaLinkHoverColor: colorValue });
						},
						label: __("Hover Color")
					}, {
						value: ctaBgHoverColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ ctaBgHoverColor: colorValue });
						},
						label: __("Background Hover Color")
					}]
				})
			);

			// Typography settings.
			var TypographySettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Content"),
						initialOpen: false
					},
					wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(SelectControl, {
							label: __("Heading Tag"),
							value: titleTag,
							onChange: function onChange(value) {
								return setAttributes({ titleTag: value });
							},
							options: [{ value: "h1", label: __("H1") }, { value: "h2", label: __("H2") }, { value: "h3", label: __("H3") }, { value: "h4", label: __("H4") }, { value: "h5", label: __("H5") }, { value: "h6", label: __("H6") }]
						}),
						wp.element.createElement(RangeControl, {
							label: __("Heading Font Size"),
							value: titleFontSize,
							onChange: function onChange(value) {
								return setAttributes({ titleFontSize: value });
							},
							min: 10,
							max: 200,
							initialPosition: 30,
							beforeIcon: "editor-textcolor",
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Description Font Size"),
							value: descFontSize,
							onChange: function onChange(value) {
								return setAttributes({ descFontSize: value });
							},
							min: 10,
							max: 200,
							initialPosition: 16,
							beforeIcon: "editor-textcolor",
							allowReset: true
						})
					),
					(ctaType === "text" || ctaType === "button") && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(RangeControl, {
							label: __("Button Font Size"),
							value: ctaFontSize,
							onChange: function onChange(value) {
								return setAttributes({ ctaFontSize: value });
							},
							min: 0,
							max: 50,
							initialPosition: 16,
							beforeIcon: "editor-textcolor",
							allowReset: true
						}),
						ctaPosition === "right" && wp.element.createElement(RangeControl, {
							label: __("Content Width"),
							value: contentWidth,
							onChange: function onChange(value) {
								return setAttributes({ contentWidth: value });
							},
							min: 0,
							max: 100,
							initialPosition: 70,
							allowReset: true
						})
					)
				)
			);

			var color_settings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Color Settings"),
						initialOpen: false
					},
					wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Heading Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: titleColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: titleColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ titleColor: colorValue });
							},
							allowReset: true
						}),
						" "
					),
					wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Description Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: descColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: descColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ descColor: colorValue });
							},
							allowReset: true
						}),
						" "
					),
					ctaType === "text" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("CTA Text Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaBtnLinkColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: ctaBtnLinkColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ ctaBtnLinkColor: colorValue });
							},
							allowReset: true
						}),
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("CTA Text Hover Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: ctaLinkHoverColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: ctaLinkHoverColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ ctaLinkHoverColor: colorValue });
							},
							allowReset: true
						})
					),
					ctaType === "button" && wp.element.createElement(
						TabPanel,
						{ className: "uagb-inspect-tabs uagb-inspect-tabs-col-2",
							activeClass: "active-tab",
							tabs: [{
								name: "normal",
								title: __("Normal"),
								className: "uagb-normal-tab"
							}, {
								name: "hover",
								title: __("Hover"),
								className: "uagb-focus-tab"
							}] },
						function (tabName) {
							var tabout = void 0;
							if ("normal" === tabName.name) {
								tabout = ctaNormalSettings;
							} else {
								tabout = ctaHoverSettings;
							}
							return wp.element.createElement(
								"div",
								null,
								tabout
							);
						}
					)
				)
			);

			// Margin Settings.
			var marginSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Spacing"),
						initialOpen: false
					},
					wp.element.createElement(RangeControl, {
						label: __("Heading Bottom Margin"),
						value: titleSpace,
						onChange: function onChange(value) {
							return setAttributes({ titleSpace: value });
						},
						min: 0,
						max: 50,
						beforeIcon: "",
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Description Bottom Margin"),
						value: descSpace,
						onChange: function onChange(value) {
							return setAttributes({ descSpace: value });
						},
						min: 0,
						max: 50,
						beforeIcon: "",
						allowReset: true
					}),
					textAlign === "left" && ctaPosition === "right" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(RangeControl, {
							label: __("Content Left Margin"),
							value: ctaLeftSpace,
							onChange: function onChange(value) {
								return setAttributes({ ctaLeftSpace: value });
							},
							min: 0,
							max: 50,
							beforeIcon: "",
							allowReset: true
						})
					),
					textAlign === "right" && ctaPosition === "right" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(RangeControl, {
							label: __("Content Right Margin"),
							value: ctaRightSpace,
							onChange: function onChange(value) {
								return setAttributes({ ctaRightSpace: value });
							},
							min: 0,
							max: 50,
							beforeIcon: "",
							allowReset: true
						})
					)
				)
			);

			// Global Controls.
			var inspect_control = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					InspectorControls,
					null,
					wp.element.createElement(
						PanelBody,
						{
							title: __("Layout"),
							initialOpen: true
						},
						wp.element.createElement(SelectControl, {
							label: __("Button Position"),
							value: ctaPosition,
							onChange: function onChange(value) {
								return setAttributes({ ctaPosition: value });
							},
							options: [{ value: "right", label: __("Normal") }, { value: "below-title", label: __("Stack") }]
						}),
						ctaPosition == "right" && wp.element.createElement(SelectControl, {
							label: __("Stack on"),
							value: stack,
							options: [{ value: "none", label: __("None") }, { value: "tablet", label: __("Tablet") }, { value: "mobile", label: __("Mobile") }],
							help: __("Note: Choose on what breakpoint the CTA button will stack."),
							onChange: function onChange(value) {
								return setAttributes({ stack: value });
							}
						}),
						ctaPosition && ctaPosition === "right" && wp.element.createElement(SelectControl, {
							label: __("Verticle Alignment"),
							value: buttonAlign,
							onChange: function onChange(value) {
								return setAttributes({ buttonAlign: value });
							},
							options: [{ value: "top", label: __("Top") }, { value: "middle", label: __("Middle") }]
						})
					),
					TypographySettings,
					ctaSettings,
					color_settings,
					marginSettings
				)
			);

			// Get icon/Image components.
			var is_cta = wp.element.createElement(__WEBPACK_IMPORTED_MODULE_6__components_CallToAction__["a" /* default */], { attributes: attributes, setAttributes: setAttributes });

			// Get description components.
			var desc = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					"div",
					{ className: "uagb-cta-text-wrap" },
					wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_Description__["a" /* default */], { attributes: attributes, setAttributes: setAttributes, props: this.props })
				)
			);

			// Get Title components.
			var title_text = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					"div",
					{ className: "uagb-cta__title-wrap" },
					wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_Title__["a" /* default */], { attributes: attributes, setAttributes: setAttributes, props: this.props })
				)
			);

			var output = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					"div",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default.a.apply(undefined, ["uagb-cta__content-wrap"].concat(_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_5__classes__["a" /* default */])(attributes)))) },
					wp.element.createElement(
						"div",
						{ className: "uagb-cta__left-right-wrap" },
						wp.element.createElement(
							"div",
							{ className: "uagb-cta__content" },
							ctaPosition == "below-title" && wp.element.createElement(
								Fragment,
								null,
								title_text,
								desc,
								is_cta
							),
							ctaPosition == "right" && wp.element.createElement(
								Fragment,
								null,
								title_text,
								desc
							)
						),
						ctaPosition == "right" && is_cta
					)
				)
			);

			return wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					BlockControls,
					{ key: "controls" },
					wp.element.createElement(AlignmentToolbar, {
						value: textAlign,
						onChange: function onChange(value) {
							return setAttributes({ textAlign: value });
						}
					})
				),
				inspect_control,
				wp.element.createElement(
					"div",
					{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-cta__outer-wrap"),
						id: my_block_id
					},
					ctaType == "all" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"a",
							{ href: "javascript:void(0)", className: "uagb-cta__block-link-wrap uagb-cta__link-to-all", rel: "noopener noreferrer" },
							" "
						),
						output
					),
					ctaType !== "all" && output
				)
			);
		}
	}, {
		key: "componentDidMount",
		value: function componentDidMount() {

			// Assigning block_id in the attribute.
			this.props.setAttributes({ block_id: this.props.clientId });

			// Pushing Style tag for this block css.
			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-cta-style-" + this.props.clientId);
			document.head.appendChild($style);
		}
	}]);

	return UAGBCallToAction;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (UAGBCallToAction);

/***/ }),
/* 397 */
/*!*************************************************!*\
  !*** ./src/blocks/call-to-action/attributes.js ***!
  \*************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * BLOCK: UAGB CTA Attributes
 */

var attributes = {
	ctaTitle: {
		source: "html",
		selector: "h1,h2,h3,h4,h5,h6",
		default: "Call To Action"
	},
	description: {
		source: "html",
		selector: "p",
		default: "Click here to change this text. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo."
	},
	textAlign: {
		type: "string",
		default: "left"
	},
	titleColor: {
		type: "string"
	},
	descColor: {
		type: "string"
	},
	ctaPosition: {
		type: "string",
		default: "right"
	},
	titleTag: {
		type: "string",
		default: "h3"
	},
	titleFontSize: {
		type: "number"
	},
	descFontSize: {
		type: "number"
	},
	titleSpace: {
		type: "number",
		default: 10
	},
	descSpace: {
		type: "number",
		default: 10
	},
	block_id: {
		type: "string",
		default: "not_set"
	},
	buttonAlign: {
		type: "string",
		default: "middle"
	},
	ctaTarget: {
		type: "boolean",
		default: false
	},
	ctaIcon: {
		type: "string",
		default: ""
	},
	ctaIconPosition: {
		type: "string",
		default: "after"
	},
	ctaIconSpace: {
		type: "number",
		default: 5
	},
	ctaType: {
		type: "string",
		default: "button"
	},
	ctaText: {
		type: "string",
		default: "Read More"
	},
	ctaLink: {
		type: "string",
		default: "#"
	},
	ctaFontSize: {
		type: "number"
	},
	contentWidth: {
		type: "number",
		default: "70"
	},
	ctaBtnLinkColor: {
		type: "string",
		default: "#333"
	},
	ctaLinkHoverColor: {
		type: "string",
		default: ""
	},
	ctaBgColor: {
		type: "string",
		default: "transparent"
	},
	ctaBgHoverColor: {
		type: "string",
		default: "transparent"
	},
	ctaBorderColor: {
		type: "string",
		default: "#333"
	},
	ctaBorderhoverColor: {
		type: "string",
		default: ""
	},
	ctaBorderStyle: {
		type: "string",
		default: "solid"
	},
	ctaBtnVertPadding: {
		type: "number",
		default: 10
	},
	ctaBtnHrPadding: {
		type: "number",
		default: 14
	},
	ctaBorderWidth: {
		type: "number",
		default: 1
	},
	ctaBorderRadius: {
		type: "number",
		default: 0
	},
	stack: {
		type: "string",
		default: "tablet"
	},
	ctaLeftSpace: {
		type: "number",
		default: 5
	},
	ctaRightSpace: {
		type: "number",
		default: 5
	}
};

/* harmony default export */ __webpack_exports__["a"] = (attributes);

/***/ }),
/* 398 */
/*!***********************************************!*\
  !*** ./src/blocks/call-to-action/editor.scss ***!
  \***********************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 399 */
/*!**********************************************!*\
  !*** ./src/blocks/call-to-action/style.scss ***!
  \**********************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 400 */
/*!************************************!*\
  !*** ./src/blocks/column/block.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss__ = __webpack_require__(/*! ./style.scss */ 401);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__style_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 402);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__editor_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__styling__ = __webpack_require__(/*! ./styling */ 403);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * BLOCK: UAGB Column
 *
 * Registering a basic block with Gutenberg.
 */









var __ = wp.i18n.__;
var registerBlockType = wp.blocks.registerBlockType;
var _wp$editor = wp.editor,
    InnerBlocks = _wp$editor.InnerBlocks,
    ColorPalette = _wp$editor.ColorPalette,
    InspectorControls = _wp$editor.InspectorControls,
    MediaUpload = _wp$editor.MediaUpload,
    PanelColorSettings = _wp$editor.PanelColorSettings;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    RangeControl = _wp$components.RangeControl,
    SelectControl = _wp$components.SelectControl,
    Button = _wp$components.Button,
    BaseControl = _wp$components.BaseControl;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;

var UAGBColumnEdit = function (_Component) {
	_inherits(UAGBColumnEdit, _Component);

	function UAGBColumnEdit() {
		_classCallCheck(this, UAGBColumnEdit);

		var _this = _possibleConstructorReturn(this, (UAGBColumnEdit.__proto__ || Object.getPrototypeOf(UAGBColumnEdit)).apply(this, arguments));

		_this.onRemoveImage = _this.onRemoveImage.bind(_this);
		_this.onSelectImage = _this.onSelectImage.bind(_this);
		return _this;
	}

	_createClass(UAGBColumnEdit, [{
		key: "componentDidMount",
		value: function componentDidMount() {

			// Assigning block_id in the attribute.
			this.props.setAttributes({ block_id: this.props.clientId });

			// Pushing Style tag for this block css.
			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-column-style-" + this.props.clientId);
			document.head.appendChild($style);
		}

		/*
   * Event to set Image as null while removing.
   */

	}, {
		key: "onRemoveImage",
		value: function onRemoveImage() {
			var backgroundImage = this.props.attributes.backgroundImage;
			var setAttributes = this.props.setAttributes;


			setAttributes({ backgroundImage: null });
		}

		/*
   * Event to set Image as while adding.
   */

	}, {
		key: "onSelectImage",
		value: function onSelectImage(media) {
			var backgroundImage = this.props.attributes.backgroundImage;
			var setAttributes = this.props.setAttributes;


			if (!media || !media.url) {
				setAttributes({ backgroundImage: null });
				return;
			}

			if (!media.type || "image" != media.type) {
				return;
			}

			setAttributes({ backgroundImage: media });
		}
	}, {
		key: "render",
		value: function render() {
			var _props = this.props,
			    _props$attributes = _props.attributes,
			    topPadding = _props$attributes.topPadding,
			    bottomPadding = _props$attributes.bottomPadding,
			    leftPadding = _props$attributes.leftPadding,
			    rightPadding = _props$attributes.rightPadding,
			    topMargin = _props$attributes.topMargin,
			    bottomMargin = _props$attributes.bottomMargin,
			    leftMargin = _props$attributes.leftMargin,
			    rightMargin = _props$attributes.rightMargin,
			    colWidth = _props$attributes.colWidth,
			    backgroundType = _props$attributes.backgroundType,
			    backgroundImage = _props$attributes.backgroundImage,
			    backgroundColor = _props$attributes.backgroundColor,
			    backgroundPosition = _props$attributes.backgroundPosition,
			    backgroundAttachment = _props$attributes.backgroundAttachment,
			    backgroundRepeat = _props$attributes.backgroundRepeat,
			    backgroundSize = _props$attributes.backgroundSize,
			    gradientColor1 = _props$attributes.gradientColor1,
			    gradientColor2 = _props$attributes.gradientColor2,
			    gradientLocation1 = _props$attributes.gradientLocation1,
			    gradientLocation2 = _props$attributes.gradientLocation2,
			    gradientType = _props$attributes.gradientType,
			    gradientAngle = _props$attributes.gradientAngle,
			    backgroundOpacity = _props$attributes.backgroundOpacity,
			    backgroundImageColor = _props$attributes.backgroundImageColor,
			    setAttributes = _props.setAttributes,
			    className = _props.className,
			    isSelected = _props.isSelected;


			var element = document.getElementById("uagb-column-style-" + this.props.clientId);

			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_4__styling__["a" /* default */])(this.props);
			}

			var inspector_controls = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{ title: __("Layout") },
					wp.element.createElement(RangeControl, {
						label: __("Content Width (%)"),
						value: colWidth,
						onChange: function onChange(value) {
							setAttributes({
								colWidth: value
							});
						},
						min: 0,
						max: 100
					})
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Spacing"), initialOpen: false },
					wp.element.createElement(RangeControl, {
						label: __("Top Padding"),
						value: topPadding,
						onChange: function onChange(value) {
							setAttributes({
								topPadding: value
							});
						},
						min: 0,
						max: 500
					}),
					wp.element.createElement(RangeControl, {
						label: __("Right Padding"),
						value: rightPadding,
						onChange: function onChange(value) {
							setAttributes({
								rightPadding: value
							});
						},
						min: 0,
						max: 500
					}),
					wp.element.createElement(RangeControl, {
						label: __("Bottom Padding"),
						value: bottomPadding,
						onChange: function onChange(value) {
							setAttributes({
								bottomPadding: value
							});
						},
						min: 0,
						max: 500
					}),
					wp.element.createElement(RangeControl, {
						label: __("Left Padding"),
						value: leftPadding,
						onChange: function onChange(value) {
							setAttributes({
								leftPadding: value
							});
						},
						min: 0,
						max: 500
					}),
					wp.element.createElement(RangeControl, {
						label: __("Top Margin"),
						value: topMargin,
						onChange: function onChange(value) {
							setAttributes({
								topMargin: value
							});
						},
						min: -200,
						max: 200
					}),
					wp.element.createElement(RangeControl, {
						label: __("Bottom Margin"),
						value: bottomMargin,
						onChange: function onChange(value) {
							setAttributes({
								bottomMargin: value
							});
						},
						min: -200,
						max: 200
					}),
					wp.element.createElement(RangeControl, {
						label: __("Left Margin"),
						value: leftMargin,
						onChange: function onChange(value) {
							setAttributes({
								leftMargin: value
							});
						},
						min: -200,
						max: 200
					}),
					wp.element.createElement(RangeControl, {
						label: __("Right Margin"),
						value: rightMargin,
						onChange: function onChange(value) {
							setAttributes({
								rightMargin: value
							});
						},
						min: -200,
						max: 200
					})
				),
				wp.element.createElement(
					PanelBody,
					{ title: __("Background"), initialOpen: false },
					wp.element.createElement(SelectControl, {
						label: __("Background Type"),
						value: backgroundType,
						onChange: function onChange(value) {
							return setAttributes({ backgroundType: value });
						},
						options: [{ value: "none", label: __("None") }, { value: "color", label: __("Color") }, { value: "gradient", label: __("Gradient") }, { value: "image", label: __("Image") }]
					}),
					"color" == backgroundType && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							"p",
							{ className: "uagb-setting-label" },
							__("Background Color"),
							wp.element.createElement(
								"span",
								{ className: "components-base-control__label" },
								wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: backgroundColor } })
							)
						),
						wp.element.createElement(ColorPalette, {
							value: backgroundColor,
							onChange: function onChange(colorValue) {
								return setAttributes({ backgroundColor: colorValue });
							},
							allowReset: true
						})
					),
					"image" == backgroundType && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							BaseControl,
							{
								className: "editor-bg-image-control",
								label: __("Background Image") },
							wp.element.createElement(MediaUpload, {
								title: __("Select Background Image"),
								onSelect: this.onSelectImage,
								allowedTypes: ["image"],
								value: backgroundImage,
								render: function render(_ref) {
									var open = _ref.open;
									return wp.element.createElement(
										Button,
										{ isDefault: true, onClick: open },
										!backgroundImage ? __("Select Background Image") : __("Replace image")
									);
								}
							}),
							backgroundImage && wp.element.createElement(
								Button,
								{ className: "uagb-rm-btn", onClick: this.onRemoveImage, isLink: true, isDestructive: true },
								__("Remove Image")
							)
						),
						backgroundImage && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(SelectControl, {
								label: __("Image Position"),
								value: backgroundPosition,
								onChange: function onChange(value) {
									return setAttributes({ backgroundPosition: value });
								},
								options: [{ value: "top-left", label: __("Top Left") }, { value: "top-center", label: __("Top Center") }, { value: "top-right", label: __("Top Right") }, { value: "center-left", label: __("Center Left") }, { value: "center-center", label: __("Center Center") }, { value: "center-right", label: __("Center Right") }, { value: "bottom-left", label: __("Bottom Left") }, { value: "bottom-center", label: __("Bottom Center") }, { value: "bottom-right", label: __("Bottom Right") }]
							}),
							wp.element.createElement(SelectControl, {
								label: __("Attachment"),
								value: backgroundAttachment,
								onChange: function onChange(value) {
									return setAttributes({ backgroundAttachment: value });
								},
								options: [{ value: "fixed", label: __("Fixed") }, { value: "scroll", label: __("Scroll") }]
							}),
							wp.element.createElement(SelectControl, {
								label: __("Repeat"),
								value: backgroundRepeat,
								onChange: function onChange(value) {
									return setAttributes({ backgroundRepeat: value });
								},
								options: [{ value: "no-repeat", label: __("No Repeat") }, { value: "repeat", label: __("Repeat") }, { value: "repeat-x", label: __("Repeat-x") }, { value: "repeat-y", label: __("Repeat-y") }]
							}),
							wp.element.createElement(SelectControl, {
								label: __("Size"),
								value: backgroundSize,
								onChange: function onChange(value) {
									return setAttributes({ backgroundSize: value });
								},
								options: [{ value: "auto", label: __("Auto") }, { value: "cover", label: __("Cover") }, { value: "contain", label: __("Contain") }]
							}),
							wp.element.createElement(
								Fragment,
								null,
								wp.element.createElement(
									"p",
									{ className: "uagb-setting-label" },
									__("Image Overlay Color"),
									wp.element.createElement(
										"span",
										{ className: "components-base-control__label" },
										wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: backgroundImageColor } })
									)
								),
								wp.element.createElement(ColorPalette, {
									value: backgroundImageColor,
									onChange: function onChange(colorValue) {
										return setAttributes({ backgroundImageColor: colorValue });
									},
									allowReset: true
								})
							)
						)
					),
					"gradient" == backgroundType && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(PanelColorSettings, {
							title: __("Color Settings"),
							colorSettings: [{
								value: gradientColor1,
								onChange: function onChange(value) {
									return setAttributes({ gradientColor1: value });
								},
								label: __("Color 1")
							}, {
								value: gradientColor2,
								onChange: function onChange(value) {
									return setAttributes({ gradientColor2: value });
								},
								label: __("Color 2")
							}]
						}),
						wp.element.createElement(SelectControl, {
							label: __("Type"),
							value: gradientType,
							onChange: function onChange(value) {
								return setAttributes({ gradientType: value });
							},
							options: [{ value: "linear", label: __("Linear") }, { value: "radial", label: __("Radial") }]
						}),
						wp.element.createElement(RangeControl, {
							label: __("Location 1"),
							value: gradientLocation1,
							onChange: function onChange(value) {
								return setAttributes({ gradientLocation1: value });
							},
							min: 0,
							max: 100,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Location 2"),
							value: gradientLocation2,
							onChange: function onChange(value) {
								return setAttributes({ gradientLocation2: value });
							},
							min: 0,
							max: 100,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Angle"),
							value: gradientAngle,
							onChange: function onChange(value) {
								return setAttributes({ gradientAngle: value });
							},
							min: 0,
							max: 360,
							allowReset: true
						})
					),
					("color" == backgroundType || "image" == backgroundType && backgroundImage || "gradient" == backgroundType) && wp.element.createElement(RangeControl, {
						label: __("Opacity"),
						value: backgroundOpacity,
						onChange: function onChange(value) {
							return setAttributes({ backgroundOpacity: value });
						},
						min: 0,
						max: 100,
						allowReset: true,
						initialPosition: 0
					})
				)
			);

			var active = isSelected ? "active" : "not-active";

			return wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					InspectorControls,
					null,
					inspector_controls
				),
				wp.element.createElement(
					"div",
					{
						className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-column__wrap", "uagb-column__background-" + backgroundType, "uagb-column__edit-" + active),
						id: "uagb-column-" + this.props.clientId
					},
					wp.element.createElement("div", { className: "uagb-column__overlay" }),
					wp.element.createElement(
						"div",
						{ className: "uagb-column__inner-wrap" },
						wp.element.createElement(InnerBlocks, { templateLock: false })
					)
				)
			);
		}
	}]);

	return UAGBColumnEdit;
}(Component);

/**
 * Register: a Gutenberg Block.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */


/* unused harmony default export */ var _unused_webpack_default_export = (UAGBColumnEdit);
registerBlockType("uagb/column", {
	title: __("Column"),
	icon: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__["a" /* default */].columns,
	category: uagb_blocks_info.category,
	parent: ["uagb/columns"],
	supports: {
		inserter: false,
		reusable: false,
		html: false
	},
	attributes: {
		block_id: {
			type: "string"
		},
		topPadding: {
			type: "number",
			default: ""
		},
		bottomPadding: {
			type: "number",
			default: ""
		},
		leftPadding: {
			type: "number",
			default: ""
		},
		rightPadding: {
			type: "number",
			default: ""
		},
		topMargin: {
			type: "number",
			default: ""
		},
		bottomMargin: {
			type: "number",
			default: ""
		},
		leftMargin: {
			type: "number",
			default: ""
		},
		rightMargin: {
			type: "number",
			default: ""
		},
		colWidth: {
			type: "number",
			default: ""
		},
		backgroundType: {
			type: "string"
		},
		backgroundImage: {
			type: "object"
		},
		backgroundPosition: {
			type: "string",
			default: "center-center"
		},
		backgroundSize: {
			type: "string",
			default: "cover"
		},
		backgroundRepeat: {
			type: "string",
			default: "no-repeat"
		},
		backgroundAttachment: {
			type: "string",
			default: "scroll"
		},
		backgroundColor: {
			type: "string"
		},
		gradientColor1: {
			type: "string"
		},
		gradientColor2: {
			type: "string"
		},
		gradientType: {
			type: "string",
			default: "linear"
		},
		gradientLocation1: {
			type: "number",
			default: 0
		},
		gradientLocation2: {
			type: "number",
			default: 100
		},
		gradientAngle: {
			type: "number",
			default: 0
		},
		backgroundOpacity: {
			type: "number"
		},
		backgroundImageColor: {
			type: "string"
		}
	},

	edit: UAGBColumnEdit,

	save: function save(_ref2) {
		var attributes = _ref2.attributes,
		    className = _ref2.className;
		var block_id = attributes.block_id,
		    backgroundType = attributes.backgroundType;

		return wp.element.createElement(
			"div",
			{
				className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-column__wrap", "uagb-column__background-" + backgroundType),
				id: "uagb-column-" + block_id
			},
			wp.element.createElement("div", { className: "uagb-column__overlay" }),
			wp.element.createElement(
				"div",
				{ className: "uagb-column__inner-wrap" },
				wp.element.createElement(InnerBlocks.Content, null)
			)
		);
	}
});

/***/ }),
/* 401 */
/*!**************************************!*\
  !*** ./src/blocks/column/style.scss ***!
  \**************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 402 */
/*!***************************************!*\
  !*** ./src/blocks/column/editor.scss ***!
  \***************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 403 */
/*!**************************************!*\
  !*** ./src/blocks/column/styling.js ***!
  \**************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__inline_styles__ = __webpack_require__(/*! ./inline-styles */ 404);
/**
 * Set inline styles.
 * @param  {object} props - The block object.
 * @return {object} The inline background type CSS.
 */



function styling(props) {
	var _props$attributes = props.attributes,
	    colWidth = _props$attributes.colWidth,
	    topPadding = _props$attributes.topPadding,
	    bottomPadding = _props$attributes.bottomPadding,
	    leftPadding = _props$attributes.leftPadding,
	    rightPadding = _props$attributes.rightPadding,
	    topMargin = _props$attributes.topMargin,
	    bottomMargin = _props$attributes.bottomMargin,
	    leftMargin = _props$attributes.leftMargin,
	    rightMargin = _props$attributes.rightMargin;


	var style = {
		"padding-top": topPadding + "px",
		"padding-bottom": bottomPadding + "px",
		"padding-left": leftPadding + "px",
		"padding-right": rightPadding + "px",
		"margin-top": topMargin + "px",
		"margin-bottom": bottomMargin + "px",
		"margin-left": leftMargin + "px",
		"margin-right": rightMargin + "px"
	};

	var selectors = {
		":before": Object(__WEBPACK_IMPORTED_MODULE_0__inline_styles__["a" /* default */])(props),
		" .uagb-column__inner-wrap": style
	};

	var styling_css = "";

	for (var i in selectors) {

		styling_css += "#block-" + props.clientId;

		styling_css += i + " { ";

		var sel = selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	if (colWidth != "" && colWidth != 0) {
		styling_css += "#wpwrap .edit-post-visual-editor #block-" + props.clientId + ".editor-block-list__block { width: " + colWidth + "%; }";
	}

	return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (styling);

/***/ }),
/* 404 */
/*!********************************************!*\
  !*** ./src/blocks/column/inline-styles.js ***!
  \********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline styles.
 * @param  {object} props - The block object.
 * @return {object} The inline background type CSS.
 */
function inlineStyles(props, isEditor) {
	var _props$attributes = props.attributes,
	    backgroundPosition = _props$attributes.backgroundPosition,
	    backgroundSize = _props$attributes.backgroundSize,
	    backgroundAttachment = _props$attributes.backgroundAttachment,
	    backgroundImage = _props$attributes.backgroundImage,
	    backgroundColor = _props$attributes.backgroundColor,
	    backgroundOpacity = _props$attributes.backgroundOpacity,
	    backgroundRepeat = _props$attributes.backgroundRepeat,
	    backgroundType = _props$attributes.backgroundType,
	    gradientColor1 = _props$attributes.gradientColor1,
	    gradientColor2 = _props$attributes.gradientColor2,
	    gradientLocation1 = _props$attributes.gradientLocation1,
	    gradientLocation2 = _props$attributes.gradientLocation2,
	    gradientType = _props$attributes.gradientType,
	    gradientAngle = _props$attributes.gradientAngle,
	    borderStyle = _props$attributes.borderStyle,
	    borderWidth = _props$attributes.borderWidth,
	    borderRadius = _props$attributes.borderRadius,
	    borderColor = _props$attributes.borderColor,
	    backgroundImageColor = _props$attributes.backgroundImageColor;


	var style = {};

	var position = backgroundPosition.replace("-", " ");

	if ("image" === backgroundType) {

		style["opacity"] = typeof backgroundOpacity != "undefined" ? backgroundOpacity / 100 : "";
		style["background-color"] = backgroundImageColor;

		style["background-image"] = backgroundImage ? "url(" + backgroundImage.url + ")" : null;
		style["background-position"] = position;
		style["background-attachment"] = backgroundAttachment;
		style["background-repeat"] = backgroundRepeat;
		style["background-size"] = backgroundSize;
	} else if ("gradient" === backgroundType) {
		style["background-color"] = "transparent";
		style["opacity"] = typeof backgroundOpacity != "undefined" ? backgroundOpacity / 100 : "";

		if ("linear" === gradientType) {

			style["background-image"] = "linear-gradient(" + gradientAngle + "deg, " + gradientColor1 + " " + gradientLocation1 + "%, " + gradientColor2 + " " + gradientLocation2 + "%)";
		} else {

			style["background-image"] = "radial-gradient( at center center, " + gradientColor1 + " " + gradientLocation1 + "%, " + gradientColor2 + " " + gradientLocation2 + "%)";
		}
	} else if ("color" == backgroundType) {

		style["opacity"] = typeof backgroundOpacity != "undefined" ? backgroundOpacity / 100 : "";
		style["background-color"] = backgroundColor;
	}

	return style;
}

/* harmony default export */ __webpack_exports__["a"] = (inlineStyles);

/***/ }),
/* 405 */
/*!*************************************!*\
  !*** ./src/blocks/columns/block.js ***!
  \*************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss__ = __webpack_require__(/*! ./style.scss */ 406);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__style_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 407);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__editor_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__attributes__ = __webpack_require__(/*! ./attributes */ 408);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__edit__ = __webpack_require__(/*! ./edit */ 409);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__shapes__ = __webpack_require__(/*! ./shapes */ 143);
/**
 * BLOCK: Columns
 */




//  Import CSS.






// Components
var __ = wp.i18n.__;

// Register block controls

var registerBlockType = wp.blocks.registerBlockType;
var InnerBlocks = wp.editor.InnerBlocks;


registerBlockType("uagb/columns", {
	title: uagb_blocks_info.blocks["uagb/columns"]["title"],
	description: uagb_blocks_info.blocks["uagb/columns"]["description"],
	icon: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__["a" /* default */].columns,
	category: uagb_blocks_info.category,
	keywords: [__("columns"), __("rows"), __("uagb")],
	attributes: __WEBPACK_IMPORTED_MODULE_4__attributes__["a" /* default */],
	edit: __WEBPACK_IMPORTED_MODULE_5__edit__["a" /* default */],
	getEditWrapperProps: function getEditWrapperProps(attributes) {
		return { "data-align": attributes.align };
		return { "data-valign": attributes.vAlign };
	},

	save: function save(props) {
		var attributes = props.attributes,
		    className = props.className;
		var _props$attributes = props.attributes,
		    block_id = _props$attributes.block_id,
		    tag = _props$attributes.tag,
		    backgroundType = _props$attributes.backgroundType,
		    backgroundVideo = _props$attributes.backgroundVideo,
		    contentWidth = _props$attributes.contentWidth,
		    align = _props$attributes.align,
		    columns = _props$attributes.columns,
		    stack = _props$attributes.stack,
		    vAlign = _props$attributes.vAlign,
		    columnGap = _props$attributes.columnGap,
		    topType = _props$attributes.topType,
		    bottomType = _props$attributes.bottomType,
		    bottomFlip = _props$attributes.bottomFlip,
		    topFlip = _props$attributes.topFlip;


		var CustomTag = "" + tag;

		var top_divider_html = topType != "none" && wp.element.createElement(
			"div",
			{
				className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-columns__shape", "uagb-columns__shape-top", { "uagb-columns__shape-flip": topFlip === true }) },
			__WEBPACK_IMPORTED_MODULE_6__shapes__["a" /* default */][topType]
		);

		var bottom_divider_html = bottomType != "none" && wp.element.createElement(
			"div",
			{
				className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-columns__shape", "uagb-columns__shape-bottom", { "uagb-columns__shape-flip": bottomFlip === true }),
				"data-negative": "false" },
			__WEBPACK_IMPORTED_MODULE_6__shapes__["a" /* default */][bottomType]
		);

		return wp.element.createElement(
			CustomTag,
			{
				className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-columns__wrap", "uagb-columns__background-" + backgroundType, "uagb-columns__stack-" + stack, "uagb-columns__valign-" + vAlign, "uagb-columns__gap-" + columnGap, "align" + align),
				id: "uagb-columns-" + block_id
			},
			wp.element.createElement("div", { className: "uagb-columns__overlay" }),
			top_divider_html,
			"video" == backgroundType && wp.element.createElement(
				"div",
				{ className: "uagb-columns__video-wrap" },
				backgroundVideo && wp.element.createElement("video", { src: backgroundVideo.url, autoPlay: true, loop: true, muted: true })
			),
			wp.element.createElement(
				"div",
				{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-columns__inner-wrap", "uagb-columns__columns-" + columns) },
				wp.element.createElement(InnerBlocks.Content, null)
			),
			bottom_divider_html
		);
	}
});

/***/ }),
/* 406 */
/*!***************************************!*\
  !*** ./src/blocks/columns/style.scss ***!
  \***************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 407 */
/*!****************************************!*\
  !*** ./src/blocks/columns/editor.scss ***!
  \****************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 408 */
/*!******************************************!*\
  !*** ./src/blocks/columns/attributes.js ***!
  \******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * BLOCK: UAGB Section Attributes
 */
var attributes = {
	block_id: {
		type: "string"
	},
	columns: {
		type: "number",
		default: 2
	},
	align: {
		type: "string"
	},
	vAlign: {
		type: "string"
	},
	stack: {
		type: "string",
		default: "mobile"
	},
	columnGap: {
		type: "string",
		default: "10"
	},
	topPadding: {
		type: "number",
		default: 20
	},
	bottomPadding: {
		type: "number",
		default: 20
	},
	leftPadding: {
		type: "number",
		default: 20
	},
	rightPadding: {
		type: "number",
		default: 20
	},
	topMargin: {
		type: "number",
		default: 0
	},
	bottomMargin: {
		type: "number",
		default: 0
	},
	contentWidth: {
		type: "string",
		default: "theme"
	},
	width: {
		type: "number",
		default: 900
	},
	tag: {
		type: "string",
		default: "section"
	},
	backgroundType: {
		type: "string"
	},
	backgroundImage: {
		type: "object"
	},
	backgroundPosition: {
		type: "string",
		default: "center-center"
	},
	backgroundSize: {
		type: "string",
		default: "cover"
	},
	backgroundRepeat: {
		type: "string",
		default: "no-repeat"
	},
	backgroundAttachment: {
		type: "string",
		default: "scroll"
	},
	backgroundVideo: {
		type: "object"
	},
	backgroundColor: {
		type: "string"
	},
	gradientColor1: {
		type: "string"
	},
	gradientColor2: {
		type: "string"
	},
	gradientType: {
		type: "string",
		default: "linear"
	},
	gradientLocation1: {
		type: "number",
		default: 0
	},
	gradientLocation2: {
		type: "number",
		default: 100
	},
	gradientAngle: {
		type: "number",
		default: 0
	},
	backgroundOpacity: {
		type: "number"
	},
	backgroundVideoOpacity: {
		type: "number",
		default: 50
	},
	backgroundVideoColor: {
		type: "string"
	},
	backgroundImageColor: {
		type: "string"
	},
	borderStyle: {
		type: "string",
		default: "none"
	},
	borderWidth: {
		type: "number",
		default: 1
	},
	borderRadius: {
		type: "number"
	},
	borderColor: {
		type: "string"
	},
	bottomType: {
		type: "string",
		default: "none"
	},
	bottomColor: {
		type: "string"
	},
	bottomHeight: {
		type: "number"
	},
	bottomWidth: {
		type: "number"
	},
	topType: {
		type: "string",
		default: "none"
	},
	topColor: {
		type: "string"
	},
	topHeight: {
		type: "number"
	},
	topWidth: {
		type: "number"
	},
	topFlip: {
		type: "boolean",
		default: false
	},
	bottomFlip: {
		type: "boolean",
		default: false
	}
};

/* harmony default export */ __webpack_exports__["a"] = (attributes);

/***/ }),
/* 409 */
/*!************************************!*\
  !*** ./src/blocks/columns/edit.js ***!
  \************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__styling__ = __webpack_require__(/*! ./styling */ 410);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_memize__ = __webpack_require__(/*! memize */ 412);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_memize___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_memize__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash_times__ = __webpack_require__(/*! lodash/times */ 8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash_times___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_lodash_times__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_lodash_map__ = __webpack_require__(/*! lodash/map */ 413);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_lodash_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_lodash_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__shapes__ = __webpack_require__(/*! ./shapes */ 143);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * BLOCK: UAGB - Columns Edit Class
 */

// Import classes








var ALLOWED_BLOCKS = ["uagb/column"];

var __ = wp.i18n.__;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;
var _wp$editor = wp.editor,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    BlockAlignmentToolbar = _wp$editor.BlockAlignmentToolbar,
    ColorPalette = _wp$editor.ColorPalette,
    InspectorControls = _wp$editor.InspectorControls,
    InnerBlocks = _wp$editor.InnerBlocks,
    MediaUpload = _wp$editor.MediaUpload,
    PanelColorSettings = _wp$editor.PanelColorSettings;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    Button = _wp$components.Button,
    BaseControl = _wp$components.BaseControl,
    withNotices = _wp$components.withNotices,
    ToggleControl = _wp$components.ToggleControl,
    Toolbar = _wp$components.Toolbar,
    Tooltip = _wp$components.Tooltip,
    TabPanel = _wp$components.TabPanel;


var getColumnsTemplate = __WEBPACK_IMPORTED_MODULE_2_memize___default()(function (columns) {
	return __WEBPACK_IMPORTED_MODULE_3_lodash_times___default()(columns, function (n) {
		return ["uagb/column", { id: n + 1 }];
	});
});

var UAGBColumns = function (_Component) {
	_inherits(UAGBColumns, _Component);

	function UAGBColumns() {
		_classCallCheck(this, UAGBColumns);

		var _this = _possibleConstructorReturn(this, (UAGBColumns.__proto__ || Object.getPrototypeOf(UAGBColumns)).apply(this, arguments));

		_this.onRemoveVideo = _this.onRemoveVideo.bind(_this);
		_this.onRemoveImage = _this.onRemoveImage.bind(_this);
		_this.onSelectImage = _this.onSelectImage.bind(_this);
		_this.onSelectVideo = _this.onSelectVideo.bind(_this);
		return _this;
	}

	_createClass(UAGBColumns, [{
		key: "componentDidMount",
		value: function componentDidMount() {

			// Assigning block_id in the attribute.
			this.props.setAttributes({ block_id: this.props.clientId });

			// Pushing Style tag for this block css.
			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-columns-style-" + this.props.clientId);
			document.head.appendChild($style);
		}

		/*
   * Event to set Image as null while removing.
   */

	}, {
		key: "onRemoveImage",
		value: function onRemoveImage() {
			var backgroundImage = this.props.attributes.backgroundImage;
			var setAttributes = this.props.setAttributes;


			setAttributes({ backgroundImage: null });
		}

		/*
   * Event to set Image as while adding.
   */

	}, {
		key: "onSelectImage",
		value: function onSelectImage(media) {
			var backgroundImage = this.props.attributes.backgroundImage;
			var setAttributes = this.props.setAttributes;


			if (!media || !media.url) {
				setAttributes({ backgroundImage: null });
				return;
			}

			if (!media.type || "image" != media.type) {
				return;
			}

			setAttributes({ backgroundImage: media });
		}

		/*
   * Event to set Video as null while removing.
   */

	}, {
		key: "onRemoveVideo",
		value: function onRemoveVideo() {
			var backgroundVideo = this.props.attributes.backgroundVideo;
			var setAttributes = this.props.setAttributes;


			setAttributes({ backgroundVideo: null });
		}

		/*
   * Event to set Video while adding.
   */

	}, {
		key: "onSelectVideo",
		value: function onSelectVideo(media) {
			var backgroundVideo = this.props.attributes.backgroundVideo;
			var setAttributes = this.props.setAttributes;


			if (!media || !media.url) {
				setAttributes({ backgroundVideo: null });
				return;
			}
			if (!media.type || "video" != media.type) {
				return;
			}
			setAttributes({ backgroundVideo: media });
		}
	}, {
		key: "render",
		value: function render() {
			var _props = this.props,
			    attributes = _props.attributes,
			    setAttributes = _props.setAttributes,
			    isSelected = _props.isSelected,
			    className = _props.className;
			var stack = attributes.stack,
			    align = attributes.align,
			    vAlign = attributes.vAlign,
			    contentWidth = attributes.contentWidth,
			    width = attributes.width,
			    tag = attributes.tag,
			    columnGap = attributes.columnGap,
			    leftPadding = attributes.leftPadding,
			    rightPadding = attributes.rightPadding,
			    topPadding = attributes.topPadding,
			    bottomPadding = attributes.bottomPadding,
			    topMargin = attributes.topMargin,
			    bottomMargin = attributes.bottomMargin,
			    backgroundType = attributes.backgroundType,
			    backgroundImage = attributes.backgroundImage,
			    backgroundVideo = attributes.backgroundVideo,
			    backgroundColor = attributes.backgroundColor,
			    backgroundPosition = attributes.backgroundPosition,
			    backgroundAttachment = attributes.backgroundAttachment,
			    backgroundRepeat = attributes.backgroundRepeat,
			    backgroundSize = attributes.backgroundSize,
			    gradientColor1 = attributes.gradientColor1,
			    gradientColor2 = attributes.gradientColor2,
			    gradientLocation1 = attributes.gradientLocation1,
			    gradientLocation2 = attributes.gradientLocation2,
			    gradientType = attributes.gradientType,
			    gradientAngle = attributes.gradientAngle,
			    backgroundOpacity = attributes.backgroundOpacity,
			    backgroundVideoColor = attributes.backgroundVideoColor,
			    backgroundVideoOpacity = attributes.backgroundVideoOpacity,
			    backgroundImageColor = attributes.backgroundImageColor,
			    borderStyle = attributes.borderStyle,
			    borderWidth = attributes.borderWidth,
			    borderRadius = attributes.borderRadius,
			    borderColor = attributes.borderColor,
			    columns = attributes.columns,
			    bottomType = attributes.bottomType,
			    bottomColor = attributes.bottomColor,
			    bottomHeight = attributes.bottomHeight,
			    bottomWidth = attributes.bottomWidth,
			    topType = attributes.topType,
			    topColor = attributes.topColor,
			    topHeight = attributes.topHeight,
			    topWidth = attributes.topWidth,
			    bottomFlip = attributes.bottomFlip,
			    topFlip = attributes.topFlip;


			var CustomTag = "" + tag;

			var element = document.getElementById("uagb-columns-style-" + this.props.clientId);

			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_1__styling__["a" /* default */])(this.props);
			}

			var active = isSelected ? "active" : "not-active";

			var dividers = [{ value: "none", label: __("None") }, { value: "tilt", label: __("Tilt") }, { value: "mountains", label: __("Mountains") }, { value: "wave_brush", label: __("Wave Brush") }, { value: "triangle", label: __("Triangle") }];

			var bottomSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(SelectControl, {
					label: __("Type"),
					value: bottomType,
					onChange: function onChange(value) {
						return setAttributes({ bottomType: value });
					},
					options: dividers
				}),
				bottomType != "none" && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(
						"p",
						{ className: "uagb-setting-label" },
						__("Color"),
						wp.element.createElement(
							"span",
							{ className: "components-base-control__label" },
							wp.element.createElement("span", { className: "component-color-indicator", style: { bottomColor: bottomColor } })
						)
					),
					wp.element.createElement(ColorPalette, {
						value: bottomColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ bottomColor: colorValue });
						},
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Width"),
						value: bottomWidth,
						onChange: function onChange(value) {
							return setAttributes({ bottomWidth: value });
						},
						min: 100,
						max: 300,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Height"),
						value: bottomHeight,
						onChange: function onChange(value) {
							return setAttributes({ bottomHeight: value });
						},
						min: 0,
						max: 500,
						allowReset: true
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Flip"),
						checked: bottomFlip,
						onChange: function onChange(value) {
							return setAttributes({ bottomFlip: !bottomFlip });
						}
					})
				)
			);

			var topSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(SelectControl, {
					label: __("Type"),
					value: topType,
					onChange: function onChange(value) {
						return setAttributes({ topType: value });
					},
					options: dividers
				}),
				topType != "none" && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(
						"p",
						{ className: "uagb-setting-label" },
						__("Color"),
						wp.element.createElement(
							"span",
							{ className: "components-base-control__label" },
							wp.element.createElement("span", { className: "component-color-indicator", style: { topColor: topColor } })
						)
					),
					wp.element.createElement(ColorPalette, {
						value: topColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ topColor: colorValue });
						},
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Width"),
						value: topWidth,
						onChange: function onChange(value) {
							return setAttributes({ topWidth: value });
						},
						min: 100,
						max: 300,
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Height"),
						value: topHeight,
						onChange: function onChange(value) {
							return setAttributes({ topHeight: value });
						},
						min: 0,
						max: 500,
						allowReset: true
					}),
					wp.element.createElement(ToggleControl, {
						label: __("Flip"),
						checked: topFlip,
						onChange: function onChange(value) {
							return setAttributes({ topFlip: !topFlip });
						}
					})
				)
			);

			var top_divider_html = topType != "none" && wp.element.createElement(
				"div",
				{
					className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-columns__shape", "uagb-columns__shape-top", { "uagb-columns__shape-flip": topFlip === true }) },
				__WEBPACK_IMPORTED_MODULE_6__shapes__["a" /* default */][topType]
			);

			var bottom_divider_html = bottomType != "none" && wp.element.createElement(
				"div",
				{
					className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-columns__shape", "uagb-columns__shape-bottom", { "uagb-columns__shape-flip": bottomFlip === true }),
					"data-negative": "false" },
				__WEBPACK_IMPORTED_MODULE_6__shapes__["a" /* default */][bottomType]
			);

			return wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					BlockControls,
					null,
					wp.element.createElement(BlockAlignmentToolbar, {
						value: align,
						onChange: function onChange(value) {
							setAttributes({ align: value });
						},
						controls: ["wide", "full"]
					}),
					wp.element.createElement(
						Toolbar,
						null,
						wp.element.createElement(
							Tooltip,
							{ text: __("Vertically Top") },
							wp.element.createElement(
								Button,
								{
									className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("components-icon-button", "components-toolbar__control", { "is-active": vAlign === "top" }),
									onClick: function onClick() {
										return setAttributes({ vAlign: "top" });
									}
								},
								__WEBPACK_IMPORTED_MODULE_5__dist_blocks_uagb_controls_block_icons__["a" /* default */].top_align
							)
						)
					),
					wp.element.createElement(
						Toolbar,
						null,
						wp.element.createElement(
							Tooltip,
							{ text: __("Vertically Middle") },
							wp.element.createElement(
								Button,
								{
									className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("components-icon-button", "components-toolbar__control", { "is-active": vAlign === "middle" }),
									onClick: function onClick() {
										return setAttributes({ vAlign: "middle" });
									}
								},
								__WEBPACK_IMPORTED_MODULE_5__dist_blocks_uagb_controls_block_icons__["a" /* default */].middle_align
							)
						)
					),
					wp.element.createElement(
						Toolbar,
						null,
						wp.element.createElement(
							Tooltip,
							{ text: __("Vertically Bottom") },
							wp.element.createElement(
								Button,
								{
									className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("components-icon-button", "components-toolbar__control", { "is-active": vAlign === "bottom" }),
									onClick: function onClick() {
										return setAttributes({ vAlign: "bottom" });
									}
								},
								__WEBPACK_IMPORTED_MODULE_5__dist_blocks_uagb_controls_block_icons__["a" /* default */].bottom_align
							)
						)
					)
				),
				wp.element.createElement(
					InspectorControls,
					null,
					wp.element.createElement(
						PanelBody,
						{ title: __("Layout") },
						wp.element.createElement(RangeControl, {
							label: __("Columns"),
							value: columns,
							min: 0,
							max: 6,
							onChange: function onChange(value) {
								return setAttributes({ columns: value });
							}
						}),
						wp.element.createElement(SelectControl, {
							label: __("Stack on"),
							value: stack,
							options: [{ value: "none", label: __("None") }, { value: "tablet", label: __("Tablet") }, { value: "mobile", label: __("Mobile") }],
							onChange: function onChange(value) {
								return setAttributes({ stack: value });
							}
						}),
						wp.element.createElement(
							"p",
							{ className: "uagb-note" },
							__("Note: Choose on what breakpoint the columns will stack.")
						),
						wp.element.createElement(SelectControl, {
							label: __("Content Inner Width"),
							value: contentWidth,
							onChange: function onChange(value) {
								return setAttributes({ contentWidth: value });
							},
							options: [{ value: "theme", label: __("Theme Container Width") }, { value: "custom", label: __("Custom") }]
						}),
						contentWidth == "custom" && wp.element.createElement(RangeControl, {
							label: __("Inner Width"),
							value: width,
							min: 0,
							max: 2000,
							onChange: function onChange(value) {
								return setAttributes({ width: value });
							}
						}),
						wp.element.createElement(SelectControl, {
							label: __("Column Gap"),
							value: columnGap,
							onChange: function onChange(value) {
								return setAttributes({ columnGap: value });
							},
							options: [{ value: "10", label: __("Default (10px)") }, { value: "0", label: __("No Gap (0px)") }, { value: "5", label: __("Narrow (5px)") }, { value: "15", label: __("Extended (15px)") }, { value: "20", label: __("Wide (20px)") }, { value: "30", label: __("Wider (30px)") }]
						}),
						wp.element.createElement(
							"p",
							{ className: "uagb-note" },
							__("Note: The individual Column Gap can be managed from Column Settings.")
						),
						wp.element.createElement(SelectControl, {
							label: __("HTML Tag"),
							value: tag,
							onChange: function onChange(value) {
								return setAttributes({ tag: value });
							},
							options: [{ value: "div", label: __("div") }, { value: "header", label: __("header") }, { value: "footer", label: __("footer") }, { value: "main", label: __("main") }, { value: "article", label: __("article") }, { value: "section", label: __("section") }, { value: "aside", label: __("aside") }, { value: "nav", label: __("nav") }]
						})
					),
					wp.element.createElement(
						PanelBody,
						{ title: __("Spacing"), initialOpen: false },
						wp.element.createElement(RangeControl, {
							label: __("Left Padding"),
							value: leftPadding,
							onChange: function onChange(value) {
								return setAttributes({ leftPadding: value });
							},
							min: 0,
							max: 200,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Right Padding"),
							value: rightPadding,
							onChange: function onChange(value) {
								return setAttributes({ rightPadding: value });
							},
							min: 0,
							max: 200,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Top Padding"),
							value: topPadding,
							onChange: function onChange(value) {
								return setAttributes({ topPadding: value });
							},
							min: 0,
							max: 200,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Bottom Padding"),
							value: bottomPadding,
							onChange: function onChange(value) {
								return setAttributes({ bottomPadding: value });
							},
							min: 0,
							max: 200,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Top Margin"),
							value: topMargin,
							onChange: function onChange(value) {
								return setAttributes({ topMargin: value });
							},
							min: -200,
							max: 200,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Bottom Margin"),
							value: bottomMargin,
							onChange: function onChange(value) {
								return setAttributes({ bottomMargin: value });
							},
							min: -200,
							max: 200,
							allowReset: true
						})
					),
					wp.element.createElement(
						PanelBody,
						{ title: __("Background"), initialOpen: false },
						wp.element.createElement(SelectControl, {
							label: __("Background Type"),
							value: backgroundType,
							onChange: function onChange(value) {
								return setAttributes({ backgroundType: value });
							},
							options: [{ value: "none", label: __("None") }, { value: "color", label: __("Color") }, { value: "gradient", label: __("Gradient") }, { value: "image", label: __("Image") }, { value: "video", label: __("Video") }]
						}),
						"color" == backgroundType && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(
								"p",
								{ className: "uagb-setting-label" },
								__("Background Color"),
								wp.element.createElement(
									"span",
									{ className: "components-base-control__label" },
									wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: backgroundColor } })
								)
							),
							wp.element.createElement(ColorPalette, {
								value: backgroundColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ backgroundColor: colorValue });
								},
								allowReset: true
							})
						),
						"image" == backgroundType && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(
								BaseControl,
								{
									className: "editor-bg-image-control",
									label: __("Background Image") },
								wp.element.createElement(MediaUpload, {
									title: __("Select Background Image"),
									onSelect: this.onSelectImage,
									allowedTypes: ["image"],
									value: backgroundImage,
									render: function render(_ref) {
										var open = _ref.open;
										return wp.element.createElement(
											Button,
											{ isDefault: true, onClick: open },
											!backgroundImage ? __("Select Background Image") : __("Replace image")
										);
									}
								}),
								backgroundImage && wp.element.createElement(
									Button,
									{ className: "uagb-rm-btn", onClick: this.onRemoveImage, isLink: true, isDestructive: true },
									__("Remove Image")
								)
							),
							backgroundImage && wp.element.createElement(
								Fragment,
								null,
								wp.element.createElement(SelectControl, {
									label: __("Image Position"),
									value: backgroundPosition,
									onChange: function onChange(value) {
										return setAttributes({ backgroundPosition: value });
									},
									options: [{ value: "top-left", label: __("Top Left") }, { value: "top-center", label: __("Top Center") }, { value: "top-right", label: __("Top Right") }, { value: "center-left", label: __("Center Left") }, { value: "center-center", label: __("Center Center") }, { value: "center-right", label: __("Center Right") }, { value: "bottom-left", label: __("Bottom Left") }, { value: "bottom-center", label: __("Bottom Center") }, { value: "bottom-right", label: __("Bottom Right") }]
								}),
								wp.element.createElement(SelectControl, {
									label: __("Attachment"),
									value: backgroundAttachment,
									onChange: function onChange(value) {
										return setAttributes({ backgroundAttachment: value });
									},
									options: [{ value: "fixed", label: __("Fixed") }, { value: "scroll", label: __("Scroll") }]
								}),
								wp.element.createElement(SelectControl, {
									label: __("Repeat"),
									value: backgroundRepeat,
									onChange: function onChange(value) {
										return setAttributes({ backgroundRepeat: value });
									},
									options: [{ value: "no-repeat", label: __("No Repeat") }, { value: "repeat", label: __("Repeat") }, { value: "repeat-x", label: __("Repeat-x") }, { value: "repeat-y", label: __("Repeat-y") }]
								}),
								wp.element.createElement(SelectControl, {
									label: __("Size"),
									value: backgroundSize,
									onChange: function onChange(value) {
										return setAttributes({ backgroundSize: value });
									},
									options: [{ value: "auto", label: __("Auto") }, { value: "cover", label: __("Cover") }, { value: "contain", label: __("Contain") }]
								}),
								wp.element.createElement(
									Fragment,
									null,
									wp.element.createElement(
										"p",
										{ className: "uagb-setting-label" },
										__("Image Overlay Color"),
										wp.element.createElement(
											"span",
											{ className: "components-base-control__label" },
											wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: backgroundImageColor } })
										)
									),
									wp.element.createElement(ColorPalette, {
										value: backgroundImageColor,
										onChange: function onChange(colorValue) {
											return setAttributes({ backgroundImageColor: colorValue });
										},
										allowReset: true
									})
								)
							)
						),
						"gradient" == backgroundType && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(PanelColorSettings, {
								title: __("Color Settings"),
								colorSettings: [{
									value: gradientColor1,
									onChange: function onChange(value) {
										return setAttributes({ gradientColor1: value });
									},
									label: __("Color 1")
								}, {
									value: gradientColor2,
									onChange: function onChange(value) {
										return setAttributes({ gradientColor2: value });
									},
									label: __("Color 2")
								}]
							}),
							wp.element.createElement(SelectControl, {
								label: __("Type"),
								value: gradientType,
								onChange: function onChange(value) {
									return setAttributes({ gradientType: value });
								},
								options: [{ value: "linear", label: __("Linear") }, { value: "radial", label: __("Radial") }]
							}),
							wp.element.createElement(RangeControl, {
								label: __("Location 1"),
								value: gradientLocation1,
								onChange: function onChange(value) {
									return setAttributes({ gradientLocation1: value });
								},
								min: 0,
								max: 100,
								allowReset: true
							}),
							wp.element.createElement(RangeControl, {
								label: __("Location 2"),
								value: gradientLocation2,
								onChange: function onChange(value) {
									return setAttributes({ gradientLocation2: value });
								},
								min: 0,
								max: 100,
								allowReset: true
							}),
							wp.element.createElement(RangeControl, {
								label: __("Angle"),
								value: gradientAngle,
								onChange: function onChange(value) {
									return setAttributes({ gradientAngle: value });
								},
								min: 0,
								max: 360,
								allowReset: true
							})
						),
						"video" == backgroundType && wp.element.createElement(
							BaseControl,
							{
								className: "editor-bg-video-control",
								label: __("Background Video")
							},
							wp.element.createElement(MediaUpload, {
								title: __("Select Background Video"),
								onSelect: this.onSelectVideo,
								allowedTypes: ["video"],
								value: backgroundVideo,
								render: function render(_ref2) {
									var open = _ref2.open;
									return wp.element.createElement(
										Button,
										{ isDefault: true, onClick: open },
										!backgroundVideo ? __("Select Background Video") : __("Replace Video")
									);
								}
							}),
							backgroundVideo && wp.element.createElement(
								Button,
								{ onClick: this.onRemoveVideo, isLink: true, isDestructive: true },
								__("Remove Video")
							)
						),
						("color" == backgroundType || "image" == backgroundType && backgroundImage || "gradient" == backgroundType) && wp.element.createElement(RangeControl, {
							label: __("Opacity"),
							value: backgroundOpacity,
							onChange: function onChange(value) {
								return setAttributes({ backgroundOpacity: value });
							},
							min: 0,
							max: 100,
							allowReset: true,
							initialPosition: 0
						}),
						"video" == backgroundType && backgroundVideo && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(
								"p",
								{ className: "uagb-setting-label" },
								__("Video Overlay Color"),
								wp.element.createElement(
									"span",
									{ className: "components-base-control__label" },
									wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: backgroundVideoColor } })
								)
							),
							wp.element.createElement(ColorPalette, {
								value: backgroundVideoColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ backgroundVideoColor: colorValue });
								},
								allowReset: true
							})
						),
						"video" == backgroundType && backgroundVideo && wp.element.createElement(RangeControl, {
							label: __("Opacity"),
							value: backgroundVideoOpacity,
							onChange: function onChange(value) {
								return setAttributes({ backgroundVideoOpacity: value });
							},
							min: 0,
							max: 100,
							allowReset: true,
							initialPosition: 50
						})
					),
					wp.element.createElement(
						PanelBody,
						{ title: __("Shape Dividers"), initialOpen: false },
						wp.element.createElement(
							TabPanel,
							{ className: "uagb-inspect-tabs uagb-inspect-tabs-col-2",
								activeClass: "active-tab",
								tabs: [{
									name: "top",
									title: __("Top"),
									className: "uagb-top-tab"
								}, {
									name: "bottom",
									title: __("Bottom"),
									className: "uagb-bottom-tab"
								}] },
							function (tabName) {
								var tabout = void 0;
								if ("bottom" === tabName.name) {
									tabout = bottomSettings;
								} else {
									tabout = topSettings;
								}
								return wp.element.createElement(
									"div",
									null,
									tabout
								);
							}
						)
					),
					wp.element.createElement(
						PanelBody,
						{ title: __("Border"), initialOpen: false },
						wp.element.createElement(SelectControl, {
							label: __("Border Style"),
							value: borderStyle,
							onChange: function onChange(value) {
								return setAttributes({ borderStyle: value });
							},
							options: [{ value: "none", label: __("None") }, { value: "solid", label: __("Solid") }, { value: "dotted", label: __("Dotted") }, { value: "dashed", label: __("Dashed") }, { value: "double", label: __("Double") }, { value: "groove", label: __("Groove") }, { value: "inset", label: __("Inset") }, { value: "outset", label: __("Outset") }, { value: "ridge", label: __("Ridge") }]
						}),
						"none" != borderStyle && wp.element.createElement(RangeControl, {
							label: __("Border Width"),
							value: borderWidth,
							onChange: function onChange(value) {
								return setAttributes({ borderWidth: value });
							},
							min: 0,
							max: 50,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Border Radius"),
							value: borderRadius,
							onChange: function onChange(value) {
								return setAttributes({ borderRadius: value });
							},
							min: 0,
							max: 1000,
							allowReset: true
						}),
						"none" != borderStyle && wp.element.createElement(
							Fragment,
							null,
							wp.element.createElement(
								"p",
								{ className: "uagb-setting-label" },
								__("Border Color"),
								wp.element.createElement(
									"span",
									{ className: "components-base-control__label" },
									wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: borderColor } })
								)
							),
							wp.element.createElement(ColorPalette, {
								value: borderColor,
								onChange: function onChange(colorValue) {
									return setAttributes({ borderColor: colorValue });
								},
								allowReset: true
							})
						)
					)
				),
				wp.element.createElement(
					CustomTag,
					{
						className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-columns__wrap", "uagb-columns__background-" + backgroundType, "uagb-columns__edit-" + active, "uagb-columns__stack-" + stack, "uagb-columns__valign-" + vAlign, "uagb-columns__gap-" + columnGap, "align" + align),
						id: "uagb-columns-" + this.props.clientId
					},
					wp.element.createElement("div", { className: "uagb-columns__overlay" }),
					top_divider_html,
					"video" == backgroundType && wp.element.createElement(
						"div",
						{ className: "uagb-columns__video-wrap" },
						backgroundVideo && wp.element.createElement("video", { src: backgroundVideo.url, autoPlay: true, loop: true, muted: true })
					),
					wp.element.createElement(
						"div",
						{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-columns__inner-wrap", "uagb-columns__columns-" + columns) },
						wp.element.createElement(InnerBlocks, {
							template: getColumnsTemplate(columns),
							templateLock: "all",
							allowedBlocks: ALLOWED_BLOCKS
						})
					),
					bottom_divider_html
				)
			);
		}
	}]);

	return UAGBColumns;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (withNotices(UAGBColumns));

/***/ }),
/* 410 */
/*!***************************************!*\
  !*** ./src/blocks/columns/styling.js ***!
  \***************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__inline_styles__ = __webpack_require__(/*! ./inline-styles */ 411);
/**
 * Set inline styles.
 * @param  {object} props - The block object.
 * @return {object} The inline background type CSS.
 */



function styling(props) {
	var _props$attributes = props.attributes,
	    backgroundType = _props$attributes.backgroundType,
	    backgroundVideoColor = _props$attributes.backgroundVideoColor,
	    backgroundImageColor = _props$attributes.backgroundImageColor,
	    backgroundOpacity = _props$attributes.backgroundOpacity,
	    backgroundColor = _props$attributes.backgroundColor,
	    backgroundVideoOpacity = _props$attributes.backgroundVideoOpacity,
	    backgroundVideo = _props$attributes.backgroundVideo,
	    borderRadius = _props$attributes.borderRadius,
	    contentWidth = _props$attributes.contentWidth,
	    width = _props$attributes.width,
	    columnGap = _props$attributes.columnGap,
	    topColor = _props$attributes.topColor,
	    topHeight = _props$attributes.topHeight,
	    topWidth = _props$attributes.topWidth,
	    bottomColor = _props$attributes.bottomColor,
	    bottomHeight = _props$attributes.bottomHeight,
	    bottomWidth = _props$attributes.bottomWidth;


	var max_width = "100%";

	if ("custom" == contentWidth) {
		if ("" != width) {
			max_width = width + "px";
		}
	}

	var selectors = {
		".uagb-columns__wrap": Object(__WEBPACK_IMPORTED_MODULE_0__inline_styles__["a" /* default */])(props),
		" .uagb-columns__video-wrap": {
			"opacity": typeof backgroundVideoOpacity != "undefined" ? (100 - backgroundVideoOpacity) / 100 : 0.5
		},
		" > .uagb-columns__inner-wrap": {
			"max-width": max_width
		},
		" .uagb-column__inner-wrap": {
			"padding": columnGap + "px"
		},
		" .uagb-columns__shape-top svg": {
			width: "calc( " + topWidth + "% + 1.3px )",
			height: topHeight + "px"
		},
		" .uagb-columns__shape-top .uagb-columns__shape-fill": {
			fill: topColor
		},
		" .uagb-columns__shape-bottom svg": {
			width: "calc( " + bottomWidth + "% + 1.3px )",
			height: bottomHeight + "px"
		},
		" .uagb-columns__shape-bottom .uagb-columns__shape-fill": {
			fill: bottomColor
		}
	};

	selectors[" > .uagb-columns__overlay"] = {};

	if ("video" == backgroundType) {
		selectors[" > .uagb-columns__overlay"] = {
			"opacity": 1,
			"background-color": backgroundVideoColor
		};
	} else if ("image" == backgroundType) {
		selectors[" > .uagb-columns__overlay"] = {
			"opacity": typeof backgroundOpacity != "undefined" ? backgroundOpacity / 100 : "",
			"background-color": backgroundImageColor
		};
	} else if ("color" == backgroundType) {
		selectors[" > .uagb-columns__overlay"] = {
			"opacity": typeof backgroundOpacity != "undefined" ? backgroundOpacity / 100 : "",
			"background-color": backgroundColor
		};
	}

	selectors[" > .uagb-columns__overlay"]["border-radius"] = borderRadius + "px";

	var styling_css = "";

	for (var i in selectors) {

		styling_css += "#uagb-columns-" + props.clientId;

		styling_css += i + " { ";

		var sel = selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (styling);

/***/ }),
/* 411 */
/*!*********************************************!*\
  !*** ./src/blocks/columns/inline-styles.js ***!
  \*********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline styles.
 * @param  {object} props - The block object.
 * @return {object} The inline background type CSS.
 */
function inlineStyles(props, isEditor) {
	var _props$attributes = props.attributes,
	    leftPadding = _props$attributes.leftPadding,
	    rightPadding = _props$attributes.rightPadding,
	    topPadding = _props$attributes.topPadding,
	    bottomPadding = _props$attributes.bottomPadding,
	    topMargin = _props$attributes.topMargin,
	    bottomMargin = _props$attributes.bottomMargin,
	    backgroundPosition = _props$attributes.backgroundPosition,
	    backgroundSize = _props$attributes.backgroundSize,
	    backgroundAttachment = _props$attributes.backgroundAttachment,
	    backgroundImage = _props$attributes.backgroundImage,
	    backgroundColor = _props$attributes.backgroundColor,
	    backgroundOpacity = _props$attributes.backgroundOpacity,
	    backgroundRepeat = _props$attributes.backgroundRepeat,
	    backgroundType = _props$attributes.backgroundType,
	    gradientColor1 = _props$attributes.gradientColor1,
	    gradientColor2 = _props$attributes.gradientColor2,
	    gradientLocation1 = _props$attributes.gradientLocation1,
	    gradientLocation2 = _props$attributes.gradientLocation2,
	    gradientType = _props$attributes.gradientType,
	    gradientAngle = _props$attributes.gradientAngle,
	    borderStyle = _props$attributes.borderStyle,
	    borderWidth = _props$attributes.borderWidth,
	    borderRadius = _props$attributes.borderRadius,
	    borderColor = _props$attributes.borderColor;


	var style = {
		"padding-top": topPadding + "px",
		"padding-bottom": bottomPadding + "px",
		"padding-left": leftPadding + "px",
		"padding-right": rightPadding + "px",
		"margin-top": topMargin + "px",
		"margin-bottom": bottomMargin + "px",
		"border-radius": borderRadius + "px"
	};

	if (borderStyle != "none") {
		style["border-style"] = borderStyle;
		style["border-width"] = borderWidth + "px";
		style["border-color"] = borderColor;
	}

	var position = backgroundPosition.replace("-", " ");

	if ("image" === backgroundType) {

		style["background-image"] = backgroundImage ? "url(" + backgroundImage.url + ")" : null;
		style["background-position"] = position;
		style["background-attachment"] = backgroundAttachment;
		style["background-repeat"] = backgroundRepeat;
		style["background-size"] = backgroundSize;
	} else if ("gradient" === backgroundType) {

		style["background-color"] = "transparent";
		style["opacity"] = typeof backgroundOpacity != "undefined" ? backgroundOpacity / 100 : "";

		if ("linear" === gradientType) {

			style["background-image"] = "linear-gradient(" + gradientAngle + "deg, " + gradientColor1 + " " + gradientLocation1 + "%, " + gradientColor2 + " " + gradientLocation2 + "%)";
		} else {

			style["background-image"] = "radial-gradient( at center center, " + gradientColor1 + " " + gradientLocation1 + "%, " + gradientColor2 + " " + gradientLocation2 + "%)";
		}
	}

	return style;
}

/* harmony default export */ __webpack_exports__["a"] = (inlineStyles);

/***/ }),
/* 412 */
/*!**************************************!*\
  !*** ./node_modules/memize/index.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {module.exports = function memize( fn, options ) {
	var size = 0,
		maxSize, head, tail;

	if ( options && options.maxSize ) {
		maxSize = options.maxSize;
	}

	function memoized( /* ...args */ ) {
		var node = head,
			len = arguments.length,
			args, i;

		searchCache: while ( node ) {
			// Perform a shallow equality test to confirm that whether the node
			// under test is a candidate for the arguments passed. Two arrays
			// are shallowly equal if their length matches and each entry is
			// strictly equal between the two sets. Avoid abstracting to a
			// function which could incur an arguments leaking deoptimization.

			// Check whether node arguments match arguments length
			if ( node.args.length !== arguments.length ) {
				node = node.next;
				continue;
			}

			// Check whether node arguments match arguments values
			for ( i = 0; i < len; i++ ) {
				if ( node.args[ i ] !== arguments[ i ] ) {
					node = node.next;
					continue searchCache;
				}
			}

			// At this point we can assume we've found a match

			// Surface matched node to head if not already
			if ( node !== head ) {
				// As tail, shift to previous. Must only shift if not also
				// head, since if both head and tail, there is no previous.
				if ( node === tail ) {
					tail = node.prev;
				}

				// Adjust siblings to point to each other. If node was tail,
				// this also handles new tail's empty `next` assignment.
				node.prev.next = node.next;
				if ( node.next ) {
					node.next.prev = node.prev;
				}

				node.next = head;
				node.prev = null;
				head.prev = node;
				head = node;
			}

			// Return immediately
			return node.val;
		}

		// No cached value found. Continue to insertion phase:

		// Create a copy of arguments (avoid leaking deoptimization)
		args = new Array( len );
		for ( i = 0; i < len; i++ ) {
			args[ i ] = arguments[ i ];
		}

		node = {
			args: args,

			// Generate the result from original function
			val: fn.apply( null, args )
		};

		// Don't need to check whether node is already head, since it would
		// have been returned above already if it was

		// Shift existing head down list
		if ( head ) {
			head.prev = node;
			node.next = head;
		} else {
			// If no head, follows that there's no tail (at initial or reset)
			tail = node;
		}

		// Trim tail if we're reached max size and are pending cache insertion
		if ( size === maxSize ) {
			tail = tail.prev;
			tail.next = null;
		} else {
			size++;
		}

		head = node;

		return node.val;
	}

	memoized.clear = function() {
		head = null;
		tail = null;
		size = 0;
	};

	if ( process.env.NODE_ENV === 'test' ) {
		// Cache is not exposed in the public API, but used in tests to ensure
		// expected list progression
		memoized.getCache = function() {
			return [ head, tail, size ];
		};
	}

	return memoized;
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../process/browser.js */ 2)))

/***/ }),
/* 413 */
/*!************************************!*\
  !*** ./node_modules/lodash/map.js ***!
  \************************************/
/*! dynamic exports provided */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(/*! ./_arrayMap */ 27),
    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ 75),
    baseMap = __webpack_require__(/*! ./_baseMap */ 414),
    isArray = __webpack_require__(/*! ./isArray */ 6);

/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */
function map(collection, iteratee) {
  var func = isArray(collection) ? arrayMap : baseMap;
  return func(collection, baseIteratee(iteratee, 3));
}

module.exports = map;


/***/ }),
/* 414 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseMap.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(/*! ./_baseEach */ 415),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ 16);

/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = isArrayLike(collection) ? Array(collection.length) : [];

  baseEach(collection, function(value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

module.exports = baseMap;


/***/ }),
/* 415 */
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseEach.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseForOwn = __webpack_require__(/*! ./_baseForOwn */ 416),
    createBaseEach = __webpack_require__(/*! ./_createBaseEach */ 419);

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = createBaseEach(baseForOwn);

module.exports = baseEach;


/***/ }),
/* 416 */
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseForOwn.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseFor = __webpack_require__(/*! ./_baseFor */ 417),
    keys = __webpack_require__(/*! ./keys */ 15);

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;


/***/ }),
/* 417 */
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseFor.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__(/*! ./_createBaseFor */ 418);

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;


/***/ }),
/* 418 */
/*!***********************************************!*\
  !*** ./node_modules/lodash/_createBaseFor.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;


/***/ }),
/* 419 */
/*!************************************************!*\
  !*** ./node_modules/lodash/_createBaseEach.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(/*! ./isArrayLike */ 16);

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

module.exports = createBaseEach;


/***/ }),
/* 420 */
/*!****************************************!*\
  !*** ./src/blocks/blockquote/block.js ***!
  \****************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_TweetButton__ = __webpack_require__(/*! ./components/TweetButton */ 144);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Description__ = __webpack_require__(/*! ./components/Description */ 145);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_AuthorText__ = __webpack_require__(/*! ./components/AuthorText */ 146);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_AuthorImage__ = __webpack_require__(/*! ./components/AuthorImage */ 147);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__edit__ = __webpack_require__(/*! ./edit */ 421);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__attributes__ = __webpack_require__(/*! ./attributes */ 423);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 424);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8__editor_scss__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__style_scss__ = __webpack_require__(/*! ./style.scss */ 425);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9__style_scss__);
/**
 * BLOCK: Quote
 */

// Import block dependencies and components.







// Import icon.




var __ = wp.i18n.__;

// Import registerBlockType() from wp.blocks

var registerBlockType = wp.blocks.registerBlockType;
var RichText = wp.editor.RichText;

// Extend component

var Fragment = wp.element.Fragment;

/**
 * Register: as Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior.
 *
 * @link https://.org/gutenberg/handbook/block-api/
 * @param  {string}   namwordpresse     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType("uagb/blockquote", {
	title: uagb_blocks_info.blocks["uagb/blockquote"]["title"],
	description: uagb_blocks_info.blocks["uagb/blockquote"]["description"],
	icon: __WEBPACK_IMPORTED_MODULE_1__dist_blocks_uagb_controls_block_icons__["a" /* default */].blockquote,
	keywords: [__("blockquote"), __("quote"), __("uagb")],
	category: uagb_blocks_info.category,
	attributes: __WEBPACK_IMPORTED_MODULE_7__attributes__["a" /* default */],
	edit: __WEBPACK_IMPORTED_MODULE_6__edit__["a" /* default */],
	save: function save(props) {
		var _props$attributes = props.attributes,
		    block_id = _props$attributes.block_id,
		    skinStyle = _props$attributes.skinStyle,
		    align = _props$attributes.align,
		    quoteStyle = _props$attributes.quoteStyle,
		    iconSkin = _props$attributes.iconSkin,
		    authorImage = _props$attributes.authorImage,
		    enableTweet = _props$attributes.enableTweet,
		    className = _props$attributes.className,
		    iconView = _props$attributes.iconView,
		    author = _props$attributes.author,
		    description_text = _props$attributes.description_text,
		    authorImgPosition = _props$attributes.authorImgPosition,
		    stack = _props$attributes.stack;


		return wp.element.createElement(
			"div",
			{
				className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-blockquote__outer-wrap"),
				id: "uagb-quote-" + block_id },
			wp.element.createElement(
				"div",
				{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-blockquote__wrap", "uagb-blockquote__skin-" + skinStyle, skinStyle !== "border" ? "uagb-quote__align-" + align : "", skinStyle === "quotation" ? "uagb-quote__style-" + quoteStyle : "", enableTweet ? "uagb-quote__with-tweet uagb-quote__tweet-style-" + iconSkin + " uagb-quote__tweet-" + iconView : "", authorImage && authorImgPosition !== 'top' ? "uagb-quote-stack-img-" + stack : "") },
				wp.element.createElement(
					"blockquote",
					{ className: "uagb-blockquote" },
					skinStyle === "quotation" && wp.element.createElement("span", { className: "fas uagb-quote__icon" }),
					wp.element.createElement(
						"div",
						{ className: "uagb-blockquote__content-wrap" },
						description_text !== "" && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_Description__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set", props: props }),
						wp.element.createElement(
							"footer",
							null,
							wp.element.createElement(
								"div",
								{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-quote__author-wrap", authorImage !== "" ? "uagb-quote__author-at-" + authorImgPosition : "") },
								wp.element.createElement(__WEBPACK_IMPORTED_MODULE_5__components_AuthorImage__["a" /* default */], { attributes: props.attributes }),
								author !== "" && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_AuthorText__["a" /* default */], { attributes: props.attributes, setAttributes: "not_set", props: props })
							),
							enableTweet && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_TweetButton__["a" /* default */], { attributes: props.attributes })
						)
					)
				)
			)
		);
	}
});

/***/ }),
/* 421 */
/*!***************************************!*\
  !*** ./src/blocks/blockquote/edit.js ***!
  \***************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_TweetButton__ = __webpack_require__(/*! ./components/TweetButton */ 144);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Description__ = __webpack_require__(/*! ./components/Description */ 145);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_AuthorText__ = __webpack_require__(/*! ./components/AuthorText */ 146);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_AuthorImage__ = __webpack_require__(/*! ./components/AuthorImage */ 147);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__styling__ = __webpack_require__(/*! ./styling */ 422);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__dist_blocks_uagb_controls_block_icons__ = __webpack_require__(/*! ../../../dist/blocks/uagb-controls/block-icons */ 1);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Import block dependencies and components.


// Import icon.







var __ = wp.i18n.__;
var _wp$editor = wp.editor,
    AlignmentToolbar = _wp$editor.AlignmentToolbar,
    BlockControls = _wp$editor.BlockControls,
    InspectorControls = _wp$editor.InspectorControls,
    ColorPalette = _wp$editor.ColorPalette,
    MediaUpload = _wp$editor.MediaUpload;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    RangeControl = _wp$components.RangeControl,
    Button = _wp$components.Button,
    TextControl = _wp$components.TextControl,
    BaseControl = _wp$components.BaseControl,
    ToggleControl = _wp$components.ToggleControl,
    Toolbar = _wp$components.Toolbar,
    Tooltip = _wp$components.Tooltip,
    TabPanel = _wp$components.TabPanel;

// Extend component

var _wp$element = wp.element,
    Component = _wp$element.Component,
    Fragment = _wp$element.Fragment;

var UAGBBlockQuote = function (_Component) {
	_inherits(UAGBBlockQuote, _Component);

	function UAGBBlockQuote() {
		_classCallCheck(this, UAGBBlockQuote);

		var _this = _possibleConstructorReturn(this, (UAGBBlockQuote.__proto__ || Object.getPrototypeOf(UAGBBlockQuote)).apply(this, arguments));

		_this.onSelectImage = _this.onSelectImage.bind(_this);
		_this.onRemoveImage = _this.onRemoveImage.bind(_this);
		return _this;
	}

	/*
  * Event to set Image as null while removing.
  */


	_createClass(UAGBBlockQuote, [{
		key: "onRemoveImage",
		value: function onRemoveImage() {
			var authorImage = this.props.attributes.authorImage;
			var setAttributes = this.props.setAttributes;


			setAttributes({ authorImage: null });
		}

		/*
   * Event to set Image as while adding.
   */

	}, {
		key: "onSelectImage",
		value: function onSelectImage(media) {
			var authorImage = this.props.attributes.authorImage;
			var setAttributes = this.props.setAttributes;


			if (!media || !media.url) {
				setAttributes({ authorImage: null });
				return;
			}

			if (!media.type || "image" != media.type) {
				return;
			}

			setAttributes({ authorImage: media });
		}
	}, {
		key: "render",
		value: function render() {
			var _props = this.props,
			    isSelected = _props.isSelected,
			    className = _props.className,
			    setAttributes = _props.setAttributes,
			    attributes = _props.attributes,
			    mergeBlocks = _props.mergeBlocks,
			    insertBlocksAfter = _props.insertBlocksAfter,
			    onReplace = _props.onReplace;

			// Setup the attributes.

			var block_id = attributes.block_id,
			    skinStyle = attributes.skinStyle,
			    align = attributes.align,
			    description_text = attributes.description_text,
			    author = attributes.author,
			    authorColor = attributes.authorColor,
			    descColor = attributes.descColor,
			    descFontSize = attributes.descFontSize,
			    authorFontSize = attributes.authorFontSize,
			    descSpace = attributes.descSpace,
			    authorSpace = attributes.authorSpace,
			    stack = attributes.stack,
			    borderColor = attributes.borderColor,
			    borderStyle = attributes.borderStyle,
			    borderWidth = attributes.borderWidth,
			    borderGap = attributes.borderGap,
			    verticalPadding = attributes.verticalPadding,
			    quoteColor = attributes.quoteColor,
			    quoteBgColor = attributes.quoteBgColor,
			    quoteSize = attributes.quoteSize,
			    quoteBorderRadius = attributes.quoteBorderRadius,
			    quoteStyle = attributes.quoteStyle,
			    enableTweet = attributes.enableTweet,
			    tweetLinkColor = attributes.tweetLinkColor,
			    tweetBtnColor = attributes.tweetBtnColor,
			    tweetBtnHoverColor = attributes.tweetBtnHoverColor,
			    tweetBtnBgColor = attributes.tweetBtnBgColor,
			    tweetBtnBgHoverColor = attributes.tweetBtnBgHoverColor,
			    tweetBtnFontSize = attributes.tweetBtnFontSize,
			    tweetBtnHrPadding = attributes.tweetBtnHrPadding,
			    tweetBtnVrPadding = attributes.tweetBtnVrPadding,
			    tweetIconSpacing = attributes.tweetIconSpacing,
			    iconView = attributes.iconView,
			    iconSkin = attributes.iconSkin,
			    iconLabel = attributes.iconLabel,
			    iconShareVia = attributes.iconShareVia,
			    iconTargetUrl = attributes.iconTargetUrl,
			    customUrl = attributes.customUrl,
			    authorImage = attributes.authorImage,
			    authorImageWidth = attributes.authorImageWidth,
			    authorImageSize = attributes.authorImageSize,
			    authorImgBorderRadius = attributes.authorImgBorderRadius,
			    authorImgPosition = attributes.authorImgPosition,
			    quoteTopMargin = attributes.quoteTopMargin,
			    quoteBottomMargin = attributes.quoteBottomMargin,
			    quoteLeftMargin = attributes.quoteLeftMargin,
			    quoteRightMargin = attributes.quoteRightMargin,
			    quoteHoverColor = attributes.quoteHoverColor,
			    quoteBgHoverColor = attributes.quoteBgHoverColor,
			    borderHoverColor = attributes.borderHoverColor;

			// Add CSS.

			var element = document.getElementById("uagb-blockquote-style-" + this.props.clientId);
			if (null != element && "undefined" != typeof element) {
				element.innerHTML = Object(__WEBPACK_IMPORTED_MODULE_5__styling__["a" /* default */])(this.props);
			}

			var image_name = "Select Image";
			if (authorImage) {
				if (authorImage.url == null || authorImage.url == "") {
					image_name = "Select Image";
				} else {
					image_name = "Replace Image";
				}
			}

			// Image sizes.
			var imageSizeOptions = [{ value: "thumbnail", label: __("Thumbnail") }, { value: "medium", label: __("Medium") }, { value: "full", label: __("Large") }];

			var border_settings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(SelectControl, {
					label: __("Border Style"),
					value: borderStyle,
					onChange: function onChange(value) {
						return setAttributes({ borderStyle: value });
					},
					options: [{ value: "none", label: __("None") }, { value: "solid", label: __("Solid") }, { value: "dotted", label: __("Dotted") }, { value: "dashed", label: __("Dashed") }, { value: "double", label: __("Double") }, { value: "groove", label: __("Groove") }, { value: "inset", label: __("Inset") }, { value: "outset", label: __("Outset") }, { value: "ridge", label: __("Ridge") }]
				}),
				"none" != borderStyle && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(
						"p",
						{ className: "uagb-setting-label" },
						__("Border Color"),
						wp.element.createElement(
							"span",
							{ className: "components-base-control__label" },
							wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: borderColor } })
						)
					),
					wp.element.createElement(ColorPalette, {
						value: borderColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ borderColor: colorValue });
						},
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Border Width"),
						value: borderWidth,
						onChange: function onChange(value) {
							return setAttributes({ borderWidth: value });
						},
						min: 0,
						max: 50,
						allowReset: true
					})
				)
			);

			var quote_settings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(RangeControl, {
					label: __("Quote Size"),
					value: quoteSize,
					onChange: function onChange(value) {
						return setAttributes({ quoteSize: value });
					},
					min: 0,
					max: 200,
					allowReset: true
				}),
				quoteBgColor && wp.element.createElement(RangeControl, {
					label: __("Quote Border Radius"),
					value: quoteBorderRadius,
					onChange: function onChange(value) {
						return setAttributes({ quoteBorderRadius: value });
					},
					min: 0,
					max: 100,
					allowReset: true
				})
			);

			var skin_settings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Style")
					},
					wp.element.createElement(SelectControl, {
						label: __("Style"),
						options: [{ value: "border", label: __("Border") }, { value: "quotation", label: __("Quotation") }],
						value: skinStyle,
						onChange: function onChange(value) {
							return setAttributes({ skinStyle: value });
						}
					}),
					skinStyle === "border" && border_settings,
					skinStyle === "quotation" && quote_settings
				)
			);

			// Image controls.
			var imageControls = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					BaseControl,
					{
						className: "editor-bg-image-control",
						label: __("Author Image")
					},
					wp.element.createElement(MediaUpload, {
						title: __("Select Image"),
						onSelect: this.onSelectImage,
						allowedTypes: ["image"],
						value: authorImage,
						render: function render(_ref) {
							var open = _ref.open;
							return wp.element.createElement(
								Button,
								{ isDefault: true, onClick: open },
								image_name
							);
						}
					}),
					authorImage && authorImage.url !== "null" && authorImage.url !== "" && wp.element.createElement(
						Button,
						{ className: "uagb-rm-btn", onClick: this.onRemoveImage, isLink: true, isDestructive: true },
						__("Remove Image")
					)
				),
				authorImage && authorImage.url !== "null" && authorImage.url !== "" && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(SelectControl, {
						label: __("Image Position"),
						value: authorImgPosition,
						onChange: function onChange(value) {
							return setAttributes({ authorImgPosition: value });
						},
						options: [{ value: "left", label: __("Left") }, { value: "right", label: __("Right") }, { value: "top", label: __("Top") }]
					}),
					wp.element.createElement(SelectControl, {
						label: __("Image Size"),
						options: imageSizeOptions,
						value: authorImageSize,
						onChange: function onChange(value) {
							return setAttributes({ authorImageSize: value });
						}
					}),
					wp.element.createElement(RangeControl, {
						label: __("Image Width"),
						value: authorImageWidth,
						onChange: function onChange(value) {
							return setAttributes({ authorImageWidth: value });
						},
						min: 0,
						max: 200,
						beforeIcon: "",
						allowReset: true
					}),
					wp.element.createElement(RangeControl, {
						label: __("Image Rounded Corners"),
						value: authorImgBorderRadius,
						onChange: function onChange(value) {
							return setAttributes({ authorImgBorderRadius: value });
						},
						min: 0,
						max: 100,
						beforeIcon: "",
						allowReset: true
					}),
					authorImgPosition !== "top" && wp.element.createElement(SelectControl, {
						label: __("Stack on"),
						value: stack,
						options: [{ value: "none", label: __("None") }, { value: "tablet", label: __("Tablet") }, { value: "mobile", label: __("Mobile") }],
						help: __("Note: Choose on what breakpoint the Image will stack."),
						onChange: function onChange(value) {
							return setAttributes({ stack: value });
						}
					})
				)
			);

			var colorSettings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Content Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: descColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: descColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ descColor: colorValue });
					},
					allowReset: true
				}),
				wp.element.createElement(
					"p",
					{ className: "uagb-setting-label" },
					__("Author Color"),
					wp.element.createElement(
						"span",
						{ className: "components-base-control__label" },
						wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: authorColor } })
					)
				),
				wp.element.createElement(ColorPalette, {
					value: authorColor,
					onChange: function onChange(colorValue) {
						return setAttributes({ authorColor: colorValue });
					},
					allowReset: true
				}),
				skinStyle == "quotation" && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(
						"p",
						{ className: "uagb-setting-label" },
						__("Quote Color"),
						wp.element.createElement(
							"span",
							{ className: "components-base-control__label" },
							wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: quoteColor } })
						)
					),
					wp.element.createElement(ColorPalette, {
						value: quoteColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ quoteColor: colorValue });
						},
						allowReset: true
					}),
					wp.element.createElement(
						"p",
						{ className: "uagb-setting-label" },
						__("Quote Background Color"),
						wp.element.createElement(
							"span",
							{ className: "components-base-control__label" },
							wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: quoteBgColor } })
						)
					),
					wp.element.createElement(ColorPalette, {
						value: quoteBgColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ quoteBgColor: colorValue });
						},
						allowReset: true
					})
				),
				enableTweet && iconSkin == 'link' && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(
						"p",
						{ className: "uagb-setting-label" },
						__("Tweet Color"),
						wp.element.createElement(
							"span",
							{ className: "components-base-control__label" },
							wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: tweetLinkColor } })
						)
					),
					wp.element.createElement(ColorPalette, {
						value: tweetLinkColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ tweetLinkColor: colorValue });
						},
						allowReset: true
					})
				),
				enableTweet && iconSkin !== 'link' && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(
						"p",
						{ className: "uagb-setting-label" },
						__("Button Color"),
						wp.element.createElement(
							"span",
							{ className: "components-base-control__label" },
							wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: tweetBtnColor } })
						)
					),
					wp.element.createElement(ColorPalette, {
						value: tweetBtnColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ tweetBtnColor: colorValue });
						},
						allowReset: true
					}),
					wp.element.createElement(
						"p",
						{ className: "uagb-setting-label" },
						__("Button Background Color"),
						wp.element.createElement(
							"span",
							{ className: "components-base-control__label" },
							wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: tweetBtnBgColor } })
						)
					),
					wp.element.createElement(ColorPalette, {
						value: tweetBtnBgColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ tweetBtnBgColor: colorValue });
						},
						allowReset: true
					})
				)
			);

			var hoverSettings = wp.element.createElement(
				Fragment,
				null,
				skinStyle == "border" && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(
						"p",
						{ className: "uagb-setting-label" },
						__("Border Hover Color"),
						wp.element.createElement(
							"span",
							{ className: "components-base-control__label" },
							wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: borderHoverColor } })
						)
					),
					wp.element.createElement(ColorPalette, {
						value: borderHoverColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ borderHoverColor: colorValue });
						},
						allowReset: true
					})
				),
				skinStyle == "quotation" && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(
						"p",
						{ className: "uagb-setting-label" },
						__("Quote Hover Color"),
						wp.element.createElement(
							"span",
							{ className: "components-base-control__label" },
							wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: quoteHoverColor } })
						)
					),
					wp.element.createElement(ColorPalette, {
						value: quoteHoverColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ quoteHoverColor: colorValue });
						},
						allowReset: true
					}),
					wp.element.createElement(
						"p",
						{ className: "uagb-setting-label" },
						__("Quote Background Hover Color"),
						wp.element.createElement(
							"span",
							{ className: "components-base-control__label" },
							wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: quoteBgHoverColor } })
						)
					),
					wp.element.createElement(ColorPalette, {
						value: quoteBgHoverColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ quoteBgHoverColor: colorValue });
						},
						allowReset: true
					})
				),
				enableTweet && iconSkin == 'link' && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(
						"p",
						{ className: "uagb-setting-label" },
						__("Tweet Hover Color"),
						wp.element.createElement(
							"span",
							{ className: "components-base-control__label" },
							wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: tweetBtnHoverColor } })
						)
					),
					wp.element.createElement(ColorPalette, {
						value: tweetBtnHoverColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ tweetBtnHoverColor: colorValue });
						},
						allowReset: true
					})
				),
				enableTweet && iconSkin !== 'link' && wp.element.createElement(
					Fragment,
					null,
					wp.element.createElement(
						"p",
						{ className: "uagb-setting-label" },
						__("Button Hover Color"),
						wp.element.createElement(
							"span",
							{ className: "components-base-control__label" },
							wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: tweetBtnHoverColor } })
						)
					),
					wp.element.createElement(ColorPalette, {
						value: tweetBtnHoverColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ tweetBtnHoverColor: colorValue });
						},
						allowReset: true
					}),
					wp.element.createElement(
						"p",
						{ className: "uagb-setting-label" },
						__("Button Background Hover Color"),
						wp.element.createElement(
							"span",
							{ className: "components-base-control__label" },
							wp.element.createElement("span", { className: "component-color-indicator", style: { backgroundColor: tweetBtnBgHoverColor } })
						)
					),
					wp.element.createElement(ColorPalette, {
						value: tweetBtnBgHoverColor,
						onChange: function onChange(colorValue) {
							return setAttributes({ tweetBtnBgHoverColor: colorValue });
						},
						allowReset: true
					})
				)
			);

			var Typography = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Content"),
						initialOpen: false },
					wp.element.createElement(RangeControl, {
						label: __("Content Font Size"),
						value: descFontSize,
						onChange: function onChange(value) {
							return setAttributes({ descFontSize: value });
						},
						min: 0,
						max: 100,
						beforeIcon: "editor-textcolor",
						allowReset: true,
						initialPosition: 30
					}),
					wp.element.createElement(RangeControl, {
						label: __("Author Font Size"),
						value: authorFontSize,
						onChange: function onChange(value) {
							return setAttributes({ authorFontSize: value });
						},
						min: 0,
						max: 100,
						beforeIcon: "editor-textcolor",
						allowReset: true,
						initialPosition: 16
					}),
					imageControls,
					enableTweet && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(RangeControl, {
							label: __("Button Font Size"),
							value: tweetBtnFontSize,
							onChange: function onChange(value) {
								return setAttributes({ tweetBtnFontSize: value });
							},
							min: 0,
							max: 100,
							beforeIcon: "editor-textcolor",
							allowReset: true,
							initialPosition: 16
						})
					)
				),
				wp.element.createElement(
					PanelBody,
					{
						title: __("Color Settings"),
						initialOpen: false },
					wp.element.createElement(
						TabPanel,
						{ className: "uagb-inspect-tabs uagb-inspect-tabs-col-2",
							activeClass: "active-tab",
							tabs: [{
								name: "normal",
								title: __("Normal"),
								className: "uagb-normal-tab"
							}, {
								name: "hover",
								title: __("Hover"),
								className: "uagb-hover-tab"
							}] },
						function (tabName) {
							var tabout = void 0;
							if ("hover" === tabName.name) {
								tabout = hoverSettings;
							} else {
								tabout = colorSettings;
							}
							return wp.element.createElement(
								"div",
								null,
								tabout
							);
						}
					)
				)
			);

			var spacing_settings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{
						title: __("Spacing"),
						initialOpen: false },
					skinStyle === "quotation" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(RangeControl, {
							label: __("Quote Top Margin"),
							value: quoteTopMargin,
							onChange: function onChange(value) {
								return setAttributes({ quoteTopMargin: value });
							},
							min: 0,
							max: 100,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Quote Bottom Margin"),
							value: quoteBottomMargin,
							onChange: function onChange(value) {
								return setAttributes({ quoteBottomMargin: value });
							},
							min: 0,
							max: 100,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Quote Left Margin"),
							value: quoteLeftMargin,
							onChange: function onChange(value) {
								return setAttributes({ quoteLeftMargin: value });
							},
							min: 0,
							max: 100,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Quote Right Margin"),
							value: quoteRightMargin,
							onChange: function onChange(value) {
								return setAttributes({ quoteRightMargin: value });
							},
							min: 0,
							max: 100,
							allowReset: true
						})
					),
					skinStyle === "border" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(RangeControl, {
							label: __("Gap Beetween Border and Content"),
							value: borderGap,
							onChange: function onChange(value) {
								return setAttributes({ borderGap: value });
							},
							min: 0,
							max: 100,
							allowReset: true
						}),
						wp.element.createElement(RangeControl, {
							label: __("Vertical Padding"),
							value: verticalPadding,
							onChange: function onChange(value) {
								return setAttributes({ verticalPadding: value });
							},
							min: 0,
							max: 100,
							allowReset: true
						})
					),
					wp.element.createElement(RangeControl, {
						label: __("Description Bottom Spacing"),
						value: descSpace,
						onChange: function onChange(value) {
							return setAttributes({ descSpace: value });
						},
						min: 0,
						max: 50,
						allowReset: true,
						initialPosition: 0
					}),
					align == "center" && wp.element.createElement(RangeControl, {
						label: __("Author Bottom Spacing"),
						value: authorSpace,
						onChange: function onChange(value) {
							return setAttributes({ authorSpace: value });
						},
						min: 0,
						max: 50,
						allowReset: true,
						initialPosition: 0
					})
				)
			);

			var twitter_settings = wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					PanelBody,
					{ title: __("Twitter Icon"),
						initialOpen: false },
					wp.element.createElement(ToggleControl, {
						label: __("Enable Twitter Icon"),
						checked: enableTweet,
						onChange: function onChange(value) {
							return setAttributes({ enableTweet: !enableTweet });
						}
					}),
					enableTweet && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(SelectControl, {
							label: __("Icon View"),
							value: iconView,
							onChange: function onChange(value) {
								return setAttributes({ iconView: value });
							},
							options: [{ value: "icon_text", label: __("Icon & Text") }, { value: "icon", label: __("Icon") }, { value: "text", label: __("Text") }]
						}),
						wp.element.createElement(SelectControl, {
							label: __("Icon Style"),
							value: iconSkin,
							onChange: function onChange(value) {
								return setAttributes({ iconSkin: value });
							},
							options: [{ value: "classic", label: __("Classic") }, { value: "bubble", label: __("Bubble") }, { value: "link", label: __("Link") }]
						})
					),
					enableTweet && iconView !== "icon" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(TextControl, {
							label: __("Label"),
							value: iconLabel,
							onChange: function onChange(value) {
								return setAttributes({ iconLabel: value });
							}
						})
					),
					enableTweet && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(TextControl, {
							label: __("Share Via"),
							value: iconShareVia,
							onChange: function onChange(value) {
								return setAttributes({ iconShareVia: value });
							}
						}),
						wp.element.createElement(SelectControl, {
							label: __("Target URL"),
							value: iconTargetUrl,
							onChange: function onChange(value) {
								return setAttributes({ iconTargetUrl: value });
							},
							options: [{ value: "current", label: __("Current Page") }, { value: "custom", label: __("Custom URL") }]
						}),
						iconTargetUrl == "custom" && wp.element.createElement(TextControl, {
							label: __("URL"),
							value: customUrl,
							onChange: function onChange(value) {
								return setAttributes({ customUrl: value });
							}
						})
					),
					enableTweet && iconSkin !== 'link' && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(RangeControl, {
							label: __("Button Horizontal Padding"),
							value: tweetBtnHrPadding,
							onChange: function onChange(value) {
								return setAttributes({ tweetBtnHrPadding: value });
							},
							min: 0,
							max: 50,
							allowReset: true,
							initialPosition: 5
						}),
						wp.element.createElement(RangeControl, {
							label: __("Button Vertical Padding"),
							value: tweetBtnVrPadding,
							onChange: function onChange(value) {
								return setAttributes({ tweetBtnVrPadding: value });
							},
							min: 0,
							max: 50,
							allowReset: true,
							initialPosition: 5
						})
					),
					enableTweet && iconView == 'icon_text' && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(RangeControl, {
							label: __("Space between Tweet Icon and Text"),
							value: tweetIconSpacing,
							onChange: function onChange(value) {
								return setAttributes({ tweetIconSpacing: value });
							},
							min: 0,
							max: 20,
							allowReset: true,
							initialPosition: 5
						})
					)
				)
			);

			return wp.element.createElement(
				Fragment,
				null,
				wp.element.createElement(
					BlockControls,
					{ key: "controls" },
					skinStyle !== "border" && wp.element.createElement(AlignmentToolbar, {
						value: align,
						onChange: function onChange(value) {
							return setAttributes({ align: value });
						}
					}),
					skinStyle === "quotation" && wp.element.createElement(
						Fragment,
						null,
						wp.element.createElement(
							Toolbar,
							null,
							wp.element.createElement(
								Tooltip,
								{ text: __("Normal Quote") },
								wp.element.createElement(
									Button,
									{
										className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("components-icon-button", "components-toolbar__control", { "is-active": quoteStyle === "style_1" }),
										onClick: function onClick() {
											return setAttributes({ quoteStyle: "style_1" });
										}
									},
									__WEBPACK_IMPORTED_MODULE_6__dist_blocks_uagb_controls_block_icons__["a" /* default */].quote_1
								)
							)
						),
						wp.element.createElement(
							Toolbar,
							null,
							wp.element.createElement(
								Tooltip,
								{ text: __("Inline Quote") },
								wp.element.createElement(
									Button,
									{
										className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("components-icon-button", "components-toolbar__control", { "is-active": quoteStyle === "style_2" }),
										onClick: function onClick() {
											return setAttributes({ quoteStyle: "style_2" });
										}
									},
									__WEBPACK_IMPORTED_MODULE_6__dist_blocks_uagb_controls_block_icons__["a" /* default */].quote_2
								)
							)
						)
					)
				),
				wp.element.createElement(
					InspectorControls,
					null,
					skin_settings,
					Typography,
					twitter_settings,
					spacing_settings
				),
				wp.element.createElement(
					"div",
					{
						className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()(className, "uagb-blockquote__outer-wrap"),
						id: "uagb-quote-" + this.props.clientId },
					wp.element.createElement(
						"div",
						{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-blockquote__wrap", "uagb-blockquote__skin-" + skinStyle, skinStyle !== "border" ? "uagb-quote__align-" + align : "", skinStyle === "quotation" ? "uagb-quote__style-" + quoteStyle : "", enableTweet ? "uagb-quote__with-tweet uagb-quote__tweet-style-" + iconSkin + " uagb-quote__tweet-" + iconView : "", authorImage && authorImgPosition !== 'top' ? "uagb-quote-stack-img-" + stack : "") },
						wp.element.createElement(
							"blockquote",
							{ className: "uagb-blockquote" },
							skinStyle === "quotation" && wp.element.createElement("span", { className: "fas uagb-quote__icon" }),
							wp.element.createElement(
								"div",
								{ className: "uagb-blockquote__content-wrap" },
								wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__components_Description__["a" /* default */], { attributes: attributes, setAttributes: setAttributes, props: this.props }),
								wp.element.createElement(
									"footer",
									null,
									wp.element.createElement(
										"div",
										{ className: __WEBPACK_IMPORTED_MODULE_0_classnames___default()("uagb-quote__author-wrap", authorImage !== "" ? "uagb-quote__author-at-" + authorImgPosition : "") },
										wp.element.createElement(__WEBPACK_IMPORTED_MODULE_4__components_AuthorImage__["a" /* default */], { attributes: attributes }),
										wp.element.createElement(__WEBPACK_IMPORTED_MODULE_3__components_AuthorText__["a" /* default */], { attributes: attributes, setAttributes: setAttributes, props: this.props })
									),
									enableTweet && wp.element.createElement(__WEBPACK_IMPORTED_MODULE_1__components_TweetButton__["a" /* default */], { attributes: attributes })
								)
							)
						)
					)
				)
			);
		}
	}, {
		key: "componentDidMount",
		value: function componentDidMount() {

			// Assigning block_id in the attribute.
			this.props.setAttributes({ block_id: this.props.clientId });

			// Pushing Style tag for this block css.
			var $style = document.createElement("style");
			$style.setAttribute("id", "uagb-blockquote-style-" + this.props.clientId);
			document.head.appendChild($style);
		}
	}]);

	return UAGBBlockQuote;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (UAGBBlockQuote);

/***/ }),
/* 422 */
/*!******************************************!*\
  !*** ./src/blocks/blockquote/styling.js ***!
  \******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Set inline styles.
 * @param  {object} props - The block object.
 * @return {object} The inline background type CSS.
 */

function styling(props) {
	var _props$attributes = props.attributes,
	    block_id = _props$attributes.block_id,
	    skinStyle = _props$attributes.skinStyle,
	    quoteStyle = _props$attributes.quoteStyle,
	    align = _props$attributes.align,
	    authorColor = _props$attributes.authorColor,
	    descColor = _props$attributes.descColor,
	    descFontSize = _props$attributes.descFontSize,
	    authorFontSize = _props$attributes.authorFontSize,
	    descSpace = _props$attributes.descSpace,
	    authorSpace = _props$attributes.authorSpace,
	    stack = _props$attributes.stack,
	    borderColor = _props$attributes.borderColor,
	    borderStyle = _props$attributes.borderStyle,
	    borderWidth = _props$attributes.borderWidth,
	    borderGap = _props$attributes.borderGap,
	    verticalPadding = _props$attributes.verticalPadding,
	    quoteColor = _props$attributes.quoteColor,
	    quoteSize = _props$attributes.quoteSize,
	    quoteGap = _props$attributes.quoteGap,
	    quoteBgColor = _props$attributes.quoteBgColor,
	    enableTweet = _props$attributes.enableTweet,
	    tweetBtnFontSize = _props$attributes.tweetBtnFontSize,
	    tweetLinkColor = _props$attributes.tweetLinkColor,
	    tweetBtnColor = _props$attributes.tweetBtnColor,
	    tweetBtnBgColor = _props$attributes.tweetBtnBgColor,
	    tweetBtnHoverColor = _props$attributes.tweetBtnHoverColor,
	    tweetBtnBgHoverColor = _props$attributes.tweetBtnBgHoverColor,
	    tweetBtnHrPadding = _props$attributes.tweetBtnHrPadding,
	    tweetBtnVrPadding = _props$attributes.tweetBtnVrPadding,
	    tweetIconSpacing = _props$attributes.tweetIconSpacing,
	    authorImage = _props$attributes.authorImage,
	    authorImageWidth = _props$attributes.authorImageWidth,
	    authorImageSize = _props$attributes.authorImageSize,
	    authorImgBorderRadius = _props$attributes.authorImgBorderRadius,
	    quoteBorderRadius = _props$attributes.quoteBorderRadius,
	    quoteTopMargin = _props$attributes.quoteTopMargin,
	    quoteBottomMargin = _props$attributes.quoteBottomMargin,
	    quoteLeftMargin = _props$attributes.quoteLeftMargin,
	    quoteRightMargin = _props$attributes.quoteRightMargin,
	    quoteHoverColor = _props$attributes.quoteHoverColor,
	    quoteBgHoverColor = _props$attributes.quoteBgHoverColor,
	    borderHoverColor = _props$attributes.borderHoverColor;


	var content_align = "center";

	if (align == 'left') {
		content_align = " flex-start";
	}
	if (align == 'right') {
		content_align = " flex-end";
	}

	var author_space = authorSpace;

	if (align !== 'center') {
		author_space = 0;
	}
	//Set align to left for border style
	var text_align = align;

	if (skinStyle == 'border') {
		text_align = 'left';
	}

	var selectors = {
		" .editor-rich-text .uagb-blockquote__content.editor-rich-text__tinymce": {
			"font-size": descFontSize + "px",
			"color": descColor,
			"margin-bottom": descSpace + "px",
			"text-align": text_align
		},
		" .editor-rich-text cite.uagb-blockquote__author.editor-rich-text__tinymce": {
			"font-size": authorFontSize + "px",
			"color": authorColor,
			"text-align": text_align
		},
		" .uagb-blockquote__skin-border blockquote.uagb-blockquote": {
			"border-color": borderColor,
			"border-left-style": borderStyle,
			"border-left-width": borderWidth + "px",
			"padding-left": borderGap + "px",
			"padding-top": verticalPadding + "px",
			"padding-bottom": verticalPadding + "px"
		},
		" .uagb-blockquote__skin-border blockquote.uagb-blockquote:hover": {
			"border-left-color": borderHoverColor
		},
		" .uagb-blockquote__skin-quotation .uagb-quote__icon": {
			"color": quoteColor,
			"font-size": quoteSize + "px",
			"width": quoteSize + "px",
			"height": quoteSize + "px",
			"line-height": quoteSize + "px",
			"background": quoteBgColor,
			"border-radius": quoteBorderRadius + "%",
			"margin-top": quoteTopMargin + "px",
			"margin-bottom": quoteBottomMargin + "px",
			"margin-left": quoteLeftMargin + "px",
			"margin-right": quoteRightMargin + "px"
		},
		" .uagb-blockquote__skin-quotation .uagb-quote__icon:hover": {
			"color": quoteHoverColor,
			"background": quoteBgHoverColor
		},
		" .uagb-quote__style-style_1 .uagb-blockquote": {
			"text-align": align
		},
		" .uagb-quote__author-wrap": {
			"margin-bottom": author_space + "px"
		},
		" .uagb-quote__author-image img": {
			"width": authorImageWidth + "px",
			"height": authorImageWidth + "px",
			"border-radius": authorImgBorderRadius + "%"
		}
	};

	if (enableTweet) {
		selectors[" .uagb-quote__tweet-style-link a.uagb-blockquote__tweet-button"] = {
			"font-size": tweetBtnFontSize + "px",
			"color": tweetLinkColor
		};

		selectors[" .uagb-quote__tweet-style-classic a.uagb-blockquote__tweet-button"] = {
			"font-size": tweetBtnFontSize + "px",
			"color": tweetBtnColor,
			"background-color": tweetBtnBgColor,
			"padding-left": tweetBtnHrPadding + "px",
			"padding-right": tweetBtnHrPadding + "px",
			"padding-top": tweetBtnVrPadding + "px",
			"padding-bottom": tweetBtnVrPadding + "px"
		};

		selectors[" .uagb-quote__tweet-style-bubble a.uagb-blockquote__tweet-button"] = {
			"font-size": tweetBtnFontSize + "px",
			"color": tweetBtnColor,
			"background-color": tweetBtnBgColor,
			"padding-left": tweetBtnHrPadding + "px",
			"padding-right": tweetBtnHrPadding + "px",
			"padding-top": tweetBtnVrPadding + "px",
			"padding-bottom": tweetBtnVrPadding + "px"
		};

		selectors[" .uagb-quote__tweet-style-bubble a.uagb-blockquote__tweet-button:before"] = {
			"border-right-color": tweetBtnBgColor
		};

		selectors[" .uagb-quote__tweet-icon_text a.uagb-blockquote__tweet-button i"] = {
			"margin-right": tweetIconSpacing + "px"

			// Hover CSS
		};selectors[" .uagb-quote__tweet-style-link a.uagb-blockquote__tweet-button:hover"] = {
			"color": tweetBtnHoverColor
		};

		selectors[" .uagb-quote__tweet-style-classic a.uagb-blockquote__tweet-button:hover"] = {
			"color": tweetBtnHoverColor,
			"background-color": tweetBtnBgHoverColor
		};

		selectors[" .uagb-quote__tweet-style-bubble a.uagb-blockquote__tweet-button:hover "] = {
			"color": tweetBtnHoverColor,
			"background-color": tweetBtnBgHoverColor
		};

		selectors[" .uagb-quote__tweet-style-bubble a.uagb-blockquote__tweet-button:hover:before"] = {
			"border-right-color": tweetBtnBgHoverColor
		};
	}

	var styling_css = "";

	for (var i in selectors) {

		styling_css += "#wpwrap .edit-post-visual-editor #uagb-quote-" + props.clientId;

		styling_css += i + " { ";

		var sel = selectors[i];
		var css = "";

		for (var j in sel) {

			css += j + ": " + sel[j] + ";";
		}

		styling_css += css + " } ";
	}

	return styling_css;
}

/* harmony default export */ __webpack_exports__["a"] = (styling);

/***/ }),
/* 423 */
/*!*********************************************!*\
  !*** ./src/blocks/blockquote/attributes.js ***!
  \*********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * BLOCK: UAGB Quote Block Attributes
 */

var attributes = {
	block_id: {
		type: "string"
	},
	skinStyle: {
		type: "string",
		default: "border"
	},
	align: {
		type: "string",
		default: "center"
	},
	description_text: {
		selector: "div.uagb-blockquote__content",
		default: "Click here to change this text. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo."
	},
	descColor: {
		type: "string"
	},
	descFontSize: {
		type: "number"
	},
	descSpace: {
		type: "number",
		default: 20
	},
	author: {
		selector: "div.uagb-blockquote__author",
		default: "Author"
	},
	authorColor: {
		type: "string",
		default: "#888888"
	},
	authorFontSize: {
		type: "number"
	},
	authorSpace: {
		type: "number",
		default: 10
	},
	authorImage: {
		type: "object",
		default: {
			"url": "",
			"alt": "Author Image"
		}
	},
	authorImageSize: {
		type: "string",
		default: "thumbnail"
	},
	authorImageWidth: {
		type: "number",
		default: 40
	},
	authorImgBorderRadius: {
		type: "number",
		default: 100
	},
	authorImgPosition: {
		type: "string",
		default: "left"
	},
	stack: {
		type: "string",
		default: "none"
	},
	enableTweet: {
		type: "boolean",
		default: true
	},
	iconView: {
		type: "string",
		default: "icon_text"
	},
	iconSkin: {
		type: "string",
		default: "link"
	},
	iconLabel: {
		type: "string",
		default: "Tweet"
	},
	iconSahreVia: {
		type: "string",
		default: ""
	},
	iconTargetUrl: {
		type: "string",
		default: "current"
	},
	customUrl: {
		type: "string"
	},
	tweetLinkColor: {
		type: "string",
		default: "#1DA1F2"
	},
	tweetBtnColor: {
		type: "string",
		default: "#fff"
	},
	tweetBtnBgColor: {
		type: "string",
		default: "#1DA1F2"
	},
	tweetBtnHoverColor: {
		type: "string"
	},
	tweetBtnBgHoverColor: {
		type: "string",
		default: "#1DA1F2"
	},
	tweetBtnFontSize: {
		type: "number",
		default: 15
	},
	tweetBtnHrPadding: {
		type: "number",
		default: 10
	},
	tweetBtnVrPadding: {
		type: "number",
		default: 10
	},
	tweetIconSpacing: {
		type: "number",
		default: 10
	},
	borderColor: {
		type: "string",
		default: "#abb8c3"
	},
	borderStyle: {
		type: "string",
		default: "solid"
	},
	borderWidth: {
		type: "number",
		default: 4
	},
	borderGap: {
		type: "number",
		default: 15
	},
	verticalPadding: {
		type: "number"
	},
	quoteStyle: {
		type: "string",
		default: "style_1"
	},
	quoteColor: {
		type: "string",
		default: "#abb8c3"
	},
	quoteSize: {
		type: "number",
		default: 60
	},
	quoteBorderRadius: {
		type: "number",
		default: 100
	},
	quoteBgColor: {
		type: "string"
	},
	quoteTopMargin: {
		type: "number"
	},
	quoteBottomMargin: {
		type: "number"
	},
	quoteLeftMargin: {
		type: "number"
	},
	quoteRightMargin: {
		type: "number"
	},
	quoteHoverColor: {
		type: "string"
	},
	quoteBgHoverColor: {
		type: "string"
	},
	borderHoverColor: {
		type: "string"
	}
};

/* harmony default export */ __webpack_exports__["a"] = (attributes);

/***/ }),
/* 424 */
/*!*******************************************!*\
  !*** ./src/blocks/blockquote/editor.scss ***!
  \*******************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 425 */
/*!******************************************!*\
  !*** ./src/blocks/blockquote/style.scss ***!
  \******************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ })
/******/ ]);