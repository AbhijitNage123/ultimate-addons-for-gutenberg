name: Build a zip
on:
  # - push
  pull_request:
    types: [opened, synchronize, ready_for_review]

jobs:
  build-zip:
    name: "Run npm build commands"
    # if: github.event_name == 'push' && contains(toJson(github.event.commits), '[run build pr]') != false
    runs-on: ubuntu-latest
    outputs:
      branch-name: ${{ steps.get-current-branch.outputs.branch_name }}
    steps:
      # - name: Setup PHP without xdebug
      #   uses: shivammathur/setup-php@v2
      #   with:
      #     php-version: "7.4"
      #     coverage: none

      # - name: Install wp-cli
      #   run: |
      #     curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
      #     php wp-cli.phar --info
      #     chmod +x wp-cli.phar
      #     sudo mv wp-cli.phar /usr/local/bin/wp

      - name: "Checkout"
        uses: actions/checkout@master

      # - name: Initialize mandatory git config
      #   run: |
      #     git config user.name "GitHub Actions"
      #     git config user.email "noreply@github.com"

      - name: Extract current branch name
        id: get-current-branch
        run: echo "::set-output name=branch_name::$(REF=${GITHUB_HEAD_REF:-$GITHUB_REF} && echo ${REF#refs/heads/} | sed 's/\//-/g')"

      - name: Cache node modules
        id: cache-node
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # path: ~/.npm
          path: "**/node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies and build
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm install

      - name: Run build
        run: npm run build

      - name: Build a package
        run: npm run build-zip

      # - name: Upload zip  artifact
      #   uses: actions/upload-artifact@v2
      #   id: uag-zip-upload
      #   with:
      #     name: uag-zip
      #     path: ./artifact/ultimate-addons-for-gutenberg.zip

      # - name: Download zip artifact
      #   uses: actions/download-artifact@v2
      #   id: uag-zip-download
      #   with:
      #     name: uag-zip
      #     path: ./temp/ultimate-addons-for-gutenberg.zip

      # - name: "Check git status"
      #   run: git status

      - name: Create branch directory
        run: |
          cd artifact
          mkdir -p ${{ steps.get-current-branch.outputs.branch_name }}
          mv ultimate-addons-for-gutenberg.zip ${{ steps.get-current-branch.outputs.branch_name }}/

      - name: QA site sync - rsync deployments
        uses: burnett01/rsync-deployments@4.1
        with:
          # switches: -avzr --delete --delete-excluded --exclude-from=".distignore" --include="" --filter=""
          switches: -avzr --delete
          # path: ./artifact/ultimate-addons-for-gutenberg.zip
          path: ./artifact/
          remote_path: ${{ secrets.SSH_PATH }}
          # remote_path: /home/runcloud/webapps/uag-dev/wp-content/uploads/uag-gh/
          remote_host: ${{ secrets.SSH_HOST }}/wf/34/
          remote_port: ${{ secrets.SSH_PORT }}
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_KEY }}

      # - name: "Echo download"
      #   run: echo print_r( ${{steps.uag-zip-download.outputs}} )
  comment-on-pr:
    name: Comment on PR with links to plugin ZIPs
    if: ${{ github.head_ref && github.head_ref != null }}
    runs-on: ubuntu-latest
    needs: build-zip
    env:
      CI: true
      GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
    outputs:
      pr_number: ${{ steps.get-pr-number.outputs.num }}
      comment_body: ${{ steps.get-comment-body.outputs.body }}
    steps:
      - name: Get PR number
        id: get-pr-number
        run: echo "::set-output name=num::$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')"

      - name: Check if a comment was already made
        id: find-comment
        uses: peter-evans/find-comment@v1
        with:
          issue-number: ${{ steps.get-pr-number.outputs.num }}
          comment-author: github-actions[bot]
          body-includes: Download the plugin [zip]

      - name: Get comment body
        id: get-comment-body
        run: |
          body="Plugin zip for ${{ github.event.pull_request.head.sha }} is ready :bellhop_bell:!
          - Download the plugin [zip](http://uag-dev.cvh6svsgwm-gok67yw2r652.p.runcloud.link/wp-content/uploads/uag-gh/ultimate-addons-for-gutenberg.zip)"
          body="${body//$'\n'/'%0A'}"
          echo "::set-output name=body::$body"
      - name: Create comment on PR with links to plugin zip
        if: ${{ steps.find-comment.outputs.comment-id == '' }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ steps.get-pr-number.outputs.num }}
          body: ${{ steps.get-comment-body.outputs.body }}

      - name: Update comment on PR with links to plugin zip
        if: ${{ steps.find-comment.outputs.comment-id != '' }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: replace
          body: ${{ steps.get-comment-body.outputs.body }}
